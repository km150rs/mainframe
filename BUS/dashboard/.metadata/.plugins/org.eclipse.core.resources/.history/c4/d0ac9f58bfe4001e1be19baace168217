server.port=10010
server.servlet.session.timeout=1200
server.max-http-header-size=400000
server.error.include-exception=true
server.error.include-stacktrace=always
server.error.whitelabel.enabled=false
#server.error.path=/
server.compression.enabled=true 
server.compression.excluded-user-agents= 
server.compression.mime-types=text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
server.compression.min-response-size=2048


# Web properties
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# Server properties
server.tomcat.max-http-post-size=100000000
server.tomcat.max-swallow-size=100000000


#compile을 다시하지 않아도 반영되도록 설정
spring.devtools.livereload.enabled=true
#1. 재가동 완전 차단.
spring.devtools.restart.enabled=False


spring.freemarker.cache=false

spring.h2.console.enabled=true
spring.h2.console.settings.web-allow-others=true
spring.h2.console.path=/h2-console

spring.profiles.include=oauth

spring.thymeleaf.view-names=thymeleaf/*
spring.thymeleaf.cache=false
spring.thymeleaf.check-template-location=true
spring.thymeleaf.enabled=true
spring.thymeleaf.prefix=/WEB-INF/templates/
spring.thymeleaf.suffix=.html

#spring.main.allow-bean-definition-overriding=true

#JPA 설정
#Dialect 설정
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MariaDBDialect 
#spring.jpa.properties.hibernate.dialect.oracle=org.hibernate.dialect.Oracle9iDialect 
#하이버네이트가 실행하는 모든 SQL문을 콘솔로 출력해 준다. 
spring.jpa.properties.hibernate.show_sql=true 
#콘솔에 출력되는 JPA 실행 쿼리를 가독성있게 표현한다. 
spring.jpa.properties.hibernate.format_sql=true 
#디버깅이 용이하도록 SQL문 이외에 추가적인 정보를 출력해 준다. 
spring.jpa.properties.hibernate.use_sql_comments=true

spring.output.ansi.enabled=always

#logging.level.org.springframework.web.socket.config.WebSocketMessageBrokerStats = ERROR
#logging.level.root=INFO

#logging.level.jdbc=debug
#logging.level.jdbc.sqlonly=info
#logging.level.jdbc.sqltiming=debug
#logging.level.jdbc.resultsettable=info
#logging.level.jdbc.audit=debug
#logging.level.jdbc.resultset=debug
#logging.level.jdbc.connection=error


#logging.level.org.springframework.jdbc.core = TRACE

spring.mvc.view.prefix=/WEB-INF/jsp/
spring.mvc.view.suffix=.jsp

# https://docs.spring.io/spring/docs/current/spring-framework-reference/web.html#websocket-stomp

#spring.devtools.livereload.enabled=true

# join wait time(ms)
spring.mvc.async.request-timeout= 10000


# Database
spring.datasource.driver-class-name=oracle.jdbc.OracleDriver
spring.datasource.url=jdbc:oracle:thin:@192.121.112:9502:pjy
spring.datasource.username=admin
spring.datasource.password=admin


mybatis.mapper-locations: mapper/*.xml
# model 프로퍼티 camel case 설정
mybatis.configuration.map-underscore-to-camel-case=true

# 패키지 명을 생략할 수 있도록 alias 설정
mybatis.type-aliases-package=com.atoz_develop.mybatissample.model

# mapper 로그레벨 설정
logging.level.com.atoz_develop.mybatissample.repository=TRACE
logging.level.org.springframework.web.servlet.DispatcherServlet=WARN
logging.level.org.springframework.web.servlet.mvc.method.annotation.RequestResponseBodyMethodProcessor=WARN

#spring.mvc.static-path-pattern=/static/**
#spring.resources.static-locations=classpath:/static/
#spring.resources.add-mappings=true 

spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true
spring.http.encoding.force=true


#spring.session.store-type=redis
#spring.redis.host=localhost
#spring.redis.password=
#spring.redis.port=6379


spring.mail.host=gmai.com
spring.mail.port=25
#spring.mail.username=ENC(+80rb93n+kY8t6Br6ywDCMfYZS66U3xecwKx7GIdOdA=)
#spring.mail.password=xvxecfridfbbkbwp
#spring.mail.properties.mail.smtp.auth=true
#spring.mail.properties.mail.smtp.starttls.enable=true

#spring.mail.host=ENC(H8dAfilb5MslRYU0PLiH49CZiYYNiqXa)
#spring.mail.port=ENC(b7zSFj8VGcCX8c8esK8mXA==)
#spring.mail.username=ENC(+80rb93n+kY8t6Br6ywDCMfYZS66U3xecwKx7GIdOdA=)
#spring.mail.password=xvxecfridfbbkbwp
#spring.mail.properties.mail.smtp.auth=true
#spring.mail.properties.mail.smtp.starttls.enable=true

spring.servlet.multipart.maxFileSize=20MB
spring.servlet.multipart.maxRequestSize=20MB
file.image.dir=C:/Users/ITSMART/Downloads/bus/image/
file.templete.dir=C:/Users/ITSMART/Downloads/bus/templete/
file.output.dir=C:/Users/ITSMART/Downloads/bus/output/
file.backup.dir=C:/Users/ITSMART/Downloads/BUS/backup/


#file.image.dir=/root/pjy/image/
#file.templete.dir=/root/pjy/templete/
#file.output.dir=/root/pjy/output/
#file.backup.dir=/root/pjy/backup/

#file.dir=/root/pjy/image/
#원인은 여러가지가 있는데 결국은 health 항목에 나오는 것 중 하나라도 DOWN이 있기 때문이다.
#그래서 다음과 같이 설정해서 /actuator/health 접속 시 상세 항목을 볼 수 있게 하고,
#
#
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always
management.endpoint.metrics.enabled=true
management.endpoint.prometheus.enabled=true
management.health.mail.enabled=false
management.metrics.export.prometheus.enabled=true

# 심각도에 따른 순서
management.health.status.order=DOWN, MAINTENANCE, UNKOWN, UP

# 각 상태별 Http 응답 코드
management.health.status.http-mapping.DOWN=503
management.health.status.http-mapping.MAINTENANCE=503
management.health.status.http-mapping.UNKNOWN=200
management.health.status.http-mapping.UP=500

# 토크 발급자
JWT.ISSUER=TEST
# JWT 키 (여러 문자가 섞일수록 안전하다)
JWT.SECRET=SeCrEtKeY4HaShInG