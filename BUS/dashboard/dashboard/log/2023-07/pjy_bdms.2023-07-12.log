2023-07-12 00:03:08.190 INFO  [RMI TCP Connection(27)-127.0.0.1] [o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin] - Application shutdown requested.
2023-07-12 00:03:08.237 INFO  [RMI TCP Connection(27)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Shutting down ExecutorService 'asyncThreadPool'
2023-07-12 00:03:08.240 INFO  [RMI TCP Connection(27)-127.0.0.1] [com.zaxxer.hikari.HikariDataSource] - H2 - Shutdown initiated...
2023-07-12 00:03:08.249 INFO  [RMI TCP Connection(27)-127.0.0.1] [com.zaxxer.hikari.HikariDataSource] - H2 - Shutdown completed.
2023-07-12 00:03:08.301 INFO  [RMI TCP Connection(27)-127.0.0.1] [com.pjy.dashboard.filter.TestFilter] - destroy Pjy Filter
2023-07-12 00:03:26.614 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Starting PjyApplication on DESKTOP-QJPD93S with PID 16336 (D:\BUS\dashboard\dashboard\target\classes started by admin in D:\BUS\dashboard\dashboard)
2023-07-12 00:03:26.622 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - The following profiles are active: oauth
2023-07-12 00:03:26.677 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-07-12 00:03:26.677 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-07-12 00:03:27.855 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-07-12 00:03:27.855 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-07-12 00:03:28.016 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 150ms. Found 3 JPA repository interfaces.
2023-07-12 00:03:28.380 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-07-12 00:03:28.380 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2023-07-12 00:03:28.425 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.FileRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-07-12 00:03:28.425 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.MemberRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-07-12 00:03:28.426 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.RememberMeRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-07-12 00:03:28.426 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 45ms. Found 0 JDBC repository interfaces.
2023-07-12 00:03:28.890 INFO  [restartedMain] [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] - Post-processing PropertySource instances
2023-07-12 00:03:28.961 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2023-07-12 00:03:28.962 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource commandLineArgs [org.springframework.core.env.SimpleCommandLinePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-07-12 00:03:28.962 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-07-12 00:03:28.962 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-07-12 00:03:28.962 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2023-07-12 00:03:28.963 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
2023-07-12 00:03:28.963 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2023-07-12 00:03:28.963 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application-oauth.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-07-12 00:03:28.963 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-07-12 00:03:28.963 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2023-07-12 00:03:28.963 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [pjy.properties] [org.springframework.core.env.CompositePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-07-12 00:03:28.963 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [common.properties] [org.springframework.core.io.support.ResourcePropertySource] to EncryptableMapPropertySourceWrapper
2023-07-12 00:03:29.021 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'asyncConfiguration' of type [com.pjy.dashboard.configuration.AsyncConfiguration$$EnhancerBySpringCGLIB$$7ffdfa9c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 00:03:29.072 INFO  [restartedMain] [c.u.j.filter.DefaultLazyPropertyFilter] - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2023-07-12 00:03:29.156 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$69f45ec9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 00:03:29.236 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 00:03:29.238 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@41764298' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 00:03:29.242 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$8ec9017b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 00:03:29.252 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration$$EnhancerBySpringCGLIB$$b41e1991] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 00:03:29.255 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 00:03:29.256 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 00:03:29.276 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d146968f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 00:03:29.305 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$50c6e3c1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 00:03:29.453 INFO  [restartedMain] [c.u.j.r.DefaultLazyPropertyResolver] - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2023-07-12 00:03:29.459 INFO  [restartedMain] [c.u.j.d.DefaultLazyPropertyDetector] - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2023-07-12 00:03:29.871 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 10010 (http)
2023-07-12 00:03:29.888 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Initializing ProtocolHandler ["http-nio-10010"]
2023-07-12 00:03:29.900 INFO  [restartedMain] [org.apache.catalina.core.StandardService] - Starting service [Tomcat]
2023-07-12 00:03:29.900 INFO  [restartedMain] [org.apache.catalina.core.StandardEngine] - Starting Servlet engine: [Apache Tomcat/9.0.29]
2023-07-12 00:03:30.279 INFO  [restartedMain] [org.apache.jasper.servlet.TldScanner] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2023-07-12 00:03:30.290 INFO  [restartedMain] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring embedded WebApplicationContext
2023-07-12 00:03:30.290 INFO  [restartedMain] [o.s.web.context.ContextLoader] - Root WebApplicationContext: initialization completed in 3612 ms
2023-07-12 00:03:31.139 INFO  [restartedMain] [c.u.j.encryptor.DefaultLazyEncryptor] - Found Custom Encryptor Bean org.jasypt.encryption.pbe.PooledPBEStringEncryptor@6fb7eeec with name: jasyptStringEncryptor
2023-07-12 00:03:31.185 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Starting...
2023-07-12 00:03:31.269 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.executeSql(PoolBase.java:567)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 7 msec}
2023-07-12 00:03:31.273 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Start completed.
2023-07-12 00:03:32.033 INFO  [restartedMain] [com.pjy.dashboard.filter.TestFilter] - init Pjy Filter
2023-07-12 00:03:32.412 INFO  [restartedMain] [o.hibernate.jpa.internal.util.LogHelper] - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2023-07-12 00:03:32.487 INFO  [restartedMain] [org.hibernate.Version] - HHH000412: Hibernate Core {5.3.14.Final}
2023-07-12 00:03:32.488 INFO  [restartedMain] [org.hibernate.cfg.Environment] - HHH000206: hibernate.properties not found
2023-07-12 00:03:32.639 INFO  [restartedMain] [org.hibernate.annotations.common.Version] - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2023-07-12 00:03:32.874 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-12 00:03:32.890 INFO  [restartedMain] [org.hibernate.dialect.Dialect] - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2023-07-12 00:03:33.612 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 00:03:33.615 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select SEQUENCE_CATALOG, SEQUENCE_SCHEMA, SEQUENCE_NAME, INCREMENT from information_schema.sequences
 {executed in 2 msec}
2023-07-12 00:03:33.667 INFO  [restartedMain] [o.s.o.j.LocalContainerEntityManagerFactoryBean] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-07-12 00:03:33.922 INFO  [restartedMain] [o.h.h.i.QueryTranslatorFactoryInitiator] - HHH000397: Using ASTQueryTranslatorFactory
2023-07-12 00:03:35.012 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService
2023-07-12 00:03:35.022 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'asyncThreadPool'
2023-07-12 00:03:35.215 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/h2-console/**'], []
2023-07-12 00:03:35.216 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/css/**'], []
2023-07-12 00:03:35.216 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/js/**'], []
2023-07-12 00:03:35.216 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/monitor/**'], []
2023-07-12 00:03:35.216 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/img/**'], []
2023-07-12 00:03:35.216 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/lib/**'], []
2023-07-12 00:03:35.216 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/main.css'], []
2023-07-12 00:03:35.216 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/common.js'], []
2023-07-12 00:03:35.216 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/resources/**'], []
2023-07-12 00:03:35.382 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@445c52e7, org.springframework.security.web.context.SecurityContextPersistenceFilter@45eeb78c, org.springframework.security.web.header.HeaderWriterFilter@3c0afe9f, org.springframework.web.filter.CorsFilter@32f9b4b4, org.springframework.security.web.authentication.logout.LogoutFilter@1fc30349, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@1ec59bd3, org.springframework.security.web.session.ConcurrentSessionFilter@78694953, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@431c3c6b, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@15d5f45e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7d43b55d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@21bd9ea5, org.springframework.security.web.session.SessionManagementFilter@7c56da80, org.springframework.security.web.access.ExceptionTranslationFilter@f3e5025, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@28c695ac]
2023-07-12 00:03:35.405 INFO  [restartedMain] [o.s.aop.framework.CglibAopProxy] - Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(javax.servlet.FilterConfig) throws javax.servlet.ServletException] because it is marked as final: Consider using interface-based JDK proxies instead!
2023-07-12 00:03:35.763 WARN  [restartedMain] [o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-07-12 00:03:35.835 INFO  [restartedMain] [o.s.b.a.w.s.WelcomePageHandlerMapping] - Adding welcome page: ServletContext resource [/index.html]
2023-07-12 00:03:36.266 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 00:03:37.086 INFO  [restartedMain] [o.s.b.d.a.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2023-07-12 00:03:37.124 INFO  [restartedMain] [o.s.b.a.e.web.EndpointLinksResolver] - Exposing 16 endpoint(s) beneath base path '/actuator'
2023-07-12 00:03:37.268 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskScheduler] - Initializing ExecutorService
2023-07-12 00:03:37.275 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Starting ProtocolHandler ["http-nio-10010"]
2023-07-12 00:03:37.332 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 10010 (http) with context path ''
2023-07-12 00:03:37.337 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Started PjyApplication in 11.19 seconds (JVM running for 12.572)
2023-07-12 00:03:37.337 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-07-12 00:03:37.338 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - Application started
2023-07-12 00:03:37.338 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-07-12 00:03:38.290 INFO  [RMI TCP Connection(9)-127.0.0.1] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-07-12 00:03:38.290 INFO  [RMI TCP Connection(9)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Initializing Servlet 'dispatcherServlet'
2023-07-12 00:03:38.310 INFO  [RMI TCP Connection(9)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Completed initialization in 20 ms
2023-07-12 00:12:57.794 INFO  [RMI TCP Connection(21)-127.0.0.1] [o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin] - Application shutdown requested.
2023-07-12 00:12:57.822 INFO  [RMI TCP Connection(21)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Shutting down ExecutorService 'asyncThreadPool'
2023-07-12 00:12:57.825 INFO  [RMI TCP Connection(21)-127.0.0.1] [com.zaxxer.hikari.HikariDataSource] - H2 - Shutdown initiated...
2023-07-12 00:12:57.833 INFO  [RMI TCP Connection(21)-127.0.0.1] [com.zaxxer.hikari.HikariDataSource] - H2 - Shutdown completed.
2023-07-12 00:12:57.890 INFO  [RMI TCP Connection(21)-127.0.0.1] [com.pjy.dashboard.filter.TestFilter] - destroy Pjy Filter
2023-07-12 00:13:16.031 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Starting PjyApplication on DESKTOP-QJPD93S with PID 14836 (D:\BUS\dashboard\dashboard\target\classes started by admin in D:\BUS\dashboard\dashboard)
2023-07-12 00:13:16.036 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - The following profiles are active: oauth
2023-07-12 00:13:16.093 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-07-12 00:13:16.093 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-07-12 00:13:17.312 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-07-12 00:13:17.312 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-07-12 00:13:17.465 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 142ms. Found 3 JPA repository interfaces.
2023-07-12 00:13:17.818 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-07-12 00:13:17.818 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2023-07-12 00:13:17.868 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.FileRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-07-12 00:13:17.868 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.MemberRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-07-12 00:13:17.869 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.RememberMeRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-07-12 00:13:17.869 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 51ms. Found 0 JDBC repository interfaces.
2023-07-12 00:13:18.312 INFO  [restartedMain] [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] - Post-processing PropertySource instances
2023-07-12 00:13:18.380 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2023-07-12 00:13:18.380 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource commandLineArgs [org.springframework.core.env.SimpleCommandLinePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-07-12 00:13:18.381 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-07-12 00:13:18.381 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-07-12 00:13:18.381 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2023-07-12 00:13:18.381 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
2023-07-12 00:13:18.382 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2023-07-12 00:13:18.382 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application-oauth.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-07-12 00:13:18.382 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-07-12 00:13:18.383 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2023-07-12 00:13:18.383 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [pjy.properties] [org.springframework.core.env.CompositePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-07-12 00:13:18.383 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [common.properties] [org.springframework.core.io.support.ResourcePropertySource] to EncryptableMapPropertySourceWrapper
2023-07-12 00:13:18.443 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'asyncConfiguration' of type [com.pjy.dashboard.configuration.AsyncConfiguration$$EnhancerBySpringCGLIB$$e855e214] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 00:13:18.493 INFO  [restartedMain] [c.u.j.filter.DefaultLazyPropertyFilter] - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2023-07-12 00:13:18.583 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$d24c4641] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 00:13:18.665 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 00:13:18.668 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@12bdf53f' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 00:13:18.669 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$f720e8f3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 00:13:18.679 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration$$EnhancerBySpringCGLIB$$1c760109] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 00:13:18.684 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 00:13:18.686 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 00:13:18.708 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$399e7e07] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 00:13:18.739 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$b91ecb39] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 00:13:18.903 INFO  [restartedMain] [c.u.j.r.DefaultLazyPropertyResolver] - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2023-07-12 00:13:18.909 INFO  [restartedMain] [c.u.j.d.DefaultLazyPropertyDetector] - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2023-07-12 00:13:19.358 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 10010 (http)
2023-07-12 00:13:19.379 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Initializing ProtocolHandler ["http-nio-10010"]
2023-07-12 00:13:19.393 INFO  [restartedMain] [org.apache.catalina.core.StandardService] - Starting service [Tomcat]
2023-07-12 00:13:19.394 INFO  [restartedMain] [org.apache.catalina.core.StandardEngine] - Starting Servlet engine: [Apache Tomcat/9.0.29]
2023-07-12 00:13:19.770 INFO  [restartedMain] [org.apache.jasper.servlet.TldScanner] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2023-07-12 00:13:19.780 INFO  [restartedMain] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring embedded WebApplicationContext
2023-07-12 00:13:19.781 INFO  [restartedMain] [o.s.web.context.ContextLoader] - Root WebApplicationContext: initialization completed in 3688 ms
2023-07-12 00:13:20.614 INFO  [restartedMain] [c.u.j.encryptor.DefaultLazyEncryptor] - Found Custom Encryptor Bean org.jasypt.encryption.pbe.PooledPBEStringEncryptor@57cdff78 with name: jasyptStringEncryptor
2023-07-12 00:13:20.672 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Starting...
2023-07-12 00:13:20.756 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.executeSql(PoolBase.java:567)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 7 msec}
2023-07-12 00:13:20.761 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Start completed.
2023-07-12 00:13:21.533 INFO  [restartedMain] [com.pjy.dashboard.filter.TestFilter] - init Pjy Filter
2023-07-12 00:13:21.896 INFO  [restartedMain] [o.hibernate.jpa.internal.util.LogHelper] - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2023-07-12 00:13:21.977 INFO  [restartedMain] [org.hibernate.Version] - HHH000412: Hibernate Core {5.3.14.Final}
2023-07-12 00:13:21.978 INFO  [restartedMain] [org.hibernate.cfg.Environment] - HHH000206: hibernate.properties not found
2023-07-12 00:13:22.125 INFO  [restartedMain] [org.hibernate.annotations.common.Version] - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2023-07-12 00:13:22.359 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-12 00:13:22.375 INFO  [restartedMain] [org.hibernate.dialect.Dialect] - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2023-07-12 00:13:23.087 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 00:13:23.090 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select SEQUENCE_CATALOG, SEQUENCE_SCHEMA, SEQUENCE_NAME, INCREMENT from information_schema.sequences
 {executed in 1 msec}
2023-07-12 00:13:23.140 INFO  [restartedMain] [o.s.o.j.LocalContainerEntityManagerFactoryBean] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-07-12 00:13:23.388 INFO  [restartedMain] [o.h.h.i.QueryTranslatorFactoryInitiator] - HHH000397: Using ASTQueryTranslatorFactory
2023-07-12 00:13:24.457 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService
2023-07-12 00:13:24.467 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'asyncThreadPool'
2023-07-12 00:13:24.642 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/h2-console/**'], []
2023-07-12 00:13:24.642 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/css/**'], []
2023-07-12 00:13:24.642 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/js/**'], []
2023-07-12 00:13:24.642 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/monitor/**'], []
2023-07-12 00:13:24.642 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/img/**'], []
2023-07-12 00:13:24.642 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/lib/**'], []
2023-07-12 00:13:24.642 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/main.css'], []
2023-07-12 00:13:24.642 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/common.js'], []
2023-07-12 00:13:24.642 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/resources/**'], []
2023-07-12 00:13:24.800 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4a601926, org.springframework.security.web.context.SecurityContextPersistenceFilter@661af540, org.springframework.security.web.header.HeaderWriterFilter@29731814, org.springframework.web.filter.CorsFilter@50404e99, org.springframework.security.web.authentication.logout.LogoutFilter@7206bc9, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@6ea6af7c, org.springframework.security.web.session.ConcurrentSessionFilter@63963a01, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@52c2967, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@671ee4b3, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1ee4484e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@376f6a1f, org.springframework.security.web.session.SessionManagementFilter@239c702d, org.springframework.security.web.access.ExceptionTranslationFilter@31ac26fe, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@45f06b13]
2023-07-12 00:13:24.822 INFO  [restartedMain] [o.s.aop.framework.CglibAopProxy] - Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(javax.servlet.FilterConfig) throws javax.servlet.ServletException] because it is marked as final: Consider using interface-based JDK proxies instead!
2023-07-12 00:13:25.167 WARN  [restartedMain] [o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-07-12 00:13:25.247 INFO  [restartedMain] [o.s.b.a.w.s.WelcomePageHandlerMapping] - Adding welcome page: ServletContext resource [/index.html]
2023-07-12 00:13:25.661 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-12 00:13:26.470 INFO  [restartedMain] [o.s.b.d.a.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2023-07-12 00:13:26.496 INFO  [restartedMain] [o.s.b.a.e.web.EndpointLinksResolver] - Exposing 16 endpoint(s) beneath base path '/actuator'
2023-07-12 00:13:26.631 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskScheduler] - Initializing ExecutorService
2023-07-12 00:13:26.638 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Starting ProtocolHandler ["http-nio-10010"]
2023-07-12 00:13:26.691 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 10010 (http) with context path ''
2023-07-12 00:13:26.697 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Started PjyApplication in 11.124 seconds (JVM running for 12.503)
2023-07-12 00:13:26.698 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-07-12 00:13:26.698 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - Application started
2023-07-12 00:13:26.698 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-07-12 00:13:27.583 INFO  [RMI TCP Connection(8)-127.0.0.1] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-07-12 00:13:27.583 INFO  [RMI TCP Connection(8)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Initializing Servlet 'dispatcherServlet'
2023-07-12 00:13:27.605 INFO  [RMI TCP Connection(8)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Completed initialization in 21 ms
2023-07-12 00:14:15.538 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 00:14:15.539 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. SELECT ROUTE_NM  FROM TBL_ROUTEINFO a where 	a.company_no = '100' ORDER BY 1
 {executed in 1 msec}
2023-07-12 00:14:20.486 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@83a57518
2023-07-12 00:14:20.486 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - filterType={danagerAnal_Step} 
2023-07-12 00:14:20.487 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT a.danger_level ,	decode(a.danger_level,'매우위험',5,'위험',4,'주의',3,'보통',2,'양호',1,0)  AS danger_level_no ,	listagg(a.base_ym,',') WITHIN group(ORDER BY base_ym) AS base_ym ,	listagg(a.danger_cnt||'(' || a.rate || '%)',',') WITHIN group(ORDER BY base_ym) AS rate ,	sum(danger_cnt)  AS total FROM ( SELECT a.* ,	ROUND( (danger_cnt / SUM(danger_cnt) OVER (PARTITION BY base_ym)),2) RATe FROM (	SELECT 	b.base_ym ,	b.danger_level ,	sum(CASE WHEN b.ROUTE_NM = NULL THEN 0  WHEN b.ROUTE_NM = decode('20번','',b.ROUTE_NM ,'20번') THEN 1 ELSE 0 END) AS danger_cnt FROM TBL_DANGER_DRIVING_INFO b  where b.company_no = '100' AND   b.base_ym between '2022-01' and '2023-07' GROUP BY b.base_ym,b.danger_level ) a union	 SELECT 	b.base_ym ,	'합계' ,	sum(CASE  WHEN b.ROUTE_NM = NULL THEN 0 WHEN b.ROUTE_NM = decode('20번','',b.ROUTE_NM ,'20번') THEN 1 ELSE 0 END) AS danger_cnt ,	0 FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym between '2022-01' and '2023-07' GROUP BY b.base_ym ) a GROUP BY a.danger_level ORDER BY 2 desc
2023-07-12 00:14:20.489 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 00:14:20.518 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. SELECT a.danger_level ,	decode(a.danger_level,'매우위험',5,'위험',4,'주의',3,'보통',2,'양호',1,0)  AS danger_level_no ,	listagg(a.base_ym,',') WITHIN group(ORDER BY base_ym) AS base_ym ,	listagg(a.danger_cnt||'(' || a.rate || '%)',',') WITHIN group(ORDER BY base_ym) AS rate ,	sum(danger_cnt)  AS total FROM ( SELECT a.* ,	ROUND( (danger_cnt / SUM(danger_cnt) OVER (PARTITION BY base_ym)),2) RATe FROM (	SELECT 	b.base_ym ,	b.danger_level ,	sum(CASE WHEN b.ROUTE_NM = NULL THEN 0  WHEN b.ROUTE_NM = decode('20번','',b.ROUTE_NM ,'20번') THEN 1 ELSE 0 END) AS danger_cnt FROM TBL_DANGER_DRIVING_INFO b  where b.company_no = '100' AND   b.base_ym between '2022-01' and '2023-07' GROUP BY b.base_ym,b.danger_level ) a union	 SELECT 	b.base_ym ,	'합계' ,	sum(CASE  WHEN b.ROUTE_NM = NULL THEN 0 WHEN b.ROUTE_NM = decode('20번','',b.ROUTE_NM ,'20번') THEN 1 ELSE 0 END) AS danger_cnt ,	0 FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym between '2022-01' and '2023-07' GROUP BY b.base_ym ) a GROUP BY a.danger_level ORDER BY 2 desc
 {executed in 27 msec}
2023-07-12 00:14:20.521 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. SELECT a.danger_level ,	decode(a.danger_level,'매우위험',5,'위험',4,'주의',3,'보통',2,'양호',1,0)  AS danger_level_no ,	listagg(a.base_ym,',') WITHIN group(ORDER BY base_ym) AS base_ym ,	listagg(a.danger_cnt||'(' || a.rate || '%)',',') WITHIN group(ORDER BY base_ym) AS rate ,	sum(danger_cnt)  AS total FROM ( SELECT a.* ,	ROUND( (danger_cnt / SUM(danger_cnt) OVER (PARTITION BY base_ym)),2) RATe FROM (	SELECT 	b.base_ym ,	b.danger_level ,	sum(CASE WHEN b.ROUTE_NM = NULL THEN 0  WHEN b.ROUTE_NM = decode('20번','',b.ROUTE_NM ,'20번') THEN 1 ELSE 0 END) AS danger_cnt FROM TBL_DANGER_DRIVING_INFO b  where b.company_no = '100' AND   b.base_ym between '2022-01' and '2023-07' GROUP BY b.base_ym,b.danger_level ) a union	 SELECT 	b.base_ym ,	'합계' ,	sum(CASE  WHEN b.ROUTE_NM = NULL THEN 0 WHEN b.ROUTE_NM = decode('20번','',b.ROUTE_NM ,'20번') THEN 1 ELSE 0 END) AS danger_cnt ,	0 FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym between '2022-01' and '2023-07' GROUP BY b.base_ym ) a GROUP BY a.danger_level ORDER BY 2 desc
 {executed in 3 msec}
2023-07-12 00:14:20.609 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@2539250c
2023-07-12 00:14:20.609 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - filterType={danagerAnal_Driver} 
2023-07-12 00:14:20.609 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : WITH ymInfo AS ( SELECT DISTINCT base_ym FROM TBL_DANGER_DRIVING_INFO a WHERE a.company_no = '100' AND   a.base_ym between '2022-01' and '2023-07' ),empinfo AS ( SELECT  DISTINCT emp_nm ,route_nm FROM TBL_DANGER_DRIVING_INFO a WHERE a.company_no = '100' AND   a.base_ym between '2022-01' and '2023-07' ),targetInfo AS ( SELECT a.*,b.* FROM ymInfo a JOIN empinfo b )	 SELECT a.emp_nm, b.sp_gb ,	listagg(a.base_ym,',') WITHIN group(ORDER BY base_ym) AS base_ym ,	listagg(a.danger_level,',') WITHIN group(ORDER BY base_ym) AS rate ,	listagg(a.danger_level_no,',') WITHIN group(ORDER BY base_ym) AS danger_level_no ,	sum(danger_level_no)  AS total FROM (	SELECT 	x.base_ym ,	x.emp_nm ,	x.route_nm ,	nvl(b.danger_level,'-')  AS danger_level ,	decode(b.danger_level,'매우위험',5,'위험',4,'주의',3,'보통',2,'양호',1,0)  AS danger_level_no FROM targetInfo x  LEFT OUTER join TBL_DANGER_DRIVING_INFO b on x.emp_nm = b.emp_nm AND x.base_ym = b.base_ym and b.company_no = '100' ) a where a.route_nm = decode ('20번','',a.route_nm, '20번') GROUP BY a.emp_nm ORDER BY 1
2023-07-12 00:14:20.617 ERROR [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. WITH ymInfo AS ( SELECT DISTINCT base_ym FROM TBL_DANGER_DRIVING_INFO a WHERE a.company_no = '100' AND   a.base_ym between '2022-01' and '2023-07' ),empinfo AS ( SELECT  DISTINCT emp_nm ,route_nm FROM TBL_DANGER_DRIVING_INFO a WHERE a.company_no = '100' AND   a.base_ym between '2022-01' and '2023-07' ),targetInfo AS ( SELECT a.*,b.* FROM ymInfo a JOIN empinfo b )	 SELECT a.emp_nm, b.sp_gb ,	listagg(a.base_ym,',') WITHIN group(ORDER BY base_ym) AS base_ym ,	listagg(a.danger_level,',') WITHIN group(ORDER BY base_ym) AS rate ,	listagg(a.danger_level_no,',') WITHIN group(ORDER BY base_ym) AS danger_level_no ,	sum(danger_level_no)  AS total FROM (	SELECT 	x.base_ym ,	x.emp_nm ,	x.route_nm ,	nvl(b.danger_level,'-')  AS danger_level ,	decode(b.danger_level,'매우위험',5,'위험',4,'주의',3,'보통',2,'양호',1,0)  AS danger_level_no FROM targetInfo x  LEFT OUTER join TBL_DANGER_DRIVING_INFO b on x.emp_nm = b.emp_nm AND x.base_ym = b.base_ym and b.company_no = '100' ) a where a.route_nm = decode ('20번','',a.route_nm, '20번') GROUP BY a.emp_nm ORDER BY 1
 {FAILED after 6 msec}
org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "B.SP_GB" not found; SQL statement:
WITH ymInfo AS ( SELECT DISTINCT base_ym FROM TBL_DANGER_DRIVING_INFO a WHERE a.company_no = '100' AND   a.base_ym between '2022-01' and '2023-07' ),empinfo AS ( SELECT  DISTINCT emp_nm ,route_nm FROM TBL_DANGER_DRIVING_INFO a WHERE a.company_no = '100' AND   a.base_ym between '2022-01' and '2023-07' ),targetInfo AS ( SELECT a.*,b.* FROM ymInfo a JOIN empinfo b )	 SELECT a.emp_nm, b.sp_gb ,	listagg(a.base_ym,',') WITHIN group(ORDER BY base_ym) AS base_ym ,	listagg(a.danger_level,',') WITHIN group(ORDER BY base_ym) AS rate ,	listagg(a.danger_level_no,',') WITHIN group(ORDER BY base_ym) AS danger_level_no ,	sum(danger_level_no)  AS total FROM (	SELECT 	x.base_ym ,	x.emp_nm ,	x.route_nm ,	nvl(b.danger_level,'-')  AS danger_level ,	decode(b.danger_level,'매우위험',5,'위험',4,'주의',3,'보통',2,'양호',1,0)  AS danger_level_no FROM targetInfo x  LEFT OUTER join TBL_DANGER_DRIVING_INFO b on x.emp_nm = b.emp_nm AND x.base_ym = b.base_ym and b.company_no = '100' ) a where a.route_nm = decode ('20번','',a.route_nm, '20번') GROUP BY a.emp_nm ORDER BY 1 [42122-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:453)
	at org.h2.engine.SessionRemote.done(SessionRemote.java:611)
	at org.h2.command.CommandRemote.prepare(CommandRemote.java:85)
	at org.h2.command.CommandRemote.<init>(CommandRemote.java:51)
	at org.h2.engine.SessionRemote.prepareCommand(SessionRemote.java:481)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1235)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:78)
	at net.sf.log4jdbc.sql.jdbcapi.StatementSpy.executeQuery(StatementSpy.java:731)
	at com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
	at com.zaxxer.hikari.pool.HikariProxyStatement.executeQuery(HikariProxyStatement.java)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:439)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:376)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:452)
	at com.pjy.dashboard.dao.DynamicSqlDao.getHeaderBySql(DynamicSqlDao.java:215)
	at com.pjy.dashboard.dao.DynamicSqlDao$$FastClassBySpringCGLIB$$8af24191.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at com.pjy.dashboard.dao.DynamicSqlH2Dao$$EnhancerBySpringCGLIB$$fcb7c10d.getHeaderBySql(<generated>)
	at com.pjy.dashboard.service.DynamicSqlService.getHeaderBySql(DynamicSqlService.java:72)
	at com.pjy.dashboard.service.DynamicSqlService.getSqlFilter(DynamicSqlService.java:139)
	at com.pjy.dashboard.controller.TestController.dynamicSqlFilter(TestController.java:207)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:893)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:798)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:97)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at jdk.internal.reflect.GeneratedMethodAccessor147.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$7ad8654a.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:114)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:104)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-07-12 00:14:20.662 ERROR [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - jdbcTemplate error: StatementCallback; bad SQL grammar [WITH ymInfo AS ( SELECT DISTINCT base_ym FROM TBL_DANGER_DRIVING_INFO a WHERE a.company_no = '100' AND   a.base_ym between '2022-01' and '2023-07' ),empinfo AS ( SELECT  DISTINCT emp_nm ,route_nm FROM TBL_DANGER_DRIVING_INFO a WHERE a.company_no = '100' AND   a.base_ym between '2022-01' and '2023-07' ),targetInfo AS ( SELECT a.*,b.* FROM ymInfo a JOIN empinfo b )	 SELECT a.emp_nm, b.sp_gb ,	listagg(a.base_ym,',') WITHIN group(ORDER BY base_ym) AS base_ym ,	listagg(a.danger_level,',') WITHIN group(ORDER BY base_ym) AS rate ,	listagg(a.danger_level_no,',') WITHIN group(ORDER BY base_ym) AS danger_level_no ,	sum(danger_level_no)  AS total FROM (	SELECT 	x.base_ym ,	x.emp_nm ,	x.route_nm ,	nvl(b.danger_level,'-')  AS danger_level ,	decode(b.danger_level,'매우위험',5,'위험',4,'주의',3,'보통',2,'양호',1,0)  AS danger_level_no FROM targetInfo x  LEFT OUTER join TBL_DANGER_DRIVING_INFO b on x.emp_nm = b.emp_nm AND x.base_ym = b.base_ym and b.company_no = '100' ) a where a.route_nm = decode ('20번','',a.route_nm, '20번') GROUP BY a.emp_nm ORDER BY 1]; nested exception is org.h2.jdbc.JdbcSQLSyntaxErrorException: Column "B.SP_GB" not found; SQL statement:
WITH ymInfo AS ( SELECT DISTINCT base_ym FROM TBL_DANGER_DRIVING_INFO a WHERE a.company_no = '100' AND   a.base_ym between '2022-01' and '2023-07' ),empinfo AS ( SELECT  DISTINCT emp_nm ,route_nm FROM TBL_DANGER_DRIVING_INFO a WHERE a.company_no = '100' AND   a.base_ym between '2022-01' and '2023-07' ),targetInfo AS ( SELECT a.*,b.* FROM ymInfo a JOIN empinfo b )	 SELECT a.emp_nm, b.sp_gb ,	listagg(a.base_ym,',') WITHIN group(ORDER BY base_ym) AS base_ym ,	listagg(a.danger_level,',') WITHIN group(ORDER BY base_ym) AS rate ,	listagg(a.danger_level_no,',') WITHIN group(ORDER BY base_ym) AS danger_level_no ,	sum(danger_level_no)  AS total FROM (	SELECT 	x.base_ym ,	x.emp_nm ,	x.route_nm ,	nvl(b.danger_level,'-')  AS danger_level ,	decode(b.danger_level,'매우위험',5,'위험',4,'주의',3,'보통',2,'양호',1,0)  AS danger_level_no FROM targetInfo x  LEFT OUTER join TBL_DANGER_DRIVING_INFO b on x.emp_nm = b.emp_nm AND x.base_ym = b.base_ym and b.company_no = '100' ) a where a.route_nm = decode ('20번','',a.route_nm, '20번') GROUP BY a.emp_nm ORDER BY 1 [42122-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:453)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.expression.ExpressionColumn.getColumnException(ExpressionColumn.java:163)
	at org.h2.expression.ExpressionColumn.optimize(ExpressionColumn.java:145)
	at org.h2.command.dml.Select.prepare(Select.java:1206)
	at org.h2.command.Parser.prepareCommand(Parser.java:744)
	at org.h2.engine.Session.prepareLocal(Session.java:657)
	at org.h2.server.TcpServerThread.process(TcpServerThread.java:278)
	at org.h2.server.TcpServerThread.run(TcpServerThread.java:183)
	at java.lang.Thread.run(Unknown Source)

2023-07-12 00:14:20.680 WARN  [http-nio-10010-exec-7] [o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver] - Resolved [com.pjy.dashboard.core.error.exception.BusinessException: jdbcTemplate query error]
2023-07-12 00:22:15.956 INFO  [RMI TCP Connection(20)-127.0.0.1] [o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin] - Application shutdown requested.
2023-07-12 00:22:15.985 INFO  [RMI TCP Connection(20)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Shutting down ExecutorService 'asyncThreadPool'
2023-07-12 00:22:15.987 INFO  [RMI TCP Connection(20)-127.0.0.1] [com.zaxxer.hikari.HikariDataSource] - H2 - Shutdown initiated...
2023-07-12 00:22:15.995 INFO  [RMI TCP Connection(20)-127.0.0.1] [com.zaxxer.hikari.HikariDataSource] - H2 - Shutdown completed.
2023-07-12 00:22:16.039 INFO  [RMI TCP Connection(20)-127.0.0.1] [com.pjy.dashboard.filter.TestFilter] - destroy Pjy Filter
2023-07-12 00:22:34.198 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Starting PjyApplication on DESKTOP-QJPD93S with PID 19500 (D:\BUS\dashboard\dashboard\target\classes started by admin in D:\BUS\dashboard\dashboard)
2023-07-12 00:22:34.203 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - The following profiles are active: oauth
2023-07-12 00:22:34.262 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-07-12 00:22:34.263 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-07-12 00:22:35.449 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-07-12 00:22:35.450 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-07-12 00:22:35.610 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 150ms. Found 3 JPA repository interfaces.
2023-07-12 00:22:35.963 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-07-12 00:22:35.963 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2023-07-12 00:22:36.012 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.FileRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-07-12 00:22:36.013 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.MemberRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-07-12 00:22:36.013 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.RememberMeRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-07-12 00:22:36.014 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 51ms. Found 0 JDBC repository interfaces.
2023-07-12 00:22:36.497 INFO  [restartedMain] [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] - Post-processing PropertySource instances
2023-07-12 00:22:36.566 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2023-07-12 00:22:36.566 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource commandLineArgs [org.springframework.core.env.SimpleCommandLinePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-07-12 00:22:36.566 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-07-12 00:22:36.566 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-07-12 00:22:36.567 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2023-07-12 00:22:36.567 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
2023-07-12 00:22:36.567 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2023-07-12 00:22:36.567 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application-oauth.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-07-12 00:22:36.567 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-07-12 00:22:36.568 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2023-07-12 00:22:36.568 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [pjy.properties] [org.springframework.core.env.CompositePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-07-12 00:22:36.568 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [common.properties] [org.springframework.core.io.support.ResourcePropertySource] to EncryptableMapPropertySourceWrapper
2023-07-12 00:22:36.632 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'asyncConfiguration' of type [com.pjy.dashboard.configuration.AsyncConfiguration$$EnhancerBySpringCGLIB$$1edfec8f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 00:22:36.686 INFO  [restartedMain] [c.u.j.filter.DefaultLazyPropertyFilter] - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2023-07-12 00:22:36.778 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$8d650bc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 00:22:36.859 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 00:22:36.861 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@688f34b7' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 00:22:36.862 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$2daaf36e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 00:22:36.872 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration$$EnhancerBySpringCGLIB$$53000b84] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 00:22:36.876 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 00:22:36.877 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 00:22:36.901 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$70288882] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 00:22:36.933 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$efa8d5b4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 00:22:37.079 INFO  [restartedMain] [c.u.j.r.DefaultLazyPropertyResolver] - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2023-07-12 00:22:37.085 INFO  [restartedMain] [c.u.j.d.DefaultLazyPropertyDetector] - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2023-07-12 00:22:37.537 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 10010 (http)
2023-07-12 00:22:37.559 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Initializing ProtocolHandler ["http-nio-10010"]
2023-07-12 00:22:37.569 INFO  [restartedMain] [org.apache.catalina.core.StandardService] - Starting service [Tomcat]
2023-07-12 00:22:37.569 INFO  [restartedMain] [org.apache.catalina.core.StandardEngine] - Starting Servlet engine: [Apache Tomcat/9.0.29]
2023-07-12 00:22:37.953 INFO  [restartedMain] [org.apache.jasper.servlet.TldScanner] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2023-07-12 00:22:37.967 INFO  [restartedMain] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring embedded WebApplicationContext
2023-07-12 00:22:37.967 INFO  [restartedMain] [o.s.web.context.ContextLoader] - Root WebApplicationContext: initialization completed in 3704 ms
2023-07-12 00:22:38.854 INFO  [restartedMain] [c.u.j.encryptor.DefaultLazyEncryptor] - Found Custom Encryptor Bean org.jasypt.encryption.pbe.PooledPBEStringEncryptor@366d7421 with name: jasyptStringEncryptor
2023-07-12 00:22:38.914 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Starting...
2023-07-12 00:22:39.000 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.executeSql(PoolBase.java:567)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 8 msec}
2023-07-12 00:22:39.007 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Start completed.
2023-07-12 00:22:39.784 INFO  [restartedMain] [com.pjy.dashboard.filter.TestFilter] - init Pjy Filter
2023-07-12 00:22:40.177 INFO  [restartedMain] [o.hibernate.jpa.internal.util.LogHelper] - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2023-07-12 00:22:40.254 INFO  [restartedMain] [org.hibernate.Version] - HHH000412: Hibernate Core {5.3.14.Final}
2023-07-12 00:22:40.256 INFO  [restartedMain] [org.hibernate.cfg.Environment] - HHH000206: hibernate.properties not found
2023-07-12 00:22:40.410 INFO  [restartedMain] [org.hibernate.annotations.common.Version] - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2023-07-12 00:22:40.655 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-12 00:22:40.678 INFO  [restartedMain] [org.hibernate.dialect.Dialect] - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2023-07-12 00:22:41.414 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 00:22:41.417 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select SEQUENCE_CATALOG, SEQUENCE_SCHEMA, SEQUENCE_NAME, INCREMENT from information_schema.sequences
 {executed in 1 msec}
2023-07-12 00:22:41.471 INFO  [restartedMain] [o.s.o.j.LocalContainerEntityManagerFactoryBean] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-07-12 00:22:41.723 INFO  [restartedMain] [o.h.h.i.QueryTranslatorFactoryInitiator] - HHH000397: Using ASTQueryTranslatorFactory
2023-07-12 00:22:42.814 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService
2023-07-12 00:22:42.825 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'asyncThreadPool'
2023-07-12 00:22:43.010 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/h2-console/**'], []
2023-07-12 00:22:43.010 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/css/**'], []
2023-07-12 00:22:43.010 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/js/**'], []
2023-07-12 00:22:43.010 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/monitor/**'], []
2023-07-12 00:22:43.011 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/img/**'], []
2023-07-12 00:22:43.011 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/lib/**'], []
2023-07-12 00:22:43.011 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/main.css'], []
2023-07-12 00:22:43.011 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/common.js'], []
2023-07-12 00:22:43.011 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/resources/**'], []
2023-07-12 00:22:43.171 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@16fec9fb, org.springframework.security.web.context.SecurityContextPersistenceFilter@48e71729, org.springframework.security.web.header.HeaderWriterFilter@540cf25e, org.springframework.web.filter.CorsFilter@157b3da6, org.springframework.security.web.authentication.logout.LogoutFilter@63e609cf, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@28c695ac, org.springframework.security.web.session.ConcurrentSessionFilter@5d9c65db, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@5de78527, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7d90431f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@566a2620, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4d0b74ca, org.springframework.security.web.session.SessionManagementFilter@12a5f0e2, org.springframework.security.web.access.ExceptionTranslationFilter@34c60f5d, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@47128914]
2023-07-12 00:22:43.193 INFO  [restartedMain] [o.s.aop.framework.CglibAopProxy] - Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(javax.servlet.FilterConfig) throws javax.servlet.ServletException] because it is marked as final: Consider using interface-based JDK proxies instead!
2023-07-12 00:22:43.554 WARN  [restartedMain] [o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-07-12 00:22:43.630 INFO  [restartedMain] [o.s.b.a.w.s.WelcomePageHandlerMapping] - Adding welcome page: ServletContext resource [/index.html]
2023-07-12 00:22:44.055 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 2 msec}
2023-07-12 00:22:44.918 INFO  [restartedMain] [o.s.b.d.a.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2023-07-12 00:22:44.946 INFO  [restartedMain] [o.s.b.a.e.web.EndpointLinksResolver] - Exposing 16 endpoint(s) beneath base path '/actuator'
2023-07-12 00:22:45.091 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskScheduler] - Initializing ExecutorService
2023-07-12 00:22:45.098 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Starting ProtocolHandler ["http-nio-10010"]
2023-07-12 00:22:45.143 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 10010 (http) with context path ''
2023-07-12 00:22:45.148 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Started PjyApplication in 11.423 seconds (JVM running for 12.789)
2023-07-12 00:22:45.149 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-07-12 00:22:45.150 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - Application started
2023-07-12 00:22:45.150 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-07-12 00:22:45.970 INFO  [RMI TCP Connection(10)-127.0.0.1] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-07-12 00:22:45.970 INFO  [RMI TCP Connection(10)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Initializing Servlet 'dispatcherServlet'
2023-07-12 00:22:45.991 INFO  [RMI TCP Connection(10)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Completed initialization in 21 ms
2023-07-12 00:23:48.791 INFO  [RMI TCP Connection(11)-127.0.0.1] [o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin] - Application shutdown requested.
2023-07-12 00:23:48.818 INFO  [RMI TCP Connection(11)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Shutting down ExecutorService 'asyncThreadPool'
2023-07-12 00:23:48.821 INFO  [RMI TCP Connection(11)-127.0.0.1] [com.zaxxer.hikari.HikariDataSource] - H2 - Shutdown initiated...
2023-07-12 00:23:48.829 INFO  [RMI TCP Connection(11)-127.0.0.1] [com.zaxxer.hikari.HikariDataSource] - H2 - Shutdown completed.
2023-07-12 00:23:48.874 INFO  [RMI TCP Connection(11)-127.0.0.1] [com.pjy.dashboard.filter.TestFilter] - destroy Pjy Filter
2023-07-12 00:24:07.329 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Starting PjyApplication on DESKTOP-QJPD93S with PID 13360 (D:\BUS\dashboard\dashboard\target\classes started by admin in D:\BUS\dashboard\dashboard)
2023-07-12 00:24:07.334 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - The following profiles are active: oauth
2023-07-12 00:24:07.387 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-07-12 00:24:07.387 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-07-12 00:24:08.664 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-07-12 00:24:08.664 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-07-12 00:24:08.810 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 135ms. Found 3 JPA repository interfaces.
2023-07-12 00:24:09.193 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-07-12 00:24:09.193 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2023-07-12 00:24:09.236 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.FileRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-07-12 00:24:09.237 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.MemberRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-07-12 00:24:09.238 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.RememberMeRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-07-12 00:24:09.239 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 45ms. Found 0 JDBC repository interfaces.
2023-07-12 00:24:09.693 INFO  [restartedMain] [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] - Post-processing PropertySource instances
2023-07-12 00:24:09.762 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2023-07-12 00:24:09.762 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource commandLineArgs [org.springframework.core.env.SimpleCommandLinePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-07-12 00:24:09.762 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-07-12 00:24:09.763 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-07-12 00:24:09.763 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2023-07-12 00:24:09.763 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
2023-07-12 00:24:09.763 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2023-07-12 00:24:09.763 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application-oauth.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-07-12 00:24:09.763 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-07-12 00:24:09.763 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2023-07-12 00:24:09.764 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [pjy.properties] [org.springframework.core.env.CompositePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-07-12 00:24:09.764 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [common.properties] [org.springframework.core.io.support.ResourcePropertySource] to EncryptableMapPropertySourceWrapper
2023-07-12 00:24:09.823 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'asyncConfiguration' of type [com.pjy.dashboard.configuration.AsyncConfiguration$$EnhancerBySpringCGLIB$$1b01cd37] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 00:24:09.874 INFO  [restartedMain] [c.u.j.filter.DefaultLazyPropertyFilter] - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2023-07-12 00:24:09.967 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$4f83164] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 00:24:10.047 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 00:24:10.049 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@4b15850e' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 00:24:10.053 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$29ccd416] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 00:24:10.064 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration$$EnhancerBySpringCGLIB$$4f21ec2c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 00:24:10.067 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 00:24:10.068 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 00:24:10.090 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6c4a692a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 00:24:10.119 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$ebcab65c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 00:24:10.258 INFO  [restartedMain] [c.u.j.r.DefaultLazyPropertyResolver] - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2023-07-12 00:24:10.265 INFO  [restartedMain] [c.u.j.d.DefaultLazyPropertyDetector] - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2023-07-12 00:24:10.704 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 10010 (http)
2023-07-12 00:24:10.720 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Initializing ProtocolHandler ["http-nio-10010"]
2023-07-12 00:24:10.730 INFO  [restartedMain] [org.apache.catalina.core.StandardService] - Starting service [Tomcat]
2023-07-12 00:24:10.730 INFO  [restartedMain] [org.apache.catalina.core.StandardEngine] - Starting Servlet engine: [Apache Tomcat/9.0.29]
2023-07-12 00:24:11.099 INFO  [restartedMain] [org.apache.jasper.servlet.TldScanner] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2023-07-12 00:24:11.109 INFO  [restartedMain] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring embedded WebApplicationContext
2023-07-12 00:24:11.109 INFO  [restartedMain] [o.s.web.context.ContextLoader] - Root WebApplicationContext: initialization completed in 3722 ms
2023-07-12 00:24:11.952 INFO  [restartedMain] [c.u.j.encryptor.DefaultLazyEncryptor] - Found Custom Encryptor Bean org.jasypt.encryption.pbe.PooledPBEStringEncryptor@2a3d0f54 with name: jasyptStringEncryptor
2023-07-12 00:24:12.001 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Starting...
2023-07-12 00:24:12.086 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.executeSql(PoolBase.java:567)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 7 msec}
2023-07-12 00:24:12.090 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Start completed.
2023-07-12 00:24:12.870 INFO  [restartedMain] [com.pjy.dashboard.filter.TestFilter] - init Pjy Filter
2023-07-12 00:24:13.247 INFO  [restartedMain] [o.hibernate.jpa.internal.util.LogHelper] - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2023-07-12 00:24:13.330 INFO  [restartedMain] [org.hibernate.Version] - HHH000412: Hibernate Core {5.3.14.Final}
2023-07-12 00:24:13.331 INFO  [restartedMain] [org.hibernate.cfg.Environment] - HHH000206: hibernate.properties not found
2023-07-12 00:24:13.480 INFO  [restartedMain] [org.hibernate.annotations.common.Version] - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2023-07-12 00:24:13.719 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-12 00:24:13.736 INFO  [restartedMain] [org.hibernate.dialect.Dialect] - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2023-07-12 00:24:14.438 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 00:24:14.441 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select SEQUENCE_CATALOG, SEQUENCE_SCHEMA, SEQUENCE_NAME, INCREMENT from information_schema.sequences
 {executed in 1 msec}
2023-07-12 00:24:14.496 INFO  [restartedMain] [o.s.o.j.LocalContainerEntityManagerFactoryBean] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-07-12 00:24:14.754 INFO  [restartedMain] [o.h.h.i.QueryTranslatorFactoryInitiator] - HHH000397: Using ASTQueryTranslatorFactory
2023-07-12 00:24:15.849 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService
2023-07-12 00:24:15.859 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'asyncThreadPool'
2023-07-12 00:24:16.039 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/h2-console/**'], []
2023-07-12 00:24:16.039 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/css/**'], []
2023-07-12 00:24:16.039 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/js/**'], []
2023-07-12 00:24:16.039 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/monitor/**'], []
2023-07-12 00:24:16.040 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/img/**'], []
2023-07-12 00:24:16.040 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/lib/**'], []
2023-07-12 00:24:16.040 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/main.css'], []
2023-07-12 00:24:16.040 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/common.js'], []
2023-07-12 00:24:16.040 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/resources/**'], []
2023-07-12 00:24:16.210 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1522c4e5, org.springframework.security.web.context.SecurityContextPersistenceFilter@58c314d1, org.springframework.security.web.header.HeaderWriterFilter@664d46e1, org.springframework.web.filter.CorsFilter@22de740a, org.springframework.security.web.authentication.logout.LogoutFilter@5a3e7a48, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@5e5307ef, org.springframework.security.web.session.ConcurrentSessionFilter@96168ae, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@7784b857, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@682a1e7, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@59a97202, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@235be3ac, org.springframework.security.web.session.SessionManagementFilter@3e3f350, org.springframework.security.web.access.ExceptionTranslationFilter@9ce9018, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6f30f25b]
2023-07-12 00:24:16.234 INFO  [restartedMain] [o.s.aop.framework.CglibAopProxy] - Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(javax.servlet.FilterConfig) throws javax.servlet.ServletException] because it is marked as final: Consider using interface-based JDK proxies instead!
2023-07-12 00:24:16.594 WARN  [restartedMain] [o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-07-12 00:24:16.670 INFO  [restartedMain] [o.s.b.a.w.s.WelcomePageHandlerMapping] - Adding welcome page: ServletContext resource [/index.html]
2023-07-12 00:24:17.094 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 00:24:17.920 INFO  [restartedMain] [o.s.b.d.a.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2023-07-12 00:24:17.950 INFO  [restartedMain] [o.s.b.a.e.web.EndpointLinksResolver] - Exposing 16 endpoint(s) beneath base path '/actuator'
2023-07-12 00:24:18.093 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskScheduler] - Initializing ExecutorService
2023-07-12 00:24:18.099 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Starting ProtocolHandler ["http-nio-10010"]
2023-07-12 00:24:18.151 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 10010 (http) with context path ''
2023-07-12 00:24:18.156 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Started PjyApplication in 11.287 seconds (JVM running for 12.669)
2023-07-12 00:24:18.157 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-07-12 00:24:18.157 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - Application started
2023-07-12 00:24:18.157 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-07-12 00:24:18.947 INFO  [RMI TCP Connection(8)-127.0.0.1] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-07-12 00:24:18.948 INFO  [RMI TCP Connection(8)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Initializing Servlet 'dispatcherServlet'
2023-07-12 00:24:18.969 INFO  [RMI TCP Connection(8)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Completed initialization in 21 ms
2023-07-12 00:24:23.158 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@83a57518
2023-07-12 00:24:23.158 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - filterType={danagerAnal_Step} 
2023-07-12 00:24:23.194 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT a.danger_level ,	decode(a.danger_level,'매우위험',5,'위험',4,'주의',3,'보통',2,'양호',1,0)  AS danger_level_no ,	listagg(a.base_ym,',') WITHIN group(ORDER BY base_ym) AS base_ym ,	listagg(a.danger_cnt||'(' || a.rate || '%)',',') WITHIN group(ORDER BY base_ym) AS rate ,	sum(danger_cnt)  AS total FROM ( SELECT a.* ,	ROUND( (danger_cnt / SUM(danger_cnt) OVER (PARTITION BY base_ym)),2) RATe FROM (	SELECT 	b.base_ym ,	b.danger_level ,	sum(CASE WHEN b.ROUTE_NM = NULL THEN 0  WHEN b.ROUTE_NM = decode('20번','',b.ROUTE_NM ,'20번') THEN 1 ELSE 0 END) AS danger_cnt FROM TBL_DANGER_DRIVING_INFO b  where b.company_no = '100' AND   b.base_ym between '2022-01' and '2023-07' GROUP BY b.base_ym,b.danger_level ) a union	 SELECT 	b.base_ym ,	'합계' ,	sum(CASE  WHEN b.ROUTE_NM = NULL THEN 0 WHEN b.ROUTE_NM = decode('20번','',b.ROUTE_NM ,'20번') THEN 1 ELSE 0 END) AS danger_cnt ,	0 FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym between '2022-01' and '2023-07' GROUP BY b.base_ym ) a GROUP BY a.danger_level ORDER BY 2 desc
2023-07-12 00:24:23.203 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-12 00:24:23.214 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. SELECT a.danger_level ,	decode(a.danger_level,'매우위험',5,'위험',4,'주의',3,'보통',2,'양호',1,0)  AS danger_level_no ,	listagg(a.base_ym,',') WITHIN group(ORDER BY base_ym) AS base_ym ,	listagg(a.danger_cnt||'(' || a.rate || '%)',',') WITHIN group(ORDER BY base_ym) AS rate ,	sum(danger_cnt)  AS total FROM ( SELECT a.* ,	ROUND( (danger_cnt / SUM(danger_cnt) OVER (PARTITION BY base_ym)),2) RATe FROM (	SELECT 	b.base_ym ,	b.danger_level ,	sum(CASE WHEN b.ROUTE_NM = NULL THEN 0  WHEN b.ROUTE_NM = decode('20번','',b.ROUTE_NM ,'20번') THEN 1 ELSE 0 END) AS danger_cnt FROM TBL_DANGER_DRIVING_INFO b  where b.company_no = '100' AND   b.base_ym between '2022-01' and '2023-07' GROUP BY b.base_ym,b.danger_level ) a union	 SELECT 	b.base_ym ,	'합계' ,	sum(CASE  WHEN b.ROUTE_NM = NULL THEN 0 WHEN b.ROUTE_NM = decode('20번','',b.ROUTE_NM ,'20번') THEN 1 ELSE 0 END) AS danger_cnt ,	0 FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym between '2022-01' and '2023-07' GROUP BY b.base_ym ) a GROUP BY a.danger_level ORDER BY 2 desc
 {executed in 11 msec}
2023-07-12 00:24:23.219 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. SELECT a.danger_level ,	decode(a.danger_level,'매우위험',5,'위험',4,'주의',3,'보통',2,'양호',1,0)  AS danger_level_no ,	listagg(a.base_ym,',') WITHIN group(ORDER BY base_ym) AS base_ym ,	listagg(a.danger_cnt||'(' || a.rate || '%)',',') WITHIN group(ORDER BY base_ym) AS rate ,	sum(danger_cnt)  AS total FROM ( SELECT a.* ,	ROUND( (danger_cnt / SUM(danger_cnt) OVER (PARTITION BY base_ym)),2) RATe FROM (	SELECT 	b.base_ym ,	b.danger_level ,	sum(CASE WHEN b.ROUTE_NM = NULL THEN 0  WHEN b.ROUTE_NM = decode('20번','',b.ROUTE_NM ,'20번') THEN 1 ELSE 0 END) AS danger_cnt FROM TBL_DANGER_DRIVING_INFO b  where b.company_no = '100' AND   b.base_ym between '2022-01' and '2023-07' GROUP BY b.base_ym,b.danger_level ) a union	 SELECT 	b.base_ym ,	'합계' ,	sum(CASE  WHEN b.ROUTE_NM = NULL THEN 0 WHEN b.ROUTE_NM = decode('20번','',b.ROUTE_NM ,'20번') THEN 1 ELSE 0 END) AS danger_cnt ,	0 FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym between '2022-01' and '2023-07' GROUP BY b.base_ym ) a GROUP BY a.danger_level ORDER BY 2 desc
 {executed in 2 msec}
2023-07-12 00:24:23.321 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@2539250c
2023-07-12 00:24:23.321 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - filterType={danagerAnal_Driver} 
2023-07-12 00:24:23.322 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : WITH ymInfo AS ( SELECT DISTINCT base_ym FROM TBL_DANGER_DRIVING_INFO a WHERE a.company_no = '100' AND   a.base_ym between '2022-01' and '2023-07' ),empinfo AS ( SELECT  DISTINCT emp_nm ,route_nm , sp_gbFROM TBL_DANGER_DRIVING_INFO a WHERE a.company_no = '100' AND   a.base_ym between '2022-01' and '2023-07' ),targetInfo AS ( SELECT a.*,b.* FROM ymInfo a JOIN empinfo b )	 SELECT a.emp_nm, a.sp_gb ,	listagg(a.base_ym,',') WITHIN group(ORDER BY base_ym) AS base_ym ,	listagg(a.danger_level,',') WITHIN group(ORDER BY base_ym) AS rate ,	listagg(a.danger_level_no,',') WITHIN group(ORDER BY base_ym) AS danger_level_no ,	sum(danger_level_no)  AS total FROM (	SELECT 	x.base_ym ,	x.emp_nm ,	x.sp_gb ,	x.route_nm ,	nvl(b.danger_level,'-')  AS danger_level ,	decode(b.danger_level,'매우위험',5,'위험',4,'주의',3,'보통',2,'양호',1,0)  AS danger_level_no FROM targetInfo x  LEFT OUTER join TBL_DANGER_DRIVING_INFO b on x.emp_nm = b.emp_nm AND x.base_ym = b.base_ym and b.company_no = '100' ) a where a.route_nm = decode ('20번','',a.route_nm, '20번') GROUP BY a.emp_nm ORDER BY 1
2023-07-12 00:24:23.328 ERROR [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. WITH ymInfo AS ( SELECT DISTINCT base_ym FROM TBL_DANGER_DRIVING_INFO a WHERE a.company_no = '100' AND   a.base_ym between '2022-01' and '2023-07' ),empinfo AS ( SELECT  DISTINCT emp_nm ,route_nm , sp_gbFROM TBL_DANGER_DRIVING_INFO a WHERE a.company_no = '100' AND   a.base_ym between '2022-01' and '2023-07' ),targetInfo AS ( SELECT a.*,b.* FROM ymInfo a JOIN empinfo b )	 SELECT a.emp_nm, a.sp_gb ,	listagg(a.base_ym,',') WITHIN group(ORDER BY base_ym) AS base_ym ,	listagg(a.danger_level,',') WITHIN group(ORDER BY base_ym) AS rate ,	listagg(a.danger_level_no,',') WITHIN group(ORDER BY base_ym) AS danger_level_no ,	sum(danger_level_no)  AS total FROM (	SELECT 	x.base_ym ,	x.emp_nm ,	x.sp_gb ,	x.route_nm ,	nvl(b.danger_level,'-')  AS danger_level ,	decode(b.danger_level,'매우위험',5,'위험',4,'주의',3,'보통',2,'양호',1,0)  AS danger_level_no FROM targetInfo x  LEFT OUTER join TBL_DANGER_DRIVING_INFO b on x.emp_nm = b.emp_nm AND x.base_ym = b.base_ym and b.company_no = '100' ) a where a.route_nm = decode ('20번','',a.route_nm, '20번') GROUP BY a.emp_nm ORDER BY 1
 {FAILED after 5 msec}
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "WITH YMINFO AS ( SELECT DISTINCT BASE_YM FROM TBL_DANGER_DRIVING_INFO A WHERE A.COMPANY_NO = '100' AND   A.BASE_YM BETWEEN '2022-01' AND '2023-07' ),EMPINFO AS ( SELECT  DISTINCT EMP_NM ,ROUTE_NM , SP_GBFROM TBL_DANGER_DRIVING_INFO A[*] WHERE A.COMPANY_NO = '100' AND   A.BASE_YM BETWEEN '2022-01' AND '2023-07' ),TARGETINFO AS ( SELECT A.*,B.* FROM YMINFO A JOIN EMPINFO B )	 SELECT A.EMP_NM, A.SP_GB ,	LISTAGG(A.BASE_YM,',') WITHIN GROUP(ORDER BY BASE_YM) AS BASE_YM ,	LISTAGG(A.DANGER_LEVEL,',') WITHIN GROUP(ORDER BY BASE_YM) AS RATE ,	LISTAGG(A.DANGER_LEVEL_NO,',') WITHIN GROUP(ORDER BY BASE_YM) AS DANGER_LEVEL_NO ,	SUM(DANGER_LEVEL_NO)  AS TOTAL FROM (	SELECT 	X.BASE_YM ,	X.EMP_NM ,	X.SP_GB ,	X.ROUTE_NM ,	NVL(B.DANGER_LEVEL,'-')  AS DANGER_LEVEL ,	DECODE(B.DANGER_LEVEL,'매우위험',5,'위험',4,'주의',3,'보통',2,'양호',1,0)  AS DANGER_LEVEL_NO FROM TARGETINFO X  LEFT OUTER JOIN TBL_DANGER_DRIVING_INFO B ON X.EMP_NM = B.EMP_NM AND X.BASE_YM = B.BASE_YM AND B.COMPANY_NO = '100' ) A WHERE A.ROUTE_NM = DECODE ('20번','',A.ROUTE_NM, '20번') GROUP BY A.EMP_NM ORDER BY 1"; expected ",, FROM, WHERE, GROUP, HAVING, WINDOW, QUALIFY, UNION, EXCEPT, MINUS, INTERSECT, ORDER, OFFSET, FETCH, LIMIT, SAMPLE_SIZE, FOR, )"; SQL statement:
WITH ymInfo AS ( SELECT DISTINCT base_ym FROM TBL_DANGER_DRIVING_INFO a WHERE a.company_no = '100' AND   a.base_ym between '2022-01' and '2023-07' ),empinfo AS ( SELECT  DISTINCT emp_nm ,route_nm , sp_gbFROM TBL_DANGER_DRIVING_INFO a WHERE a.company_no = '100' AND   a.base_ym between '2022-01' and '2023-07' ),targetInfo AS ( SELECT a.*,b.* FROM ymInfo a JOIN empinfo b )	 SELECT a.emp_nm, a.sp_gb ,	listagg(a.base_ym,',') WITHIN group(ORDER BY base_ym) AS base_ym ,	listagg(a.danger_level,',') WITHIN group(ORDER BY base_ym) AS rate ,	listagg(a.danger_level_no,',') WITHIN group(ORDER BY base_ym) AS danger_level_no ,	sum(danger_level_no)  AS total FROM (	SELECT 	x.base_ym ,	x.emp_nm ,	x.sp_gb ,	x.route_nm ,	nvl(b.danger_level,'-')  AS danger_level ,	decode(b.danger_level,'매우위험',5,'위험',4,'주의',3,'보통',2,'양호',1,0)  AS danger_level_no FROM targetInfo x  LEFT OUTER join TBL_DANGER_DRIVING_INFO b on x.emp_nm = b.emp_nm AND x.base_ym = b.base_ym and b.company_no = '100' ) a where a.route_nm = decode ('20번','',a.route_nm, '20번') GROUP BY a.emp_nm ORDER BY 1 [42001-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:453)
	at org.h2.engine.SessionRemote.done(SessionRemote.java:611)
	at org.h2.command.CommandRemote.prepare(CommandRemote.java:85)
	at org.h2.command.CommandRemote.<init>(CommandRemote.java:51)
	at org.h2.engine.SessionRemote.prepareCommand(SessionRemote.java:481)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1235)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:78)
	at net.sf.log4jdbc.sql.jdbcapi.StatementSpy.executeQuery(StatementSpy.java:731)
	at com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
	at com.zaxxer.hikari.pool.HikariProxyStatement.executeQuery(HikariProxyStatement.java)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:439)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:376)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:452)
	at com.pjy.dashboard.dao.DynamicSqlDao.getHeaderBySql(DynamicSqlDao.java:215)
	at com.pjy.dashboard.dao.DynamicSqlDao$$FastClassBySpringCGLIB$$8af24191.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at com.pjy.dashboard.dao.DynamicSqlH2Dao$$EnhancerBySpringCGLIB$$39eb5aed.getHeaderBySql(<generated>)
	at com.pjy.dashboard.service.DynamicSqlService.getHeaderBySql(DynamicSqlService.java:72)
	at com.pjy.dashboard.service.DynamicSqlService.getSqlFilter(DynamicSqlService.java:139)
	at com.pjy.dashboard.controller.TestController.dynamicSqlFilter(TestController.java:207)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:893)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:798)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:97)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$1d4dd09f.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:114)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:104)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-07-12 00:24:23.375 ERROR [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - jdbcTemplate error: StatementCallback; bad SQL grammar [WITH ymInfo AS ( SELECT DISTINCT base_ym FROM TBL_DANGER_DRIVING_INFO a WHERE a.company_no = '100' AND   a.base_ym between '2022-01' and '2023-07' ),empinfo AS ( SELECT  DISTINCT emp_nm ,route_nm , sp_gbFROM TBL_DANGER_DRIVING_INFO a WHERE a.company_no = '100' AND   a.base_ym between '2022-01' and '2023-07' ),targetInfo AS ( SELECT a.*,b.* FROM ymInfo a JOIN empinfo b )	 SELECT a.emp_nm, a.sp_gb ,	listagg(a.base_ym,',') WITHIN group(ORDER BY base_ym) AS base_ym ,	listagg(a.danger_level,',') WITHIN group(ORDER BY base_ym) AS rate ,	listagg(a.danger_level_no,',') WITHIN group(ORDER BY base_ym) AS danger_level_no ,	sum(danger_level_no)  AS total FROM (	SELECT 	x.base_ym ,	x.emp_nm ,	x.sp_gb ,	x.route_nm ,	nvl(b.danger_level,'-')  AS danger_level ,	decode(b.danger_level,'매우위험',5,'위험',4,'주의',3,'보통',2,'양호',1,0)  AS danger_level_no FROM targetInfo x  LEFT OUTER join TBL_DANGER_DRIVING_INFO b on x.emp_nm = b.emp_nm AND x.base_ym = b.base_ym and b.company_no = '100' ) a where a.route_nm = decode ('20번','',a.route_nm, '20번') GROUP BY a.emp_nm ORDER BY 1]; nested exception is org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "WITH YMINFO AS ( SELECT DISTINCT BASE_YM FROM TBL_DANGER_DRIVING_INFO A WHERE A.COMPANY_NO = '100' AND   A.BASE_YM BETWEEN '2022-01' AND '2023-07' ),EMPINFO AS ( SELECT  DISTINCT EMP_NM ,ROUTE_NM , SP_GBFROM TBL_DANGER_DRIVING_INFO A[*] WHERE A.COMPANY_NO = '100' AND   A.BASE_YM BETWEEN '2022-01' AND '2023-07' ),TARGETINFO AS ( SELECT A.*,B.* FROM YMINFO A JOIN EMPINFO B )	 SELECT A.EMP_NM, A.SP_GB ,	LISTAGG(A.BASE_YM,',') WITHIN GROUP(ORDER BY BASE_YM) AS BASE_YM ,	LISTAGG(A.DANGER_LEVEL,',') WITHIN GROUP(ORDER BY BASE_YM) AS RATE ,	LISTAGG(A.DANGER_LEVEL_NO,',') WITHIN GROUP(ORDER BY BASE_YM) AS DANGER_LEVEL_NO ,	SUM(DANGER_LEVEL_NO)  AS TOTAL FROM (	SELECT 	X.BASE_YM ,	X.EMP_NM ,	X.SP_GB ,	X.ROUTE_NM ,	NVL(B.DANGER_LEVEL,'-')  AS DANGER_LEVEL ,	DECODE(B.DANGER_LEVEL,'매우위험',5,'위험',4,'주의',3,'보통',2,'양호',1,0)  AS DANGER_LEVEL_NO FROM TARGETINFO X  LEFT OUTER JOIN TBL_DANGER_DRIVING_INFO B ON X.EMP_NM = B.EMP_NM AND X.BASE_YM = B.BASE_YM AND B.COMPANY_NO = '100' ) A WHERE A.ROUTE_NM = DECODE ('20번','',A.ROUTE_NM, '20번') GROUP BY A.EMP_NM ORDER BY 1"; expected ",, FROM, WHERE, GROUP, HAVING, WINDOW, QUALIFY, UNION, EXCEPT, MINUS, INTERSECT, ORDER, OFFSET, FETCH, LIMIT, SAMPLE_SIZE, FOR, )"; SQL statement:
WITH ymInfo AS ( SELECT DISTINCT base_ym FROM TBL_DANGER_DRIVING_INFO a WHERE a.company_no = '100' AND   a.base_ym between '2022-01' and '2023-07' ),empinfo AS ( SELECT  DISTINCT emp_nm ,route_nm , sp_gbFROM TBL_DANGER_DRIVING_INFO a WHERE a.company_no = '100' AND   a.base_ym between '2022-01' and '2023-07' ),targetInfo AS ( SELECT a.*,b.* FROM ymInfo a JOIN empinfo b )	 SELECT a.emp_nm, a.sp_gb ,	listagg(a.base_ym,',') WITHIN group(ORDER BY base_ym) AS base_ym ,	listagg(a.danger_level,',') WITHIN group(ORDER BY base_ym) AS rate ,	listagg(a.danger_level_no,',') WITHIN group(ORDER BY base_ym) AS danger_level_no ,	sum(danger_level_no)  AS total FROM (	SELECT 	x.base_ym ,	x.emp_nm ,	x.sp_gb ,	x.route_nm ,	nvl(b.danger_level,'-')  AS danger_level ,	decode(b.danger_level,'매우위험',5,'위험',4,'주의',3,'보통',2,'양호',1,0)  AS danger_level_no FROM targetInfo x  LEFT OUTER join TBL_DANGER_DRIVING_INFO b on x.emp_nm = b.emp_nm AND x.base_ym = b.base_ym and b.company_no = '100' ) a where a.route_nm = decode ('20번','',a.route_nm, '20번') GROUP BY a.emp_nm ORDER BY 1 [42001-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:453)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.getSyntaxError(DbException.java:243)
	at org.h2.command.Parser.getSyntaxError(Parser.java:1053)
	at org.h2.command.Parser.read(Parser.java:4995)
	at org.h2.command.Parser.parseSingleCommonTableExpression(Parser.java:6865)
	at org.h2.command.Parser.parseWith1(Parser.java:6737)
	at org.h2.command.Parser.parseWith(Parser.java:6722)
	at org.h2.command.Parser.parseWithStatementOrQuery(Parser.java:2633)
	at org.h2.command.Parser.parsePrepared(Parser.java:872)
	at org.h2.command.Parser.parse(Parser.java:843)
	at org.h2.command.Parser.parse(Parser.java:819)
	at org.h2.command.Parser.prepareCommand(Parser.java:738)
	at org.h2.engine.Session.prepareLocal(Session.java:657)
	at org.h2.server.TcpServerThread.process(TcpServerThread.java:278)
	at org.h2.server.TcpServerThread.run(TcpServerThread.java:183)
	at java.lang.Thread.run(Unknown Source)

2023-07-12 00:24:23.391 WARN  [http-nio-10010-exec-2] [o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver] - Resolved [com.pjy.dashboard.core.error.exception.BusinessException: jdbcTemplate query error]
2023-07-12 00:25:29.338 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@83a57518
2023-07-12 00:25:29.338 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - filterType={danagerAnal_Step} 
2023-07-12 00:25:29.351 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT a.danger_level ,	decode(a.danger_level,'매우위험',5,'위험',4,'주의',3,'보통',2,'양호',1,0)  AS danger_level_no ,	listagg(a.base_ym,',') WITHIN group(ORDER BY base_ym) AS base_ym ,	listagg(a.danger_cnt||'(' || a.rate || '%)',',') WITHIN group(ORDER BY base_ym) AS rate ,	sum(danger_cnt)  AS total FROM ( SELECT a.* ,	ROUND( (danger_cnt / SUM(danger_cnt) OVER (PARTITION BY base_ym)),2) RATe FROM (	SELECT 	b.base_ym ,	b.danger_level ,	sum(CASE WHEN b.ROUTE_NM = NULL THEN 0  WHEN b.ROUTE_NM = decode('20번','',b.ROUTE_NM ,'20번') THEN 1 ELSE 0 END) AS danger_cnt FROM TBL_DANGER_DRIVING_INFO b  where b.company_no = '100' AND   b.base_ym between '2022-01' and '2023-07' GROUP BY b.base_ym,b.danger_level ) a union	 SELECT 	b.base_ym ,	'합계' ,	sum(CASE  WHEN b.ROUTE_NM = NULL THEN 0 WHEN b.ROUTE_NM = decode('20번','',b.ROUTE_NM ,'20번') THEN 1 ELSE 0 END) AS danger_cnt ,	0 FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym between '2022-01' and '2023-07' GROUP BY b.base_ym ) a GROUP BY a.danger_level ORDER BY 2 desc
2023-07-12 00:25:29.352 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 00:25:29.363 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. SELECT a.danger_level ,	decode(a.danger_level,'매우위험',5,'위험',4,'주의',3,'보통',2,'양호',1,0)  AS danger_level_no ,	listagg(a.base_ym,',') WITHIN group(ORDER BY base_ym) AS base_ym ,	listagg(a.danger_cnt||'(' || a.rate || '%)',',') WITHIN group(ORDER BY base_ym) AS rate ,	sum(danger_cnt)  AS total FROM ( SELECT a.* ,	ROUND( (danger_cnt / SUM(danger_cnt) OVER (PARTITION BY base_ym)),2) RATe FROM (	SELECT 	b.base_ym ,	b.danger_level ,	sum(CASE WHEN b.ROUTE_NM = NULL THEN 0  WHEN b.ROUTE_NM = decode('20번','',b.ROUTE_NM ,'20번') THEN 1 ELSE 0 END) AS danger_cnt FROM TBL_DANGER_DRIVING_INFO b  where b.company_no = '100' AND   b.base_ym between '2022-01' and '2023-07' GROUP BY b.base_ym,b.danger_level ) a union	 SELECT 	b.base_ym ,	'합계' ,	sum(CASE  WHEN b.ROUTE_NM = NULL THEN 0 WHEN b.ROUTE_NM = decode('20번','',b.ROUTE_NM ,'20번') THEN 1 ELSE 0 END) AS danger_cnt ,	0 FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym between '2022-01' and '2023-07' GROUP BY b.base_ym ) a GROUP BY a.danger_level ORDER BY 2 desc
 {executed in 11 msec}
2023-07-12 00:25:29.367 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. SELECT a.danger_level ,	decode(a.danger_level,'매우위험',5,'위험',4,'주의',3,'보통',2,'양호',1,0)  AS danger_level_no ,	listagg(a.base_ym,',') WITHIN group(ORDER BY base_ym) AS base_ym ,	listagg(a.danger_cnt||'(' || a.rate || '%)',',') WITHIN group(ORDER BY base_ym) AS rate ,	sum(danger_cnt)  AS total FROM ( SELECT a.* ,	ROUND( (danger_cnt / SUM(danger_cnt) OVER (PARTITION BY base_ym)),2) RATe FROM (	SELECT 	b.base_ym ,	b.danger_level ,	sum(CASE WHEN b.ROUTE_NM = NULL THEN 0  WHEN b.ROUTE_NM = decode('20번','',b.ROUTE_NM ,'20번') THEN 1 ELSE 0 END) AS danger_cnt FROM TBL_DANGER_DRIVING_INFO b  where b.company_no = '100' AND   b.base_ym between '2022-01' and '2023-07' GROUP BY b.base_ym,b.danger_level ) a union	 SELECT 	b.base_ym ,	'합계' ,	sum(CASE  WHEN b.ROUTE_NM = NULL THEN 0 WHEN b.ROUTE_NM = decode('20번','',b.ROUTE_NM ,'20번') THEN 1 ELSE 0 END) AS danger_cnt ,	0 FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym between '2022-01' and '2023-07' GROUP BY b.base_ym ) a GROUP BY a.danger_level ORDER BY 2 desc
 {executed in 2 msec}
2023-07-12 00:25:29.443 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@2539250c
2023-07-12 00:25:29.443 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - filterType={danagerAnal_Driver} 
2023-07-12 00:25:29.443 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : WITH ymInfo AS ( SELECT DISTINCT base_ym FROM TBL_DANGER_DRIVING_INFO a WHERE a.company_no = '100' AND   a.base_ym between '2022-01' and '2023-07' ),empinfo AS ( SELECT  DISTINCT emp_nm ,route_nm , sp_gb FROM TBL_DANGER_DRIVING_INFO a WHERE a.company_no = '100' AND   a.base_ym between '2022-01' and '2023-07' ),targetInfo AS ( SELECT a.*,b.* FROM ymInfo a JOIN empinfo b )	 SELECT a.emp_nm, a.sp_gb ,	listagg(a.base_ym,',') WITHIN group(ORDER BY base_ym) AS base_ym ,	listagg(a.danger_level,',') WITHIN group(ORDER BY base_ym) AS rate ,	listagg(a.danger_level_no,',') WITHIN group(ORDER BY base_ym) AS danger_level_no ,	sum(danger_level_no)  AS total FROM (	SELECT 	x.base_ym ,	x.emp_nm ,	x.sp_gb ,	x.route_nm ,	nvl(b.danger_level,'-')  AS danger_level ,	decode(b.danger_level,'매우위험',5,'위험',4,'주의',3,'보통',2,'양호',1,0)  AS danger_level_no FROM targetInfo x  LEFT OUTER join TBL_DANGER_DRIVING_INFO b on x.emp_nm = b.emp_nm AND x.base_ym = b.base_ym and b.company_no = '100' ) a where a.route_nm = decode ('20번','',a.route_nm, '20번') GROUP BY a.emp_nm ORDER BY 1
2023-07-12 00:25:29.464 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. WITH ymInfo AS ( SELECT DISTINCT base_ym FROM TBL_DANGER_DRIVING_INFO a WHERE a.company_no = '100' AND   a.base_ym between '2022-01' and '2023-07' ),empinfo AS ( SELECT  DISTINCT emp_nm ,route_nm , sp_gb FROM TBL_DANGER_DRIVING_INFO a WHERE a.company_no = '100' AND   a.base_ym between '2022-01' and '2023-07' ),targetInfo AS ( SELECT a.*,b.* FROM ymInfo a JOIN empinfo b )	 SELECT a.emp_nm, a.sp_gb ,	listagg(a.base_ym,',') WITHIN group(ORDER BY base_ym) AS base_ym ,	listagg(a.danger_level,',') WITHIN group(ORDER BY base_ym) AS rate ,	listagg(a.danger_level_no,',') WITHIN group(ORDER BY base_ym) AS danger_level_no ,	sum(danger_level_no)  AS total FROM (	SELECT 	x.base_ym ,	x.emp_nm ,	x.sp_gb ,	x.route_nm ,	nvl(b.danger_level,'-')  AS danger_level ,	decode(b.danger_level,'매우위험',5,'위험',4,'주의',3,'보통',2,'양호',1,0)  AS danger_level_no FROM targetInfo x  LEFT OUTER join TBL_DANGER_DRIVING_INFO b on x.emp_nm = b.emp_nm AND x.base_ym = b.base_ym and b.company_no = '100' ) a where a.route_nm = decode ('20번','',a.route_nm, '20번') GROUP BY a.emp_nm ORDER BY 1
 {executed in 21 msec}
2023-07-12 00:25:29.495 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. WITH ymInfo AS ( SELECT DISTINCT base_ym FROM TBL_DANGER_DRIVING_INFO a WHERE a.company_no = '100' AND   a.base_ym between '2022-01' and '2023-07' ),empinfo AS ( SELECT  DISTINCT emp_nm ,route_nm , sp_gb FROM TBL_DANGER_DRIVING_INFO a WHERE a.company_no = '100' AND   a.base_ym between '2022-01' and '2023-07' ),targetInfo AS ( SELECT a.*,b.* FROM ymInfo a JOIN empinfo b )	 SELECT a.emp_nm, a.sp_gb ,	listagg(a.base_ym,',') WITHIN group(ORDER BY base_ym) AS base_ym ,	listagg(a.danger_level,',') WITHIN group(ORDER BY base_ym) AS rate ,	listagg(a.danger_level_no,',') WITHIN group(ORDER BY base_ym) AS danger_level_no ,	sum(danger_level_no)  AS total FROM (	SELECT 	x.base_ym ,	x.emp_nm ,	x.sp_gb ,	x.route_nm ,	nvl(b.danger_level,'-')  AS danger_level ,	decode(b.danger_level,'매우위험',5,'위험',4,'주의',3,'보통',2,'양호',1,0)  AS danger_level_no FROM targetInfo x  LEFT OUTER join TBL_DANGER_DRIVING_INFO b on x.emp_nm = b.emp_nm AND x.base_ym = b.base_ym and b.company_no = '100' ) a where a.route_nm = decode ('20번','',a.route_nm, '20번') GROUP BY a.emp_nm ORDER BY 1
 {executed in 31 msec}
2023-07-12 00:25:29.615 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@c20683c1
2023-07-12 00:25:29.615 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - filterType={danagerAnal_Employee} 
2023-07-12 00:25:29.615 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT 	b.base_ym, b.emp_nm,b.danger_km100,b.DANGER_ACT_CNT, b.DANGER_ACT,b.DANGER_LEVEL,b.DRIVING_CNT,b.DRIVING_DISTANCE,b.DRIVING_TIME FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym between '2022-01' and '2023-07' AND   b.emp_nm = '권오현' ORDER BY b.base_ym desc
2023-07-12 00:25:29.617 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. SELECT 	b.base_ym, b.emp_nm,b.danger_km100,b.DANGER_ACT_CNT, b.DANGER_ACT,b.DANGER_LEVEL,b.DRIVING_CNT,b.DRIVING_DISTANCE,b.DRIVING_TIME FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym between '2022-01' and '2023-07' AND   b.emp_nm = '권오현' ORDER BY b.base_ym desc
 {executed in 2 msec}
2023-07-12 00:25:29.618 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. SELECT 	b.base_ym, b.emp_nm,b.danger_km100,b.DANGER_ACT_CNT, b.DANGER_ACT,b.DANGER_LEVEL,b.DRIVING_CNT,b.DRIVING_DISTANCE,b.DRIVING_TIME FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym between '2022-01' and '2023-07' AND   b.emp_nm = '권오현' ORDER BY b.base_ym desc
 {executed in 0 msec}
2023-07-12 00:26:44.100 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 00:26:44.102 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. SELECT ROUTE_NM  FROM TBL_ROUTEINFO a where 	a.company_no = '100' ORDER BY 1
 {executed in 0 msec}
2023-07-12 00:26:45.365 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 00:26:45.420 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE TBM_EMP_POINT_INFO a
	WHERE 	a.COMPANY_NO =  '100'
	AND 	a.from_date = '2023-01-01' 
	AND 	a.to_date = '2023-07-31'
 {executed in 49 msec}
2023-07-12 00:26:49.064 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. WITH codeInfo AS (
		SELECT 	b.emp_nm,a.* FROM TBM_COMMON_CODE_INFO a,TBL_EMPLOYEEINFO b
		WHERE 	a.COMPANY_NO = '100' 
		AND 	a.CODE_GB  = '인사평가배점'
		AND		a.USE_YN   = 'Y'
		AND 	a.COMPANY_NO = b.company_no
	), workingInfo AS (
		SELECT 	a.EMP_NM ,a.code_type1
			, 	count(a.WORK_DATE ) AS point
		FROM 	TBM_EMP_WORKING_LOG a JOIN TBM_COMMON_CODE_INFO b ON a.COMPANY_NO = b.COMPANY_NO AND a.code_type1 = b.code_nm AND b.code_gb = '인사평가배점' AND b.USE_YN = 'Y' AND b.code_id LIKE '2%'
		WHERE 	a.COMPANY_NO ='100'
		AND 	a.WORK_DATE BETWEEN '2023-01-01' AND '2023-07-31' 
		GROUP BY a.EMP_NM , a.code_type1
		UNION
		SELECT 	a.EMP_NM ,'사고'
			, 	count(a.acc_DATE ) 
		FROM 	TBM_ACCIDENT_INFO a 
		WHERE 	a.COMPANY_NO ='100'
		AND 	a.acc_DATE BETWEEN '2023-01-01' AND '2023-07-31' 
		GROUP BY a.EMP_NM
		UNION
		SELECT 	a.EMP_NM ,'사고금액'
			, 	trunc(sum(a.OUT_TOT_AMT) / 1000000,0)
		FROM 	TBM_ACCIDENT_INFO a 
		WHERE 	a.COMPANY_NO ='100'
		AND 	a.acc_DATE BETWEEN '2023-01-01' AND '2023-07-31' 
		GROUP BY a.EMP_NM
		UNION 
		select  a.EMP_NM ,'배차정시성'
			,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 10.0,1) AS wibanRate
		from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
		where   a.company_no = '100' 
		AND 	a.BASE_YMD BETWEEN  '2023-01-01' AND '2023-07-31' 
		AND 	a.emp_nm <> '-'
		GROUP BY  a.EMP_NM 
		UNION 
		SELECT	b.emp_nm,'위험운전지수'
			,	round(avg(decode(b.danger_level,'매우위험',5,'위험',4,'주의',3,'보통',2,'양호',1,0)) ,1) AS danger_level_no 
		FROM	TBL_DANGER_DRIVING_INFO b
		WHERE	b.company_no = '100'
		AND 	b.base_ym BETWEEN substring('2023-01-01',1,7) AND substring('2023-07-31',1,7) 
		GROUP BY b.EMP_NM 	
		UNION 
		SELECT 	m.emp_nm,'근무협조도'
			,	round(PERCENT_RANK() OVER (ORDER BY m.work_Avg) * 10,1) AS workRate
		FROM (
			SELECT k.emp_nm, avg(k.work_cnt) AS work_avg
			FROM (
				SELECT  a.EMP_NM 
						,substring(a.work_date,1,7) AS work_ym
						,count(a.work_Date) AS work_cnt
				FROM TBB_DRIVING_RECORD_DAY a
				WHERE a.COMPANY_NO ='100'
				AND 	a.work_date BETWEEN  '2023-01-01' AND '2023-07-31' 
				GROUP BY a.EMP_NM ,substring(a.work_date,1,7)
			)k
			GROUP BY k.emp_nm
		) m
	) 
	INSERT INTO TBM_EMP_POINT_INFO
	SELECT 	a.COMPANY_NO 
		,	'2023-01-01'
		,	'2023-07-31' 
		,	a.emp_nm
		,	a.code_gb
		,	a.CODE_ID 
		,	a.code_nm
		, 	a.MEMO 
		,	a.CODE_VALUE 
		,	a.code_max
		,	a.code_min
		,	nvl(b.point,0) AS point
		, 	a.code_value + (nvl(b.point,0) * a.code_min ) AS tot_point
		,	'batch'
		,	to_char(SYSDATE,'yyyy-MM-dd hh:mi:ss')
	FROM  codeInfo a LEFT OUTER JOIN workingInfo b ON  a.emp_nm = b.emp_nm and a.code_nm = b.CODE_TYPE1
 {executed in 3627 msec}
2023-07-12 00:26:53.118 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@e38ec862
2023-07-12 00:26:53.125 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 2 msec}
2023-07-12 00:26:53.318 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT k.*
	FROM (
		SELECT 	ROW_NUMBER() over(ORDER BY sum(a.tot_point) desc) AS seq
			,	a.emp_nm
			,	b.sp_gb
			,	b.route_nm
			,	listagg(a.code_nm,'/') WITHIN GROUP (ORDER BY a.code_id)   AS codeList
			,	listagg(a.tot_point,'/') WITHIN GROUP (ORDER BY a.code_id) AS pointList
			,	listagg(a.point,'/') WITHIN GROUP (ORDER BY a.code_id) AS cntList
			,	listagg(a.code_max,'/') WITHIN GROUP (ORDER BY a.code_id) AS maxList
			,	sum(a.tot_point) AS tot_point
			,	nvl(to_char(datediff(DAY,b.enter_date,to_char(SYSDATE,'yyyy-mm-dd'))),0) AS totWorkingDay
			,	substring(b.birth_ymd,1,2) as birth_year
		FROM  TBM_EMP_POINT_INFO a join TBL_DRIVERINFO b on a.company_no = b.company_no AND a.emp_nm = b.emp_nm
		WHERE	a.company_no = '100'
		AND	 	a.from_date = '2023-01-01' 
		AND 	a.to_date = '2023-07-31' 
		AND 	b.route_nm = decode('','',b.route_nm,'') 
		AND 	b.sp_gb = decode('ALL','ALL',b.sp_gb,'ALL')
		GROUP BY a.emp_nm
		ORDER BY 1
	) K
	WHERE 	k.emp_nm = decode ('','',k.emp_nm,'')
	AND		round(k.totWorkingDay/365,0) >= 0
 {executed in 190 msec}
2023-07-12 03:29:06.225 INFO  [Catalina-utility-2] [c.pjy.dashboard.listener.SessionListener] - updateUserCloseTime p00139 
2023-07-12 03:29:06.226 INFO  [Catalina-utility-2] [c.pjy.dashboard.listener.SessionListener] - currentSessionUserList ->  false
2023-07-12 03:29:06.226 INFO  [Catalina-utility-2] [c.pjy.dashboard.listener.SessionListener] - updateUserCloseTime p00139 
2023-07-12 03:29:06.226 INFO  [Catalina-utility-2] [c.pjy.dashboard.listener.SessionListener] - currentSessionUserList ->  false
2023-07-12 07:53:09.921 WARN  [H2 housekeeper] [com.zaxxer.hikari.pool.HikariPool] - H2 - Thread starvation or clock leap detected (housekeeper delta=7h24m29s793ms143µs700ns).
2023-07-12 07:53:44.888 WARN  [http-nio-10010-exec-7] [o.a.catalina.util.SessionIdGeneratorBase] - Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [147] milliseconds.
2023-07-12 07:53:44.890 INFO  [http-nio-10010-exec-7] [c.p.d.interceptor.LoggerInterceptor] - ============================== START ==============================
2023-07-12 07:53:44.890 INFO  [http-nio-10010-exec-7] [c.p.d.interceptor.LoggerInterceptor] -  Class       	:  class org.springframework.web.method.HandlerMethod
2023-07-12 07:53:44.890 INFO  [http-nio-10010-exec-7] [c.p.d.interceptor.LoggerInterceptor] -  Request URI 	:  /error
2023-07-12 07:53:44.890 INFO  [http-nio-10010-exec-7] [c.p.d.interceptor.LoggerInterceptor] -  Request addr	:  0:0:0:0:0:0:0:1
2023-07-12 07:53:44.890 INFO  [http-nio-10010-exec-7] [c.p.d.interceptor.LoggerInterceptor] -  Servlet URI 	:  /error
2023-07-12 07:53:49.054 INFO  [http-nio-10010-exec-8] [c.p.d.interceptor.LoggerInterceptor] - ============================== START ==============================
2023-07-12 07:53:49.055 INFO  [http-nio-10010-exec-8] [c.p.d.interceptor.LoggerInterceptor] -  Class       	:  class org.springframework.web.method.HandlerMethod
2023-07-12 07:53:49.055 INFO  [http-nio-10010-exec-8] [c.p.d.interceptor.LoggerInterceptor] -  Request URI 	:  /
2023-07-12 07:53:49.055 INFO  [http-nio-10010-exec-8] [c.p.d.interceptor.LoggerInterceptor] -  Request addr	:  0:0:0:0:0:0:0:1
2023-07-12 07:53:49.055 INFO  [http-nio-10010-exec-8] [c.p.d.interceptor.LoggerInterceptor] -  Servlet URI 	:  /
2023-07-12 07:53:49.100 INFO  [http-nio-10010-exec-10] [c.p.d.interceptor.LoggerInterceptor] - ============================== START ==============================
2023-07-12 07:53:49.100 INFO  [http-nio-10010-exec-10] [c.p.d.interceptor.LoggerInterceptor] -  Class       	:  class org.springframework.web.method.HandlerMethod
2023-07-12 07:53:49.101 INFO  [http-nio-10010-exec-10] [c.p.d.interceptor.LoggerInterceptor] -  Request URI 	:  /error
2023-07-12 07:53:49.101 INFO  [http-nio-10010-exec-10] [c.p.d.interceptor.LoggerInterceptor] -  Request addr	:  0:0:0:0:0:0:0:1
2023-07-12 07:53:49.101 INFO  [http-nio-10010-exec-10] [c.p.d.interceptor.LoggerInterceptor] -  Servlet URI 	:  /error
2023-07-12 12:02:18.164 WARN  [H2 housekeeper] [com.zaxxer.hikari.pool.HikariPool] - H2 - Thread starvation or clock leap detected (housekeeper delta=1h37m5s990ms542µs300ns).
2023-07-12 13:17:16.362 INFO  [http-nio-10010-exec-5] [c.p.d.interceptor.LoggerInterceptor] - ============================== START ==============================
2023-07-12 13:17:16.362 INFO  [http-nio-10010-exec-5] [c.p.d.interceptor.LoggerInterceptor] -  Class       	:  class org.springframework.web.method.HandlerMethod
2023-07-12 13:17:16.362 INFO  [http-nio-10010-exec-5] [c.p.d.interceptor.LoggerInterceptor] -  Request URI 	:  /error
2023-07-12 13:17:16.362 INFO  [http-nio-10010-exec-5] [c.p.d.interceptor.LoggerInterceptor] -  Request addr	:  0:0:0:0:0:0:0:1
2023-07-12 13:17:16.363 INFO  [http-nio-10010-exec-5] [c.p.d.interceptor.LoggerInterceptor] -  Servlet URI 	:  /error
2023-07-12 13:23:57.682 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
131. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 2 msec}
2023-07-12 13:23:57.687 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
131. select * from MEMBER where userId = 'p00139'
 {executed in 1 msec}
2023-07-12 13:23:57.720 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.MemberServiceImpl] - ROLE_ADMIN
2023-07-12 13:23:57.806 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.MemberServiceImpl] - pass:$2a$10$MNrQAPw.4k9j2y08eTmYEeI7oKPuaWbA97HHog.8PYep5HsRwhbae,$2a$10$0w/Sx2b9I.vLsEbQGmxjVOs.xMatMk0UklDvpBaf7Odlf7SXbe0MW
2023-07-12 13:23:57.896 INFO  [http-nio-10010-exec-9] [c.p.d.configuration.SecurityConfig] - authentication:: p00139
2023-07-12 13:29:17.147 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Starting PjyApplication on DESKTOP-QJPD93S with PID 18908 (D:\BUS\dashboard\dashboard\target\classes started by admin in D:\BUS\dashboard\dashboard)
2023-07-12 13:29:17.155 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - The following profiles are active: oauth
2023-07-12 13:29:17.208 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-07-12 13:29:17.208 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-07-12 13:29:18.426 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-07-12 13:29:18.427 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-07-12 13:29:18.581 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 144ms. Found 3 JPA repository interfaces.
2023-07-12 13:29:18.940 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-07-12 13:29:18.940 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2023-07-12 13:29:18.981 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.FileRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-07-12 13:29:18.982 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.MemberRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-07-12 13:29:18.984 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.RememberMeRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-07-12 13:29:18.984 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 44ms. Found 0 JDBC repository interfaces.
2023-07-12 13:29:19.417 INFO  [restartedMain] [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] - Post-processing PropertySource instances
2023-07-12 13:29:19.484 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2023-07-12 13:29:19.484 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource commandLineArgs [org.springframework.core.env.SimpleCommandLinePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-07-12 13:29:19.484 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-07-12 13:29:19.484 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-07-12 13:29:19.484 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2023-07-12 13:29:19.485 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
2023-07-12 13:29:19.485 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2023-07-12 13:29:19.485 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application-oauth.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-07-12 13:29:19.485 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-07-12 13:29:19.485 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2023-07-12 13:29:19.485 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [pjy.properties] [org.springframework.core.env.CompositePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-07-12 13:29:19.485 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [common.properties] [org.springframework.core.io.support.ResourcePropertySource] to EncryptableMapPropertySourceWrapper
2023-07-12 13:29:19.545 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'asyncConfiguration' of type [com.pjy.dashboard.configuration.AsyncConfiguration$$EnhancerBySpringCGLIB$$8da59de4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 13:29:19.593 INFO  [restartedMain] [c.u.j.filter.DefaultLazyPropertyFilter] - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2023-07-12 13:29:19.676 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$779c0211] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 13:29:19.761 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 13:29:19.763 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@64605057' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 13:29:19.768 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$9c70a4c3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 13:29:19.778 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration$$EnhancerBySpringCGLIB$$c1c5bcd9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 13:29:19.781 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 13:29:19.782 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 13:29:19.803 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$deee39d7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 13:29:19.831 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$5e6e8709] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 13:29:19.965 INFO  [restartedMain] [c.u.j.r.DefaultLazyPropertyResolver] - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2023-07-12 13:29:19.970 INFO  [restartedMain] [c.u.j.d.DefaultLazyPropertyDetector] - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2023-07-12 13:29:20.400 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 10010 (http)
2023-07-12 13:29:20.416 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Initializing ProtocolHandler ["http-nio-10010"]
2023-07-12 13:29:20.428 INFO  [restartedMain] [org.apache.catalina.core.StandardService] - Starting service [Tomcat]
2023-07-12 13:29:20.428 INFO  [restartedMain] [org.apache.catalina.core.StandardEngine] - Starting Servlet engine: [Apache Tomcat/9.0.29]
2023-07-12 13:29:20.806 INFO  [restartedMain] [org.apache.jasper.servlet.TldScanner] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2023-07-12 13:29:20.817 INFO  [restartedMain] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring embedded WebApplicationContext
2023-07-12 13:29:20.817 INFO  [restartedMain] [o.s.web.context.ContextLoader] - Root WebApplicationContext: initialization completed in 3609 ms
2023-07-12 13:29:21.674 INFO  [restartedMain] [c.u.j.encryptor.DefaultLazyEncryptor] - Found Custom Encryptor Bean org.jasypt.encryption.pbe.PooledPBEStringEncryptor@6a6000b4 with name: jasyptStringEncryptor
2023-07-12 13:29:21.725 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Starting...
2023-07-12 13:29:21.809 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.executeSql(PoolBase.java:567)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 6 msec}
2023-07-12 13:29:21.814 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Start completed.
2023-07-12 13:29:22.565 INFO  [restartedMain] [com.pjy.dashboard.filter.TestFilter] - init Pjy Filter
2023-07-12 13:29:22.942 INFO  [restartedMain] [o.hibernate.jpa.internal.util.LogHelper] - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2023-07-12 13:29:23.013 INFO  [restartedMain] [org.hibernate.Version] - HHH000412: Hibernate Core {5.3.14.Final}
2023-07-12 13:29:23.015 INFO  [restartedMain] [org.hibernate.cfg.Environment] - HHH000206: hibernate.properties not found
2023-07-12 13:29:23.174 INFO  [restartedMain] [org.hibernate.annotations.common.Version] - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2023-07-12 13:29:23.411 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-12 13:29:23.429 INFO  [restartedMain] [org.hibernate.dialect.Dialect] - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2023-07-12 13:29:24.155 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 13:29:24.158 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select SEQUENCE_CATALOG, SEQUENCE_SCHEMA, SEQUENCE_NAME, INCREMENT from information_schema.sequences
 {executed in 1 msec}
2023-07-12 13:29:24.215 INFO  [restartedMain] [o.s.o.j.LocalContainerEntityManagerFactoryBean] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-07-12 13:29:24.473 INFO  [restartedMain] [o.h.h.i.QueryTranslatorFactoryInitiator] - HHH000397: Using ASTQueryTranslatorFactory
2023-07-12 13:29:25.581 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService
2023-07-12 13:29:25.592 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'asyncThreadPool'
2023-07-12 13:29:25.775 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/h2-console/**'], []
2023-07-12 13:29:25.775 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/css/**'], []
2023-07-12 13:29:25.775 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/js/**'], []
2023-07-12 13:29:25.775 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/monitor/**'], []
2023-07-12 13:29:25.775 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/img/**'], []
2023-07-12 13:29:25.776 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/lib/**'], []
2023-07-12 13:29:25.776 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/main.css'], []
2023-07-12 13:29:25.776 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/common.js'], []
2023-07-12 13:29:25.776 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/resources/**'], []
2023-07-12 13:29:25.936 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@59367679, org.springframework.security.web.context.SecurityContextPersistenceFilter@12a5f0e2, org.springframework.security.web.header.HeaderWriterFilter@6f137892, org.springframework.web.filter.CorsFilter@2f4f5b18, org.springframework.security.web.authentication.logout.LogoutFilter@373b9062, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@29147f45, org.springframework.security.web.session.ConcurrentSessionFilter@a66eb13, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@7fcab8b0, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@60617bc7, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@11e22a11, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@586b636f, org.springframework.security.web.session.SessionManagementFilter@73587956, org.springframework.security.web.access.ExceptionTranslationFilter@3471e7cb, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@75a4d536]
2023-07-12 13:29:25.958 INFO  [restartedMain] [o.s.aop.framework.CglibAopProxy] - Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(javax.servlet.FilterConfig) throws javax.servlet.ServletException] because it is marked as final: Consider using interface-based JDK proxies instead!
2023-07-12 13:29:26.316 WARN  [restartedMain] [o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-07-12 13:29:26.390 INFO  [restartedMain] [o.s.b.a.w.s.WelcomePageHandlerMapping] - Adding welcome page: ServletContext resource [/index.html]
2023-07-12 13:29:26.815 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 13:29:27.626 INFO  [restartedMain] [o.s.b.d.a.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2023-07-12 13:29:27.654 INFO  [restartedMain] [o.s.b.a.e.web.EndpointLinksResolver] - Exposing 16 endpoint(s) beneath base path '/actuator'
2023-07-12 13:29:27.800 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskScheduler] - Initializing ExecutorService
2023-07-12 13:29:27.808 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Starting ProtocolHandler ["http-nio-10010"]
2023-07-12 13:29:27.862 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 10010 (http) with context path ''
2023-07-12 13:29:27.867 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Started PjyApplication in 11.181 seconds (JVM running for 12.56)
2023-07-12 13:29:27.867 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-07-12 13:29:27.867 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - Application started
2023-07-12 13:29:27.867 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-07-12 13:29:29.030 INFO  [RMI TCP Connection(9)-127.0.0.1] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-07-12 13:29:29.030 INFO  [RMI TCP Connection(9)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Initializing Servlet 'dispatcherServlet'
2023-07-12 13:29:29.050 INFO  [RMI TCP Connection(9)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Completed initialization in 19 ms
2023-07-12 13:32:14.166 INFO  [http-nio-10010-exec-1] [c.p.d.interceptor.LoggerInterceptor] - ============================== START ==============================
2023-07-12 13:32:14.167 INFO  [http-nio-10010-exec-1] [c.p.d.interceptor.LoggerInterceptor] -  Class       	:  class org.springframework.web.method.HandlerMethod
2023-07-12 13:32:14.167 INFO  [http-nio-10010-exec-1] [c.p.d.interceptor.LoggerInterceptor] -  Request URI 	:  /
2023-07-12 13:32:14.167 INFO  [http-nio-10010-exec-1] [c.p.d.interceptor.LoggerInterceptor] -  Request addr	:  0:0:0:0:0:0:0:1
2023-07-12 13:32:14.167 INFO  [http-nio-10010-exec-1] [c.p.d.interceptor.LoggerInterceptor] -  Servlet URI 	:  /
2023-07-12 13:32:14.902 ERROR [http-nio-10010-exec-1] [o.a.c.c.C.[Tomcat].[localhost].[/].[jsp]] - Servlet.service() for servlet [jsp] threw exception
java.lang.IllegalStateException: Cannot create a session after the response has been committed
	at org.apache.catalina.connector.Request.doGetSession(Request.java:2993)
	at org.apache.catalina.connector.Request.getSession(Request.java:2432)
	at org.apache.catalina.connector.RequestFacade.getSession(RequestFacade.java:908)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:244)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:582)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:527)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at org.apache.jasper.runtime.PageContextImpl.initialize(PageContextImpl.java:133)
	at org.apache.jasper.runtime.JspFactoryImpl.internalGetPageContext(JspFactoryImpl.java:109)
	at org.apache.jasper.runtime.JspFactoryImpl.getPageContext(JspFactoryImpl.java:60)
	at org.apache.jsp.WEB_002dINF.jsp.home_jsp._jspService(home_jsp.java:121)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:477)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:385)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:329)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:580)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:516)
	at org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequestDispatcher.include(HeaderWriterFilter.java:149)
	at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:163)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:317)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1372)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:97)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$d44854f0.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:114)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:104)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-07-12 13:32:14.910 ERROR [http-nio-10010-exec-1] [o.a.c.c.C.[.[.[/].[dispatcherServlet]] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [javax.servlet.ServletException: java.lang.IllegalStateException: Cannot create a session after the response has been committed] with root cause
java.lang.IllegalStateException: Cannot create a session after the response has been committed
	at org.apache.catalina.connector.Request.doGetSession(Request.java:2993)
	at org.apache.catalina.connector.Request.getSession(Request.java:2432)
	at org.apache.catalina.connector.RequestFacade.getSession(RequestFacade.java:908)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:244)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:582)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:527)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at org.apache.jasper.runtime.PageContextImpl.initialize(PageContextImpl.java:133)
	at org.apache.jasper.runtime.JspFactoryImpl.internalGetPageContext(JspFactoryImpl.java:109)
	at org.apache.jasper.runtime.JspFactoryImpl.getPageContext(JspFactoryImpl.java:60)
	at org.apache.jsp.WEB_002dINF.jsp.home_jsp._jspService(home_jsp.java:121)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:477)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:385)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:329)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:580)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:516)
	at org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequestDispatcher.include(HeaderWriterFilter.java:149)
	at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:163)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:317)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1372)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:97)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$d44854f0.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:114)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:104)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-07-12 13:32:14.918 INFO  [http-nio-10010-exec-1] [c.p.d.interceptor.LoggerInterceptor] - ============================== START ==============================
2023-07-12 13:32:14.918 INFO  [http-nio-10010-exec-1] [c.p.d.interceptor.LoggerInterceptor] -  Class       	:  class org.springframework.web.method.HandlerMethod
2023-07-12 13:32:14.918 INFO  [http-nio-10010-exec-1] [c.p.d.interceptor.LoggerInterceptor] -  Request URI 	:  /error
2023-07-12 13:32:14.918 INFO  [http-nio-10010-exec-1] [c.p.d.interceptor.LoggerInterceptor] -  Request addr	:  0:0:0:0:0:0:0:1
2023-07-12 13:32:14.918 INFO  [http-nio-10010-exec-1] [c.p.d.interceptor.LoggerInterceptor] -  Servlet URI 	:  /error
2023-07-12 13:32:15.054 ERROR [http-nio-10010-exec-1] [o.a.c.c.C.[Tomcat].[localhost].[/].[jsp]] - Servlet.service() for servlet [jsp] threw exception
java.lang.IllegalStateException: Cannot create a session after the response has been committed
	at org.apache.catalina.connector.Request.doGetSession(Request.java:2993)
	at org.apache.catalina.connector.Request.getSession(Request.java:2432)
	at org.apache.catalina.connector.RequestFacade.getSession(RequestFacade.java:908)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:244)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:582)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:244)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:582)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:527)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at org.apache.jasper.runtime.PageContextImpl.initialize(PageContextImpl.java:133)
	at org.apache.jasper.runtime.JspFactoryImpl.internalGetPageContext(JspFactoryImpl.java:109)
	at org.apache.jasper.runtime.JspFactoryImpl.getPageContext(JspFactoryImpl.java:60)
	at org.apache.jsp.WEB_002dINF.jsp.error_jsp._jspService(error_jsp.java:107)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:477)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:385)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:329)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:580)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:516)
	at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:163)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:317)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1372)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$d44854f0.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-07-12 13:32:15.055 ERROR [http-nio-10010-exec-1] [o.a.c.c.C.[.[.[/].[dispatcherServlet]] - Servlet.service() for servlet [dispatcherServlet] threw exception
java.lang.IllegalStateException: Cannot create a session after the response has been committed
	at org.apache.catalina.connector.Request.doGetSession(Request.java:2993)
	at org.apache.catalina.connector.Request.getSession(Request.java:2432)
	at org.apache.catalina.connector.RequestFacade.getSession(RequestFacade.java:908)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:244)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:582)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:244)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:582)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:527)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at org.apache.jasper.runtime.PageContextImpl.initialize(PageContextImpl.java:133)
	at org.apache.jasper.runtime.JspFactoryImpl.internalGetPageContext(JspFactoryImpl.java:109)
	at org.apache.jasper.runtime.JspFactoryImpl.getPageContext(JspFactoryImpl.java:60)
	at org.apache.jsp.WEB_002dINF.jsp.error_jsp._jspService(error_jsp.java:107)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:477)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:385)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:329)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:580)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:516)
	at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:163)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:317)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1372)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$d44854f0.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-07-12 13:32:15.056 ERROR [http-nio-10010-exec-1] [o.a.c.c.C.[Tomcat].[localhost]] - Exception Processing ErrorPage[errorCode=0, location=/error]
org.apache.jasper.JasperException: javax.servlet.ServletException: java.lang.IllegalStateException: Cannot create a session after the response has been committed
	at org.apache.jasper.servlet.JspServletWrapper.handleJspException(JspServletWrapper.java:639)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:500)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:385)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:329)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:580)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:516)
	at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:163)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:317)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1372)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$d44854f0.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: javax.servlet.ServletException: java.lang.IllegalStateException: Cannot create a session after the response has been committed
	at org.apache.jsp.WEB_002dINF.jsp.error_jsp._jspService(error_jsp.java:144)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:477)
	... 98 common frames omitted
Caused by: java.lang.IllegalStateException: Cannot create a session after the response has been committed
	at org.apache.catalina.connector.Request.doGetSession(Request.java:2993)
	at org.apache.catalina.connector.Request.getSession(Request.java:2432)
	at org.apache.catalina.connector.RequestFacade.getSession(RequestFacade.java:908)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:244)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:582)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:244)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:582)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:527)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at org.apache.jasper.runtime.PageContextImpl.initialize(PageContextImpl.java:133)
	at org.apache.jasper.runtime.JspFactoryImpl.internalGetPageContext(JspFactoryImpl.java:109)
	at org.apache.jasper.runtime.JspFactoryImpl.getPageContext(JspFactoryImpl.java:60)
	at org.apache.jsp.WEB_002dINF.jsp.error_jsp._jspService(error_jsp.java:107)
	... 101 common frames omitted
2023-07-12 13:32:15.368 WARN  [http-nio-10010-exec-2] [o.a.catalina.util.SessionIdGeneratorBase] - Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [133] milliseconds.
2023-07-12 13:32:15.445 INFO  [http-nio-10010-exec-3] [c.p.d.interceptor.LoggerInterceptor] - ============================== START ==============================
2023-07-12 13:32:15.445 INFO  [http-nio-10010-exec-3] [c.p.d.interceptor.LoggerInterceptor] -  Class       	:  class org.springframework.web.method.HandlerMethod
2023-07-12 13:32:15.445 INFO  [http-nio-10010-exec-3] [c.p.d.interceptor.LoggerInterceptor] -  Request URI 	:  /error
2023-07-12 13:32:15.445 INFO  [http-nio-10010-exec-3] [c.p.d.interceptor.LoggerInterceptor] -  Request addr	:  0:0:0:0:0:0:0:1
2023-07-12 13:32:15.445 INFO  [http-nio-10010-exec-3] [c.p.d.interceptor.LoggerInterceptor] -  Servlet URI 	:  /error
2023-07-12 13:32:16.895 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-12 13:32:16.902 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select * from MEMBER where userId = 'p00139'
 {executed in 1 msec}
2023-07-12 13:32:16.923 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.MemberServiceImpl] - ROLE_ADMIN
2023-07-12 13:32:17.012 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.MemberServiceImpl] - pass:$2a$10$MNrQAPw.4k9j2y08eTmYEeI7oKPuaWbA97HHog.8PYep5HsRwhbae,$2a$10$kGz2iousejkA1HfbOWgd7uuqhKsCHai8Aa4v4m/V.v0BagMdp5hni
2023-07-12 13:32:17.101 INFO  [http-nio-10010-exec-2] [c.p.d.configuration.SecurityConfig] - authentication:: p00139
2023-07-12 13:32:19.005 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f335c8f
2023-07-12 13:32:19.005 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_PUBLIC_COMPLAINT_INFO} 
2023-07-12 13:32:19.061 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
2023-07-12 13:32:19.074 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-12 13:32:19.076 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 1 msec}
2023-07-12 13:32:19.083 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 1 msec}
2023-07-12 13:33:21.123 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f335c8f
2023-07-12 13:33:21.123 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_PUBLIC_COMPLAINT_INFO} 
2023-07-12 13:33:21.123 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
2023-07-12 13:33:21.124 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 13:33:21.126 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 1 msec}
2023-07-12 13:33:21.128 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 1 msec}
2023-07-12 13:40:23.466 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f335c8f
2023-07-12 13:40:23.466 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_PUBLIC_COMPLAINT_INFO} 
2023-07-12 13:40:23.467 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
2023-07-12 13:40:23.468 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-12 13:40:23.469 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 1 msec}
2023-07-12 13:40:23.470 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 1 msec}
2023-07-12 13:41:19.148 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f335c8f
2023-07-12 13:41:19.148 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_PUBLIC_COMPLAINT_INFO} 
2023-07-12 13:41:19.148 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
2023-07-12 13:41:19.149 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 13:41:19.150 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 1 msec}
2023-07-12 13:41:19.152 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 0 msec}
2023-07-12 13:43:57.483 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f335c8f
2023-07-12 13:43:57.484 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_PUBLIC_COMPLAINT_INFO} 
2023-07-12 13:43:57.484 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
2023-07-12 13:43:57.485 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 13:43:57.487 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 1 msec}
2023-07-12 13:43:57.489 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 1 msec}
2023-07-12 13:45:17.080 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f335c8f
2023-07-12 13:45:17.081 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_PUBLIC_COMPLAINT_INFO} 
2023-07-12 13:45:17.081 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
2023-07-12 13:45:17.082 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 13:45:17.084 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 1 msec}
2023-07-12 13:45:17.086 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 1 msec}
2023-07-12 13:46:58.818 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f335c8f
2023-07-12 13:46:58.818 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_PUBLIC_COMPLAINT_INFO} 
2023-07-12 13:46:58.818 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
2023-07-12 13:46:58.819 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 13:46:58.820 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 1 msec}
2023-07-12 13:46:58.822 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 0 msec}
2023-07-12 14:12:00.009 INFO  [pjy-task-pool-1] [c.pjy.dashboard.schedule.DailyScheduler] - DailyScheduler Sch_dailyBackup start...
2023-07-12 14:12:00.015 DEBUG [pjy-task-pool-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
21. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 14:12:00.601 DEBUG [pjy-task-pool-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.execute(ProxyStatement.java:95)
21. BACKUP TO 'e:/backup_20230712.zip'
 {executed in 586 msec}
2023-07-12 14:12:00.601 INFO  [pjy-task-pool-1] [c.pjy.dashboard.schedule.DailyScheduler] - DailyScheduler Sch_dailyBackup end...
2023-07-12 14:14:16.672 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f335c8f
2023-07-12 14:14:16.672 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_PUBLIC_COMPLAINT_INFO} 
2023-07-12 14:14:16.673 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
2023-07-12 14:14:16.674 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
21. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-12 14:14:16.676 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
21. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 1 msec}
2023-07-12 14:14:16.678 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
21. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 0 msec}
2023-07-12 14:15:08.149 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f335c8f
2023-07-12 14:15:08.149 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_PUBLIC_COMPLAINT_INFO} 
2023-07-12 14:15:08.149 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
2023-07-12 14:15:08.151 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
21. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 14:15:08.152 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
21. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 1 msec}
2023-07-12 14:15:08.153 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
21. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 1 msec}
2023-07-12 14:15:43.746 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f335c8f
2023-07-12 14:15:43.746 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_PUBLIC_COMPLAINT_INFO} 
2023-07-12 14:15:43.746 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
2023-07-12 14:15:43.747 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
21. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 14:15:43.749 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
21. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 1 msec}
2023-07-12 14:15:43.750 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
21. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 1 msec}
2023-07-12 14:16:16.480 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f335c8f
2023-07-12 14:16:16.480 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_PUBLIC_COMPLAINT_INFO} 
2023-07-12 14:16:16.480 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
2023-07-12 14:16:16.481 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
21. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 14:16:16.483 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
21. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 1 msec}
2023-07-12 14:16:16.485 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
21. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 1 msec}
2023-07-12 14:20:43.576 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f335c8f
2023-07-12 14:20:43.577 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_PUBLIC_COMPLAINT_INFO} 
2023-07-12 14:20:43.577 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
2023-07-12 14:20:43.578 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
21. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 14:20:43.579 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
21. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 1 msec}
2023-07-12 14:20:43.580 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
21. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 1 msec}
2023-07-12 14:22:36.769 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f335c8f
2023-07-12 14:22:36.769 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_PUBLIC_COMPLAINT_INFO} 
2023-07-12 14:22:36.769 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
2023-07-12 14:22:36.771 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
21. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 14:22:36.772 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
21. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 1 msec}
2023-07-12 14:22:36.774 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
21. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 0 msec}
2023-07-12 14:23:28.390 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f335c8f
2023-07-12 14:23:28.390 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_PUBLIC_COMPLAINT_INFO} 
2023-07-12 14:23:28.391 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
2023-07-12 14:23:28.392 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
21. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-12 14:23:28.393 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
21. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 0 msec}
2023-07-12 14:23:28.394 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
21. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 1 msec}
2023-07-12 14:26:03.601 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f335c8f
2023-07-12 14:26:03.602 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_PUBLIC_COMPLAINT_INFO} 
2023-07-12 14:26:03.602 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
2023-07-12 14:26:03.602 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
21. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-12 14:26:03.603 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
21. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 0 msec}
2023-07-12 14:26:03.605 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
21. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 0 msec}
2023-07-12 14:30:05.742 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f335c8f
2023-07-12 14:30:05.742 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_PUBLIC_COMPLAINT_INFO} 
2023-07-12 14:30:05.742 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
2023-07-12 14:30:05.743 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 14:30:05.745 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
31. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 0 msec}
2023-07-12 14:30:05.747 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
31. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 0 msec}
2023-07-12 14:33:39.744 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f335c8f
2023-07-12 14:33:39.744 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_PUBLIC_COMPLAINT_INFO} 
2023-07-12 14:33:39.745 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
2023-07-12 14:33:39.746 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-12 14:33:39.748 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
31. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 1 msec}
2023-07-12 14:33:39.749 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
31. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 0 msec}
2023-07-12 14:33:44.428 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 14:33:44.435 INFO  [http-nio-10010-exec-10] [com.pjy.dashboard.dao.DynamicSqlDao] - merge sql : MERGE INTO TBL_PUBLIC_COMPLAINT_INFO KEY (company_no,comp_date,seq) select  '100' , :comp_date , :seq , :real_comp_date , :emp_nm , :route_nm , :car_regno , :comp_type , :place , :memo , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
2023-07-12 14:33:44.443 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
32. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 14:33:44.452 ERROR [http-nio-10010-exec-10] [c.p.d.core.error.GlobalExceptionHandler] - handleEntityNotFoundException
org.springframework.dao.InvalidDataAccessApiUsageException: No value supplied for the SQL parameter 'comp_date': No value registered for key 'comp_date'
	at org.springframework.jdbc.core.namedparam.NamedParameterUtils.buildValueArray(NamedParameterUtils.java:355)
	at org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate$2.setValues(NamedParameterJdbcTemplate.java:371)
	at org.springframework.jdbc.core.JdbcTemplate.lambda$batchUpdate$2(JdbcTemplate.java:944)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:617)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:647)
	at org.springframework.jdbc.core.JdbcTemplate.batchUpdate(JdbcTemplate.java:936)
	at org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.batchUpdate(NamedParameterJdbcTemplate.java:366)
	at com.pjy.dashboard.dao.DynamicSqlDao.batchInsert(DynamicSqlDao.java:743)
	at com.pjy.dashboard.dao.DynamicSqlDao$$FastClassBySpringCGLIB$$8af24191.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at com.pjy.dashboard.dao.DynamicSqlH2Dao$$EnhancerBySpringCGLIB$$9566e8e9.batchInsert(<generated>)
	at com.pjy.dashboard.service.DynamicSqlService.mergeInfo(DynamicSqlService.java:759)
	at com.pjy.dashboard.controller.TestController.BUS_mergeInfo(TestController.java:499)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:893)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:798)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:97)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at jdk.internal.reflect.GeneratedMethodAccessor151.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$d44854f0.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:114)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:104)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-07-12 14:33:44.462 WARN  [http-nio-10010-exec-10] [o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver] - Resolved [org.springframework.dao.InvalidDataAccessApiUsageException: No value supplied for the SQL parameter 'comp_date': No value registered for key 'comp_date']
2023-07-12 14:39:39.633 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f335c8f
2023-07-12 14:39:39.633 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_PUBLIC_COMPLAINT_INFO} 
2023-07-12 14:39:39.633 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
2023-07-12 14:39:39.635 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
32. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 14:39:39.637 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
32. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 2 msec}
2023-07-12 14:39:39.640 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
32. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 1 msec}
2023-07-12 14:40:21.857 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
32. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-12 14:40:21.864 INFO  [http-nio-10010-exec-3] [com.pjy.dashboard.dao.DynamicSqlDao] - merge sql : MERGE INTO TBL_PUBLIC_COMPLAINT_INFO KEY (company_no,comp_date,seq) select  '100' , :comp_date , :seq , :real_comp_date , :emp_nm , :route_nm , :car_regno , :comp_type , :place , :memo , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
2023-07-12 14:40:21.865 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
33. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 14:40:21.866 ERROR [http-nio-10010-exec-3] [c.p.d.core.error.GlobalExceptionHandler] - handleEntityNotFoundException
org.springframework.dao.InvalidDataAccessApiUsageException: No value supplied for the SQL parameter 'comp_date': No value registered for key 'comp_date'
	at org.springframework.jdbc.core.namedparam.NamedParameterUtils.buildValueArray(NamedParameterUtils.java:355)
	at org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate$2.setValues(NamedParameterJdbcTemplate.java:371)
	at org.springframework.jdbc.core.JdbcTemplate.lambda$batchUpdate$2(JdbcTemplate.java:944)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:617)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:647)
	at org.springframework.jdbc.core.JdbcTemplate.batchUpdate(JdbcTemplate.java:936)
	at org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.batchUpdate(NamedParameterJdbcTemplate.java:366)
	at com.pjy.dashboard.dao.DynamicSqlDao.batchInsert(DynamicSqlDao.java:743)
	at com.pjy.dashboard.dao.DynamicSqlDao$$FastClassBySpringCGLIB$$8af24191.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at com.pjy.dashboard.dao.DynamicSqlH2Dao$$EnhancerBySpringCGLIB$$9566e8e9.batchInsert(<generated>)
	at com.pjy.dashboard.service.DynamicSqlService.mergeInfo(DynamicSqlService.java:759)
	at com.pjy.dashboard.controller.TestController.BUS_mergeInfo(TestController.java:499)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:893)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:798)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:97)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at jdk.internal.reflect.GeneratedMethodAccessor151.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$d44854f0.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:114)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:104)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-07-12 14:40:21.867 WARN  [http-nio-10010-exec-3] [o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver] - Resolved [org.springframework.dao.InvalidDataAccessApiUsageException: No value supplied for the SQL parameter 'comp_date': No value registered for key 'comp_date']
2023-07-12 14:41:14.080 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f335c8f
2023-07-12 14:41:14.080 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_PUBLIC_COMPLAINT_INFO} 
2023-07-12 14:41:14.080 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
2023-07-12 14:41:14.081 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
33. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 14:41:14.082 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
33. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 1 msec}
2023-07-12 14:41:14.084 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
33. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 1 msec}
2023-07-12 14:41:58.799 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f335c8f
2023-07-12 14:41:58.799 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_PUBLIC_COMPLAINT_INFO} 
2023-07-12 14:41:58.799 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
2023-07-12 14:41:58.800 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
33. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 14:41:58.801 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
33. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 0 msec}
2023-07-12 14:41:58.803 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
33. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 0 msec}
2023-07-12 14:45:49.879 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f335c8f
2023-07-12 14:45:49.879 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_PUBLIC_COMPLAINT_INFO} 
2023-07-12 14:45:49.879 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
2023-07-12 14:45:49.880 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
33. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-12 14:45:49.881 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
33. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 0 msec}
2023-07-12 14:45:49.882 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
33. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 0 msec}
2023-07-12 14:46:23.055 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
33. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 14:46:23.061 INFO  [http-nio-10010-exec-7] [com.pjy.dashboard.dao.DynamicSqlDao] - merge sql : MERGE INTO TBL_PUBLIC_COMPLAINT_INFO KEY (company_no,comp_date,seq) select  '100' , :comp_date , :seq , :real_comp_date , :emp_nm , :route_nm , :car_regno , :comp_type , :place , :memo , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
2023-07-12 14:46:23.062 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
34. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 14:46:23.067 ERROR [http-nio-10010-exec-7] [c.p.d.core.error.GlobalExceptionHandler] - handleEntityNotFoundException
org.springframework.dao.InvalidDataAccessApiUsageException: No value supplied for the SQL parameter 'comp_date': No value registered for key 'comp_date'
	at org.springframework.jdbc.core.namedparam.NamedParameterUtils.buildValueArray(NamedParameterUtils.java:355)
	at org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate$2.setValues(NamedParameterJdbcTemplate.java:371)
	at org.springframework.jdbc.core.JdbcTemplate.lambda$batchUpdate$2(JdbcTemplate.java:944)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:617)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:647)
	at org.springframework.jdbc.core.JdbcTemplate.batchUpdate(JdbcTemplate.java:936)
	at org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.batchUpdate(NamedParameterJdbcTemplate.java:366)
	at com.pjy.dashboard.dao.DynamicSqlDao.batchInsert(DynamicSqlDao.java:743)
	at com.pjy.dashboard.dao.DynamicSqlDao$$FastClassBySpringCGLIB$$8af24191.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at com.pjy.dashboard.dao.DynamicSqlH2Dao$$EnhancerBySpringCGLIB$$9566e8e9.batchInsert(<generated>)
	at com.pjy.dashboard.service.DynamicSqlService.mergeInfo(DynamicSqlService.java:759)
	at com.pjy.dashboard.controller.TestController.BUS_mergeInfo(TestController.java:499)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:893)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:798)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:97)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at jdk.internal.reflect.GeneratedMethodAccessor151.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$d44854f0.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:114)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:104)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-07-12 14:46:23.070 WARN  [http-nio-10010-exec-7] [o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver] - Resolved [org.springframework.dao.InvalidDataAccessApiUsageException: No value supplied for the SQL parameter 'comp_date': No value registered for key 'comp_date']
2023-07-12 14:49:50.798 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f335c8f
2023-07-12 14:49:50.798 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_PUBLIC_COMPLAINT_INFO} 
2023-07-12 14:49:50.798 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
2023-07-12 14:49:50.799 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
41. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 14:49:50.801 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
41. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 1 msec}
2023-07-12 14:49:50.802 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
41. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 1 msec}
2023-07-12 14:49:58.031 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
41. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 14:49:58.038 INFO  [http-nio-10010-exec-7] [com.pjy.dashboard.dao.DynamicSqlDao] - merge sql : MERGE INTO TBL_PUBLIC_COMPLAINT_INFO KEY (company_no,comp_date,seq) select  '100' , :comp_date , :seq , :real_comp_date , :emp_nm , :route_nm , :car_regno , :comp_type , :place , :memo , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
2023-07-12 14:49:58.039 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
42. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-12 14:49:58.041 ERROR [http-nio-10010-exec-7] [c.p.d.core.error.GlobalExceptionHandler] - handleEntityNotFoundException
org.springframework.dao.InvalidDataAccessApiUsageException: No value supplied for the SQL parameter 'comp_date': No value registered for key 'comp_date'
	at org.springframework.jdbc.core.namedparam.NamedParameterUtils.buildValueArray(NamedParameterUtils.java:355)
	at org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate$2.setValues(NamedParameterJdbcTemplate.java:371)
	at org.springframework.jdbc.core.JdbcTemplate.lambda$batchUpdate$2(JdbcTemplate.java:944)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:617)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:647)
	at org.springframework.jdbc.core.JdbcTemplate.batchUpdate(JdbcTemplate.java:936)
	at org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.batchUpdate(NamedParameterJdbcTemplate.java:366)
	at com.pjy.dashboard.dao.DynamicSqlDao.batchInsert(DynamicSqlDao.java:743)
	at com.pjy.dashboard.dao.DynamicSqlDao$$FastClassBySpringCGLIB$$8af24191.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at com.pjy.dashboard.dao.DynamicSqlH2Dao$$EnhancerBySpringCGLIB$$9566e8e9.batchInsert(<generated>)
	at com.pjy.dashboard.service.DynamicSqlService.mergeInfo(DynamicSqlService.java:759)
	at com.pjy.dashboard.controller.TestController.BUS_mergeInfo(TestController.java:499)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:893)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:798)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:97)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at jdk.internal.reflect.GeneratedMethodAccessor151.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$d44854f0.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:114)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:104)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-07-12 14:49:58.042 WARN  [http-nio-10010-exec-7] [o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver] - Resolved [org.springframework.dao.InvalidDataAccessApiUsageException: No value supplied for the SQL parameter 'comp_date': No value registered for key 'comp_date']
2023-07-12 14:53:22.539 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f335c8f
2023-07-12 14:53:22.539 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_PUBLIC_COMPLAINT_INFO} 
2023-07-12 14:53:22.539 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
2023-07-12 14:53:22.540 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
42. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 14:53:22.543 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
42. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 1 msec}
2023-07-12 14:53:22.544 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
42. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 1 msec}
2023-07-12 14:54:41.080 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f335c8f
2023-07-12 14:54:41.080 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_PUBLIC_COMPLAINT_INFO} 
2023-07-12 14:54:41.080 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
2023-07-12 14:54:41.081 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
42. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 14:54:41.084 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
42. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 1 msec}
2023-07-12 14:54:41.085 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
42. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 0 msec}
2023-07-12 14:57:30.534 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f335c8f
2023-07-12 14:57:30.534 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_PUBLIC_COMPLAINT_INFO} 
2023-07-12 14:57:30.534 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
2023-07-12 14:57:30.535 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
42. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 14:57:30.536 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
42. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 1 msec}
2023-07-12 14:57:30.538 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
42. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 0 msec}
2023-07-12 14:57:51.902 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f335c8f
2023-07-12 14:57:51.902 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_PUBLIC_COMPLAINT_INFO} 
2023-07-12 14:57:51.903 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
2023-07-12 14:57:51.904 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
42. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-12 14:57:51.905 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
42. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 0 msec}
2023-07-12 14:57:51.906 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
42. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 0 msec}
2023-07-12 14:58:15.078 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f335c8f
2023-07-12 14:58:15.078 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_PUBLIC_COMPLAINT_INFO} 
2023-07-12 14:58:15.078 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
2023-07-12 14:58:15.079 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
42. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 14:58:15.080 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
42. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 1 msec}
2023-07-12 14:58:15.081 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
42. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 1 msec}
2023-07-12 14:59:17.593 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f335c8f
2023-07-12 14:59:17.593 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_PUBLIC_COMPLAINT_INFO} 
2023-07-12 14:59:17.594 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
2023-07-12 14:59:17.595 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
42. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-12 14:59:17.596 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
42. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 1 msec}
2023-07-12 14:59:17.597 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
42. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 1 msec}
2023-07-12 15:00:21.491 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f335c8f
2023-07-12 15:00:21.491 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_PUBLIC_COMPLAINT_INFO} 
2023-07-12 15:00:21.491 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
2023-07-12 15:00:21.492 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
43. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 15:00:21.494 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
43. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 0 msec}
2023-07-12 15:00:21.496 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
43. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 1 msec}
2023-07-12 15:04:51.623 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f335c8f
2023-07-12 15:04:51.624 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_PUBLIC_COMPLAINT_INFO} 
2023-07-12 15:04:51.624 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
2023-07-12 15:04:51.626 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
43. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 15:04:51.627 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
43. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 1 msec}
2023-07-12 15:04:51.628 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
43. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 1 msec}
2023-07-12 15:15:19.127 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f335c8f
2023-07-12 15:15:19.127 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_PUBLIC_COMPLAINT_INFO} 
2023-07-12 15:15:19.127 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
2023-07-12 15:15:19.129 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
52. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-12 15:15:19.130 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
52. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 1 msec}
2023-07-12 15:15:19.132 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
52. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 1 msec}
2023-07-12 15:15:23.835 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
52. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-12 15:15:23.842 INFO  [http-nio-10010-exec-6] [com.pjy.dashboard.dao.DynamicSqlDao] - merge sql : MERGE INTO TBL_PUBLIC_COMPLAINT_INFO KEY (company_no,comp_date,seq) select  '100' , :comp_date , :seq , :real_comp_date , :emp_nm , :route_nm , :car_regno , :comp_type , :place , :memo , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
2023-07-12 15:15:23.844 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
53. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 15:15:23.846 ERROR [http-nio-10010-exec-6] [c.p.d.core.error.GlobalExceptionHandler] - handleEntityNotFoundException
org.springframework.dao.InvalidDataAccessApiUsageException: No value supplied for the SQL parameter 'comp_date': No value registered for key 'comp_date'
	at org.springframework.jdbc.core.namedparam.NamedParameterUtils.buildValueArray(NamedParameterUtils.java:355)
	at org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate$2.setValues(NamedParameterJdbcTemplate.java:371)
	at org.springframework.jdbc.core.JdbcTemplate.lambda$batchUpdate$2(JdbcTemplate.java:944)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:617)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:647)
	at org.springframework.jdbc.core.JdbcTemplate.batchUpdate(JdbcTemplate.java:936)
	at org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.batchUpdate(NamedParameterJdbcTemplate.java:366)
	at com.pjy.dashboard.dao.DynamicSqlDao.batchInsert(DynamicSqlDao.java:743)
	at com.pjy.dashboard.dao.DynamicSqlDao$$FastClassBySpringCGLIB$$8af24191.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at com.pjy.dashboard.dao.DynamicSqlH2Dao$$EnhancerBySpringCGLIB$$9566e8e9.batchInsert(<generated>)
	at com.pjy.dashboard.service.DynamicSqlService.mergeInfo(DynamicSqlService.java:759)
	at com.pjy.dashboard.controller.TestController.BUS_mergeInfo(TestController.java:499)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:893)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:798)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:97)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at jdk.internal.reflect.GeneratedMethodAccessor151.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$d44854f0.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:114)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:104)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-07-12 15:15:23.847 WARN  [http-nio-10010-exec-6] [o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver] - Resolved [org.springframework.dao.InvalidDataAccessApiUsageException: No value supplied for the SQL parameter 'comp_date': No value registered for key 'comp_date']
2023-07-12 15:25:49.482 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f335c8f
2023-07-12 15:25:49.482 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_PUBLIC_COMPLAINT_INFO} 
2023-07-12 15:25:49.482 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
2023-07-12 15:25:49.483 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
53. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-12 15:25:49.484 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
53. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 1 msec}
2023-07-12 15:25:49.486 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
53. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 0 msec}
2023-07-12 15:26:08.538 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f335c8f
2023-07-12 15:26:08.539 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_PUBLIC_COMPLAINT_INFO} 
2023-07-12 15:26:08.539 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
2023-07-12 15:26:08.540 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
54. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 15:26:08.542 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
54. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 0 msec}
2023-07-12 15:26:08.543 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
54. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 1 msec}
2023-07-12 15:29:36.304 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f335c8f
2023-07-12 15:29:36.304 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_PUBLIC_COMPLAINT_INFO} 
2023-07-12 15:29:36.304 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
2023-07-12 15:29:36.305 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
61. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 15:29:36.307 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
61. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 1 msec}
2023-07-12 15:29:36.308 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
61. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 1 msec}
2023-07-12 15:30:54.571 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f335c8f
2023-07-12 15:30:54.571 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_PUBLIC_COMPLAINT_INFO} 
2023-07-12 15:30:54.572 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
2023-07-12 15:30:54.573 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
62. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-12 15:30:54.574 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
62. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 1 msec}
2023-07-12 15:30:54.575 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
62. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 1 msec}
2023-07-12 15:31:14.112 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
62. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-12 15:31:14.117 INFO  [http-nio-10010-exec-1] [com.pjy.dashboard.dao.DynamicSqlDao] - merge sql : MERGE INTO TBL_PUBLIC_COMPLAINT_INFO KEY (company_no,comp_date,seq) select  '100' , :comp_date , :seq , :real_comp_date , :emp_nm , :route_nm , :car_regno , :comp_type , :place , :memo , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
2023-07-12 15:31:14.130 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f335c8f
2023-07-12 15:31:14.130 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_PUBLIC_COMPLAINT_INFO} 
2023-07-12 15:31:14.130 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
2023-07-12 15:31:14.132 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
63. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 15:31:14.133 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
63. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 1 msec}
2023-07-12 15:31:14.136 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
63. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 1 msec}
2023-07-12 15:32:19.363 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f335c8f
2023-07-12 15:32:19.363 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_PUBLIC_COMPLAINT_INFO} 
2023-07-12 15:32:19.364 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
2023-07-12 15:32:19.365 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
63. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-12 15:32:19.367 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
63. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 1 msec}
2023-07-12 15:32:19.368 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
63. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 0 msec}
2023-07-12 15:33:25.855 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f335c8f
2023-07-12 15:33:25.855 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_PUBLIC_COMPLAINT_INFO} 
2023-07-12 15:33:25.855 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
2023-07-12 15:33:25.856 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
63. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-12 15:33:25.858 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
63. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 1 msec}
2023-07-12 15:33:25.861 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
63. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 1 msec}
2023-07-12 15:34:43.896 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f335c8f
2023-07-12 15:34:43.897 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_PUBLIC_COMPLAINT_INFO} 
2023-07-12 15:34:43.897 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
2023-07-12 15:34:43.898 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
63. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 15:34:43.900 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
63. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 1 msec}
2023-07-12 15:34:43.901 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
63. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 1 msec}
2023-07-12 15:35:46.727 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f335c8f
2023-07-12 15:35:46.728 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_PUBLIC_COMPLAINT_INFO} 
2023-07-12 15:35:46.728 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
2023-07-12 15:35:46.729 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
63. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-12 15:35:46.730 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
63. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 0 msec}
2023-07-12 15:35:46.731 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
63. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 1 msec}
2023-07-12 16:03:44.175 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f335c8f
2023-07-12 16:03:44.176 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_PUBLIC_COMPLAINT_INFO} 
2023-07-12 16:03:44.176 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
2023-07-12 16:03:44.178 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
73. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 16:03:44.179 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
73. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 1 msec}
2023-07-12 16:03:44.181 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
73. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 1 msec}
2023-07-12 16:21:52.814 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Starting PjyApplication on DESKTOP-QJPD93S with PID 14876 (D:\BUS\dashboard\dashboard\target\classes started by admin in D:\BUS\dashboard\dashboard)
2023-07-12 16:21:52.822 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - The following profiles are active: oauth
2023-07-12 16:21:52.877 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-07-12 16:21:52.877 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-07-12 16:21:54.268 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-07-12 16:21:54.268 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-07-12 16:21:54.414 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 137ms. Found 3 JPA repository interfaces.
2023-07-12 16:21:54.761 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-07-12 16:21:54.762 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2023-07-12 16:21:54.805 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.FileRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-07-12 16:21:54.805 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.MemberRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-07-12 16:21:54.806 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.RememberMeRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-07-12 16:21:54.807 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 45ms. Found 0 JDBC repository interfaces.
2023-07-12 16:21:55.249 INFO  [restartedMain] [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] - Post-processing PropertySource instances
2023-07-12 16:21:55.319 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2023-07-12 16:21:55.319 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource commandLineArgs [org.springframework.core.env.SimpleCommandLinePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-07-12 16:21:55.319 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-07-12 16:21:55.320 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-07-12 16:21:55.320 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2023-07-12 16:21:55.320 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
2023-07-12 16:21:55.320 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2023-07-12 16:21:55.320 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application-oauth.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-07-12 16:21:55.320 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-07-12 16:21:55.320 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2023-07-12 16:21:55.320 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [pjy.properties] [org.springframework.core.env.CompositePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-07-12 16:21:55.320 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [common.properties] [org.springframework.core.io.support.ResourcePropertySource] to EncryptableMapPropertySourceWrapper
2023-07-12 16:21:55.380 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'asyncConfiguration' of type [com.pjy.dashboard.configuration.AsyncConfiguration$$EnhancerBySpringCGLIB$$2e2ba4a5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 16:21:55.432 INFO  [restartedMain] [c.u.j.filter.DefaultLazyPropertyFilter] - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2023-07-12 16:21:55.521 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$182208d2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 16:21:55.603 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 16:21:55.605 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@52da6d3d' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 16:21:55.610 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$3cf6ab84] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 16:21:55.621 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration$$EnhancerBySpringCGLIB$$624bc39a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 16:21:55.626 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 16:21:55.627 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 16:21:55.652 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$7f744098] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 16:21:55.681 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$fef48dca] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 16:21:55.821 INFO  [restartedMain] [c.u.j.r.DefaultLazyPropertyResolver] - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2023-07-12 16:21:55.825 INFO  [restartedMain] [c.u.j.d.DefaultLazyPropertyDetector] - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2023-07-12 16:21:56.270 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 10010 (http)
2023-07-12 16:21:56.288 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Initializing ProtocolHandler ["http-nio-10010"]
2023-07-12 16:21:56.298 INFO  [restartedMain] [org.apache.catalina.core.StandardService] - Starting service [Tomcat]
2023-07-12 16:21:56.299 INFO  [restartedMain] [org.apache.catalina.core.StandardEngine] - Starting Servlet engine: [Apache Tomcat/9.0.29]
2023-07-12 16:21:56.669 INFO  [restartedMain] [org.apache.jasper.servlet.TldScanner] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2023-07-12 16:21:56.679 INFO  [restartedMain] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring embedded WebApplicationContext
2023-07-12 16:21:56.679 INFO  [restartedMain] [o.s.web.context.ContextLoader] - Root WebApplicationContext: initialization completed in 3802 ms
2023-07-12 16:21:57.512 INFO  [restartedMain] [c.u.j.encryptor.DefaultLazyEncryptor] - Found Custom Encryptor Bean org.jasypt.encryption.pbe.PooledPBEStringEncryptor@5334385b with name: jasyptStringEncryptor
2023-07-12 16:21:57.560 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Starting...
2023-07-12 16:21:57.646 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.executeSql(PoolBase.java:567)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 7 msec}
2023-07-12 16:21:57.654 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Start completed.
2023-07-12 16:21:58.439 INFO  [restartedMain] [com.pjy.dashboard.filter.TestFilter] - init Pjy Filter
2023-07-12 16:21:58.850 INFO  [restartedMain] [o.hibernate.jpa.internal.util.LogHelper] - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2023-07-12 16:21:58.929 INFO  [restartedMain] [org.hibernate.Version] - HHH000412: Hibernate Core {5.3.14.Final}
2023-07-12 16:21:58.930 INFO  [restartedMain] [org.hibernate.cfg.Environment] - HHH000206: hibernate.properties not found
2023-07-12 16:21:59.080 INFO  [restartedMain] [org.hibernate.annotations.common.Version] - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2023-07-12 16:21:59.317 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 16:21:59.335 INFO  [restartedMain] [org.hibernate.dialect.Dialect] - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2023-07-12 16:22:00.054 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 16:22:00.056 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select SEQUENCE_CATALOG, SEQUENCE_SCHEMA, SEQUENCE_NAME, INCREMENT from information_schema.sequences
 {executed in 1 msec}
2023-07-12 16:22:00.108 INFO  [restartedMain] [o.s.o.j.LocalContainerEntityManagerFactoryBean] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-07-12 16:22:00.364 INFO  [restartedMain] [o.h.h.i.QueryTranslatorFactoryInitiator] - HHH000397: Using ASTQueryTranslatorFactory
2023-07-12 16:22:01.429 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService
2023-07-12 16:22:01.439 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'asyncThreadPool'
2023-07-12 16:22:01.619 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/h2-console/**'], []
2023-07-12 16:22:01.619 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/css/**'], []
2023-07-12 16:22:01.620 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/js/**'], []
2023-07-12 16:22:01.620 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/monitor/**'], []
2023-07-12 16:22:01.620 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/img/**'], []
2023-07-12 16:22:01.620 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/lib/**'], []
2023-07-12 16:22:01.620 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/main.css'], []
2023-07-12 16:22:01.620 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/common.js'], []
2023-07-12 16:22:01.620 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/resources/**'], []
2023-07-12 16:22:01.778 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4129eae0, org.springframework.security.web.context.SecurityContextPersistenceFilter@681f091e, org.springframework.security.web.header.HeaderWriterFilter@7eb69390, org.springframework.web.filter.CorsFilter@47081cd0, org.springframework.security.web.authentication.logout.LogoutFilter@4486e916, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@593b4f6f, org.springframework.security.web.session.ConcurrentSessionFilter@656a80bb, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@4f808e4b, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4ea9c2a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@46d64425, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@17435919, org.springframework.security.web.session.SessionManagementFilter@7db180ff, org.springframework.security.web.access.ExceptionTranslationFilter@3339eb4f, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7576cbac]
2023-07-12 16:22:01.801 INFO  [restartedMain] [o.s.aop.framework.CglibAopProxy] - Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(javax.servlet.FilterConfig) throws javax.servlet.ServletException] because it is marked as final: Consider using interface-based JDK proxies instead!
2023-07-12 16:22:02.144 WARN  [restartedMain] [o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-07-12 16:22:02.227 INFO  [restartedMain] [o.s.b.a.w.s.WelcomePageHandlerMapping] - Adding welcome page: ServletContext resource [/index.html]
2023-07-12 16:22:02.638 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 16:22:03.508 INFO  [restartedMain] [o.s.b.d.a.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2023-07-12 16:22:03.537 INFO  [restartedMain] [o.s.b.a.e.web.EndpointLinksResolver] - Exposing 16 endpoint(s) beneath base path '/actuator'
2023-07-12 16:22:03.674 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskScheduler] - Initializing ExecutorService
2023-07-12 16:22:03.680 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Starting ProtocolHandler ["http-nio-10010"]
2023-07-12 16:22:03.738 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 10010 (http) with context path ''
2023-07-12 16:22:03.743 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Started PjyApplication in 11.401 seconds (JVM running for 13.886)
2023-07-12 16:22:03.744 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-07-12 16:22:03.744 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - Application started
2023-07-12 16:22:03.744 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-07-12 16:22:05.003 INFO  [RMI TCP Connection(8)-127.0.0.1] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-07-12 16:22:05.003 INFO  [RMI TCP Connection(8)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Initializing Servlet 'dispatcherServlet'
2023-07-12 16:22:05.023 INFO  [RMI TCP Connection(8)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Completed initialization in 19 ms
2023-07-12 16:22:38.987 WARN  [http-nio-10010-exec-1] [o.a.catalina.util.SessionIdGeneratorBase] - Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [138] milliseconds.
2023-07-12 16:22:39.712 INFO  [http-nio-10010-exec-3] [c.p.d.interceptor.LoggerInterceptor] - ============================== START ==============================
2023-07-12 16:22:39.715 INFO  [http-nio-10010-exec-3] [c.p.d.interceptor.LoggerInterceptor] -  Class       	:  class org.springframework.web.method.HandlerMethod
2023-07-12 16:22:39.715 INFO  [http-nio-10010-exec-3] [c.p.d.interceptor.LoggerInterceptor] -  Request URI 	:  /error
2023-07-12 16:22:39.715 INFO  [http-nio-10010-exec-3] [c.p.d.interceptor.LoggerInterceptor] -  Request addr	:  0:0:0:0:0:0:0:1
2023-07-12 16:22:39.715 INFO  [http-nio-10010-exec-3] [c.p.d.interceptor.LoggerInterceptor] -  Servlet URI 	:  /error
2023-07-12 16:22:43.328 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 16:22:43.336 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select * from MEMBER where userId = 'p00139'
 {executed in 1 msec}
2023-07-12 16:22:43.356 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.MemberServiceImpl] - ROLE_ADMIN
2023-07-12 16:22:43.445 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.MemberServiceImpl] - pass:$2a$10$MNrQAPw.4k9j2y08eTmYEeI7oKPuaWbA97HHog.8PYep5HsRwhbae,$2a$10$Uab23dSryCFsJgwz8cbbaOF8DZHzkrKesOUePK9AVru9b1yQvLknW
2023-07-12 16:22:43.536 INFO  [http-nio-10010-exec-7] [c.p.d.configuration.SecurityConfig] - authentication:: p00139
2023-07-12 16:22:49.759 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@46cc5e06
2023-07-12 16:22:49.759 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_PUBLIC_COMPLAINT_INFO} 
2023-07-12 16:22:49.814 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
2023-07-12 16:22:49.839 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 16:22:49.840 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 1 msec}
2023-07-12 16:22:49.844 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 1 msec}
2023-07-12 16:23:41.826 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 16:23:41.836 INFO  [http-nio-10010-exec-9] [com.pjy.dashboard.dao.DynamicSqlDao] - merge sql : MERGE INTO TBL_PUBLIC_COMPLAINT_INFO KEY (company_no,comp_date,seq) select  '100' , :comp_date , :seq , :real_comp_date , :emp_nm , :route_nm , :car_regno , :comp_type , :place , :memo , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
2023-07-12 16:23:41.845 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
2. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-12 16:23:41.866 ERROR [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeBatch(ProxyStatement.java:128)
2. batching 13 statements:
 1:  MERGE INTO TBL_PUBLIC_COMPLAINT_INFO KEY (company_no,comp_date,seq) select  '100' , '2023-01-10' , 1.0 , '2023-01-10 / 11:43' , '최정배' , '21' , 3561.0 , '버스불편(무정차통과)' , '도화IC [37356] ' , '정류장에 버스가 오고 있어서 승차할려고 행동을 취했지만 버스정류장쪽으로 오지도 않고 다른 차선으로 무정차 통과해서 버스 승차하지 못함' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
 2:  MERGE INTO TBL_PUBLIC_COMPLAINT_INFO KEY (company_no,comp_date,seq) select  '100' , '2023-01-13' , 2.0 , '2023-01-13 22:30경' , '김명현' , '20' , 3564.0 , '버스불편(무정차통과)' , ' 찬우물 [39179]' , '해당 정류소에서 승차하려고 서있었는데 버스 오는 것을 보고 승차하려는데 버스가 서행하지 않고 굉장히 빠른 속도로 지나가버림. ' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
 3:  MERGE INTO TBL_PUBLIC_COMPLAINT_INFO KEY (company_no,comp_date,seq) select  '100' , '2023-02-10' , 7.0 , '2023-02-10(08:51)' , '최기성' , '27' , 3640.0 , '버스불편(무정차통과)' , '남동체육관 체조경기장[39862]' , '2023년 2월 10일(금) 남동체육관 체조경기장(39862)에서 탑승해야 하는 27번 버스가 무정차 하였습니다. 벌써 무정차 민원만 3번째네요. 인천 버스는 원래 정류소에 사람이 서있어도 무정차하나요?' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
 4:  MERGE INTO TBL_PUBLIC_COMPLAINT_INFO KEY (company_no,comp_date,seq) select  '100' , '2023-03-03' , 16.0 , '2023-03-03  ( 8:20-25)   ' , '이용재(610423)' , '27' , 3639.0 , '버스불편(무정차통과)' , '라이프아파트 > 연안아파트 방향' , '27번 버스가 라이프아파트 정류장에 정차하지 않고 지나갔다고함  두대가 같이 오는 경우였고 다른 버스가 앞에 있다고 해도 정류장에 정차 하는것이 맞는데 정차 하지 않고 가서 불편을 겪었다고함 무정차통과로 접수요청함 ' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
 5:  MERGE INTO TBL_PUBLIC_COMPLAINT_INFO KEY (company_no,comp_date,seq) select  '100' , '2023-03-06' , 18.0 , '2023-03-06 09:20~22분사이 ' , '심기섭' , '5' , 3508.0 , '버스불편(무정차통과)' , '서창센트럴푸르지오 (서해그랑블아파트후문방면) ID:39903' , '버스정류장에서 버스를 기다리고 있었는데 33번이 먼저오고 5번이 뒤에 오고 있었음, 사거리에 신호등이 있었는데 노란불에서 정차하려다 그냥 통과함, 2차로에서 정류장에 오려면 3차로로 와야되는데 2차로에서 그냥 직진함. 폭주운전식으로 그냥 가버려서 깜짝 놀랐다함' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
 6:  MERGE INTO TBL_PUBLIC_COMPLAINT_INFO KEY (company_no,comp_date,seq) select  '100' , '2023-03-13' , 6.0 , '2023-03-13(08:40경)' , 3645.0 , '5-1' , '남기선' , '버스불편(승차거부)' , '주안7동행정복지센터[37216]' , '버스타려고 줄서서 기다리고 있는데 제 앞에사람까지만 태우더니 문을 닫으셔서 저를 못보셧나하고 얼굴까지 비춰가면서 문열어 달라고 쳐다보고했는데 닫혀가는 문을 밀고 열어서 타라고 하시더라고요. 닫혀가는 문에 제 손을 넣어서 열라니 무슨말도안되는소리를 하는건가 싶었어요. 제가 잘못들은걸수도 있으니 혹시 문이 고장났나싶어 뒤로 타라는건가하고 뒷문으로 갔는데 뒷문도 닫아버리시고 다시 앞문으로 가니깐 휙 떠나버리셨어요. 누가봐도 버스타려던 사람이고 거울로 다 비쳤을텐데 고의적으로 가셨습니다. 문제될 행동을 한것도 없는데 아무 이유없이 승차거부한건 어이가없네요' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
 7:  MERGE INTO TBL_PUBLIC_COMPLAINT_INFO KEY (company_no,comp_date,seq) select  '100' , '2023-03-21' , 7.0 , '2023-03-21 (20:30)' , 3619.0 , '5' , '한태전' , '버스불편(무정차통과)' , '운연동[39379]' , '본인이 정류장에 서 있는데 버스가 정류장에 들어오지 않고 주행차선으로 무정차통과 하여 불편신고 접수 함' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
 8:  MERGE INTO TBL_PUBLIC_COMPLAINT_INFO KEY (company_no,comp_date,seq) select  '100' , '2023-03-23' , 8.0 , '2023-03-23(16시 하차)' , 3641.0 , '27' , '김용문' , '버스불편(안전운행위반)' , '인하대역 정류장(홈플러스방면)' , '승차시에도 자리에 앉기 전에 급출발하여 위험했는데 내릴때 몸이 껴서 사람이 튕겨나갈 정도로 위험하게 난폭운전을 하였음(구의견 : 여객법 시행규칙에 의거 안전운행위반시 과태료 50만원 처분이 가능함을 알려드리오니 영상 확보에 힘 써주시기 바랍니다.)' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
 9:  MERGE INTO TBL_PUBLIC_COMPLAINT_INFO KEY (company_no,comp_date,seq) select  '100' , '2023-04-03' , 16.0 , '2023-04-03(13:35경)' , 3621.0 , '5' , '김도근' , '버스불편(무정차통과)' , '신천역,문화의 거리(25364)' , '일시 : 금일 (2023년 4월 3일 오후)
교통앱 버스 고유(?) 번호 : 3621
미정차 당시 시간 : 오후 1시 35분에서 1시 40분 사이였음
미정차 버스정류장 : 신천역,문화의 거리
버스정류장 번호 : 25364

버스 정류장은 마지막 차선에 붙어있음에도 2차선으로 사람이 3명 기다리고있는데도 정차하지않고 그냥 가버렸습니다. 다른 직행좌석버스인 시흥3200번버스는 정차했구요. 정확히 기억합니다. 날씨도 너무 덥고 시간도 딱 맞춰나왔는데 멈추지도 않고 가버려서 매우 짜증이 나고 화가 납니다. 처리 부탁드립니다.' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
10:  MERGE INTO TBL_PUBLIC_COMPLAINT_INFO KEY (company_no,comp_date,seq) select  '100' , '2023-04-20' , 1.0 , '2023-04-20 / 12시25분경' , '정해열' , '20' , 3573.0 , '버스불편(무정차통과)' , '남촌풍림3차아파트 [39165]' , '민원인이 하차를 하려고 벨을 누르고 교통카드를 찍은 뒤 서있었으나, 기사가 정차하지 않고 정류소를 지나감. 기사를 불러 내려달라고 했으나 아무대답도 하지 않고, 다음 정류소에서 내려줬다고 함.' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
11:  MERGE INTO TBL_PUBLIC_COMPLAINT_INFO KEY (company_no,comp_date,seq) select  '100' , '2023-04-21' , 2.0 , '2023-04-21(18시경)' , '김현수' , '38' , 3545.0 , '버스불편(무정차통과,불친절)' , '논현사거리 하차의사표시,주적골 하차' , '2023-04-21일 18시 경 38번 버스 (번호판 : 3545)에 탑승했고 
논고개길에 정차하기 위해서 논현사거리 정류장에 지나고는 벨을 누르고 정차를 기다렸습니다. 
기사님은 벨을 눌렀음에도 불구하고 정류장에 정차하지 않았고 
제가 3차례 정도 정차해달라, 벨을 눌렀다 큰 소리로 소리질렀지만 무시하고 다음 정류장인 주적골까지 달렸습니다. 
주적골에서는 탑승하는 사람들만 문을 열어주고 끝까지 뒷문은 열어주지 않았고 
뒷문에 서있는데도 불구하고 또다시 출발했습니다. 
다시 문을 열어달라 소리를 질렀는데 출발하려고 했고 언성을 더 높여 문열어달라 하니 그제서야 뒤를 흘끔 보시더니 
문을 열어주고는 제가 내리는 와중에 뒷문을 닫아 가방이 끼어 무정차보다 더 큰 사고를 당할 뻔 했습니다. 
연세있는 분인 것 같아서 그냥 참으려고 했는데 무정차는 무정차고 
땅에서 버린 시간이랑 운수회사에서 서비스 교육이나 운임 교육을 어떻게 하고 있는지 궁금해서 민원 넣습니다. 
기사님의 처벌을 원합니다. CCTV 확인하고 처벌 제대로 해주세요. 
38번 가뜩이나 제멋대로인 출차 시간에 너무 화가 났는데 이번 일로 저는 인천시 버스에 대한 신의를 잃어가고 있습니다.' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
12:  MERGE INTO TBL_PUBLIC_COMPLAINT_INFO KEY (company_no,comp_date,seq) select  '100' , '2023-04-30' , 6.0 , ' 2023-04-30 23:29분경' , '박종호' , '38' , 3550.0 , '버스불편(무정차통과)' , '인천힘찬종합병원 [39629] 정류장 ' , '20분 넘게 버스를 기다렸고 막차라서 꼭 탑승을 해야 하는  상황이었는데 해당 버스가 버스 정류장을 정차하지 않고  그냥 무정차함으로 신고. 막차를 탑승 못하는 상황이라 택시를 타고 귀가를 해야 하고  이렇게 버스를  탑승하지 못할거면 기다리지도 않고 바로 택시를 탔을텐데  밤늦은 시간에 시민만 불편함을 겪게되어 강력 처벌 요구함.' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
13:  MERGE INTO TBL_PUBLIC_COMPLAINT_INFO KEY (company_no,comp_date,seq) select  '100' , '2023-05-02' , 8.0 , '2023-05-02 / 10:20분 전후' , '김정일' , '5' , 3631.0 , '버스불편(무정차통과)' , '서창119안전센터 > 구월동 방면' , '해당 정류소로 버스가 멀리서 오고 있었고, 민원인은 정류소 뒤에서 지갑에서 카드를 꺼내고 있었으나, 기사가 태우지 않고 지나감. 해당 기사에대한 과태료 처분과 교육 요청.' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
 {FAILED after 12 msec}
org.h2.jdbc.JdbcBatchUpdateException: Value too long for column "EMP_NM VARCHAR(10)": "STRINGDECODE('\uc774\uc6a9\uc7ac(610423)') (11)"; SQL statement:
MERGE INTO TBL_PUBLIC_COMPLAINT_INFO KEY (company_no,comp_date,seq) select  '100' , ? , ? , ? , ? , ? , ? , ? , ? , ? , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss') [22001-200]
	at org.h2.jdbc.JdbcPreparedStatement.executeBatch(JdbcPreparedStatement.java:1235)
	at net.sf.log4jdbc.sql.jdbcapi.StatementSpy.executeBatch(StatementSpy.java:571)
	at com.zaxxer.hikari.pool.ProxyStatement.executeBatch(ProxyStatement.java:128)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeBatch(HikariProxyPreparedStatement.java)
	at org.springframework.jdbc.core.JdbcTemplate.lambda$batchUpdate$2(JdbcTemplate.java:950)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:617)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:647)
	at org.springframework.jdbc.core.JdbcTemplate.batchUpdate(JdbcTemplate.java:936)
	at org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.batchUpdate(NamedParameterJdbcTemplate.java:366)
	at com.pjy.dashboard.dao.DynamicSqlDao.batchInsert(DynamicSqlDao.java:743)
	at com.pjy.dashboard.dao.DynamicSqlDao$$FastClassBySpringCGLIB$$8af24191.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at com.pjy.dashboard.dao.DynamicSqlH2Dao$$EnhancerBySpringCGLIB$$8d75c31e.batchInsert(<generated>)
	at com.pjy.dashboard.service.DynamicSqlService.mergeInfo(DynamicSqlService.java:785)
	at com.pjy.dashboard.controller.TestController.BUS_mergeInfo(TestController.java:502)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:893)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:798)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:97)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at jdk.internal.reflect.GeneratedMethodAccessor150.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$2bac5943.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:114)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:104)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-07-12 16:23:41.934 ERROR [http-nio-10010-exec-9] [c.p.d.core.error.GlobalExceptionHandler] - handleEntityNotFoundException
org.springframework.dao.DataIntegrityViolationException: PreparedStatementCallback; SQL [MERGE INTO TBL_PUBLIC_COMPLAINT_INFO KEY (company_no,comp_date,seq) select  '100' , ? , ? , ? , ? , ? , ? , ? , ? , ? , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')]; Value too long for column "EMP_NM VARCHAR(10)": "STRINGDECODE('\uc774\uc6a9\uc7ac(610423)') (11)"; SQL statement:
MERGE INTO TBL_PUBLIC_COMPLAINT_INFO KEY (company_no,comp_date,seq) select  '100' , ? , ? , ? , ? , ? , ? , ? , ? , ? , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss') [22001-200]; nested exception is org.h2.jdbc.JdbcSQLDataException: Value too long for column "EMP_NM VARCHAR(10)": "STRINGDECODE('\uc774\uc6a9\uc7ac(610423)') (11)"; SQL statement:
MERGE INTO TBL_PUBLIC_COMPLAINT_INFO KEY (company_no,comp_date,seq) select  '100' , ? , ? , ? , ? , ? , ? , ? , ? , ? , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss') [22001-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:457)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.value.TypeInfo.getValueTooLongException(TypeInfo.java:535)
	at org.h2.value.TypeInfo.cast(TypeInfo.java:520)
	at org.h2.table.Column.validateConvertUpdateSequence(Column.java:378)
	at org.h2.table.Table.validateConvertUpdateSequence(Table.java:845)
	at org.h2.command.dml.Merge.merge(Merge.java:175)
	at org.h2.command.dml.Merge.update(Merge.java:132)
	at org.h2.command.CommandContainer.update(CommandContainer.java:198)
	at org.h2.command.Command.executeUpdate(Command.java:251)
	at org.h2.server.TcpServerThread.process(TcpServerThread.java:406)
	at org.h2.server.TcpServerThread.run(TcpServerThread.java:183)
	at java.lang.Thread.run(Unknown Source)

	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:247)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1443)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:633)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:647)
	at org.springframework.jdbc.core.JdbcTemplate.batchUpdate(JdbcTemplate.java:936)
	at org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.batchUpdate(NamedParameterJdbcTemplate.java:366)
	at com.pjy.dashboard.dao.DynamicSqlDao.batchInsert(DynamicSqlDao.java:743)
	at com.pjy.dashboard.dao.DynamicSqlDao$$FastClassBySpringCGLIB$$8af24191.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at com.pjy.dashboard.dao.DynamicSqlH2Dao$$EnhancerBySpringCGLIB$$8d75c31e.batchInsert(<generated>)
	at com.pjy.dashboard.service.DynamicSqlService.mergeInfo(DynamicSqlService.java:785)
	at com.pjy.dashboard.controller.TestController.BUS_mergeInfo(TestController.java:502)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:893)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:798)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:97)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at jdk.internal.reflect.GeneratedMethodAccessor150.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$2bac5943.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:114)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:104)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.h2.jdbc.JdbcSQLDataException: Value too long for column "EMP_NM VARCHAR(10)": "STRINGDECODE('\uc774\uc6a9\uc7ac(610423)') (11)"; SQL statement:
MERGE INTO TBL_PUBLIC_COMPLAINT_INFO KEY (company_no,comp_date,seq) select  '100' , ? , ? , ? , ? , ? , ? , ? , ? , ? , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss') [22001-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:457)
	at org.h2.engine.SessionRemote.done(SessionRemote.java:611)
	at org.h2.command.CommandRemote.executeUpdate(CommandRemote.java:237)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdateInternal(JdbcPreparedStatement.java:191)
	at org.h2.jdbc.JdbcPreparedStatement.executeBatch(JdbcPreparedStatement.java:1219)
	at net.sf.log4jdbc.sql.jdbcapi.StatementSpy.executeBatch(StatementSpy.java:571)
	at com.zaxxer.hikari.pool.ProxyStatement.executeBatch(ProxyStatement.java:128)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeBatch(HikariProxyPreparedStatement.java)
	at org.springframework.jdbc.core.JdbcTemplate.lambda$batchUpdate$2(JdbcTemplate.java:950)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:617)
	... 133 common frames omitted
2023-07-12 16:23:41.944 WARN  [http-nio-10010-exec-9] [o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver] - Resolved [org.springframework.dao.DataIntegrityViolationException: PreparedStatementCallback; SQL [MERGE INTO TBL_PUBLIC_COMPLAINT_INFO KEY (company_no,comp_date,seq) select  '100' , ? , ? , ? , ? , ? , ? , ? , ? , ? , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')]; Value too long for column "EMP_NM VARCHAR(10)": "STRINGDECODE('\uc774\uc6a9\uc7ac(610423)') (11)"; SQL statement:
MERGE INTO TBL_PUBLIC_COMPLAINT_INFO KEY (company_no,comp_date,seq) select  '100' , ? , ? , ? , ? , ? , ? , ? , ? , ? , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss') [22001-200]; nested exception is org.h2.jdbc.JdbcSQLDataException: Value too long for column "EMP_NM VARCHAR(10)": "STRINGDECODE('\uc774\uc6a9\uc7ac(610423)') (11)"; SQL statement:
MERGE INTO TBL_PUBLIC_COMPLAINT_INFO KEY (company_no,comp_date,seq) select  '100' , ? , ? , ? , ? , ? , ? , ? , ? , ? , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss') [22001-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:457)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.value.TypeInfo.getValueTooLongException(TypeInfo.java:535)
	at org.h2.value.TypeInfo.cast(TypeInfo.java:520)
	at org.h2.table.Column.validateConvertUpdateSequence(Column.java:378)
	at org.h2.table.Table.validateConvertUpdateSequence(Table.java:845)
	at org.h2.command.dml.Merge.merge(Merge.java:175)
	at org.h2.command.dml.Merge.update(Merge.java:132)
	at org.h2.command.CommandContainer.update(CommandContainer.java:198)
	at org.h2.command.Command.executeUpdate(Command.java:251)
	at org.h2.server.TcpServerThread.process(TcpServerThread.java:406)
	at org.h2.server.TcpServerThread.run(TcpServerThread.java:183)
	at java.lang.Thread.run(Unknown Source)
]
2023-07-12 16:24:08.274 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@46cc5e06
2023-07-12 16:24:08.274 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_PUBLIC_COMPLAINT_INFO} 
2023-07-12 16:24:08.274 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
2023-07-12 16:24:08.276 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
2. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-12 16:24:08.279 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
2. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 2 msec}
2023-07-12 16:24:08.280 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
2. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 1 msec}
2023-07-12 16:24:13.306 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
2. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 16:24:13.316 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeUpdate(ProxyStatement.java:120)
2. DELETE FROM TBL_PUBLIC_COMPLAINT_INFO WHERE company_no = '100'
 {executed in 1 msec}
2023-07-12 16:24:13.318 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - emp:최정배
2023-07-12 16:24:13.318 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - emp:김명현
2023-07-12 16:24:13.318 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - emp:최기성
2023-07-12 16:24:13.318 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - emp:이용재(610423)
2023-07-12 16:24:13.318 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - emp:심기섭
2023-07-12 16:24:13.319 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - emp:3645.0
2023-07-12 16:24:13.319 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - emp:3619.0
2023-07-12 16:24:13.319 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - emp:3641.0
2023-07-12 16:24:13.319 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - emp:3621.0
2023-07-12 16:24:13.319 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - emp:정해열
2023-07-12 16:24:13.319 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - emp:김현수
2023-07-12 16:24:13.319 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - emp:박종호
2023-07-12 16:24:13.319 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - emp:김정일
2023-07-12 16:24:13.333 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@46cc5e06
2023-07-12 16:24:13.333 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_PUBLIC_COMPLAINT_INFO} 
2023-07-12 16:24:13.333 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
2023-07-12 16:24:13.335 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
2. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 1 msec}
2023-07-12 16:24:13.337 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
2. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 1 msec}
2023-07-12 16:54:17.209 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Starting PjyApplication on DESKTOP-QJPD93S with PID 12052 (D:\BUS\dashboard\dashboard\target\classes started by admin in D:\BUS\dashboard\dashboard)
2023-07-12 16:54:17.213 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - The following profiles are active: oauth
2023-07-12 16:54:17.267 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-07-12 16:54:17.268 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-07-12 16:54:18.455 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-07-12 16:54:18.456 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-07-12 16:54:18.618 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 152ms. Found 3 JPA repository interfaces.
2023-07-12 16:54:18.969 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-07-12 16:54:18.970 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2023-07-12 16:54:19.014 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.FileRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-07-12 16:54:19.014 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.MemberRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-07-12 16:54:19.015 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.RememberMeRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-07-12 16:54:19.015 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 45ms. Found 0 JDBC repository interfaces.
2023-07-12 16:54:19.453 INFO  [restartedMain] [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] - Post-processing PropertySource instances
2023-07-12 16:54:19.527 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2023-07-12 16:54:19.528 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource commandLineArgs [org.springframework.core.env.SimpleCommandLinePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-07-12 16:54:19.528 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-07-12 16:54:19.528 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-07-12 16:54:19.528 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2023-07-12 16:54:19.528 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
2023-07-12 16:54:19.529 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2023-07-12 16:54:19.529 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application-oauth.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-07-12 16:54:19.529 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-07-12 16:54:19.529 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2023-07-12 16:54:19.529 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [pjy.properties] [org.springframework.core.env.CompositePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-07-12 16:54:19.529 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [common.properties] [org.springframework.core.io.support.ResourcePropertySource] to EncryptableMapPropertySourceWrapper
2023-07-12 16:54:19.596 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'asyncConfiguration' of type [com.pjy.dashboard.configuration.AsyncConfiguration$$EnhancerBySpringCGLIB$$4e5fc165] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 16:54:19.651 INFO  [restartedMain] [c.u.j.filter.DefaultLazyPropertyFilter] - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2023-07-12 16:54:19.739 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$38562592] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 16:54:19.822 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 16:54:19.825 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@2cc80791' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 16:54:19.832 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$5d2ac844] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 16:54:19.844 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration$$EnhancerBySpringCGLIB$$827fe05a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 16:54:19.848 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 16:54:19.849 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 16:54:19.872 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$9fa85d58] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 16:54:19.901 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$1f28aa8a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 16:54:20.035 INFO  [restartedMain] [c.u.j.r.DefaultLazyPropertyResolver] - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2023-07-12 16:54:20.040 INFO  [restartedMain] [c.u.j.d.DefaultLazyPropertyDetector] - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2023-07-12 16:54:20.462 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 10010 (http)
2023-07-12 16:54:20.477 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Initializing ProtocolHandler ["http-nio-10010"]
2023-07-12 16:54:20.489 INFO  [restartedMain] [org.apache.catalina.core.StandardService] - Starting service [Tomcat]
2023-07-12 16:54:20.489 INFO  [restartedMain] [org.apache.catalina.core.StandardEngine] - Starting Servlet engine: [Apache Tomcat/9.0.29]
2023-07-12 16:54:20.858 INFO  [restartedMain] [org.apache.jasper.servlet.TldScanner] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2023-07-12 16:54:20.868 INFO  [restartedMain] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring embedded WebApplicationContext
2023-07-12 16:54:20.868 INFO  [restartedMain] [o.s.web.context.ContextLoader] - Root WebApplicationContext: initialization completed in 3600 ms
2023-07-12 16:54:21.700 INFO  [restartedMain] [c.u.j.encryptor.DefaultLazyEncryptor] - Found Custom Encryptor Bean org.jasypt.encryption.pbe.PooledPBEStringEncryptor@7e0e71e with name: jasyptStringEncryptor
2023-07-12 16:54:21.760 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Starting...
2023-07-12 16:54:21.845 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.executeSql(PoolBase.java:567)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 8 msec}
2023-07-12 16:54:21.859 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Start completed.
2023-07-12 16:54:22.594 INFO  [restartedMain] [com.pjy.dashboard.filter.TestFilter] - init Pjy Filter
2023-07-12 16:54:22.973 INFO  [restartedMain] [o.hibernate.jpa.internal.util.LogHelper] - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2023-07-12 16:54:23.047 INFO  [restartedMain] [org.hibernate.Version] - HHH000412: Hibernate Core {5.3.14.Final}
2023-07-12 16:54:23.049 INFO  [restartedMain] [org.hibernate.cfg.Environment] - HHH000206: hibernate.properties not found
2023-07-12 16:54:23.206 INFO  [restartedMain] [org.hibernate.annotations.common.Version] - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2023-07-12 16:54:23.444 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 16:54:23.460 INFO  [restartedMain] [org.hibernate.dialect.Dialect] - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2023-07-12 16:54:24.174 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 16:54:24.176 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select SEQUENCE_CATALOG, SEQUENCE_SCHEMA, SEQUENCE_NAME, INCREMENT from information_schema.sequences
 {executed in 1 msec}
2023-07-12 16:54:24.227 INFO  [restartedMain] [o.s.o.j.LocalContainerEntityManagerFactoryBean] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-07-12 16:54:24.504 INFO  [restartedMain] [o.h.h.i.QueryTranslatorFactoryInitiator] - HHH000397: Using ASTQueryTranslatorFactory
2023-07-12 16:54:25.587 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService
2023-07-12 16:54:25.597 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'asyncThreadPool'
2023-07-12 16:54:25.790 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/h2-console/**'], []
2023-07-12 16:54:25.790 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/css/**'], []
2023-07-12 16:54:25.790 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/js/**'], []
2023-07-12 16:54:25.790 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/monitor/**'], []
2023-07-12 16:54:25.790 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/img/**'], []
2023-07-12 16:54:25.791 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/lib/**'], []
2023-07-12 16:54:25.791 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/main.css'], []
2023-07-12 16:54:25.791 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/common.js'], []
2023-07-12 16:54:25.791 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/resources/**'], []
2023-07-12 16:54:25.952 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@48deed31, org.springframework.security.web.context.SecurityContextPersistenceFilter@44a7efec, org.springframework.security.web.header.HeaderWriterFilter@68359f1e, org.springframework.web.filter.CorsFilter@5b60c93, org.springframework.security.web.authentication.logout.LogoutFilter@1b7e786c, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@36780575, org.springframework.security.web.session.ConcurrentSessionFilter@7e1f1de, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@157b3da6, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1fc30349, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@62cfbbb5, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@fcbe99, org.springframework.security.web.session.SessionManagementFilter@3fab92ad, org.springframework.security.web.access.ExceptionTranslationFilter@3d292924, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@80170e2]
2023-07-12 16:54:25.972 INFO  [restartedMain] [o.s.aop.framework.CglibAopProxy] - Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(javax.servlet.FilterConfig) throws javax.servlet.ServletException] because it is marked as final: Consider using interface-based JDK proxies instead!
2023-07-12 16:54:26.326 WARN  [restartedMain] [o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-07-12 16:54:26.397 INFO  [restartedMain] [o.s.b.a.w.s.WelcomePageHandlerMapping] - Adding welcome page: ServletContext resource [/index.html]
2023-07-12 16:54:26.844 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 16:54:27.688 INFO  [restartedMain] [o.s.b.d.a.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2023-07-12 16:54:27.715 INFO  [restartedMain] [o.s.b.a.e.web.EndpointLinksResolver] - Exposing 16 endpoint(s) beneath base path '/actuator'
2023-07-12 16:54:27.851 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskScheduler] - Initializing ExecutorService
2023-07-12 16:54:27.858 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Starting ProtocolHandler ["http-nio-10010"]
2023-07-12 16:54:27.905 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 10010 (http) with context path ''
2023-07-12 16:54:27.912 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Started PjyApplication in 11.183 seconds (JVM running for 12.601)
2023-07-12 16:54:27.912 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-07-12 16:54:27.912 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - Application started
2023-07-12 16:54:27.913 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-07-12 16:54:28.854 INFO  [RMI TCP Connection(9)-127.0.0.1] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-07-12 16:54:28.855 INFO  [RMI TCP Connection(9)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Initializing Servlet 'dispatcherServlet'
2023-07-12 16:54:28.875 INFO  [RMI TCP Connection(9)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Completed initialization in 20 ms
2023-07-12 16:55:28.843 WARN  [http-nio-10010-exec-1] [o.a.catalina.util.SessionIdGeneratorBase] - Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [154] milliseconds.
2023-07-12 16:55:29.595 INFO  [http-nio-10010-exec-3] [c.p.d.interceptor.LoggerInterceptor] - ============================== START ==============================
2023-07-12 16:55:29.596 INFO  [http-nio-10010-exec-3] [c.p.d.interceptor.LoggerInterceptor] -  Class       	:  class org.springframework.web.method.HandlerMethod
2023-07-12 16:55:29.596 INFO  [http-nio-10010-exec-3] [c.p.d.interceptor.LoggerInterceptor] -  Request URI 	:  /error
2023-07-12 16:55:29.596 INFO  [http-nio-10010-exec-3] [c.p.d.interceptor.LoggerInterceptor] -  Request addr	:  0:0:0:0:0:0:0:1
2023-07-12 16:55:29.596 INFO  [http-nio-10010-exec-3] [c.p.d.interceptor.LoggerInterceptor] -  Servlet URI 	:  /error
2023-07-12 16:55:31.141 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 16:55:31.149 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select * from MEMBER where userId = 'p00139'
 {executed in 1 msec}
2023-07-12 16:55:31.170 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.MemberServiceImpl] - ROLE_ADMIN
2023-07-12 16:55:31.258 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.MemberServiceImpl] - pass:$2a$10$MNrQAPw.4k9j2y08eTmYEeI7oKPuaWbA97HHog.8PYep5HsRwhbae,$2a$10$e/IRF7xifIot86SQKztvWuDV6EfxEIwVWqkHCIg4IJYM3XT3f8Vna
2023-07-12 16:55:31.354 INFO  [http-nio-10010-exec-4] [c.p.d.configuration.SecurityConfig] - authentication:: p00139
2023-07-12 16:55:33.471 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@46cc5e06
2023-07-12 16:55:33.471 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_PUBLIC_COMPLAINT_INFO} 
2023-07-12 16:55:33.522 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
2023-07-12 16:55:33.534 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 16:55:33.535 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 1 msec}
2023-07-12 16:55:33.540 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 0 msec}
2023-07-12 16:55:38.935 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-12 16:55:38.940 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeUpdate(ProxyStatement.java:120)
1. DELETE FROM TBL_PUBLIC_COMPLAINT_INFO WHERE company_no = '100'
 {executed in 1 msec}
2023-07-12 16:55:38.990 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '최정배%'
 {executed in 0 msec}
2023-07-12 16:55:38.998 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '김명현%'
 {executed in 0 msec}
2023-07-12 16:55:39.000 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '최기성%'
 {executed in 1 msec}
2023-07-12 16:55:39.002 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '이용재(610423)%'
 {executed in 0 msec}
2023-07-12 16:55:39.007 ERROR [http-nio-10010-exec-4] [c.p.d.core.error.GlobalExceptionHandler] - handleEntityNotFoundException
java.lang.NullPointerException: Cannot invoke "java.lang.StringBuffer.append(String)" because "msg" is null
	at com.pjy.dashboard.service.DynamicSqlService.validationCheck(DynamicSqlService.java:734)
	at com.pjy.dashboard.service.DynamicSqlService.insertInfo(DynamicSqlService.java:749)
	at com.pjy.dashboard.controller.TestController.BUS_insertInfo(TestController.java:399)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:893)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:798)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:97)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at jdk.internal.reflect.GeneratedMethodAccessor150.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$c639fa13.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:114)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:104)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-07-12 16:55:39.045 WARN  [http-nio-10010-exec-4] [o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver] - Resolved [java.lang.NullPointerException: Cannot invoke "java.lang.StringBuffer.append(String)" because "msg" is null]
2023-07-12 16:56:48.129 INFO  [RMI TCP Connection(15)-127.0.0.1] [o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin] - Application shutdown requested.
2023-07-12 16:56:48.156 INFO  [RMI TCP Connection(15)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Shutting down ExecutorService 'asyncThreadPool'
2023-07-12 16:56:48.159 INFO  [RMI TCP Connection(15)-127.0.0.1] [com.zaxxer.hikari.HikariDataSource] - H2 - Shutdown initiated...
2023-07-12 16:56:48.166 INFO  [RMI TCP Connection(15)-127.0.0.1] [com.zaxxer.hikari.HikariDataSource] - H2 - Shutdown completed.
2023-07-12 16:56:48.218 INFO  [RMI TCP Connection(15)-127.0.0.1] [com.pjy.dashboard.filter.TestFilter] - destroy Pjy Filter
2023-07-12 16:57:06.392 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Starting PjyApplication on DESKTOP-QJPD93S with PID 9812 (D:\BUS\dashboard\dashboard\target\classes started by admin in D:\BUS\dashboard\dashboard)
2023-07-12 16:57:06.396 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - The following profiles are active: oauth
2023-07-12 16:57:06.452 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-07-12 16:57:06.452 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-07-12 16:57:07.648 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-07-12 16:57:07.649 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-07-12 16:57:07.798 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 138ms. Found 3 JPA repository interfaces.
2023-07-12 16:57:08.142 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-07-12 16:57:08.142 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2023-07-12 16:57:08.185 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.FileRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-07-12 16:57:08.185 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.MemberRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-07-12 16:57:08.186 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.RememberMeRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-07-12 16:57:08.187 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 45ms. Found 0 JDBC repository interfaces.
2023-07-12 16:57:08.639 INFO  [restartedMain] [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] - Post-processing PropertySource instances
2023-07-12 16:57:08.710 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2023-07-12 16:57:08.711 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource commandLineArgs [org.springframework.core.env.SimpleCommandLinePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-07-12 16:57:08.711 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-07-12 16:57:08.711 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-07-12 16:57:08.711 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2023-07-12 16:57:08.712 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
2023-07-12 16:57:08.712 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2023-07-12 16:57:08.712 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application-oauth.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-07-12 16:57:08.712 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-07-12 16:57:08.712 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2023-07-12 16:57:08.712 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [pjy.properties] [org.springframework.core.env.CompositePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-07-12 16:57:08.712 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [common.properties] [org.springframework.core.io.support.ResourcePropertySource] to EncryptableMapPropertySourceWrapper
2023-07-12 16:57:08.773 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'asyncConfiguration' of type [com.pjy.dashboard.configuration.AsyncConfiguration$$EnhancerBySpringCGLIB$$ce48d3ef] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 16:57:08.823 INFO  [restartedMain] [c.u.j.filter.DefaultLazyPropertyFilter] - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2023-07-12 16:57:08.913 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$b83f381c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 16:57:08.996 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 16:57:08.998 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@49228985' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 16:57:09.000 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$dd13dace] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 16:57:09.008 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration$$EnhancerBySpringCGLIB$$268f2e4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 16:57:09.011 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 16:57:09.013 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 16:57:09.035 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$1f916fe2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 16:57:09.063 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$9f11bd14] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 16:57:09.190 INFO  [restartedMain] [c.u.j.r.DefaultLazyPropertyResolver] - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2023-07-12 16:57:09.195 INFO  [restartedMain] [c.u.j.d.DefaultLazyPropertyDetector] - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2023-07-12 16:57:09.620 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 10010 (http)
2023-07-12 16:57:09.636 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Initializing ProtocolHandler ["http-nio-10010"]
2023-07-12 16:57:09.648 INFO  [restartedMain] [org.apache.catalina.core.StandardService] - Starting service [Tomcat]
2023-07-12 16:57:09.648 INFO  [restartedMain] [org.apache.catalina.core.StandardEngine] - Starting Servlet engine: [Apache Tomcat/9.0.29]
2023-07-12 16:57:10.069 INFO  [restartedMain] [org.apache.jasper.servlet.TldScanner] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2023-07-12 16:57:10.079 INFO  [restartedMain] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring embedded WebApplicationContext
2023-07-12 16:57:10.080 INFO  [restartedMain] [o.s.web.context.ContextLoader] - Root WebApplicationContext: initialization completed in 3627 ms
2023-07-12 16:57:10.924 INFO  [restartedMain] [c.u.j.encryptor.DefaultLazyEncryptor] - Found Custom Encryptor Bean org.jasypt.encryption.pbe.PooledPBEStringEncryptor@55c58b05 with name: jasyptStringEncryptor
2023-07-12 16:57:10.982 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Starting...
2023-07-12 16:57:11.066 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.executeSql(PoolBase.java:567)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 7 msec}
2023-07-12 16:57:11.070 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Start completed.
2023-07-12 16:57:11.839 INFO  [restartedMain] [com.pjy.dashboard.filter.TestFilter] - init Pjy Filter
2023-07-12 16:57:12.220 INFO  [restartedMain] [o.hibernate.jpa.internal.util.LogHelper] - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2023-07-12 16:57:12.295 INFO  [restartedMain] [org.hibernate.Version] - HHH000412: Hibernate Core {5.3.14.Final}
2023-07-12 16:57:12.298 INFO  [restartedMain] [org.hibernate.cfg.Environment] - HHH000206: hibernate.properties not found
2023-07-12 16:57:12.448 INFO  [restartedMain] [org.hibernate.annotations.common.Version] - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2023-07-12 16:57:12.677 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-12 16:57:12.694 INFO  [restartedMain] [org.hibernate.dialect.Dialect] - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2023-07-12 16:57:13.399 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-12 16:57:13.402 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select SEQUENCE_CATALOG, SEQUENCE_SCHEMA, SEQUENCE_NAME, INCREMENT from information_schema.sequences
 {executed in 1 msec}
2023-07-12 16:57:13.452 INFO  [restartedMain] [o.s.o.j.LocalContainerEntityManagerFactoryBean] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-07-12 16:57:13.711 INFO  [restartedMain] [o.h.h.i.QueryTranslatorFactoryInitiator] - HHH000397: Using ASTQueryTranslatorFactory
2023-07-12 16:57:14.779 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService
2023-07-12 16:57:14.789 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'asyncThreadPool'
2023-07-12 16:57:14.965 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/h2-console/**'], []
2023-07-12 16:57:14.965 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/css/**'], []
2023-07-12 16:57:14.966 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/js/**'], []
2023-07-12 16:57:14.966 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/monitor/**'], []
2023-07-12 16:57:14.966 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/img/**'], []
2023-07-12 16:57:14.966 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/lib/**'], []
2023-07-12 16:57:14.966 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/main.css'], []
2023-07-12 16:57:14.966 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/common.js'], []
2023-07-12 16:57:14.966 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/resources/**'], []
2023-07-12 16:57:15.122 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@53317330, org.springframework.security.web.context.SecurityContextPersistenceFilter@f3e5025, org.springframework.security.web.header.HeaderWriterFilter@60617bc7, org.springframework.web.filter.CorsFilter@46a49e59, org.springframework.security.web.authentication.logout.LogoutFilter@27b1be3e, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@30565622, org.springframework.security.web.session.ConcurrentSessionFilter@48e71729, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@47bc81b4, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2ba8e408, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4c777b13, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@16fec9fb, org.springframework.security.web.session.SessionManagementFilter@4a635a94, org.springframework.security.web.access.ExceptionTranslationFilter@15b8165c, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@23a82fb]
2023-07-12 16:57:15.152 INFO  [restartedMain] [o.s.aop.framework.CglibAopProxy] - Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(javax.servlet.FilterConfig) throws javax.servlet.ServletException] because it is marked as final: Consider using interface-based JDK proxies instead!
2023-07-12 16:57:15.497 WARN  [restartedMain] [o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-07-12 16:57:15.571 INFO  [restartedMain] [o.s.b.a.w.s.WelcomePageHandlerMapping] - Adding welcome page: ServletContext resource [/index.html]
2023-07-12 16:57:15.996 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 16:57:16.828 INFO  [restartedMain] [o.s.b.d.a.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2023-07-12 16:57:16.863 INFO  [restartedMain] [o.s.b.a.e.web.EndpointLinksResolver] - Exposing 16 endpoint(s) beneath base path '/actuator'
2023-07-12 16:57:16.998 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskScheduler] - Initializing ExecutorService
2023-07-12 16:57:17.004 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Starting ProtocolHandler ["http-nio-10010"]
2023-07-12 16:57:17.048 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 10010 (http) with context path ''
2023-07-12 16:57:17.052 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Started PjyApplication in 11.131 seconds (JVM running for 12.522)
2023-07-12 16:57:17.053 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-07-12 16:57:17.053 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - Application started
2023-07-12 16:57:17.053 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-07-12 16:57:17.931 INFO  [RMI TCP Connection(9)-127.0.0.1] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-07-12 16:57:17.931 INFO  [RMI TCP Connection(9)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Initializing Servlet 'dispatcherServlet'
2023-07-12 16:57:17.951 INFO  [RMI TCP Connection(9)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Completed initialization in 20 ms
2023-07-12 16:57:34.146 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@46cc5e06
2023-07-12 16:57:34.146 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_PUBLIC_COMPLAINT_INFO} 
2023-07-12 16:57:34.206 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
2023-07-12 16:57:34.219 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 16:57:34.221 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 0 msec}
2023-07-12 16:57:34.227 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 0 msec}
2023-07-12 16:57:48.643 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-12 16:57:48.650 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeUpdate(ProxyStatement.java:120)
1. DELETE FROM TBL_PUBLIC_COMPLAINT_INFO WHERE company_no = '100'
 {executed in 1 msec}
2023-07-12 16:57:48.698 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '최정배%'
 {executed in 0 msec}
2023-07-12 16:57:48.707 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '김명현%'
 {executed in 1 msec}
2023-07-12 16:57:48.709 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '최기성%'
 {executed in 1 msec}
2023-07-12 16:57:48.711 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '이용재(610423)%'
 {executed in 0 msec}
2023-07-12 16:57:48.712 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '심기섭%'
 {executed in 0 msec}
2023-07-12 16:57:48.714 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '3645.0%'
 {executed in 0 msec}
2023-07-12 16:57:48.715 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '3619.0%'
 {executed in 1 msec}
2023-07-12 16:57:48.717 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '3641.0%'
 {executed in 0 msec}
2023-07-12 16:57:48.719 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '3621.0%'
 {executed in 1 msec}
2023-07-12 16:57:48.721 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '정해열%'
 {executed in 1 msec}
2023-07-12 16:57:48.723 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '김현수%'
 {executed in 1 msec}
2023-07-12 16:57:48.725 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '박종호%'
 {executed in 0 msec}
2023-07-12 16:57:48.727 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '김정일%'
 {executed in 0 msec}
2023-07-12 16:57:48.742 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@46cc5e06
2023-07-12 16:57:48.742 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_PUBLIC_COMPLAINT_INFO} 
2023-07-12 16:57:48.742 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
2023-07-12 16:57:48.744 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 0 msec}
2023-07-12 16:57:48.745 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 1 msec}
2023-07-12 17:06:18.517 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Starting PjyApplication on DESKTOP-QJPD93S with PID 12012 (D:\BUS\dashboard\dashboard\target\classes started by admin in D:\BUS\dashboard\dashboard)
2023-07-12 17:06:18.522 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - The following profiles are active: oauth
2023-07-12 17:06:18.576 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-07-12 17:06:18.576 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-07-12 17:06:19.807 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-07-12 17:06:19.807 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-07-12 17:06:19.956 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 140ms. Found 3 JPA repository interfaces.
2023-07-12 17:06:20.315 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-07-12 17:06:20.316 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2023-07-12 17:06:20.360 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.FileRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-07-12 17:06:20.361 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.MemberRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-07-12 17:06:20.362 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.RememberMeRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-07-12 17:06:20.362 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 46ms. Found 0 JDBC repository interfaces.
2023-07-12 17:06:20.851 INFO  [restartedMain] [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] - Post-processing PropertySource instances
2023-07-12 17:06:20.917 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2023-07-12 17:06:20.917 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource commandLineArgs [org.springframework.core.env.SimpleCommandLinePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-07-12 17:06:20.918 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-07-12 17:06:20.918 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-07-12 17:06:20.918 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2023-07-12 17:06:20.918 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
2023-07-12 17:06:20.918 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2023-07-12 17:06:20.918 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application-oauth.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-07-12 17:06:20.918 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-07-12 17:06:20.919 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2023-07-12 17:06:20.919 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [pjy.properties] [org.springframework.core.env.CompositePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-07-12 17:06:20.919 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [common.properties] [org.springframework.core.io.support.ResourcePropertySource] to EncryptableMapPropertySourceWrapper
2023-07-12 17:06:20.977 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'asyncConfiguration' of type [com.pjy.dashboard.configuration.AsyncConfiguration$$EnhancerBySpringCGLIB$$2faf9f08] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 17:06:21.027 INFO  [restartedMain] [c.u.j.filter.DefaultLazyPropertyFilter] - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2023-07-12 17:06:21.112 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$19a60335] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 17:06:21.192 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 17:06:21.200 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@1655b9ec' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 17:06:21.205 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$3e7aa5e7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 17:06:21.216 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration$$EnhancerBySpringCGLIB$$63cfbdfd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 17:06:21.219 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 17:06:21.221 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 17:06:21.245 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$80f83afb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 17:06:21.275 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$78882d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 17:06:21.418 INFO  [restartedMain] [c.u.j.r.DefaultLazyPropertyResolver] - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2023-07-12 17:06:21.422 INFO  [restartedMain] [c.u.j.d.DefaultLazyPropertyDetector] - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2023-07-12 17:06:21.845 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 10010 (http)
2023-07-12 17:06:21.869 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Initializing ProtocolHandler ["http-nio-10010"]
2023-07-12 17:06:21.880 INFO  [restartedMain] [org.apache.catalina.core.StandardService] - Starting service [Tomcat]
2023-07-12 17:06:21.880 INFO  [restartedMain] [org.apache.catalina.core.StandardEngine] - Starting Servlet engine: [Apache Tomcat/9.0.29]
2023-07-12 17:06:22.242 INFO  [restartedMain] [org.apache.jasper.servlet.TldScanner] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2023-07-12 17:06:22.254 INFO  [restartedMain] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring embedded WebApplicationContext
2023-07-12 17:06:22.254 INFO  [restartedMain] [o.s.web.context.ContextLoader] - Root WebApplicationContext: initialization completed in 3678 ms
2023-07-12 17:06:23.107 INFO  [restartedMain] [c.u.j.encryptor.DefaultLazyEncryptor] - Found Custom Encryptor Bean org.jasypt.encryption.pbe.PooledPBEStringEncryptor@73207728 with name: jasyptStringEncryptor
2023-07-12 17:06:23.154 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Starting...
2023-07-12 17:06:23.254 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.executeSql(PoolBase.java:567)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 8 msec}
2023-07-12 17:06:23.258 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Start completed.
2023-07-12 17:06:24.007 INFO  [restartedMain] [com.pjy.dashboard.filter.TestFilter] - init Pjy Filter
2023-07-12 17:06:24.380 INFO  [restartedMain] [o.hibernate.jpa.internal.util.LogHelper] - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2023-07-12 17:06:24.453 INFO  [restartedMain] [org.hibernate.Version] - HHH000412: Hibernate Core {5.3.14.Final}
2023-07-12 17:06:24.455 INFO  [restartedMain] [org.hibernate.cfg.Environment] - HHH000206: hibernate.properties not found
2023-07-12 17:06:24.611 INFO  [restartedMain] [org.hibernate.annotations.common.Version] - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2023-07-12 17:06:24.854 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 17:06:24.872 INFO  [restartedMain] [org.hibernate.dialect.Dialect] - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2023-07-12 17:06:25.584 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-12 17:06:25.588 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select SEQUENCE_CATALOG, SEQUENCE_SCHEMA, SEQUENCE_NAME, INCREMENT from information_schema.sequences
 {executed in 1 msec}
2023-07-12 17:06:25.639 INFO  [restartedMain] [o.s.o.j.LocalContainerEntityManagerFactoryBean] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-07-12 17:06:25.921 INFO  [restartedMain] [o.h.h.i.QueryTranslatorFactoryInitiator] - HHH000397: Using ASTQueryTranslatorFactory
2023-07-12 17:06:26.992 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService
2023-07-12 17:06:27.002 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'asyncThreadPool'
2023-07-12 17:06:27.188 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/h2-console/**'], []
2023-07-12 17:06:27.188 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/css/**'], []
2023-07-12 17:06:27.188 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/js/**'], []
2023-07-12 17:06:27.188 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/monitor/**'], []
2023-07-12 17:06:27.188 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/img/**'], []
2023-07-12 17:06:27.189 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/lib/**'], []
2023-07-12 17:06:27.189 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/main.css'], []
2023-07-12 17:06:27.189 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/common.js'], []
2023-07-12 17:06:27.189 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/resources/**'], []
2023-07-12 17:06:27.360 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@158fc3b7, org.springframework.security.web.context.SecurityContextPersistenceFilter@7b5548cc, org.springframework.security.web.header.HeaderWriterFilter@60617bc7, org.springframework.web.filter.CorsFilter@418f483f, org.springframework.security.web.authentication.logout.LogoutFilter@144dda5d, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@6c41483d, org.springframework.security.web.session.ConcurrentSessionFilter@2ba8e408, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@7fe9f383, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@12bc302, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@563ccb7a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@789bedf7, org.springframework.security.web.session.SessionManagementFilter@373b9062, org.springframework.security.web.access.ExceptionTranslationFilter@15b8165c, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@503d6a5a]
2023-07-12 17:06:27.386 INFO  [restartedMain] [o.s.aop.framework.CglibAopProxy] - Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(javax.servlet.FilterConfig) throws javax.servlet.ServletException] because it is marked as final: Consider using interface-based JDK proxies instead!
2023-07-12 17:06:27.748 WARN  [restartedMain] [o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-07-12 17:06:27.825 INFO  [restartedMain] [o.s.b.a.w.s.WelcomePageHandlerMapping] - Adding welcome page: ServletContext resource [/index.html]
2023-07-12 17:06:28.238 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-12 17:06:29.073 INFO  [restartedMain] [o.s.b.d.a.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2023-07-12 17:06:29.101 INFO  [restartedMain] [o.s.b.a.e.web.EndpointLinksResolver] - Exposing 16 endpoint(s) beneath base path '/actuator'
2023-07-12 17:06:29.252 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskScheduler] - Initializing ExecutorService
2023-07-12 17:06:29.260 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Starting ProtocolHandler ["http-nio-10010"]
2023-07-12 17:06:29.316 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 10010 (http) with context path ''
2023-07-12 17:06:29.321 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Started PjyApplication in 11.284 seconds (JVM running for 12.685)
2023-07-12 17:06:29.321 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-07-12 17:06:29.321 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - Application started
2023-07-12 17:06:29.321 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-07-12 17:06:30.407 INFO  [RMI TCP Connection(8)-127.0.0.1] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-07-12 17:06:30.407 INFO  [RMI TCP Connection(8)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Initializing Servlet 'dispatcherServlet'
2023-07-12 17:06:30.429 INFO  [RMI TCP Connection(8)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Completed initialization in 22 ms
2023-07-12 17:06:58.211 WARN  [http-nio-10010-exec-1] [o.a.catalina.util.SessionIdGeneratorBase] - Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [155] milliseconds.
2023-07-12 17:06:58.935 INFO  [http-nio-10010-exec-3] [c.p.d.interceptor.LoggerInterceptor] - ============================== START ==============================
2023-07-12 17:06:58.936 INFO  [http-nio-10010-exec-3] [c.p.d.interceptor.LoggerInterceptor] -  Class       	:  class org.springframework.web.method.HandlerMethod
2023-07-12 17:06:58.936 INFO  [http-nio-10010-exec-3] [c.p.d.interceptor.LoggerInterceptor] -  Request URI 	:  /error
2023-07-12 17:06:58.936 INFO  [http-nio-10010-exec-3] [c.p.d.interceptor.LoggerInterceptor] -  Request addr	:  0:0:0:0:0:0:0:1
2023-07-12 17:06:58.936 INFO  [http-nio-10010-exec-3] [c.p.d.interceptor.LoggerInterceptor] -  Servlet URI 	:  /error
2023-07-12 17:07:00.693 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-12 17:07:00.702 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select * from MEMBER where userId = 'p00139'
 {executed in 1 msec}
2023-07-12 17:07:00.720 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.MemberServiceImpl] - ROLE_ADMIN
2023-07-12 17:07:00.807 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.MemberServiceImpl] - pass:$2a$10$MNrQAPw.4k9j2y08eTmYEeI7oKPuaWbA97HHog.8PYep5HsRwhbae,$2a$10$u0ipMvFaaqUX6ax7EBKNteARPzN.tayfUukOBEXQtd0Iw1Vvvm4QK
2023-07-12 17:07:00.898 INFO  [http-nio-10010-exec-4] [c.p.d.configuration.SecurityConfig] - authentication:: p00139
2023-07-12 17:07:04.588 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@46cc5e06
2023-07-12 17:07:04.588 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_PUBLIC_COMPLAINT_INFO} 
2023-07-12 17:07:04.647 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
2023-07-12 17:07:04.662 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 17:07:04.665 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 1 msec}
2023-07-12 17:07:04.672 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 1 msec}
2023-07-12 17:07:10.952 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-12 17:07:10.955 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '최정배%'
 {executed in 1 msec}
2023-07-12 17:07:10.964 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '김명현%'
 {executed in 0 msec}
2023-07-12 17:07:10.966 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '최기성%'
 {executed in 0 msec}
2023-07-12 17:07:10.967 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '이용재(610423)%'
 {executed in 0 msec}
2023-07-12 17:07:10.969 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '심기섭%'
 {executed in 1 msec}
2023-07-12 17:07:10.971 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '3645.0%'
 {executed in 0 msec}
2023-07-12 17:07:10.972 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '3619.0%'
 {executed in 0 msec}
2023-07-12 17:07:10.974 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '3641.0%'
 {executed in 1 msec}
2023-07-12 17:07:10.976 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '3621.0%'
 {executed in 0 msec}
2023-07-12 17:07:10.979 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '정해열%'
 {executed in 0 msec}
2023-07-12 17:07:10.980 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '김현수%'
 {executed in 1 msec}
2023-07-12 17:07:10.982 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '박종호%'
 {executed in 0 msec}
2023-07-12 17:07:10.984 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '김정일%'
 {executed in 0 msec}
2023-07-12 20:12:15.483 INFO  [Catalina-utility-2] [c.pjy.dashboard.listener.SessionListener] - updateUserCloseTime p00139 
2023-07-12 20:12:15.484 INFO  [Catalina-utility-2] [c.pjy.dashboard.listener.SessionListener] - currentSessionUserList ->  false
2023-07-12 20:12:15.484 INFO  [Catalina-utility-2] [c.pjy.dashboard.listener.SessionListener] - updateUserCloseTime p00139 
2023-07-12 20:12:15.484 INFO  [Catalina-utility-2] [c.pjy.dashboard.listener.SessionListener] - currentSessionUserList ->  false
2023-07-12 20:12:21.622 WARN  [H2 housekeeper] [com.zaxxer.hikari.pool.HikariPool] - H2 - Thread starvation or clock leap detected (housekeeper delta=3h28s181ms244µs200ns).
2023-07-12 21:27:59.327 WARN  [H2 housekeeper] [com.zaxxer.hikari.pool.HikariPool] - H2 - Thread starvation or clock leap detected (housekeeper delta=1h15m45s635ms102µs400ns).
2023-07-12 21:57:39.983 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Starting PjyApplication on DESKTOP-QJPD93S with PID 8872 (D:\BUS\dashboard\dashboard\target\classes started by admin in D:\BUS\dashboard\dashboard)
2023-07-12 21:57:39.989 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - The following profiles are active: oauth
2023-07-12 21:57:40.049 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-07-12 21:57:40.049 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-07-12 21:57:41.812 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-07-12 21:57:41.812 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-07-12 21:57:41.981 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 156ms. Found 3 JPA repository interfaces.
2023-07-12 21:57:42.347 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-07-12 21:57:42.348 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2023-07-12 21:57:42.395 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.FileRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-07-12 21:57:42.396 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.MemberRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-07-12 21:57:42.397 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.RememberMeRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-07-12 21:57:42.397 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 49ms. Found 0 JDBC repository interfaces.
2023-07-12 21:57:42.875 INFO  [restartedMain] [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] - Post-processing PropertySource instances
2023-07-12 21:57:42.951 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2023-07-12 21:57:42.951 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource commandLineArgs [org.springframework.core.env.SimpleCommandLinePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-07-12 21:57:42.952 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-07-12 21:57:42.952 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-07-12 21:57:42.952 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2023-07-12 21:57:42.952 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
2023-07-12 21:57:42.952 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2023-07-12 21:57:42.952 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application-oauth.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-07-12 21:57:42.952 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-07-12 21:57:42.952 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2023-07-12 21:57:42.952 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [pjy.properties] [org.springframework.core.env.CompositePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-07-12 21:57:42.953 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [common.properties] [org.springframework.core.io.support.ResourcePropertySource] to EncryptableMapPropertySourceWrapper
2023-07-12 21:57:43.021 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'asyncConfiguration' of type [com.pjy.dashboard.configuration.AsyncConfiguration$$EnhancerBySpringCGLIB$$2eecc899] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 21:57:43.086 INFO  [restartedMain] [c.u.j.filter.DefaultLazyPropertyFilter] - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2023-07-12 21:57:43.191 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$18e32cc6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 21:57:43.298 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 21:57:43.303 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@40a465a8' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 21:57:43.312 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$3db7cf78] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 21:57:43.332 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration$$EnhancerBySpringCGLIB$$630ce78e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 21:57:43.339 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 21:57:43.342 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 21:57:43.377 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8035648c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 21:57:43.412 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$ffb5b1be] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 21:57:43.554 INFO  [restartedMain] [c.u.j.r.DefaultLazyPropertyResolver] - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2023-07-12 21:57:43.560 INFO  [restartedMain] [c.u.j.d.DefaultLazyPropertyDetector] - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2023-07-12 21:57:44.029 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 10010 (http)
2023-07-12 21:57:44.047 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Initializing ProtocolHandler ["http-nio-10010"]
2023-07-12 21:57:44.059 INFO  [restartedMain] [org.apache.catalina.core.StandardService] - Starting service [Tomcat]
2023-07-12 21:57:44.059 INFO  [restartedMain] [org.apache.catalina.core.StandardEngine] - Starting Servlet engine: [Apache Tomcat/9.0.29]
2023-07-12 21:57:45.297 INFO  [restartedMain] [org.apache.jasper.servlet.TldScanner] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2023-07-12 21:57:45.309 INFO  [restartedMain] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring embedded WebApplicationContext
2023-07-12 21:57:45.309 INFO  [restartedMain] [o.s.web.context.ContextLoader] - Root WebApplicationContext: initialization completed in 5260 ms
2023-07-12 21:57:46.208 INFO  [restartedMain] [c.u.j.encryptor.DefaultLazyEncryptor] - Found Custom Encryptor Bean org.jasypt.encryption.pbe.PooledPBEStringEncryptor@6a5149ff with name: jasyptStringEncryptor
2023-07-12 21:57:46.279 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Starting...
2023-07-12 21:57:46.397 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.executeSql(PoolBase.java:567)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 13 msec}
2023-07-12 21:57:46.403 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Start completed.
2023-07-12 21:57:47.191 INFO  [restartedMain] [com.pjy.dashboard.filter.TestFilter] - init Pjy Filter
2023-07-12 21:57:47.718 INFO  [restartedMain] [o.hibernate.jpa.internal.util.LogHelper] - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2023-07-12 21:57:47.805 INFO  [restartedMain] [org.hibernate.Version] - HHH000412: Hibernate Core {5.3.14.Final}
2023-07-12 21:57:47.807 INFO  [restartedMain] [org.hibernate.cfg.Environment] - HHH000206: hibernate.properties not found
2023-07-12 21:57:48.004 INFO  [restartedMain] [org.hibernate.annotations.common.Version] - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2023-07-12 21:57:48.243 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-12 21:57:48.259 INFO  [restartedMain] [org.hibernate.dialect.Dialect] - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2023-07-12 21:57:48.994 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 21:57:48.997 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select SEQUENCE_CATALOG, SEQUENCE_SCHEMA, SEQUENCE_NAME, INCREMENT from information_schema.sequences
 {executed in 0 msec}
2023-07-12 21:57:49.056 INFO  [restartedMain] [o.s.o.j.LocalContainerEntityManagerFactoryBean] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-07-12 21:57:49.346 INFO  [restartedMain] [o.h.h.i.QueryTranslatorFactoryInitiator] - HHH000397: Using ASTQueryTranslatorFactory
2023-07-12 21:57:50.589 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService
2023-07-12 21:57:50.599 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'asyncThreadPool'
2023-07-12 21:57:50.791 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/h2-console/**'], []
2023-07-12 21:57:50.791 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/css/**'], []
2023-07-12 21:57:50.791 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/js/**'], []
2023-07-12 21:57:50.791 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/monitor/**'], []
2023-07-12 21:57:50.792 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/img/**'], []
2023-07-12 21:57:50.792 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/lib/**'], []
2023-07-12 21:57:50.792 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/main.css'], []
2023-07-12 21:57:50.792 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/common.js'], []
2023-07-12 21:57:50.792 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/resources/**'], []
2023-07-12 21:57:50.972 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@bf8d908, org.springframework.security.web.context.SecurityContextPersistenceFilter@26d64560, org.springframework.security.web.header.HeaderWriterFilter@4893ab2, org.springframework.web.filter.CorsFilter@4b1a058f, org.springframework.security.web.authentication.logout.LogoutFilter@7dbc7acc, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@ea76d3b, org.springframework.security.web.session.ConcurrentSessionFilter@2ed60628, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@5a689b1e, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@23592803, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@35b7b216, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7aa1c551, org.springframework.security.web.session.SessionManagementFilter@4bf5f0e1, org.springframework.security.web.access.ExceptionTranslationFilter@37d18e94, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4aca66fc]
2023-07-12 21:57:50.994 INFO  [restartedMain] [o.s.aop.framework.CglibAopProxy] - Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(javax.servlet.FilterConfig) throws javax.servlet.ServletException] because it is marked as final: Consider using interface-based JDK proxies instead!
2023-07-12 21:57:51.371 WARN  [restartedMain] [o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-07-12 21:57:51.500 INFO  [restartedMain] [o.s.b.a.w.s.WelcomePageHandlerMapping] - Adding welcome page: ServletContext resource [/index.html]
2023-07-12 21:57:51.977 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 21:57:52.860 INFO  [restartedMain] [o.s.b.d.a.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2023-07-12 21:57:52.892 INFO  [restartedMain] [o.s.b.a.e.web.EndpointLinksResolver] - Exposing 16 endpoint(s) beneath base path '/actuator'
2023-07-12 21:57:53.042 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskScheduler] - Initializing ExecutorService
2023-07-12 21:57:53.058 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Starting ProtocolHandler ["http-nio-10010"]
2023-07-12 21:57:53.113 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 10010 (http) with context path ''
2023-07-12 21:57:53.118 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Started PjyApplication in 13.711 seconds (JVM running for 15.476)
2023-07-12 21:57:53.118 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-07-12 21:57:53.119 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - Application started
2023-07-12 21:57:53.119 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-07-12 21:57:54.514 INFO  [RMI TCP Connection(10)-127.0.0.1] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-07-12 21:57:54.514 INFO  [RMI TCP Connection(10)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Initializing Servlet 'dispatcherServlet'
2023-07-12 21:57:54.538 INFO  [RMI TCP Connection(10)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Completed initialization in 24 ms
2023-07-12 21:59:50.240 WARN  [http-nio-10010-exec-1] [o.a.catalina.util.SessionIdGeneratorBase] - Creation of SecureRandom instance for session ID generation using [SHA1PRNG] took [313] milliseconds.
2023-07-12 21:59:52.001 INFO  [http-nio-10010-exec-3] [c.p.d.interceptor.LoggerInterceptor] - ============================== START ==============================
2023-07-12 21:59:52.003 INFO  [http-nio-10010-exec-3] [c.p.d.interceptor.LoggerInterceptor] -  Class       	:  class org.springframework.web.method.HandlerMethod
2023-07-12 21:59:52.004 INFO  [http-nio-10010-exec-3] [c.p.d.interceptor.LoggerInterceptor] -  Request URI 	:  /error
2023-07-12 21:59:52.004 INFO  [http-nio-10010-exec-3] [c.p.d.interceptor.LoggerInterceptor] -  Request addr	:  0:0:0:0:0:0:0:1
2023-07-12 21:59:52.004 INFO  [http-nio-10010-exec-3] [c.p.d.interceptor.LoggerInterceptor] -  Servlet URI 	:  /error
2023-07-12 21:59:53.983 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 21:59:54.001 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select * from MEMBER where userId = 'p00139'
 {executed in 1 msec}
2023-07-12 21:59:54.049 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.MemberServiceImpl] - ROLE_ADMIN
2023-07-12 21:59:54.244 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.MemberServiceImpl] - pass:$2a$10$MNrQAPw.4k9j2y08eTmYEeI7oKPuaWbA97HHog.8PYep5HsRwhbae,$2a$10$nO2KC5uuTeJcjK0IYukW9e72NcBz6056WmqY.TC9VIQrAghrRQl3m
2023-07-12 21:59:54.456 INFO  [http-nio-10010-exec-8] [c.p.d.configuration.SecurityConfig] - authentication:: p00139
2023-07-12 21:59:59.456 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@d4b2805b
2023-07-12 21:59:59.457 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_PUBLIC_COMPLAINT_INFO} 
2023-07-12 21:59:59.537 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
2023-07-12 21:59:59.561 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 21:59:59.563 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 0 msec}
2023-07-12 21:59:59.573 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 1 msec}
2023-07-12 22:00:20.251 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 22:00:20.258 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '최정배%'
 {executed in 2 msec}
2023-07-12 22:00:20.283 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3561.0'
 {executed in 3 msec}
2023-07-12 22:00:20.286 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '21번'
 {executed in 1 msec}
2023-07-12 22:00:20.289 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '김명현%'
 {executed in 0 msec}
2023-07-12 22:00:20.291 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3564.0'
 {executed in 1 msec}
2023-07-12 22:00:20.293 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '20번'
 {executed in 0 msec}
2023-07-12 22:00:20.298 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '최기성%'
 {executed in 0 msec}
2023-07-12 22:00:20.301 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3640.0'
 {executed in 2 msec}
2023-07-12 22:00:20.303 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '27번'
 {executed in 1 msec}
2023-07-12 22:00:20.306 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '이용재(610423)%'
 {executed in 0 msec}
2023-07-12 22:00:20.310 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3639.0'
 {executed in 1 msec}
2023-07-12 22:00:20.313 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '27번'
 {executed in 0 msec}
2023-07-12 22:00:20.317 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '심기섭%'
 {executed in 2 msec}
2023-07-12 22:00:20.319 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3508.0'
 {executed in 0 msec}
2023-07-12 22:00:20.322 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '5번'
 {executed in 0 msec}
2023-07-12 22:00:20.326 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '3645.0%'
 {executed in 0 msec}
2023-07-12 22:00:20.330 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '남기선'
 {executed in 2 msec}
2023-07-12 22:00:20.332 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '5-1번'
 {executed in 0 msec}
2023-07-12 22:00:20.335 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '3619.0%'
 {executed in 0 msec}
2023-07-12 22:00:20.338 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '한태전'
 {executed in 1 msec}
2023-07-12 22:00:20.339 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '5번'
 {executed in 0 msec}
2023-07-12 22:00:20.341 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '3641.0%'
 {executed in 0 msec}
2023-07-12 22:00:20.344 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '김용문'
 {executed in 2 msec}
2023-07-12 22:00:20.345 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '27번'
 {executed in 0 msec}
2023-07-12 22:00:20.347 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '3621.0%'
 {executed in 1 msec}
2023-07-12 22:00:20.349 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '김도근'
 {executed in 0 msec}
2023-07-12 22:00:20.351 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '5번'
 {executed in 1 msec}
2023-07-12 22:00:20.353 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '정해열%'
 {executed in 0 msec}
2023-07-12 22:00:20.355 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3573.0'
 {executed in 0 msec}
2023-07-12 22:00:20.357 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '20번'
 {executed in 1 msec}
2023-07-12 22:00:20.358 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '김현수%'
 {executed in 0 msec}
2023-07-12 22:00:20.360 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3545.0'
 {executed in 0 msec}
2023-07-12 22:00:20.362 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '38번'
 {executed in 1 msec}
2023-07-12 22:00:20.364 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '박종호%'
 {executed in 2 msec}
2023-07-12 22:00:20.366 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3550.0'
 {executed in 1 msec}
2023-07-12 22:00:20.367 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '38번'
 {executed in 0 msec}
2023-07-12 22:00:20.369 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '김정일%'
 {executed in 0 msec}
2023-07-12 22:00:20.371 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3631.0'
 {executed in 0 msec}
2023-07-12 22:00:20.373 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '5번'
 {executed in 0 msec}
2023-07-12 22:01:33.468 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@d4b2805b
2023-07-12 22:01:33.468 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_PUBLIC_COMPLAINT_INFO} 
2023-07-12 22:01:33.469 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
2023-07-12 22:01:33.470 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 22:01:33.472 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 1 msec}
2023-07-12 22:01:33.474 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 1 msec}
2023-07-12 22:01:37.827 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 22:01:37.829 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '최정배%'
 {executed in 1 msec}
2023-07-12 22:01:37.832 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3561'
 {executed in 1 msec}
2023-07-12 22:01:37.835 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '21번'
 {executed in 1 msec}
2023-07-12 22:01:37.838 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '김명현%'
 {executed in 0 msec}
2023-07-12 22:01:37.842 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3564'
 {executed in 0 msec}
2023-07-12 22:01:37.844 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '20번'
 {executed in 0 msec}
2023-07-12 22:01:37.848 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '최기성%'
 {executed in 1 msec}
2023-07-12 22:01:37.851 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3640'
 {executed in 1 msec}
2023-07-12 22:01:37.855 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '27번'
 {executed in 1 msec}
2023-07-12 22:01:37.858 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '이용재(610423)%'
 {executed in 1 msec}
2023-07-12 22:01:37.862 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3639'
 {executed in 2 msec}
2023-07-12 22:01:37.865 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '27번'
 {executed in 0 msec}
2023-07-12 22:01:37.869 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '심기섭%'
 {executed in 1 msec}
2023-07-12 22:01:37.872 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3508'
 {executed in 1 msec}
2023-07-12 22:01:37.875 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '5번'
 {executed in 0 msec}
2023-07-12 22:01:37.878 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '3645.0%'
 {executed in 0 msec}
2023-07-12 22:01:37.881 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '남기선'
 {executed in 1 msec}
2023-07-12 22:01:37.885 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '5-1번'
 {executed in 1 msec}
2023-07-12 22:01:37.888 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '3619.0%'
 {executed in 1 msec}
2023-07-12 22:01:37.891 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '한태전'
 {executed in 2 msec}
2023-07-12 22:01:37.894 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '5번'
 {executed in 0 msec}
2023-07-12 22:01:37.897 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '3641.0%'
 {executed in 1 msec}
2023-07-12 22:01:37.900 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '김용문'
 {executed in 1 msec}
2023-07-12 22:01:37.902 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '27번'
 {executed in 0 msec}
2023-07-12 22:01:37.906 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '3621.0%'
 {executed in 1 msec}
2023-07-12 22:01:37.908 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '김도근'
 {executed in 1 msec}
2023-07-12 22:01:37.911 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '5번'
 {executed in 0 msec}
2023-07-12 22:01:37.913 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '정해열%'
 {executed in 1 msec}
2023-07-12 22:01:37.916 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3573'
 {executed in 1 msec}
2023-07-12 22:01:37.918 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '20번'
 {executed in 0 msec}
2023-07-12 22:01:37.920 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '김현수%'
 {executed in 0 msec}
2023-07-12 22:01:37.922 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3545'
 {executed in 0 msec}
2023-07-12 22:01:37.924 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '38번'
 {executed in 0 msec}
2023-07-12 22:01:37.926 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '박종호%'
 {executed in 1 msec}
2023-07-12 22:01:37.928 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3550'
 {executed in 1 msec}
2023-07-12 22:01:37.930 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '38번'
 {executed in 1 msec}
2023-07-12 22:01:37.932 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '김정일%'
 {executed in 0 msec}
2023-07-12 22:01:37.934 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3631'
 {executed in 0 msec}
2023-07-12 22:01:37.935 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '5번'
 {executed in 1 msec}
2023-07-12 22:02:34.626 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@d4b2805b
2023-07-12 22:02:34.627 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_PUBLIC_COMPLAINT_INFO} 
2023-07-12 22:02:34.627 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
2023-07-12 22:02:34.629 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 22:02:34.632 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 1 msec}
2023-07-12 22:02:34.634 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 1 msec}
2023-07-12 22:02:38.594 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 22:02:38.596 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '최정배%'
 {executed in 1 msec}
2023-07-12 22:02:38.598 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3561'
 {executed in 0 msec}
2023-07-12 22:02:38.600 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '21번'
 {executed in 1 msec}
2023-07-12 22:02:38.602 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '김명현%'
 {executed in 1 msec}
2023-07-12 22:02:38.604 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3564'
 {executed in 0 msec}
2023-07-12 22:02:38.606 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '20번'
 {executed in 1 msec}
2023-07-12 22:02:38.608 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '최기성%'
 {executed in 0 msec}
2023-07-12 22:02:38.610 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3640'
 {executed in 0 msec}
2023-07-12 22:02:38.612 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '27번'
 {executed in 0 msec}
2023-07-12 22:02:38.614 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '이용재(610423)%'
 {executed in 1 msec}
2023-07-12 22:02:38.617 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3639'
 {executed in 1 msec}
2023-07-12 22:02:38.618 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '27번'
 {executed in 1 msec}
2023-07-12 22:02:38.621 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '심기섭%'
 {executed in 1 msec}
2023-07-12 22:02:38.623 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3508'
 {executed in 0 msec}
2023-07-12 22:02:38.624 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '5번'
 {executed in 0 msec}
2023-07-12 22:02:38.626 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '3645.0%'
 {executed in 1 msec}
2023-07-12 22:02:38.628 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '남기선'
 {executed in 0 msec}
2023-07-12 22:02:38.629 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '5-1번'
 {executed in 0 msec}
2023-07-12 22:02:38.631 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '3619.0%'
 {executed in 1 msec}
2023-07-12 22:02:38.633 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '한태전'
 {executed in 0 msec}
2023-07-12 22:02:38.634 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '5번'
 {executed in 0 msec}
2023-07-12 22:02:38.636 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '3641.0%'
 {executed in 1 msec}
2023-07-12 22:02:38.638 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '김용문'
 {executed in 1 msec}
2023-07-12 22:02:38.640 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '27번'
 {executed in 0 msec}
2023-07-12 22:02:38.641 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '3621.0%'
 {executed in 0 msec}
2023-07-12 22:02:38.643 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '김도근'
 {executed in 1 msec}
2023-07-12 22:02:38.644 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '5번'
 {executed in 0 msec}
2023-07-12 22:02:38.646 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '정해열%'
 {executed in 1 msec}
2023-07-12 22:02:38.648 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3573'
 {executed in 0 msec}
2023-07-12 22:02:38.649 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '20번'
 {executed in 1 msec}
2023-07-12 22:02:38.651 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '김현수%'
 {executed in 1 msec}
2023-07-12 22:02:38.653 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3545'
 {executed in 1 msec}
2023-07-12 22:02:38.653 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '38번'
 {executed in 0 msec}
2023-07-12 22:02:38.655 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '박종호%'
 {executed in 0 msec}
2023-07-12 22:02:38.657 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3550'
 {executed in 1 msec}
2023-07-12 22:02:38.659 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '38번'
 {executed in 0 msec}
2023-07-12 22:02:38.661 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '김정일%'
 {executed in 1 msec}
2023-07-12 22:02:38.662 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3631'
 {executed in 0 msec}
2023-07-12 22:02:38.664 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '5번'
 {executed in 1 msec}
2023-07-12 22:08:49.621 INFO  [RMI TCP Connection(21)-127.0.0.1] [o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin] - Application shutdown requested.
2023-07-12 22:08:49.656 INFO  [RMI TCP Connection(21)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Shutting down ExecutorService 'asyncThreadPool'
2023-07-12 22:08:49.658 INFO  [RMI TCP Connection(21)-127.0.0.1] [com.zaxxer.hikari.HikariDataSource] - H2 - Shutdown initiated...
2023-07-12 22:08:49.666 INFO  [RMI TCP Connection(21)-127.0.0.1] [com.zaxxer.hikari.HikariDataSource] - H2 - Shutdown completed.
2023-07-12 22:08:49.727 INFO  [RMI TCP Connection(21)-127.0.0.1] [com.pjy.dashboard.filter.TestFilter] - destroy Pjy Filter
2023-07-12 22:09:11.965 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Starting PjyApplication on DESKTOP-QJPD93S with PID 15784 (D:\BUS\dashboard\dashboard\target\classes started by admin in D:\BUS\dashboard\dashboard)
2023-07-12 22:09:11.971 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - The following profiles are active: oauth
2023-07-12 22:09:12.029 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-07-12 22:09:12.030 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-07-12 22:09:13.313 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-07-12 22:09:13.313 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-07-12 22:09:13.466 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 143ms. Found 3 JPA repository interfaces.
2023-07-12 22:09:13.843 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-07-12 22:09:13.844 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2023-07-12 22:09:13.888 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.FileRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-07-12 22:09:13.888 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.MemberRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-07-12 22:09:13.889 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.RememberMeRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-07-12 22:09:13.889 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 45ms. Found 0 JDBC repository interfaces.
2023-07-12 22:09:14.793 INFO  [restartedMain] [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] - Post-processing PropertySource instances
2023-07-12 22:09:14.954 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2023-07-12 22:09:14.955 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource commandLineArgs [org.springframework.core.env.SimpleCommandLinePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-07-12 22:09:14.955 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-07-12 22:09:14.955 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-07-12 22:09:14.956 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2023-07-12 22:09:14.956 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
2023-07-12 22:09:14.956 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2023-07-12 22:09:14.956 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application-oauth.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-07-12 22:09:14.956 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-07-12 22:09:14.957 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2023-07-12 22:09:14.957 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [pjy.properties] [org.springframework.core.env.CompositePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-07-12 22:09:14.957 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [common.properties] [org.springframework.core.io.support.ResourcePropertySource] to EncryptableMapPropertySourceWrapper
2023-07-12 22:09:15.058 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'asyncConfiguration' of type [com.pjy.dashboard.configuration.AsyncConfiguration$$EnhancerBySpringCGLIB$$908e463f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 22:09:15.139 INFO  [restartedMain] [c.u.j.filter.DefaultLazyPropertyFilter] - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2023-07-12 22:09:15.339 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$7a84aa6c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 22:09:15.528 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 22:09:15.543 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@43f9dd4a' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 22:09:15.555 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$9f594d1e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 22:09:15.577 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration$$EnhancerBySpringCGLIB$$c4ae6534] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 22:09:15.586 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 22:09:15.589 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 22:09:15.639 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e1d6e232] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 22:09:15.713 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$61572f64] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 22:09:16.041 INFO  [restartedMain] [c.u.j.r.DefaultLazyPropertyResolver] - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2023-07-12 22:09:16.048 INFO  [restartedMain] [c.u.j.d.DefaultLazyPropertyDetector] - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2023-07-12 22:09:17.092 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 10010 (http)
2023-07-12 22:09:17.141 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Initializing ProtocolHandler ["http-nio-10010"]
2023-07-12 22:09:17.163 INFO  [restartedMain] [org.apache.catalina.core.StandardService] - Starting service [Tomcat]
2023-07-12 22:09:17.164 INFO  [restartedMain] [org.apache.catalina.core.StandardEngine] - Starting Servlet engine: [Apache Tomcat/9.0.29]
2023-07-12 22:09:18.082 INFO  [restartedMain] [org.apache.jasper.servlet.TldScanner] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2023-07-12 22:09:18.106 INFO  [restartedMain] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring embedded WebApplicationContext
2023-07-12 22:09:18.107 INFO  [restartedMain] [o.s.web.context.ContextLoader] - Root WebApplicationContext: initialization completed in 6077 ms
2023-07-12 22:09:19.961 INFO  [restartedMain] [c.u.j.encryptor.DefaultLazyEncryptor] - Found Custom Encryptor Bean org.jasypt.encryption.pbe.PooledPBEStringEncryptor@2461ede5 with name: jasyptStringEncryptor
2023-07-12 22:09:20.073 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Starting...
2023-07-12 22:09:20.291 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.executeSql(PoolBase.java:567)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 18 msec}
2023-07-12 22:09:20.302 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Start completed.
2023-07-12 22:09:22.152 INFO  [restartedMain] [com.pjy.dashboard.filter.TestFilter] - init Pjy Filter
2023-07-12 22:09:23.037 INFO  [restartedMain] [o.hibernate.jpa.internal.util.LogHelper] - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2023-07-12 22:09:23.207 INFO  [restartedMain] [org.hibernate.Version] - HHH000412: Hibernate Core {5.3.14.Final}
2023-07-12 22:09:23.212 INFO  [restartedMain] [org.hibernate.cfg.Environment] - HHH000206: hibernate.properties not found
2023-07-12 22:09:23.573 INFO  [restartedMain] [org.hibernate.annotations.common.Version] - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2023-07-12 22:09:24.179 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 22:09:24.234 INFO  [restartedMain] [org.hibernate.dialect.Dialect] - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2023-07-12 22:09:26.043 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 22:09:26.049 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select SEQUENCE_CATALOG, SEQUENCE_SCHEMA, SEQUENCE_NAME, INCREMENT from information_schema.sequences
 {executed in 2 msec}
2023-07-12 22:09:26.147 INFO  [restartedMain] [o.s.o.j.LocalContainerEntityManagerFactoryBean] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-07-12 22:09:26.742 INFO  [restartedMain] [o.h.h.i.QueryTranslatorFactoryInitiator] - HHH000397: Using ASTQueryTranslatorFactory
2023-07-12 22:09:29.364 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService
2023-07-12 22:09:29.393 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'asyncThreadPool'
2023-07-12 22:09:29.793 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/h2-console/**'], []
2023-07-12 22:09:29.795 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/css/**'], []
2023-07-12 22:09:29.795 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/js/**'], []
2023-07-12 22:09:29.795 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/monitor/**'], []
2023-07-12 22:09:29.795 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/img/**'], []
2023-07-12 22:09:29.795 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/lib/**'], []
2023-07-12 22:09:29.795 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/main.css'], []
2023-07-12 22:09:29.795 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/common.js'], []
2023-07-12 22:09:29.795 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/resources/**'], []
2023-07-12 22:09:30.199 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@765b6ee9, org.springframework.security.web.context.SecurityContextPersistenceFilter@57eea5a6, org.springframework.security.web.header.HeaderWriterFilter@3444dc67, org.springframework.web.filter.CorsFilter@3b4d74f1, org.springframework.security.web.authentication.logout.LogoutFilter@abe5945, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@396d821d, org.springframework.security.web.session.ConcurrentSessionFilter@6c951d2c, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@54112fa2, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@30fab384, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@235d9e9c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@36887aa, org.springframework.security.web.session.SessionManagementFilter@c680fc1, org.springframework.security.web.access.ExceptionTranslationFilter@488482a, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3ac42953]
2023-07-12 22:09:30.255 INFO  [restartedMain] [o.s.aop.framework.CglibAopProxy] - Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(javax.servlet.FilterConfig) throws javax.servlet.ServletException] because it is marked as final: Consider using interface-based JDK proxies instead!
2023-07-12 22:09:30.913 WARN  [restartedMain] [o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-07-12 22:09:31.018 INFO  [restartedMain] [o.s.b.a.w.s.WelcomePageHandlerMapping] - Adding welcome page: ServletContext resource [/index.html]
2023-07-12 22:09:31.765 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-12 22:09:33.539 INFO  [restartedMain] [o.s.b.d.a.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2023-07-12 22:09:33.617 INFO  [restartedMain] [o.s.b.a.e.web.EndpointLinksResolver] - Exposing 16 endpoint(s) beneath base path '/actuator'
2023-07-12 22:09:33.976 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskScheduler] - Initializing ExecutorService
2023-07-12 22:09:33.988 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Starting ProtocolHandler ["http-nio-10010"]
2023-07-12 22:09:34.119 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 10010 (http) with context path ''
2023-07-12 22:09:34.132 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Started PjyApplication in 22.726 seconds (JVM running for 24.255)
2023-07-12 22:09:34.133 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-07-12 22:09:34.134 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - Application started
2023-07-12 22:09:34.134 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-07-12 22:09:35.497 INFO  [RMI TCP Connection(7)-127.0.0.1] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-07-12 22:09:35.497 INFO  [RMI TCP Connection(7)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Initializing Servlet 'dispatcherServlet'
2023-07-12 22:09:35.549 INFO  [RMI TCP Connection(7)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Completed initialization in 52 ms
2023-07-12 22:09:47.852 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@d4b2805b
2023-07-12 22:09:47.852 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_PUBLIC_COMPLAINT_INFO} 
2023-07-12 22:09:47.942 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
2023-07-12 22:09:47.973 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 22:09:47.975 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 2 msec}
2023-07-12 22:09:47.984 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 2 msec}
2023-07-12 22:10:00.236 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 2 msec}
2023-07-12 22:10:00.249 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '최정배%'
 {executed in 1 msec}
2023-07-12 22:10:00.264 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3561'
 {executed in 0 msec}
2023-07-12 22:10:00.267 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '21번'
 {executed in 1 msec}
2023-07-12 22:10:00.268 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '김명현%'
 {executed in 1 msec}
2023-07-12 22:10:00.271 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3564'
 {executed in 0 msec}
2023-07-12 22:10:00.273 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '20번'
 {executed in 1 msec}
2023-07-12 22:10:00.276 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '최기성%'
 {executed in 1 msec}
2023-07-12 22:10:00.280 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3640'
 {executed in 2 msec}
2023-07-12 22:10:00.282 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '27번'
 {executed in 0 msec}
2023-07-12 22:10:00.285 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '이용재(610423)%'
 {executed in 0 msec}
2023-07-12 22:10:00.288 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3639'
 {executed in 0 msec}
2023-07-12 22:10:00.290 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '27번'
 {executed in 0 msec}
2023-07-12 22:10:00.294 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '심기섭%'
 {executed in 0 msec}
2023-07-12 22:10:00.298 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3508'
 {executed in 0 msec}
2023-07-12 22:10:00.300 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '5번'
 {executed in 0 msec}
2023-07-12 22:10:00.306 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '3645.0%'
 {executed in 1 msec}
2023-07-12 22:10:00.309 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '남기선'
 {executed in 0 msec}
2023-07-12 22:10:00.312 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '5-1번'
 {executed in 1 msec}
2023-07-12 22:10:00.316 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '3619.0%'
 {executed in 1 msec}
2023-07-12 22:10:00.320 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '한태전'
 {executed in 0 msec}
2023-07-12 22:10:00.322 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '5번'
 {executed in 1 msec}
2023-07-12 22:10:00.326 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '3641.0%'
 {executed in 1 msec}
2023-07-12 22:10:00.329 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '김용문'
 {executed in 0 msec}
2023-07-12 22:10:00.332 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '27번'
 {executed in 0 msec}
2023-07-12 22:10:00.336 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '3621.0%'
 {executed in 0 msec}
2023-07-12 22:10:00.340 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '김도근'
 {executed in 1 msec}
2023-07-12 22:10:00.343 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '5번'
 {executed in 0 msec}
2023-07-12 22:10:00.347 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '정해열%'
 {executed in 1 msec}
2023-07-12 22:10:00.350 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3573'
 {executed in 0 msec}
2023-07-12 22:10:00.353 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '20번'
 {executed in 0 msec}
2023-07-12 22:10:00.356 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '김현수%'
 {executed in 0 msec}
2023-07-12 22:10:00.360 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3545'
 {executed in 0 msec}
2023-07-12 22:10:00.364 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '38번'
 {executed in 0 msec}
2023-07-12 22:10:00.368 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '박종호%'
 {executed in 1 msec}
2023-07-12 22:10:00.370 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3550'
 {executed in 1 msec}
2023-07-12 22:10:00.372 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '38번'
 {executed in 0 msec}
2023-07-12 22:10:00.375 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '김정일%'
 {executed in 0 msec}
2023-07-12 22:10:00.377 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3631'
 {executed in 0 msec}
2023-07-12 22:10:00.379 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '5번'
 {executed in 0 msec}
2023-07-12 22:10:02.709 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 2 msec}
2023-07-12 22:10:02.711 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '최정배%'
 {executed in 0 msec}
2023-07-12 22:10:02.713 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3561'
 {executed in 1 msec}
2023-07-12 22:10:02.715 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '21번'
 {executed in 0 msec}
2023-07-12 22:10:02.718 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '김명현%'
 {executed in 0 msec}
2023-07-12 22:10:02.720 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3564'
 {executed in 1 msec}
2023-07-12 22:10:02.722 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '20번'
 {executed in 0 msec}
2023-07-12 22:10:02.725 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '최기성%'
 {executed in 1 msec}
2023-07-12 22:10:02.728 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3640'
 {executed in 0 msec}
2023-07-12 22:10:02.730 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '27번'
 {executed in 0 msec}
2023-07-12 22:10:02.732 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '이용재(610423)%'
 {executed in 1 msec}
2023-07-12 22:10:02.735 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3639'
 {executed in 0 msec}
2023-07-12 22:10:02.738 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '27번'
 {executed in 0 msec}
2023-07-12 22:10:02.742 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '심기섭%'
 {executed in 2 msec}
2023-07-12 22:10:02.745 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3508'
 {executed in 1 msec}
2023-07-12 22:10:02.747 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '5번'
 {executed in 1 msec}
2023-07-12 22:10:02.751 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '3645.0%'
 {executed in 1 msec}
2023-07-12 22:10:02.753 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '남기선'
 {executed in 1 msec}
2023-07-12 22:10:02.756 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '5-1번'
 {executed in 1 msec}
2023-07-12 22:10:02.759 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '3619.0%'
 {executed in 0 msec}
2023-07-12 22:10:02.762 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '한태전'
 {executed in 0 msec}
2023-07-12 22:10:02.765 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '5번'
 {executed in 0 msec}
2023-07-12 22:10:02.767 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '3641.0%'
 {executed in 0 msec}
2023-07-12 22:10:02.770 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '김용문'
 {executed in 0 msec}
2023-07-12 22:10:02.772 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '27번'
 {executed in 0 msec}
2023-07-12 22:10:02.776 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '3621.0%'
 {executed in 1 msec}
2023-07-12 22:10:02.779 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '김도근'
 {executed in 1 msec}
2023-07-12 22:10:02.781 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '5번'
 {executed in 1 msec}
2023-07-12 22:10:02.784 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '정해열%'
 {executed in 1 msec}
2023-07-12 22:10:02.787 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3573'
 {executed in 1 msec}
2023-07-12 22:10:02.789 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '20번'
 {executed in 0 msec}
2023-07-12 22:10:02.791 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '김현수%'
 {executed in 1 msec}
2023-07-12 22:10:02.793 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3545'
 {executed in 0 msec}
2023-07-12 22:10:02.795 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '38번'
 {executed in 0 msec}
2023-07-12 22:10:02.797 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '박종호%'
 {executed in 1 msec}
2023-07-12 22:10:02.799 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3550'
 {executed in 0 msec}
2023-07-12 22:10:02.801 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '38번'
 {executed in 1 msec}
2023-07-12 22:10:02.803 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '김정일%'
 {executed in 1 msec}
2023-07-12 22:10:02.805 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3631'
 {executed in 0 msec}
2023-07-12 22:10:02.806 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '5번'
 {executed in 0 msec}
2023-07-12 22:10:02.818 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@d4b2805b
2023-07-12 22:10:02.818 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_PUBLIC_COMPLAINT_INFO} 
2023-07-12 22:10:02.818 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
2023-07-12 22:10:02.820 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 1 msec}
2023-07-12 22:10:02.821 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 1 msec}
2023-07-12 22:13:08.144 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 22:13:08.146 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '최정배%'
 {executed in 1 msec}
2023-07-12 22:13:08.149 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3561'
 {executed in 0 msec}
2023-07-12 22:13:08.152 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '21번'
 {executed in 0 msec}
2023-07-12 22:13:08.155 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '김명현%'
 {executed in 1 msec}
2023-07-12 22:13:08.157 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3564'
 {executed in 0 msec}
2023-07-12 22:13:08.159 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '20번'
 {executed in 0 msec}
2023-07-12 22:13:08.162 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '최기성%'
 {executed in 0 msec}
2023-07-12 22:13:08.165 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3640'
 {executed in 0 msec}
2023-07-12 22:13:08.168 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '27번'
 {executed in 0 msec}
2023-07-12 22:13:08.171 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '이용재(610423)%'
 {executed in 1 msec}
2023-07-12 22:13:08.174 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3639'
 {executed in 1 msec}
2023-07-12 22:13:08.176 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '27번'
 {executed in 0 msec}
2023-07-12 22:13:08.180 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '심기섭%'
 {executed in 1 msec}
2023-07-12 22:13:08.182 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3508'
 {executed in 0 msec}
2023-07-12 22:13:08.185 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '5번'
 {executed in 0 msec}
2023-07-12 22:13:08.188 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '남기선%'
 {executed in 0 msec}
2023-07-12 22:13:08.191 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3645'
 {executed in 1 msec}
2023-07-12 22:13:08.193 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '5-1번'
 {executed in 0 msec}
2023-07-12 22:13:08.196 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '한태전%'
 {executed in 2 msec}
2023-07-12 22:13:08.197 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3619'
 {executed in 0 msec}
2023-07-12 22:13:08.200 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '5번'
 {executed in 0 msec}
2023-07-12 22:13:08.202 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '김용문%'
 {executed in 0 msec}
2023-07-12 22:13:08.204 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3641'
 {executed in 1 msec}
2023-07-12 22:13:08.206 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '27번'
 {executed in 0 msec}
2023-07-12 22:13:08.208 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '김도근%'
 {executed in 0 msec}
2023-07-12 22:13:08.209 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3621'
 {executed in 0 msec}
2023-07-12 22:13:08.211 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '5번'
 {executed in 0 msec}
2023-07-12 22:13:08.212 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '정해열%'
 {executed in 1 msec}
2023-07-12 22:13:08.214 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3573'
 {executed in 0 msec}
2023-07-12 22:13:08.216 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '20번'
 {executed in 0 msec}
2023-07-12 22:13:08.218 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '김현수%'
 {executed in 1 msec}
2023-07-12 22:13:08.219 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3545'
 {executed in 1 msec}
2023-07-12 22:13:08.221 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '38번'
 {executed in 0 msec}
2023-07-12 22:13:08.223 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '박종호%'
 {executed in 0 msec}
2023-07-12 22:13:08.224 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3550'
 {executed in 0 msec}
2023-07-12 22:13:08.226 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '38번'
 {executed in 0 msec}
2023-07-12 22:13:08.228 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '김정일%'
 {executed in 1 msec}
2023-07-12 22:13:08.230 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3631'
 {executed in 0 msec}
2023-07-12 22:13:08.232 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '5번'
 {executed in 0 msec}
2023-07-12 22:13:33.830 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-12 22:13:33.832 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '최정배%'
 {executed in 1 msec}
2023-07-12 22:13:33.834 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3561'
 {executed in 1 msec}
2023-07-12 22:13:33.836 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '21번'
 {executed in 1 msec}
2023-07-12 22:13:33.839 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '김명현%'
 {executed in 1 msec}
2023-07-12 22:13:33.841 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3564'
 {executed in 1 msec}
2023-07-12 22:13:33.843 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '20번'
 {executed in 0 msec}
2023-07-12 22:13:33.846 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '최기성%'
 {executed in 0 msec}
2023-07-12 22:13:33.848 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3640'
 {executed in 1 msec}
2023-07-12 22:13:33.850 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '27번'
 {executed in 1 msec}
2023-07-12 22:13:33.852 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '이용재%'
 {executed in 1 msec}
2023-07-12 22:13:33.855 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3639'
 {executed in 0 msec}
2023-07-12 22:13:33.857 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '27번'
 {executed in 0 msec}
2023-07-12 22:13:33.859 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '심기섭%'
 {executed in 0 msec}
2023-07-12 22:13:33.860 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3508'
 {executed in 1 msec}
2023-07-12 22:13:33.862 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '5번'
 {executed in 0 msec}
2023-07-12 22:13:33.864 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '남기선%'
 {executed in 1 msec}
2023-07-12 22:13:33.866 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3645'
 {executed in 0 msec}
2023-07-12 22:13:33.867 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '5-1번'
 {executed in 0 msec}
2023-07-12 22:13:33.868 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '한태전%'
 {executed in 0 msec}
2023-07-12 22:13:33.870 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3619'
 {executed in 0 msec}
2023-07-12 22:13:33.872 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '5번'
 {executed in 1 msec}
2023-07-12 22:13:33.875 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '김용문%'
 {executed in 0 msec}
2023-07-12 22:13:33.878 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3641'
 {executed in 1 msec}
2023-07-12 22:13:33.880 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '27번'
 {executed in 0 msec}
2023-07-12 22:13:33.883 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '김도근%'
 {executed in 1 msec}
2023-07-12 22:13:33.885 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3621'
 {executed in 0 msec}
2023-07-12 22:13:33.888 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '5번'
 {executed in 0 msec}
2023-07-12 22:13:33.890 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '정해열%'
 {executed in 0 msec}
2023-07-12 22:13:33.893 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3573'
 {executed in 0 msec}
2023-07-12 22:13:33.895 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '20번'
 {executed in 0 msec}
2023-07-12 22:13:33.897 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '김현수%'
 {executed in 0 msec}
2023-07-12 22:13:33.899 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3545'
 {executed in 1 msec}
2023-07-12 22:13:33.900 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '38번'
 {executed in 1 msec}
2023-07-12 22:13:33.902 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '박종호%'
 {executed in 0 msec}
2023-07-12 22:13:33.903 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3550'
 {executed in 0 msec}
2023-07-12 22:13:33.905 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '38번'
 {executed in 0 msec}
2023-07-12 22:13:33.906 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '김정일%'
 {executed in 1 msec}
2023-07-12 22:13:33.907 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3631'
 {executed in 0 msec}
2023-07-12 22:13:33.909 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '5번'
 {executed in 0 msec}
2023-07-12 22:14:55.407 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@7817fdcf
2023-07-12 22:14:55.408 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_EMPLOYEEINFO} 
2023-07-12 22:14:55.409 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
2023-07-12 22:14:55.410 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 22:14:55.417 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 6 msec}
2023-07-12 22:14:55.424 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 6 msec}
2023-07-12 22:15:10.346 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@35e2a55b
2023-07-12 22:15:10.346 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_DRIVERINFO} 
2023-07-12 22:15:10.346 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_DRIVERINFO a where   a.company_no = '100' order by a.emp_no
2023-07-12 22:15:10.348 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 22:15:10.355 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBL_DRIVERINFO a where   a.company_no = '100' order by a.emp_no
 {executed in 6 msec}
2023-07-12 22:15:10.363 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBL_DRIVERINFO a where   a.company_no = '100' order by a.emp_no
 {executed in 6 msec}
2023-07-12 22:15:35.658 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-12 22:15:35.660 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '최정배%'
 {executed in 1 msec}
2023-07-12 22:15:35.662 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3561'
 {executed in 1 msec}
2023-07-12 22:15:35.663 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '21번'
 {executed in 1 msec}
2023-07-12 22:15:35.665 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '김명현%'
 {executed in 0 msec}
2023-07-12 22:15:35.666 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3564'
 {executed in 0 msec}
2023-07-12 22:15:35.668 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '20번'
 {executed in 1 msec}
2023-07-12 22:15:35.669 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '최기성%'
 {executed in 0 msec}
2023-07-12 22:15:35.671 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3640'
 {executed in 1 msec}
2023-07-12 22:15:35.673 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '27번'
 {executed in 0 msec}
2023-07-12 22:15:35.675 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '이용재B%'
 {executed in 0 msec}
2023-07-12 22:15:35.676 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3639'
 {executed in 1 msec}
2023-07-12 22:15:35.678 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '27번'
 {executed in 0 msec}
2023-07-12 22:15:35.679 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '심기섭%'
 {executed in 1 msec}
2023-07-12 22:15:35.681 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3508'
 {executed in 1 msec}
2023-07-12 22:15:35.683 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '5번'
 {executed in 0 msec}
2023-07-12 22:15:35.684 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '남기선%'
 {executed in 0 msec}
2023-07-12 22:15:35.686 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3645'
 {executed in 1 msec}
2023-07-12 22:15:35.687 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '5-1번'
 {executed in 0 msec}
2023-07-12 22:15:35.690 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '한태전%'
 {executed in 0 msec}
2023-07-12 22:15:35.692 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3619'
 {executed in 0 msec}
2023-07-12 22:15:35.693 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '5번'
 {executed in 1 msec}
2023-07-12 22:15:35.695 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '김용문%'
 {executed in 1 msec}
2023-07-12 22:15:35.697 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3641'
 {executed in 1 msec}
2023-07-12 22:15:35.699 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '27번'
 {executed in 0 msec}
2023-07-12 22:15:35.702 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '김도근%'
 {executed in 1 msec}
2023-07-12 22:15:35.704 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3621'
 {executed in 0 msec}
2023-07-12 22:15:35.706 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '5번'
 {executed in 0 msec}
2023-07-12 22:15:35.708 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '정해열%'
 {executed in 1 msec}
2023-07-12 22:15:35.711 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3573'
 {executed in 0 msec}
2023-07-12 22:15:35.713 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '20번'
 {executed in 1 msec}
2023-07-12 22:15:35.716 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '김현수%'
 {executed in 1 msec}
2023-07-12 22:15:35.719 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3545'
 {executed in 1 msec}
2023-07-12 22:15:35.721 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '38번'
 {executed in 0 msec}
2023-07-12 22:15:35.724 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '박종호%'
 {executed in 1 msec}
2023-07-12 22:15:35.727 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3550'
 {executed in 0 msec}
2023-07-12 22:15:35.730 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '38번'
 {executed in 1 msec}
2023-07-12 22:15:35.733 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '김정일%'
 {executed in 1 msec}
2023-07-12 22:15:35.736 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3631'
 {executed in 0 msec}
2023-07-12 22:15:35.738 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '5번'
 {executed in 1 msec}
2023-07-12 22:17:08.412 INFO  [RMI TCP Connection(21)-127.0.0.1] [o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin] - Application shutdown requested.
2023-07-12 22:17:08.448 INFO  [RMI TCP Connection(21)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Shutting down ExecutorService 'asyncThreadPool'
2023-07-12 22:17:08.451 INFO  [RMI TCP Connection(21)-127.0.0.1] [com.zaxxer.hikari.HikariDataSource] - H2 - Shutdown initiated...
2023-07-12 22:17:08.458 INFO  [RMI TCP Connection(21)-127.0.0.1] [com.zaxxer.hikari.HikariDataSource] - H2 - Shutdown completed.
2023-07-12 22:17:08.523 INFO  [RMI TCP Connection(21)-127.0.0.1] [com.pjy.dashboard.filter.TestFilter] - destroy Pjy Filter
2023-07-12 22:17:27.019 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Starting PjyApplication on DESKTOP-QJPD93S with PID 26772 (D:\BUS\dashboard\dashboard\target\classes started by admin in D:\BUS\dashboard\dashboard)
2023-07-12 22:17:27.030 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - The following profiles are active: oauth
2023-07-12 22:17:27.096 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-07-12 22:17:27.096 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-07-12 22:17:28.475 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-07-12 22:17:28.476 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-07-12 22:17:28.631 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 146ms. Found 3 JPA repository interfaces.
2023-07-12 22:17:29.001 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-07-12 22:17:29.002 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2023-07-12 22:17:29.046 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.FileRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-07-12 22:17:29.046 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.MemberRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-07-12 22:17:29.047 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.RememberMeRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-07-12 22:17:29.047 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 45ms. Found 0 JDBC repository interfaces.
2023-07-12 22:17:29.539 INFO  [restartedMain] [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] - Post-processing PropertySource instances
2023-07-12 22:17:29.613 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2023-07-12 22:17:29.614 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource commandLineArgs [org.springframework.core.env.SimpleCommandLinePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-07-12 22:17:29.614 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-07-12 22:17:29.614 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-07-12 22:17:29.614 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2023-07-12 22:17:29.615 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
2023-07-12 22:17:29.615 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2023-07-12 22:17:29.615 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application-oauth.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-07-12 22:17:29.615 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-07-12 22:17:29.615 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2023-07-12 22:17:29.615 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [pjy.properties] [org.springframework.core.env.CompositePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-07-12 22:17:29.615 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [common.properties] [org.springframework.core.io.support.ResourcePropertySource] to EncryptableMapPropertySourceWrapper
2023-07-12 22:17:29.676 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'asyncConfiguration' of type [com.pjy.dashboard.configuration.AsyncConfiguration$$EnhancerBySpringCGLIB$$32d85793] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 22:17:29.730 INFO  [restartedMain] [c.u.j.filter.DefaultLazyPropertyFilter] - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2023-07-12 22:17:29.832 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$1ccebbc0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 22:17:29.911 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 22:17:29.914 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@4a2e0519' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 22:17:29.919 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$41a35e72] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 22:17:29.928 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration$$EnhancerBySpringCGLIB$$66f87688] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 22:17:29.932 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 22:17:29.933 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 22:17:29.955 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$8420f386] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 22:17:29.983 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$3a140b8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 22:17:30.129 INFO  [restartedMain] [c.u.j.r.DefaultLazyPropertyResolver] - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2023-07-12 22:17:30.136 INFO  [restartedMain] [c.u.j.d.DefaultLazyPropertyDetector] - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2023-07-12 22:17:30.639 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 10010 (http)
2023-07-12 22:17:30.655 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Initializing ProtocolHandler ["http-nio-10010"]
2023-07-12 22:17:30.664 INFO  [restartedMain] [org.apache.catalina.core.StandardService] - Starting service [Tomcat]
2023-07-12 22:17:30.664 INFO  [restartedMain] [org.apache.catalina.core.StandardEngine] - Starting Servlet engine: [Apache Tomcat/9.0.29]
2023-07-12 22:17:31.057 INFO  [restartedMain] [org.apache.jasper.servlet.TldScanner] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2023-07-12 22:17:31.068 INFO  [restartedMain] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring embedded WebApplicationContext
2023-07-12 22:17:31.068 INFO  [restartedMain] [o.s.web.context.ContextLoader] - Root WebApplicationContext: initialization completed in 3972 ms
2023-07-12 22:17:31.975 INFO  [restartedMain] [c.u.j.encryptor.DefaultLazyEncryptor] - Found Custom Encryptor Bean org.jasypt.encryption.pbe.PooledPBEStringEncryptor@7db9c9ed with name: jasyptStringEncryptor
2023-07-12 22:17:32.028 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Starting...
2023-07-12 22:17:32.119 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.executeSql(PoolBase.java:567)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 8 msec}
2023-07-12 22:17:32.123 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Start completed.
2023-07-12 22:17:32.949 INFO  [restartedMain] [com.pjy.dashboard.filter.TestFilter] - init Pjy Filter
2023-07-12 22:17:33.335 INFO  [restartedMain] [o.hibernate.jpa.internal.util.LogHelper] - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2023-07-12 22:17:33.421 INFO  [restartedMain] [org.hibernate.Version] - HHH000412: Hibernate Core {5.3.14.Final}
2023-07-12 22:17:33.423 INFO  [restartedMain] [org.hibernate.cfg.Environment] - HHH000206: hibernate.properties not found
2023-07-12 22:17:33.618 INFO  [restartedMain] [org.hibernate.annotations.common.Version] - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2023-07-12 22:17:33.860 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-12 22:17:33.877 INFO  [restartedMain] [org.hibernate.dialect.Dialect] - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2023-07-12 22:17:34.668 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-12 22:17:34.671 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select SEQUENCE_CATALOG, SEQUENCE_SCHEMA, SEQUENCE_NAME, INCREMENT from information_schema.sequences
 {executed in 1 msec}
2023-07-12 22:17:34.752 INFO  [restartedMain] [o.s.o.j.LocalContainerEntityManagerFactoryBean] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-07-12 22:17:35.028 INFO  [restartedMain] [o.h.h.i.QueryTranslatorFactoryInitiator] - HHH000397: Using ASTQueryTranslatorFactory
2023-07-12 22:17:36.174 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService
2023-07-12 22:17:36.185 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'asyncThreadPool'
2023-07-12 22:17:36.382 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/h2-console/**'], []
2023-07-12 22:17:36.382 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/css/**'], []
2023-07-12 22:17:36.382 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/js/**'], []
2023-07-12 22:17:36.382 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/monitor/**'], []
2023-07-12 22:17:36.382 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/img/**'], []
2023-07-12 22:17:36.382 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/lib/**'], []
2023-07-12 22:17:36.382 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/main.css'], []
2023-07-12 22:17:36.382 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/common.js'], []
2023-07-12 22:17:36.382 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/resources/**'], []
2023-07-12 22:17:36.538 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@43ffc6a9, org.springframework.security.web.context.SecurityContextPersistenceFilter@53c8d4ce, org.springframework.security.web.header.HeaderWriterFilter@390cd0ba, org.springframework.web.filter.CorsFilter@3e3f21f2, org.springframework.security.web.authentication.logout.LogoutFilter@39acca47, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@1087bd5b, org.springframework.security.web.session.ConcurrentSessionFilter@4ff133df, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@8ebcb75, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1c07f178, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@665b8582, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7c1455ab, org.springframework.security.web.session.SessionManagementFilter@2646eeb2, org.springframework.security.web.access.ExceptionTranslationFilter@32f17b93, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@71785e7b]
2023-07-12 22:17:36.561 INFO  [restartedMain] [o.s.aop.framework.CglibAopProxy] - Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(javax.servlet.FilterConfig) throws javax.servlet.ServletException] because it is marked as final: Consider using interface-based JDK proxies instead!
2023-07-12 22:17:36.941 WARN  [restartedMain] [o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-07-12 22:17:37.018 INFO  [restartedMain] [o.s.b.a.w.s.WelcomePageHandlerMapping] - Adding welcome page: ServletContext resource [/index.html]
2023-07-12 22:17:37.485 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 22:17:38.323 INFO  [restartedMain] [o.s.b.d.a.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2023-07-12 22:17:38.353 INFO  [restartedMain] [o.s.b.a.e.web.EndpointLinksResolver] - Exposing 16 endpoint(s) beneath base path '/actuator'
2023-07-12 22:17:38.509 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskScheduler] - Initializing ExecutorService
2023-07-12 22:17:38.517 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Starting ProtocolHandler ["http-nio-10010"]
2023-07-12 22:17:38.569 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 10010 (http) with context path ''
2023-07-12 22:17:38.574 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Started PjyApplication in 12.061 seconds (JVM running for 13.67)
2023-07-12 22:17:38.574 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-07-12 22:17:38.574 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - Application started
2023-07-12 22:17:38.575 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-07-12 22:17:39.533 INFO  [RMI TCP Connection(8)-127.0.0.1] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-07-12 22:17:39.534 INFO  [RMI TCP Connection(8)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Initializing Servlet 'dispatcherServlet'
2023-07-12 22:17:39.562 INFO  [RMI TCP Connection(8)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Completed initialization in 28 ms
2023-07-12 22:18:58.397 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@d4b2805b
2023-07-12 22:18:58.398 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_PUBLIC_COMPLAINT_INFO} 
2023-07-12 22:18:58.462 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
2023-07-12 22:18:58.483 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 22:18:58.487 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 2 msec}
2023-07-12 22:18:58.497 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 1 msec}
2023-07-12 22:19:04.608 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 2 msec}
2023-07-12 22:19:04.620 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '최정배%'
 {executed in 1 msec}
2023-07-12 22:19:04.636 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3561'
 {executed in 1 msec}
2023-07-12 22:19:04.639 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '21번'
 {executed in 1 msec}
2023-07-12 22:19:04.643 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '김명현%'
 {executed in 1 msec}
2023-07-12 22:19:04.647 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3564'
 {executed in 0 msec}
2023-07-12 22:19:04.649 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '20번'
 {executed in 0 msec}
2023-07-12 22:19:04.653 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '최기성%'
 {executed in 1 msec}
2023-07-12 22:19:04.656 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3640'
 {executed in 0 msec}
2023-07-12 22:19:04.660 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '27번'
 {executed in 1 msec}
2023-07-12 22:19:04.663 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '이용재B%'
 {executed in 0 msec}
2023-07-12 22:19:04.667 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3639'
 {executed in 2 msec}
2023-07-12 22:19:04.669 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '27번'
 {executed in 0 msec}
2023-07-12 22:19:04.673 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '심기섭%'
 {executed in 1 msec}
2023-07-12 22:19:04.676 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3508'
 {executed in 0 msec}
2023-07-12 22:19:04.679 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '5번'
 {executed in 0 msec}
2023-07-12 22:19:04.684 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '남기선%'
 {executed in 1 msec}
2023-07-12 22:19:04.687 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3645'
 {executed in 0 msec}
2023-07-12 22:19:04.690 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '5-1번'
 {executed in 0 msec}
2023-07-12 22:19:04.694 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '한태전%'
 {executed in 1 msec}
2023-07-12 22:19:04.697 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3619'
 {executed in 1 msec}
2023-07-12 22:19:04.699 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '5번'
 {executed in 0 msec}
2023-07-12 22:19:04.703 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '김용문%'
 {executed in 1 msec}
2023-07-12 22:19:04.706 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3641'
 {executed in 1 msec}
2023-07-12 22:19:04.709 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '27번'
 {executed in 1 msec}
2023-07-12 22:19:04.712 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '김도근%'
 {executed in 1 msec}
2023-07-12 22:19:04.715 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3621'
 {executed in 1 msec}
2023-07-12 22:19:04.718 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '5번'
 {executed in 0 msec}
2023-07-12 22:19:04.722 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '정해열%'
 {executed in 1 msec}
2023-07-12 22:19:04.724 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3573'
 {executed in 1 msec}
2023-07-12 22:19:04.726 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '20번'
 {executed in 1 msec}
2023-07-12 22:19:04.728 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '김현수%'
 {executed in 0 msec}
2023-07-12 22:19:04.730 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3545'
 {executed in 0 msec}
2023-07-12 22:19:04.732 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '38번'
 {executed in 0 msec}
2023-07-12 22:19:04.735 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '박종호%'
 {executed in 0 msec}
2023-07-12 22:19:04.738 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3550'
 {executed in 1 msec}
2023-07-12 22:19:04.740 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '38번'
 {executed in 0 msec}
2023-07-12 22:19:04.744 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '김정일%'
 {executed in 1 msec}
2023-07-12 22:19:04.747 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3631'
 {executed in 1 msec}
2023-07-12 22:19:04.750 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '5번'
 {executed in 1 msec}
2023-07-12 22:19:04.764 INFO  [http-nio-10010-exec-8] [com.pjy.dashboard.dao.DynamicSqlDao] - merge sql : MERGE INTO TBL_PUBLIC_COMPLAINT_INFO KEY (company_no,comp_date,seq) select  '100' , :comp_date , :seq , :real_comp_date , :emp_nm , '5번' , :car_regno , :comp_type , :place , :memo , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
2023-07-12 22:19:04.772 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
2. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 22:19:04.778 ERROR [http-nio-10010-exec-8] [c.p.d.core.error.GlobalExceptionHandler] - handleEntityNotFoundException
org.springframework.dao.InvalidDataAccessApiUsageException: No value supplied for the SQL parameter 'car_regno': No value registered for key 'car_regno'
	at org.springframework.jdbc.core.namedparam.NamedParameterUtils.buildValueArray(NamedParameterUtils.java:355)
	at org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate$2.setValues(NamedParameterJdbcTemplate.java:371)
	at org.springframework.jdbc.core.JdbcTemplate.lambda$batchUpdate$2(JdbcTemplate.java:944)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:617)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:647)
	at org.springframework.jdbc.core.JdbcTemplate.batchUpdate(JdbcTemplate.java:936)
	at org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.batchUpdate(NamedParameterJdbcTemplate.java:366)
	at com.pjy.dashboard.dao.DynamicSqlDao.batchInsert(DynamicSqlDao.java:743)
	at com.pjy.dashboard.dao.DynamicSqlDao$$FastClassBySpringCGLIB$$8af24191.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at com.pjy.dashboard.dao.DynamicSqlH2Dao$$EnhancerBySpringCGLIB$$ab30a28b.batchInsert(<generated>)
	at com.pjy.dashboard.service.DynamicSqlService.mergeInfo(DynamicSqlService.java:800)
	at com.pjy.dashboard.controller.TestController.BUS_mergeInfo(TestController.java:533)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:893)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:798)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:97)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at jdk.internal.reflect.GeneratedMethodAccessor149.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$c5ef7d6b.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:114)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:104)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-07-12 22:19:04.793 WARN  [http-nio-10010-exec-8] [o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver] - Resolved [org.springframework.dao.InvalidDataAccessApiUsageException: No value supplied for the SQL parameter 'car_regno': No value registered for key 'car_regno']
2023-07-12 22:20:18.671 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
2. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-12 22:20:18.673 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '최정배%'
 {executed in 1 msec}
2023-07-12 22:20:18.675 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3561'
 {executed in 1 msec}
2023-07-12 22:20:18.677 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '21번'
 {executed in 0 msec}
2023-07-12 22:20:18.679 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '김명현%'
 {executed in 1 msec}
2023-07-12 22:20:18.681 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3564'
 {executed in 1 msec}
2023-07-12 22:20:18.682 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '20번'
 {executed in 0 msec}
2023-07-12 22:20:18.684 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '최기성%'
 {executed in 0 msec}
2023-07-12 22:20:18.686 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3640'
 {executed in 0 msec}
2023-07-12 22:20:18.688 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '27번'
 {executed in 0 msec}
2023-07-12 22:20:18.691 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '이용재B%'
 {executed in 1 msec}
2023-07-12 22:20:18.693 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3639'
 {executed in 0 msec}
2023-07-12 22:20:18.695 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '27번'
 {executed in 0 msec}
2023-07-12 22:20:18.697 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '심기섭%'
 {executed in 1 msec}
2023-07-12 22:20:18.699 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3508'
 {executed in 0 msec}
2023-07-12 22:20:18.701 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '5번'
 {executed in 0 msec}
2023-07-12 22:20:18.703 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '남기선%'
 {executed in 0 msec}
2023-07-12 22:20:18.704 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3645'
 {executed in 1 msec}
2023-07-12 22:20:18.706 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '5-1번'
 {executed in 0 msec}
2023-07-12 22:20:18.707 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '한태전%'
 {executed in 1 msec}
2023-07-12 22:20:18.709 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3619'
 {executed in 0 msec}
2023-07-12 22:20:18.710 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '5번'
 {executed in 1 msec}
2023-07-12 22:20:18.712 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '김용문%'
 {executed in 1 msec}
2023-07-12 22:20:18.714 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3641'
 {executed in 0 msec}
2023-07-12 22:20:18.715 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '27번'
 {executed in 1 msec}
2023-07-12 22:20:18.717 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '김도근%'
 {executed in 0 msec}
2023-07-12 22:20:18.718 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3621'
 {executed in 0 msec}
2023-07-12 22:20:18.720 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '5번'
 {executed in 0 msec}
2023-07-12 22:20:18.721 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '정해열%'
 {executed in 0 msec}
2023-07-12 22:20:18.723 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3573'
 {executed in 1 msec}
2023-07-12 22:20:18.724 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '20번'
 {executed in 0 msec}
2023-07-12 22:20:18.727 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '김현수%'
 {executed in 1 msec}
2023-07-12 22:20:18.729 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3545'
 {executed in 0 msec}
2023-07-12 22:20:18.730 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '38번'
 {executed in 1 msec}
2023-07-12 22:20:18.732 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '박종호%'
 {executed in 0 msec}
2023-07-12 22:20:18.733 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3550'
 {executed in 1 msec}
2023-07-12 22:20:18.734 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '38번'
 {executed in 1 msec}
2023-07-12 22:20:18.736 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	count(*) 
	FROM 	TBL_EMPLOYEEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	emp_nm LIKE '김정일%'
 {executed in 0 msec}
2023-07-12 22:20:18.737 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	count(*) 
	FROM 	TBL_CARINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	car_no = '3631'
 {executed in 1 msec}
2023-07-12 22:20:18.739 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT 	count(*) 
	FROM 	TBL_ROUTEINFO 
	WHERE 	COMPANY_NO = '100'
	AND 	route_nm = '5번'
 {executed in 0 msec}
2023-07-12 22:20:18.750 INFO  [http-nio-10010-exec-2] [com.pjy.dashboard.dao.DynamicSqlDao] - merge sql : MERGE INTO TBL_PUBLIC_COMPLAINT_INFO KEY (company_no,comp_date,seq) select  '100' , :comp_date , :seq , :real_comp_date , :emp_nm , '5번' , :car_no , :comp_type , :place , :memo , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
2023-07-12 22:20:18.752 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
3. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-12 22:20:18.765 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeBatch(ProxyStatement.java:128)
3. batching 13 statements:
 1:  MERGE INTO TBL_PUBLIC_COMPLAINT_INFO KEY (company_no,comp_date,seq) select  '100' , '2023-01-10' , 1.0 , '2023-01-10 / 11:43' , '최정배' , '5번' , '3561' , '버스불편(무정차통과)' , '도화IC [37356] ' , '정류장에 버스가 오고 있어서 승차할려고 행동을 취했지만 버스정류장쪽으로 오지도 않고 다른 차선으로 무정차 통과해서 버스 승차하지 못함' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
 2:  MERGE INTO TBL_PUBLIC_COMPLAINT_INFO KEY (company_no,comp_date,seq) select  '100' , '2023-01-13' , 2.0 , '2023-01-13 22:30경' , '김명현' , '5번' , '3564' , '버스불편(무정차통과)' , ' 찬우물 [39179]' , '해당 정류소에서 승차하려고 서있었는데 버스 오는 것을 보고 승차하려는데 버스가 서행하지 않고 굉장히 빠른 속도로 지나가버림. ' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
 3:  MERGE INTO TBL_PUBLIC_COMPLAINT_INFO KEY (company_no,comp_date,seq) select  '100' , '2023-02-10' , 7.0 , '2023-02-10(08:51)' , '최기성' , '5번' , '3640' , '버스불편(무정차통과)' , '남동체육관 체조경기장[39862]' , '2023년 2월 10일(금) 남동체육관 체조경기장(39862)에서 탑승해야 하는 27번 버스가 무정차 하였습니다. 벌써 무정차 민원만 3번째네요. 인천 버스는 원래 정류소에 사람이 서있어도 무정차하나요?' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
 4:  MERGE INTO TBL_PUBLIC_COMPLAINT_INFO KEY (company_no,comp_date,seq) select  '100' , '2023-03-03' , 16.0 , '2023-03-03  ( 8:20-25)   ' , '이용재B' , '5번' , '3639' , '버스불편(무정차통과)' , '라이프아파트 > 연안아파트 방향' , '27번 버스가 라이프아파트 정류장에 정차하지 않고 지나갔다고함  두대가 같이 오는 경우였고 다른 버스가 앞에 있다고 해도 정류장에 정차 하는것이 맞는데 정차 하지 않고 가서 불편을 겪었다고함 무정차통과로 접수요청함 ' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
 5:  MERGE INTO TBL_PUBLIC_COMPLAINT_INFO KEY (company_no,comp_date,seq) select  '100' , '2023-03-06' , 18.0 , '2023-03-06 09:20~22분사이 ' , '심기섭' , '5번' , '3508' , '버스불편(무정차통과)' , '서창센트럴푸르지오 (서해그랑블아파트후문방면) ID:39903' , '버스정류장에서 버스를 기다리고 있었는데 33번이 먼저오고 5번이 뒤에 오고 있었음, 사거리에 신호등이 있었는데 노란불에서 정차하려다 그냥 통과함, 2차로에서 정류장에 오려면 3차로로 와야되는데 2차로에서 그냥 직진함. 폭주운전식으로 그냥 가버려서 깜짝 놀랐다함' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
 6:  MERGE INTO TBL_PUBLIC_COMPLAINT_INFO KEY (company_no,comp_date,seq) select  '100' , '2023-03-13' , 6.0 , '2023-03-13(08:40경)' , '남기선' , '5번' , '3645' , '버스불편(승차거부)' , '주안7동행정복지센터[37216]' , '버스타려고 줄서서 기다리고 있는데 제 앞에사람까지만 태우더니 문을 닫으셔서 저를 못보셧나하고 얼굴까지 비춰가면서 문열어 달라고 쳐다보고했는데 닫혀가는 문을 밀고 열어서 타라고 하시더라고요. 닫혀가는 문에 제 손을 넣어서 열라니 무슨말도안되는소리를 하는건가 싶었어요. 제가 잘못들은걸수도 있으니 혹시 문이 고장났나싶어 뒤로 타라는건가하고 뒷문으로 갔는데 뒷문도 닫아버리시고 다시 앞문으로 가니깐 휙 떠나버리셨어요. 누가봐도 버스타려던 사람이고 거울로 다 비쳤을텐데 고의적으로 가셨습니다. 문제될 행동을 한것도 없는데 아무 이유없이 승차거부한건 어이가없네요' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
 7:  MERGE INTO TBL_PUBLIC_COMPLAINT_INFO KEY (company_no,comp_date,seq) select  '100' , '2023-03-21' , 7.0 , '2023-03-21 (20:30)' , '한태전' , '5번' , '3619' , '버스불편(무정차통과)' , '운연동[39379]' , '본인이 정류장에 서 있는데 버스가 정류장에 들어오지 않고 주행차선으로 무정차통과 하여 불편신고 접수 함' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
 8:  MERGE INTO TBL_PUBLIC_COMPLAINT_INFO KEY (company_no,comp_date,seq) select  '100' , '2023-03-23' , 8.0 , '2023-03-23(16시 하차)' , '김용문' , '5번' , '3641' , '버스불편(안전운행위반)' , '인하대역 정류장(홈플러스방면)' , '승차시에도 자리에 앉기 전에 급출발하여 위험했는데 내릴때 몸이 껴서 사람이 튕겨나갈 정도로 위험하게 난폭운전을 하였음(구의견 : 여객법 시행규칙에 의거 안전운행위반시 과태료 50만원 처분이 가능함을 알려드리오니 영상 확보에 힘 써주시기 바랍니다.)' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
 9:  MERGE INTO TBL_PUBLIC_COMPLAINT_INFO KEY (company_no,comp_date,seq) select  '100' , '2023-04-03' , 16.0 , '2023-04-03(13:35경)' , '김도근' , '5번' , '3621' , '버스불편(무정차통과)' , '신천역,문화의 거리(25364)' , '일시 : 금일 (2023년 4월 3일 오후)
교통앱 버스 고유(?) 번호 : 3621
미정차 당시 시간 : 오후 1시 35분에서 1시 40분 사이였음
미정차 버스정류장 : 신천역,문화의 거리
버스정류장 번호 : 25364

버스 정류장은 마지막 차선에 붙어있음에도 2차선으로 사람이 3명 기다리고있는데도 정차하지않고 그냥 가버렸습니다. 다른 직행좌석버스인 시흥3200번버스는 정차했구요. 정확히 기억합니다. 날씨도 너무 덥고 시간도 딱 맞춰나왔는데 멈추지도 않고 가버려서 매우 짜증이 나고 화가 납니다. 처리 부탁드립니다.' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
10:  MERGE INTO TBL_PUBLIC_COMPLAINT_INFO KEY (company_no,comp_date,seq) select  '100' , '2023-04-20' , 1.0 , '2023-04-20 / 12시25분경' , '정해열' , '5번' , '3573' , '버스불편(무정차통과)' , '남촌풍림3차아파트 [39165]' , '민원인이 하차를 하려고 벨을 누르고 교통카드를 찍은 뒤 서있었으나, 기사가 정차하지 않고 정류소를 지나감. 기사를 불러 내려달라고 했으나 아무대답도 하지 않고, 다음 정류소에서 내려줬다고 함.' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
11:  MERGE INTO TBL_PUBLIC_COMPLAINT_INFO KEY (company_no,comp_date,seq) select  '100' , '2023-04-21' , 2.0 , '2023-04-21(18시경)' , '김현수' , '5번' , '3545' , '버스불편(무정차통과,불친절)' , '논현사거리 하차의사표시,주적골 하차' , '2023-04-21일 18시 경 38번 버스 (번호판 : 3545)에 탑승했고 
논고개길에 정차하기 위해서 논현사거리 정류장에 지나고는 벨을 누르고 정차를 기다렸습니다. 
기사님은 벨을 눌렀음에도 불구하고 정류장에 정차하지 않았고 
제가 3차례 정도 정차해달라, 벨을 눌렀다 큰 소리로 소리질렀지만 무시하고 다음 정류장인 주적골까지 달렸습니다. 
주적골에서는 탑승하는 사람들만 문을 열어주고 끝까지 뒷문은 열어주지 않았고 
뒷문에 서있는데도 불구하고 또다시 출발했습니다. 
다시 문을 열어달라 소리를 질렀는데 출발하려고 했고 언성을 더 높여 문열어달라 하니 그제서야 뒤를 흘끔 보시더니 
문을 열어주고는 제가 내리는 와중에 뒷문을 닫아 가방이 끼어 무정차보다 더 큰 사고를 당할 뻔 했습니다. 
연세있는 분인 것 같아서 그냥 참으려고 했는데 무정차는 무정차고 
땅에서 버린 시간이랑 운수회사에서 서비스 교육이나 운임 교육을 어떻게 하고 있는지 궁금해서 민원 넣습니다. 
기사님의 처벌을 원합니다. CCTV 확인하고 처벌 제대로 해주세요. 
38번 가뜩이나 제멋대로인 출차 시간에 너무 화가 났는데 이번 일로 저는 인천시 버스에 대한 신의를 잃어가고 있습니다.' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
12:  MERGE INTO TBL_PUBLIC_COMPLAINT_INFO KEY (company_no,comp_date,seq) select  '100' , '2023-04-30' , 6.0 , ' 2023-04-30 23:29분경' , '박종호' , '5번' , '3550' , '버스불편(무정차통과)' , '인천힘찬종합병원 [39629] 정류장 ' , '20분 넘게 버스를 기다렸고 막차라서 꼭 탑승을 해야 하는  상황이었는데 해당 버스가 버스 정류장을 정차하지 않고  그냥 무정차함으로 신고. 막차를 탑승 못하는 상황이라 택시를 타고 귀가를 해야 하고  이렇게 버스를  탑승하지 못할거면 기다리지도 않고 바로 택시를 탔을텐데  밤늦은 시간에 시민만 불편함을 겪게되어 강력 처벌 요구함.' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
13:  MERGE INTO TBL_PUBLIC_COMPLAINT_INFO KEY (company_no,comp_date,seq) select  '100' , '2023-05-02' , 8.0 , '2023-05-02 / 10:20분 전후' , '김정일' , '5번' , '3631' , '버스불편(무정차통과)' , '서창119안전센터 > 구월동 방면' , '해당 정류소로 버스가 멀리서 오고 있었고, 민원인은 정류소 뒤에서 지갑에서 카드를 꺼내고 있었으나, 기사가 태우지 않고 지나감. 해당 기사에대한 과태료 처분과 교육 요청.' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
 {executed in 8 msec}
2023-07-12 22:20:31.982 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@d4b2805b
2023-07-12 22:20:31.982 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_PUBLIC_COMPLAINT_INFO} 
2023-07-12 22:20:31.983 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
2023-07-12 22:20:31.984 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
3. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 22:20:31.986 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
3. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 1 msec}
2023-07-12 22:20:31.988 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
3. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 1 msec}
2023-07-12 22:41:00.012 INFO  [pjy-task-pool-1] [c.pjy.dashboard.schedule.DailyScheduler] - DailyScheduler insert_TBB_DRIVING_RECORD_DAY start...
2023-07-12 22:41:00.014 DEBUG [pjy-task-pool-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
13. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 22:41:00.243 DEBUG [pjy-task-pool-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
13. SELECT 	DISTINCT SUBSTRING(work_date,1,7) 	as base_ym
			from	TBL_DRIVING_RECORD
			WHERE 	WORK_DATE LIKE  TO_CHAR( SYSDATE,'yyyy') || '%'
 {executed in 228 msec}
2023-07-12 22:41:00.725 DEBUG [pjy-task-pool-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
13. MERGE INTO TBB_DRIVING_RECORD_DAY KEY (COMPANY_NO,work_date,route_nm,emp_nm)
			SELECT 	a.COMPANY_NO
				, 	a.WORK_DATE 
				,	a.ROUTE_NM 
				,	b.EMP_NM 
				,	sum(tot_min) 
				,	sum(bms_km) 
				,	'batch'
				, 	TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
				,	a.driver_id
			FROM 	TBL_DRIVING_RECORD a JOIN TBL_ISC_DRIVER_INFO b ON a.COMPANY_NO = b.COMPANY_NO AND a.driver_id = b.DRIVER_ID 
			WHERE 	a.COMPANY_NO  = '100'
			AND 	a.WORK_DATE like '2023-03' || '%'
			AND 	a.DRIVER_ID > 0
			GROUP BY a.ROUTE_NM ,b.EMP_NM , a.WORK_DATE
 {executed in 472 msec}
2023-07-12 22:41:01.233 DEBUG [pjy-task-pool-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
13. MERGE INTO TBB_DRIVING_RECORD_DAY KEY (COMPANY_NO,work_date,route_nm,emp_nm)
			SELECT 	a.COMPANY_NO
				, 	a.WORK_DATE 
				,	a.ROUTE_NM 
				,	b.EMP_NM 
				,	sum(tot_min) 
				,	sum(bms_km) 
				,	'batch'
				, 	TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
				,	a.driver_id
			FROM 	TBL_DRIVING_RECORD a JOIN TBL_ISC_DRIVER_INFO b ON a.COMPANY_NO = b.COMPANY_NO AND a.driver_id = b.DRIVER_ID 
			WHERE 	a.COMPANY_NO  = '100'
			AND 	a.WORK_DATE like '2023-04' || '%'
			AND 	a.DRIVER_ID > 0
			GROUP BY a.ROUTE_NM ,b.EMP_NM , a.WORK_DATE
 {executed in 506 msec}
2023-07-12 22:41:01.233 INFO  [pjy-task-pool-1] [c.pjy.dashboard.schedule.DailyScheduler] - DailyScheduler insert_TBB_DRIVING_RECORD_DAY end...
2023-07-12 22:57:29.406 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
21. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 22:57:29.408 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
22. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-12 22:57:29.413 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. SELECT	/* select_accident_option : 교통사고 칼럼별 option값 */ 	
			listagg( DISTINCT(GAPI_GB ),'/')  	AS gapi_gb
		,	listagg( DISTINCT(acc_gb ),'/') 	AS acc_gb
		,	listagg( DISTINCT(acc_kind ),'/') 	AS acc_kind
		,	listagg( DISTINCT(proc_result ),'/') 	AS proc_result
		,	(SELECT listagg(DISTINCT(car_no),'/') FROM TBL_CARINFO a where 	a.company_no = '100' ) AS car_no
		,	(SELECT listagg(ROUTE_NM,'/')  FROM TBL_ROUTEINFO a where 	a.company_no = '100'  ORDER BY 1) AS route_nm
		,	(SELECT listagg(EMP_NM,'/')  FROM TBL_EMPLOYEEINFO a where 	a.company_no = '100'  ORDER BY 1) AS emp_nm
	FROM TBM_ACCIDENT_INFO a
 {executed in 5 msec}
2023-07-12 22:58:42.491 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@d4b2805b
2023-07-12 22:58:42.492 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_PUBLIC_COMPLAINT_INFO} 
2023-07-12 22:58:42.492 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
2023-07-12 22:58:42.494 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
22. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 22:58:42.495 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
22. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 1 msec}
2023-07-12 22:58:42.497 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
22. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 0 msec}
2023-07-12 22:59:52.418 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@d4b2805b
2023-07-12 22:59:52.418 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_PUBLIC_COMPLAINT_INFO} 
2023-07-12 22:59:52.418 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
2023-07-12 22:59:52.420 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
22. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-12 22:59:52.421 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
22. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 1 msec}
2023-07-12 22:59:52.422 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
22. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE like  '@baseYm%' order by a.COMP_DATE, a.SEQ
 {executed in 1 msec}
2023-07-12 23:02:49.546 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@b2989bc1
2023-07-12 23:02:49.546 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_PUBLIC_COMPLAINT_INFO} 
2023-07-12 23:02:49.558 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE between  '2023-01-01' and '2023-07-31'order by a.COMP_DATE, a.SEQ
2023-07-12 23:02:49.560 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
23. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 23:02:49.562 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
23. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE between  '2023-01-01' and '2023-07-31'order by a.COMP_DATE, a.SEQ
 {executed in 1 msec}
2023-07-12 23:02:49.563 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
23. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE between  '2023-01-01' and '2023-07-31'order by a.COMP_DATE, a.SEQ
 {executed in 1 msec}
2023-07-12 23:02:56.142 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@b2989bc1
2023-07-12 23:02:56.142 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_PUBLIC_COMPLAINT_INFO} 
2023-07-12 23:02:56.142 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE between  '2023-01-01' and '2023-07-31'order by a.COMP_DATE, a.SEQ
2023-07-12 23:02:56.143 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
23. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 23:02:56.144 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
23. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE between  '2023-01-01' and '2023-07-31'order by a.COMP_DATE, a.SEQ
 {executed in 1 msec}
2023-07-12 23:02:56.146 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
23. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE between  '2023-01-01' and '2023-07-31'order by a.COMP_DATE, a.SEQ
 {executed in 1 msec}
2023-07-12 23:15:14.189 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@b2989bc1
2023-07-12 23:15:14.189 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_PUBLIC_COMPLAINT_INFO} 
2023-07-12 23:15:14.190 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE between  '2023-01-01' and '2023-07-31'order by a.COMP_DATE, a.SEQ
2023-07-12 23:15:14.191 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
23. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 23:15:14.192 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
23. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE between  '2023-01-01' and '2023-07-31'order by a.COMP_DATE, a.SEQ
 {executed in 1 msec}
2023-07-12 23:15:14.194 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
23. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' AND     a.COMP_DATE between  '2023-01-01' and '2023-07-31'order by a.COMP_DATE, a.SEQ
 {executed in 1 msec}
2023-07-12 23:16:52.508 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
27. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-12 23:16:52.509 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
27. SELECT ROUTE_NM  FROM TBL_ROUTEINFO a where 	a.company_no = '100' ORDER BY 1
 {executed in 0 msec}
2023-07-12 23:16:53.832 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@f676be38
2023-07-12 23:16:53.832 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_COMMON_CODE_INFO_point} 
2023-07-12 23:16:53.832 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT 	'N' as bit, a.CODE_GB, CODE_ID, CODE_NM ,MEMO, CODE_VALUE, CODE_MIN, CODE_MAX, USE_YN FROM 	TBM_COMMON_CODE_INFO a WHERE 	a.COMPANY_NO  = '100' AND 	a.CODE_GB = '인사평가배점'
2023-07-12 23:16:53.833 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
27. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-12 23:16:53.835 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
27. SELECT 	'N' as bit, a.CODE_GB, CODE_ID, CODE_NM ,MEMO, CODE_VALUE, CODE_MIN, CODE_MAX, USE_YN FROM 	TBM_COMMON_CODE_INFO a WHERE 	a.COMPANY_NO  = '100' AND 	a.CODE_GB = '인사평가배점'
 {executed in 0 msec}
2023-07-12 23:16:53.836 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
27. SELECT 	'N' as bit, a.CODE_GB, CODE_ID, CODE_NM ,MEMO, CODE_VALUE, CODE_MIN, CODE_MAX, USE_YN FROM 	TBM_COMMON_CODE_INFO a WHERE 	a.COMPANY_NO  = '100' AND 	a.CODE_GB = '인사평가배점'
 {executed in 0 msec}
2023-07-12 23:19:05.310 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@f676be38
2023-07-12 23:19:05.310 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_COMMON_CODE_INFO_point} 
2023-07-12 23:19:05.310 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT 	'N' as bit, a.CODE_GB, CODE_ID, CODE_NM ,MEMO, CODE_VALUE, CODE_MIN, CODE_MAX, USE_YN FROM 	TBM_COMMON_CODE_INFO a WHERE 	a.COMPANY_NO  = '100' AND 	a.CODE_GB = '인사평가배점'
2023-07-12 23:19:05.311 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
32. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-12 23:19:05.313 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
32. SELECT 	'N' as bit, a.CODE_GB, CODE_ID, CODE_NM ,MEMO, CODE_VALUE, CODE_MIN, CODE_MAX, USE_YN FROM 	TBM_COMMON_CODE_INFO a WHERE 	a.COMPANY_NO  = '100' AND 	a.CODE_GB = '인사평가배점'
 {executed in 0 msec}
2023-07-12 23:19:05.314 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
32. SELECT 	'N' as bit, a.CODE_GB, CODE_ID, CODE_NM ,MEMO, CODE_VALUE, CODE_MIN, CODE_MAX, USE_YN FROM 	TBM_COMMON_CODE_INFO a WHERE 	a.COMPANY_NO  = '100' AND 	a.CODE_GB = '인사평가배점'
 {executed in 0 msec}
2023-07-12 23:19:28.954 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
32. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 23:19:28.959 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeUpdate(ProxyStatement.java:120)
32. DELETE FROM TBM_COMMON_CODE_INFO WHERE company_no = '100'  AND code_gb like '인사평가' || '%'
 {executed in 1 msec}
2023-07-12 23:19:28.966 INFO  [http-nio-10010-exec-4] [com.pjy.dashboard.dao.DynamicSqlDao] - insert sql : INSERT INTO TBM_COMMON_CODE_INFO (company_no,code_gb,code_id,code_nm,memo,last_chg_user,last_chg_date,code_value,code_max,code_min,use_yn) values ( '100' , :code_gb , :code_id , :code_nm , :memo , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss'), :code_value , :code_max , :code_min , :use_yn )
2023-07-12 23:19:28.967 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
33. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-12 23:19:28.973 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeBatch(ProxyStatement.java:128)
33. batching 13 statements:
 1:  INSERT INTO TBM_COMMON_CODE_INFO (company_no,code_gb,code_id,code_nm,memo,last_chg_user,last_chg_date,code_value,code_max,code_min,use_yn) values ( '100' , '인사평가배점' , '00' , '기본배점' , '칭찬/표창 보정용' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss'), 10.0 , 10.0 , 0.0 , 'Y' )
 2:  INSERT INTO TBM_COMMON_CODE_INFO (company_no,code_gb,code_id,code_nm,memo,last_chg_user,last_chg_date,code_value,code_max,code_min,use_yn) values ( '100' , '인사평가배점' , '01' , '사고' , '1건당' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss'), 10.0 , 10.0 , -5.0 , 'Y' )
 3:  INSERT INTO TBM_COMMON_CODE_INFO (company_no,code_gb,code_id,code_nm,memo,last_chg_user,last_chg_date,code_value,code_max,code_min,use_yn) values ( '100' , '인사평가배점' , '02' , '사고금액' , '백만원당' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss'), 10.0 , 10.0 , -1.0 , 'Y' )
 4:  INSERT INTO TBM_COMMON_CODE_INFO (company_no,code_gb,code_id,code_nm,memo,last_chg_user,last_chg_date,code_value,code_max,code_min,use_yn) values ( '100' , '인사평가배점' , '11' , '위험운전지수' , '위험level당' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss'), 10.0 , 10.0 , -2.0 , 'Y' )
 5:  INSERT INTO TBM_COMMON_CODE_INFO (company_no,code_gb,code_id,code_nm,memo,last_chg_user,last_chg_date,code_value,code_max,code_min,use_yn) values ( '100' , '인사평가배점' , '12' , '배차정시성' , '위반율' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss'), 10.0 , 10.0 , -1.0 , 'Y' )
 6:  INSERT INTO TBM_COMMON_CODE_INFO (company_no,code_gb,code_id,code_nm,memo,last_chg_user,last_chg_date,code_value,code_max,code_min,use_yn) values ( '100' , '인사평가배점' , '13' , '근무협조도' , '상대평가등급' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss'), 0.0 , 20.0 , 2.0 , 'Y' )
 7:  INSERT INTO TBM_COMMON_CODE_INFO (company_no,code_gb,code_id,code_nm,memo,last_chg_user,last_chg_date,code_value,code_max,code_min,use_yn) values ( '100' , '인사평가배점' , '21' , '결근' , '1일당' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss'), 5.0 , 5.0 , -1.0 , 'Y' )
 8:  INSERT INTO TBM_COMMON_CODE_INFO (company_no,code_gb,code_id,code_nm,memo,last_chg_user,last_chg_date,code_value,code_max,code_min,use_yn) values ( '100' , '인사평가배점' , '22' , '결행' , '1건당' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss'), 5.0 , 5.0 , -1.0 , 'Y' )
 9:  INSERT INTO TBM_COMMON_CODE_INFO (company_no,code_gb,code_id,code_nm,memo,last_chg_user,last_chg_date,code_value,code_max,code_min,use_yn) values ( '100' , '인사평가배점' , '23' , '교통법규위반' , '1건당' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss'), 5.0 , 5.0 , -1.0 , 'Y' )
10:  INSERT INTO TBM_COMMON_CODE_INFO (company_no,code_gb,code_id,code_nm,memo,last_chg_user,last_chg_date,code_value,code_max,code_min,use_yn) values ( '100' , '인사평가배점' , '25' , '민원' , '1건당' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss'), 10.0 , 10.0 , -1.0 , 'Y' )
11:  INSERT INTO TBM_COMMON_CODE_INFO (company_no,code_gb,code_id,code_nm,memo,last_chg_user,last_chg_date,code_value,code_max,code_min,use_yn) values ( '100' , '인사평가배점' , '26' , '지각' , '1건당' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss'), 5.0 , 5.0 , -1.0 , 'Y' )
12:  INSERT INTO TBM_COMMON_CODE_INFO (company_no,code_gb,code_id,code_nm,memo,last_chg_user,last_chg_date,code_value,code_max,code_min,use_yn) values ( '100' , '인사평가배점' , '27' , '칭찬' , '1건당' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss'), 0.0 , 5.0 , 1.0 , 'Y' )
13:  INSERT INTO TBM_COMMON_CODE_INFO (company_no,code_gb,code_id,code_nm,memo,last_chg_user,last_chg_date,code_value,code_max,code_min,use_yn) values ( '100' , '인사평가배점' , '28' , '표창' , '1건당' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss'), 0.0 , 5.0 , 1.0 , 'Y' )
 {executed in 3 msec}
2023-07-12 23:19:28.986 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@f676be38
2023-07-12 23:19:28.987 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_COMMON_CODE_INFO_point} 
2023-07-12 23:19:28.987 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT 	'N' as bit, a.CODE_GB, CODE_ID, CODE_NM ,MEMO, CODE_VALUE, CODE_MIN, CODE_MAX, USE_YN FROM 	TBM_COMMON_CODE_INFO a WHERE 	a.COMPANY_NO  = '100' AND 	a.CODE_GB = '인사평가배점'
2023-07-12 23:19:28.988 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
33. SELECT 	'N' as bit, a.CODE_GB, CODE_ID, CODE_NM ,MEMO, CODE_VALUE, CODE_MIN, CODE_MAX, USE_YN FROM 	TBM_COMMON_CODE_INFO a WHERE 	a.COMPANY_NO  = '100' AND 	a.CODE_GB = '인사평가배점'
 {executed in 1 msec}
2023-07-12 23:19:28.991 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
33. SELECT 	'N' as bit, a.CODE_GB, CODE_ID, CODE_NM ,MEMO, CODE_VALUE, CODE_MIN, CODE_MAX, USE_YN FROM 	TBM_COMMON_CODE_INFO a WHERE 	a.COMPANY_NO  = '100' AND 	a.CODE_GB = '인사평가배점'
 {executed in 1 msec}
2023-07-12 23:20:22.297 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
33. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-12 23:20:22.299 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeUpdate(ProxyStatement.java:120)
33. DELETE FROM TBM_COMMON_CODE_INFO WHERE company_no = '100'  AND code_gb like '인사평가' || '%'
 {executed in 0 msec}
2023-07-12 23:20:22.306 INFO  [http-nio-10010-exec-6] [com.pjy.dashboard.dao.DynamicSqlDao] - insert sql : INSERT INTO TBM_COMMON_CODE_INFO (company_no,code_gb,code_id,code_nm,memo,last_chg_user,last_chg_date,code_value,code_max,code_min,use_yn) values ( '100' , :code_gb , :code_id , :code_nm , :memo , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss'), :code_value , :code_max , :code_min , :use_yn )
2023-07-12 23:20:22.308 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
34. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-12 23:20:22.315 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeBatch(ProxyStatement.java:128)
34. batching 14 statements:
 1:  INSERT INTO TBM_COMMON_CODE_INFO (company_no,code_gb,code_id,code_nm,memo,last_chg_user,last_chg_date,code_value,code_max,code_min,use_yn) values ( '100' , '인사평가배점' , '00' , '기본배점' , '칭찬/표창 보정용' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss'), 10.0 , 10.0 , 0.0 , 'Y' )
 2:  INSERT INTO TBM_COMMON_CODE_INFO (company_no,code_gb,code_id,code_nm,memo,last_chg_user,last_chg_date,code_value,code_max,code_min,use_yn) values ( '100' , '인사평가배점' , '01' , '사고' , '1건당' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss'), 10.0 , 10.0 , -5.0 , 'Y' )
 3:  INSERT INTO TBM_COMMON_CODE_INFO (company_no,code_gb,code_id,code_nm,memo,last_chg_user,last_chg_date,code_value,code_max,code_min,use_yn) values ( '100' , '인사평가배점' , '02' , '사고금액' , '백만원당' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss'), 10.0 , 10.0 , -1.0 , 'Y' )
 4:  INSERT INTO TBM_COMMON_CODE_INFO (company_no,code_gb,code_id,code_nm,memo,last_chg_user,last_chg_date,code_value,code_max,code_min,use_yn) values ( '100' , '인사평가배점' , '11' , '위험운전지수' , '위험level당' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss'), 10.0 , 10.0 , -2.0 , 'Y' )
 5:  INSERT INTO TBM_COMMON_CODE_INFO (company_no,code_gb,code_id,code_nm,memo,last_chg_user,last_chg_date,code_value,code_max,code_min,use_yn) values ( '100' , '인사평가배점' , '12' , '배차정시성' , '위반율' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss'), 10.0 , 10.0 , -1.0 , 'Y' )
 6:  INSERT INTO TBM_COMMON_CODE_INFO (company_no,code_gb,code_id,code_nm,memo,last_chg_user,last_chg_date,code_value,code_max,code_min,use_yn) values ( '100' , '인사평가배점' , '13' , '근무협조도' , '상대평가등급' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss'), 0.0 , 10.0 , 1.0 , 'Y' )
 7:  INSERT INTO TBM_COMMON_CODE_INFO (company_no,code_gb,code_id,code_nm,memo,last_chg_user,last_chg_date,code_value,code_max,code_min,use_yn) values ( '100' , '인사평가배점' , '21' , '결근' , '1일당' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss'), 5.0 , 5.0 , -1.0 , 'Y' )
 8:  INSERT INTO TBM_COMMON_CODE_INFO (company_no,code_gb,code_id,code_nm,memo,last_chg_user,last_chg_date,code_value,code_max,code_min,use_yn) values ( '100' , '인사평가배점' , '22' , '결행' , '1건당' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss'), 5.0 , 5.0 , -1.0 , 'Y' )
 9:  INSERT INTO TBM_COMMON_CODE_INFO (company_no,code_gb,code_id,code_nm,memo,last_chg_user,last_chg_date,code_value,code_max,code_min,use_yn) values ( '100' , '인사평가배점' , '23' , '교통법규위반' , '1건당' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss'), 5.0 , 5.0 , -1.0 , 'Y' )
10:  INSERT INTO TBM_COMMON_CODE_INFO (company_no,code_gb,code_id,code_nm,memo,last_chg_user,last_chg_date,code_value,code_max,code_min,use_yn) values ( '100' , '인사평가배점' , '25' , '민원' , '1건당' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss'), 10.0 , 10.0 , -1.0 , 'Y' )
11:  INSERT INTO TBM_COMMON_CODE_INFO (company_no,code_gb,code_id,code_nm,memo,last_chg_user,last_chg_date,code_value,code_max,code_min,use_yn) values ( '100' , '인사평가배점' , '26' , '지각' , '1건당' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss'), 5.0 , 5.0 , -1.0 , 'Y' )
12:  INSERT INTO TBM_COMMON_CODE_INFO (company_no,code_gb,code_id,code_nm,memo,last_chg_user,last_chg_date,code_value,code_max,code_min,use_yn) values ( '100' , '인사평가배점' , '27' , '칭찬' , '1건당' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss'), 0.0 , 5.0 , 1.0 , 'Y' )
13:  INSERT INTO TBM_COMMON_CODE_INFO (company_no,code_gb,code_id,code_nm,memo,last_chg_user,last_chg_date,code_value,code_max,code_min,use_yn) values ( '100' , '인사평가배점' , '28' , '표창' , '1건당' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss'), 0.0 , 5.0 , 1.0 , 'Y' )
14:  INSERT INTO TBM_COMMON_CODE_INFO (company_no,code_gb,code_id,code_nm,memo,last_chg_user,last_chg_date,code_value,code_max,code_min,use_yn) values ( '100' , '인사평가배점' , '24' , '행정민원' , '1건당' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss'), '10' , 10.0 , -1.0 , 'Y' )
 {executed in 3 msec}
2023-07-12 23:20:22.330 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@f676be38
2023-07-12 23:20:22.330 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_COMMON_CODE_INFO_point} 
2023-07-12 23:20:22.330 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT 	'N' as bit, a.CODE_GB, CODE_ID, CODE_NM ,MEMO, CODE_VALUE, CODE_MIN, CODE_MAX, USE_YN FROM 	TBM_COMMON_CODE_INFO a WHERE 	a.COMPANY_NO  = '100' AND 	a.CODE_GB = '인사평가배점'
2023-07-12 23:20:22.332 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
34. SELECT 	'N' as bit, a.CODE_GB, CODE_ID, CODE_NM ,MEMO, CODE_VALUE, CODE_MIN, CODE_MAX, USE_YN FROM 	TBM_COMMON_CODE_INFO a WHERE 	a.COMPANY_NO  = '100' AND 	a.CODE_GB = '인사평가배점'
 {executed in 1 msec}
2023-07-12 23:20:22.337 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
34. SELECT 	'N' as bit, a.CODE_GB, CODE_ID, CODE_NM ,MEMO, CODE_VALUE, CODE_MIN, CODE_MAX, USE_YN FROM 	TBM_COMMON_CODE_INFO a WHERE 	a.COMPANY_NO  = '100' AND 	a.CODE_GB = '인사평가배점'
 {executed in 0 msec}
2023-07-12 23:22:33.078 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@f676be38
2023-07-12 23:22:33.078 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_COMMON_CODE_INFO_point} 
2023-07-12 23:22:33.078 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT 	'N' as bit, a.CODE_GB, CODE_ID, CODE_NM ,MEMO, CODE_VALUE, CODE_MIN, CODE_MAX, USE_YN FROM 	TBM_COMMON_CODE_INFO a WHERE 	a.COMPANY_NO  = '100' AND 	a.CODE_GB = '인사평가배점'
2023-07-12 23:22:33.079 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
34. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 23:22:33.080 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
34. SELECT 	'N' as bit, a.CODE_GB, CODE_ID, CODE_NM ,MEMO, CODE_VALUE, CODE_MIN, CODE_MAX, USE_YN FROM 	TBM_COMMON_CODE_INFO a WHERE 	a.COMPANY_NO  = '100' AND 	a.CODE_GB = '인사평가배점'
 {executed in 1 msec}
2023-07-12 23:22:33.081 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
34. SELECT 	'N' as bit, a.CODE_GB, CODE_ID, CODE_NM ,MEMO, CODE_VALUE, CODE_MIN, CODE_MAX, USE_YN FROM 	TBM_COMMON_CODE_INFO a WHERE 	a.COMPANY_NO  = '100' AND 	a.CODE_GB = '인사평가배점'
 {executed in 0 msec}
2023-07-12 23:22:47.634 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
34. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 23:22:47.635 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeUpdate(ProxyStatement.java:120)
34. DELETE FROM TBM_COMMON_CODE_INFO WHERE company_no = '100'  AND code_gb like '인사평가' || '%'
 {executed in 1 msec}
2023-07-12 23:22:47.647 INFO  [http-nio-10010-exec-4] [com.pjy.dashboard.dao.DynamicSqlDao] - insert sql : INSERT INTO TBM_COMMON_CODE_INFO (company_no,code_gb,code_id,code_nm,memo,last_chg_user,last_chg_date,code_value,code_max,code_min,use_yn) values ( '100' , :code_gb , :code_id , :code_nm , :memo , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss'), :code_value , :code_max , :code_min , :use_yn )
2023-07-12 23:22:47.648 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
35. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 23:22:47.654 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeBatch(ProxyStatement.java:128)
35. batching 14 statements:
 1:  INSERT INTO TBM_COMMON_CODE_INFO (company_no,code_gb,code_id,code_nm,memo,last_chg_user,last_chg_date,code_value,code_max,code_min,use_yn) values ( '100' , '인사평가배점' , '00' , '기본배점' , '칭찬/표창 보정용' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss'), 10.0 , 10.0 , 0.0 , 'Y' )
 2:  INSERT INTO TBM_COMMON_CODE_INFO (company_no,code_gb,code_id,code_nm,memo,last_chg_user,last_chg_date,code_value,code_max,code_min,use_yn) values ( '100' , '인사평가배점' , '01' , '사고' , '1건당' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss'), 10.0 , 10.0 , -5.0 , 'Y' )
 3:  INSERT INTO TBM_COMMON_CODE_INFO (company_no,code_gb,code_id,code_nm,memo,last_chg_user,last_chg_date,code_value,code_max,code_min,use_yn) values ( '100' , '인사평가배점' , '02' , '사고금액' , '백만원당' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss'), 10.0 , 10.0 , -1.0 , 'Y' )
 4:  INSERT INTO TBM_COMMON_CODE_INFO (company_no,code_gb,code_id,code_nm,memo,last_chg_user,last_chg_date,code_value,code_max,code_min,use_yn) values ( '100' , '인사평가배점' , '11' , '위험운전지수' , '위험level당' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss'), 10.0 , 10.0 , -2.0 , 'Y' )
 5:  INSERT INTO TBM_COMMON_CODE_INFO (company_no,code_gb,code_id,code_nm,memo,last_chg_user,last_chg_date,code_value,code_max,code_min,use_yn) values ( '100' , '인사평가배점' , '12' , '배차정시성' , '위반율' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss'), 10.0 , 10.0 , -1.0 , 'Y' )
 6:  INSERT INTO TBM_COMMON_CODE_INFO (company_no,code_gb,code_id,code_nm,memo,last_chg_user,last_chg_date,code_value,code_max,code_min,use_yn) values ( '100' , '인사평가배점' , '13' , '근무협조도' , '상대평가등급' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss'), 0.0 , 10.0 , 1.0 , 'Y' )
 7:  INSERT INTO TBM_COMMON_CODE_INFO (company_no,code_gb,code_id,code_nm,memo,last_chg_user,last_chg_date,code_value,code_max,code_min,use_yn) values ( '100' , '인사평가배점' , '21' , '결근' , '1일당' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss'), 5.0 , 5.0 , -1.0 , 'Y' )
 8:  INSERT INTO TBM_COMMON_CODE_INFO (company_no,code_gb,code_id,code_nm,memo,last_chg_user,last_chg_date,code_value,code_max,code_min,use_yn) values ( '100' , '인사평가배점' , '22' , '결행' , '1건당' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss'), 5.0 , 5.0 , -1.0 , 'Y' )
 9:  INSERT INTO TBM_COMMON_CODE_INFO (company_no,code_gb,code_id,code_nm,memo,last_chg_user,last_chg_date,code_value,code_max,code_min,use_yn) values ( '100' , '인사평가배점' , '23' , '교통법규위반' , '1건당' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss'), 5.0 , 5.0 , -1.0 , 'Y' )
10:  INSERT INTO TBM_COMMON_CODE_INFO (company_no,code_gb,code_id,code_nm,memo,last_chg_user,last_chg_date,code_value,code_max,code_min,use_yn) values ( '100' , '인사평가배점' , '14' , '행정민원' , '1건당' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss'), 10.0 , 10.0 , -1.0 , 'Y' )
11:  INSERT INTO TBM_COMMON_CODE_INFO (company_no,code_gb,code_id,code_nm,memo,last_chg_user,last_chg_date,code_value,code_max,code_min,use_yn) values ( '100' , '인사평가배점' , '25' , '민원' , '1건당' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss'), 10.0 , 10.0 , -1.0 , 'Y' )
12:  INSERT INTO TBM_COMMON_CODE_INFO (company_no,code_gb,code_id,code_nm,memo,last_chg_user,last_chg_date,code_value,code_max,code_min,use_yn) values ( '100' , '인사평가배점' , '26' , '지각' , '1건당' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss'), 5.0 , 5.0 , -1.0 , 'Y' )
13:  INSERT INTO TBM_COMMON_CODE_INFO (company_no,code_gb,code_id,code_nm,memo,last_chg_user,last_chg_date,code_value,code_max,code_min,use_yn) values ( '100' , '인사평가배점' , '27' , '칭찬' , '1건당' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss'), 0.0 , 5.0 , 1.0 , 'Y' )
14:  INSERT INTO TBM_COMMON_CODE_INFO (company_no,code_gb,code_id,code_nm,memo,last_chg_user,last_chg_date,code_value,code_max,code_min,use_yn) values ( '100' , '인사평가배점' , '28' , '표창' , '1건당' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss'), 0.0 , 5.0 , 1.0 , 'Y' )
 {executed in 3 msec}
2023-07-12 23:22:47.665 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@f676be38
2023-07-12 23:22:47.665 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_COMMON_CODE_INFO_point} 
2023-07-12 23:22:47.666 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT 	'N' as bit, a.CODE_GB, CODE_ID, CODE_NM ,MEMO, CODE_VALUE, CODE_MIN, CODE_MAX, USE_YN FROM 	TBM_COMMON_CODE_INFO a WHERE 	a.COMPANY_NO  = '100' AND 	a.CODE_GB = '인사평가배점'
2023-07-12 23:22:47.668 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
35. SELECT 	'N' as bit, a.CODE_GB, CODE_ID, CODE_NM ,MEMO, CODE_VALUE, CODE_MIN, CODE_MAX, USE_YN FROM 	TBM_COMMON_CODE_INFO a WHERE 	a.COMPANY_NO  = '100' AND 	a.CODE_GB = '인사평가배점'
 {executed in 1 msec}
2023-07-12 23:22:47.670 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
35. SELECT 	'N' as bit, a.CODE_GB, CODE_ID, CODE_NM ,MEMO, CODE_VALUE, CODE_MIN, CODE_MAX, USE_YN FROM 	TBM_COMMON_CODE_INFO a WHERE 	a.COMPANY_NO  = '100' AND 	a.CODE_GB = '인사평가배점'
 {executed in 0 msec}
2023-07-12 23:23:13.837 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
35. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 23:23:13.838 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeUpdate(ProxyStatement.java:120)
35. DELETE FROM TBM_COMMON_CODE_INFO WHERE company_no = '100'  AND code_gb like '인사평가' || '%'
 {executed in 1 msec}
2023-07-12 23:23:13.845 INFO  [http-nio-10010-exec-9] [com.pjy.dashboard.dao.DynamicSqlDao] - insert sql : INSERT INTO TBM_COMMON_CODE_INFO (company_no,code_gb,code_id,code_nm,memo,last_chg_user,last_chg_date,code_value,code_max,code_min,use_yn) values ( '100' , :code_gb , :code_id , :code_nm , :memo , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss'), :code_value , :code_max , :code_min , :use_yn )
2023-07-12 23:23:13.846 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
36. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-12 23:23:13.851 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeBatch(ProxyStatement.java:128)
36. batching 14 statements:
 1:  INSERT INTO TBM_COMMON_CODE_INFO (company_no,code_gb,code_id,code_nm,memo,last_chg_user,last_chg_date,code_value,code_max,code_min,use_yn) values ( '100' , '인사평가배점' , '00' , '기본배점' , '칭찬/표창 보정용' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss'), 10.0 , 10.0 , 0.0 , 'Y' )
 2:  INSERT INTO TBM_COMMON_CODE_INFO (company_no,code_gb,code_id,code_nm,memo,last_chg_user,last_chg_date,code_value,code_max,code_min,use_yn) values ( '100' , '인사평가배점' , '01' , '사고' , '1건당' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss'), 10.0 , 10.0 , -5.0 , 'Y' )
 3:  INSERT INTO TBM_COMMON_CODE_INFO (company_no,code_gb,code_id,code_nm,memo,last_chg_user,last_chg_date,code_value,code_max,code_min,use_yn) values ( '100' , '인사평가배점' , '02' , '사고금액' , '백만원당' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss'), 10.0 , 10.0 , -1.0 , 'Y' )
 4:  INSERT INTO TBM_COMMON_CODE_INFO (company_no,code_gb,code_id,code_nm,memo,last_chg_user,last_chg_date,code_value,code_max,code_min,use_yn) values ( '100' , '인사평가배점' , '11' , '위험운전지수' , '위험level당' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss'), 10.0 , 10.0 , -2.0 , 'Y' )
 5:  INSERT INTO TBM_COMMON_CODE_INFO (company_no,code_gb,code_id,code_nm,memo,last_chg_user,last_chg_date,code_value,code_max,code_min,use_yn) values ( '100' , '인사평가배점' , '12' , '배차정시성' , '위반율' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss'), 10.0 , 10.0 , -1.0 , 'Y' )
 6:  INSERT INTO TBM_COMMON_CODE_INFO (company_no,code_gb,code_id,code_nm,memo,last_chg_user,last_chg_date,code_value,code_max,code_min,use_yn) values ( '100' , '인사평가배점' , '13' , '근무협조도' , '상대평가등급' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss'), 0.0 , 10.0 , 1.0 , 'Y' )
 7:  INSERT INTO TBM_COMMON_CODE_INFO (company_no,code_gb,code_id,code_nm,memo,last_chg_user,last_chg_date,code_value,code_max,code_min,use_yn) values ( '100' , '인사평가배점' , '14' , '행정민원' , '1건당' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss'), 10.0 , 10.0 , -2.0 , 'Y' )
 8:  INSERT INTO TBM_COMMON_CODE_INFO (company_no,code_gb,code_id,code_nm,memo,last_chg_user,last_chg_date,code_value,code_max,code_min,use_yn) values ( '100' , '인사평가배점' , '21' , '결근' , '1일당' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss'), 5.0 , 5.0 , -1.0 , 'Y' )
 9:  INSERT INTO TBM_COMMON_CODE_INFO (company_no,code_gb,code_id,code_nm,memo,last_chg_user,last_chg_date,code_value,code_max,code_min,use_yn) values ( '100' , '인사평가배점' , '22' , '결행' , '1건당' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss'), 5.0 , 5.0 , -1.0 , 'Y' )
10:  INSERT INTO TBM_COMMON_CODE_INFO (company_no,code_gb,code_id,code_nm,memo,last_chg_user,last_chg_date,code_value,code_max,code_min,use_yn) values ( '100' , '인사평가배점' , '23' , '교통법규위반' , '1건당' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss'), 5.0 , 5.0 , -1.0 , 'Y' )
11:  INSERT INTO TBM_COMMON_CODE_INFO (company_no,code_gb,code_id,code_nm,memo,last_chg_user,last_chg_date,code_value,code_max,code_min,use_yn) values ( '100' , '인사평가배점' , '25' , '민원' , '1건당' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss'), 10.0 , 10.0 , -1.0 , 'Y' )
12:  INSERT INTO TBM_COMMON_CODE_INFO (company_no,code_gb,code_id,code_nm,memo,last_chg_user,last_chg_date,code_value,code_max,code_min,use_yn) values ( '100' , '인사평가배점' , '26' , '지각' , '1건당' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss'), 5.0 , 5.0 , -1.0 , 'Y' )
13:  INSERT INTO TBM_COMMON_CODE_INFO (company_no,code_gb,code_id,code_nm,memo,last_chg_user,last_chg_date,code_value,code_max,code_min,use_yn) values ( '100' , '인사평가배점' , '27' , '칭찬' , '1건당' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss'), 0.0 , 5.0 , 1.0 , 'Y' )
14:  INSERT INTO TBM_COMMON_CODE_INFO (company_no,code_gb,code_id,code_nm,memo,last_chg_user,last_chg_date,code_value,code_max,code_min,use_yn) values ( '100' , '인사평가배점' , '28' , '표창' , '1건당' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss'), 0.0 , 5.0 , 1.0 , 'Y' )
 {executed in 2 msec}
2023-07-12 23:23:13.861 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@f676be38
2023-07-12 23:23:13.861 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_COMMON_CODE_INFO_point} 
2023-07-12 23:23:13.861 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT 	'N' as bit, a.CODE_GB, CODE_ID, CODE_NM ,MEMO, CODE_VALUE, CODE_MIN, CODE_MAX, USE_YN FROM 	TBM_COMMON_CODE_INFO a WHERE 	a.COMPANY_NO  = '100' AND 	a.CODE_GB = '인사평가배점'
2023-07-12 23:23:13.863 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
36. SELECT 	'N' as bit, a.CODE_GB, CODE_ID, CODE_NM ,MEMO, CODE_VALUE, CODE_MIN, CODE_MAX, USE_YN FROM 	TBM_COMMON_CODE_INFO a WHERE 	a.COMPANY_NO  = '100' AND 	a.CODE_GB = '인사평가배점'
 {executed in 1 msec}
2023-07-12 23:23:13.864 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
36. SELECT 	'N' as bit, a.CODE_GB, CODE_ID, CODE_NM ,MEMO, CODE_VALUE, CODE_MIN, CODE_MAX, USE_YN FROM 	TBM_COMMON_CODE_INFO a WHERE 	a.COMPANY_NO  = '100' AND 	a.CODE_GB = '인사평가배점'
 {executed in 1 msec}
2023-07-12 23:24:27.313 INFO  [RMI TCP Connection(78)-127.0.0.1] [o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin] - Application shutdown requested.
2023-07-12 23:24:27.342 INFO  [RMI TCP Connection(78)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Shutting down ExecutorService 'asyncThreadPool'
2023-07-12 23:24:27.344 INFO  [RMI TCP Connection(78)-127.0.0.1] [com.zaxxer.hikari.HikariDataSource] - H2 - Shutdown initiated...
2023-07-12 23:24:27.351 INFO  [RMI TCP Connection(78)-127.0.0.1] [com.zaxxer.hikari.HikariDataSource] - H2 - Shutdown completed.
2023-07-12 23:24:27.411 INFO  [RMI TCP Connection(78)-127.0.0.1] [com.pjy.dashboard.filter.TestFilter] - destroy Pjy Filter
2023-07-12 23:24:45.670 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Starting PjyApplication on DESKTOP-QJPD93S with PID 15448 (D:\BUS\dashboard\dashboard\target\classes started by admin in D:\BUS\dashboard\dashboard)
2023-07-12 23:24:45.674 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - The following profiles are active: oauth
2023-07-12 23:24:45.731 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-07-12 23:24:45.731 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-07-12 23:24:46.926 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-07-12 23:24:46.926 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-07-12 23:24:47.074 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 139ms. Found 3 JPA repository interfaces.
2023-07-12 23:24:47.427 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-07-12 23:24:47.427 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2023-07-12 23:24:47.482 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.FileRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-07-12 23:24:47.482 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.MemberRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-07-12 23:24:47.483 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.RememberMeRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-07-12 23:24:47.483 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 56ms. Found 0 JDBC repository interfaces.
2023-07-12 23:24:47.919 INFO  [restartedMain] [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] - Post-processing PropertySource instances
2023-07-12 23:24:47.986 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2023-07-12 23:24:47.987 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource commandLineArgs [org.springframework.core.env.SimpleCommandLinePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-07-12 23:24:47.987 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-07-12 23:24:47.987 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-07-12 23:24:47.987 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2023-07-12 23:24:47.987 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
2023-07-12 23:24:47.988 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2023-07-12 23:24:47.988 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application-oauth.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-07-12 23:24:47.988 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-07-12 23:24:47.988 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2023-07-12 23:24:47.988 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [pjy.properties] [org.springframework.core.env.CompositePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-07-12 23:24:47.988 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [common.properties] [org.springframework.core.io.support.ResourcePropertySource] to EncryptableMapPropertySourceWrapper
2023-07-12 23:24:48.050 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'asyncConfiguration' of type [com.pjy.dashboard.configuration.AsyncConfiguration$$EnhancerBySpringCGLIB$$15d963af] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 23:24:48.100 INFO  [restartedMain] [c.u.j.filter.DefaultLazyPropertyFilter] - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2023-07-12 23:24:48.188 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$ffcfc7dc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 23:24:48.273 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 23:24:48.275 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@30a09117' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 23:24:48.280 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$24a46a8e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 23:24:48.289 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration$$EnhancerBySpringCGLIB$$49f982a4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 23:24:48.294 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 23:24:48.295 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 23:24:48.315 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6721ffa2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 23:24:48.346 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$e6a24cd4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-12 23:24:48.473 INFO  [restartedMain] [c.u.j.r.DefaultLazyPropertyResolver] - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2023-07-12 23:24:48.478 INFO  [restartedMain] [c.u.j.d.DefaultLazyPropertyDetector] - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2023-07-12 23:24:48.903 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 10010 (http)
2023-07-12 23:24:48.919 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Initializing ProtocolHandler ["http-nio-10010"]
2023-07-12 23:24:48.932 INFO  [restartedMain] [org.apache.catalina.core.StandardService] - Starting service [Tomcat]
2023-07-12 23:24:48.932 INFO  [restartedMain] [org.apache.catalina.core.StandardEngine] - Starting Servlet engine: [Apache Tomcat/9.0.29]
2023-07-12 23:24:49.310 INFO  [restartedMain] [org.apache.jasper.servlet.TldScanner] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2023-07-12 23:24:49.320 INFO  [restartedMain] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring embedded WebApplicationContext
2023-07-12 23:24:49.320 INFO  [restartedMain] [o.s.web.context.ContextLoader] - Root WebApplicationContext: initialization completed in 3589 ms
2023-07-12 23:24:50.142 INFO  [restartedMain] [c.u.j.encryptor.DefaultLazyEncryptor] - Found Custom Encryptor Bean org.jasypt.encryption.pbe.PooledPBEStringEncryptor@28a9b0de with name: jasyptStringEncryptor
2023-07-12 23:24:50.194 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Starting...
2023-07-12 23:24:50.288 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.executeSql(PoolBase.java:567)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 7 msec}
2023-07-12 23:24:50.291 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Start completed.
2023-07-12 23:24:51.061 INFO  [restartedMain] [com.pjy.dashboard.filter.TestFilter] - init Pjy Filter
2023-07-12 23:24:51.428 INFO  [restartedMain] [o.hibernate.jpa.internal.util.LogHelper] - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2023-07-12 23:24:51.510 INFO  [restartedMain] [org.hibernate.Version] - HHH000412: Hibernate Core {5.3.14.Final}
2023-07-12 23:24:51.511 INFO  [restartedMain] [org.hibernate.cfg.Environment] - HHH000206: hibernate.properties not found
2023-07-12 23:24:51.662 INFO  [restartedMain] [org.hibernate.annotations.common.Version] - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2023-07-12 23:24:51.896 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 23:24:51.912 INFO  [restartedMain] [org.hibernate.dialect.Dialect] - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2023-07-12 23:24:52.611 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 23:24:52.614 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select SEQUENCE_CATALOG, SEQUENCE_SCHEMA, SEQUENCE_NAME, INCREMENT from information_schema.sequences
 {executed in 1 msec}
2023-07-12 23:24:52.664 INFO  [restartedMain] [o.s.o.j.LocalContainerEntityManagerFactoryBean] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-07-12 23:24:52.937 INFO  [restartedMain] [o.h.h.i.QueryTranslatorFactoryInitiator] - HHH000397: Using ASTQueryTranslatorFactory
2023-07-12 23:24:54.019 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService
2023-07-12 23:24:54.029 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'asyncThreadPool'
2023-07-12 23:24:54.209 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/h2-console/**'], []
2023-07-12 23:24:54.210 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/css/**'], []
2023-07-12 23:24:54.210 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/js/**'], []
2023-07-12 23:24:54.210 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/monitor/**'], []
2023-07-12 23:24:54.210 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/img/**'], []
2023-07-12 23:24:54.210 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/lib/**'], []
2023-07-12 23:24:54.210 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/main.css'], []
2023-07-12 23:24:54.210 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/common.js'], []
2023-07-12 23:24:54.210 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/resources/**'], []
2023-07-12 23:24:54.369 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@a1f438a, org.springframework.security.web.context.SecurityContextPersistenceFilter@68e9bb49, org.springframework.security.web.header.HeaderWriterFilter@52374a38, org.springframework.web.filter.CorsFilter@6c648ad9, org.springframework.security.web.authentication.logout.LogoutFilter@7c51c43c, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@2a6f7bd1, org.springframework.security.web.session.ConcurrentSessionFilter@2925cf71, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@1420e4c7, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@44be2f9a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@450d6333, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5c056567, org.springframework.security.web.session.SessionManagementFilter@4d5767b9, org.springframework.security.web.access.ExceptionTranslationFilter@71f38401, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@31ac26fe]
2023-07-12 23:24:54.391 INFO  [restartedMain] [o.s.aop.framework.CglibAopProxy] - Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(javax.servlet.FilterConfig) throws javax.servlet.ServletException] because it is marked as final: Consider using interface-based JDK proxies instead!
2023-07-12 23:24:54.745 WARN  [restartedMain] [o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-07-12 23:24:54.819 INFO  [restartedMain] [o.s.b.a.w.s.WelcomePageHandlerMapping] - Adding welcome page: ServletContext resource [/index.html]
2023-07-12 23:24:55.245 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 23:24:56.115 INFO  [restartedMain] [o.s.b.d.a.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2023-07-12 23:24:56.144 INFO  [restartedMain] [o.s.b.a.e.web.EndpointLinksResolver] - Exposing 16 endpoint(s) beneath base path '/actuator'
2023-07-12 23:24:56.287 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskScheduler] - Initializing ExecutorService
2023-07-12 23:24:56.293 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Starting ProtocolHandler ["http-nio-10010"]
2023-07-12 23:24:56.343 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 10010 (http) with context path ''
2023-07-12 23:24:56.347 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Started PjyApplication in 11.144 seconds (JVM running for 12.561)
2023-07-12 23:24:56.348 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-07-12 23:24:56.349 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - Application started
2023-07-12 23:24:56.349 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-07-12 23:24:57.273 INFO  [RMI TCP Connection(10)-127.0.0.1] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-07-12 23:24:57.274 INFO  [RMI TCP Connection(10)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Initializing Servlet 'dispatcherServlet'
2023-07-12 23:24:57.295 INFO  [RMI TCP Connection(10)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Completed initialization in 21 ms
2023-07-12 23:25:25.219 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 2 msec}
2023-07-12 23:25:25.255 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. DELETE TBM_EMP_POINT_INFO a
	WHERE 	a.COMPANY_NO =  '100'
	AND 	a.from_date = '2023-01-01' 
	AND 	a.to_date = '2023-07-31'
 {executed in 30 msec}
2023-07-12 23:25:29.063 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. WITH codeInfo AS (
		SELECT 	b.emp_nm,a.* FROM TBM_COMMON_CODE_INFO a,TBL_EMPLOYEEINFO b
		WHERE 	a.COMPANY_NO = '100' 
		AND 	a.CODE_GB  = '인사평가배점'
		AND		a.USE_YN   = 'Y'
		AND 	a.COMPANY_NO = b.company_no
	), workingInfo AS (
		SELECT 	a.EMP_NM ,a.code_type1
			, 	count(a.WORK_DATE ) AS point
		FROM 	TBM_EMP_WORKING_LOG a JOIN TBM_COMMON_CODE_INFO b ON a.COMPANY_NO = b.COMPANY_NO AND a.code_type1 = b.code_nm AND b.code_gb = '인사평가배점' AND b.USE_YN = 'Y' AND b.code_id LIKE '2%'
		WHERE 	a.COMPANY_NO ='100'
		AND 	a.WORK_DATE BETWEEN '2023-01-01' AND '2023-07-31' 
		GROUP BY a.EMP_NM , a.code_type1
		UNION
		SELECT 	a.EMP_NM ,'행정민원'
			, 	count(a.comp_DATE ) 
		FROM 	TBL_PUBLIC_COMPLAINT_INFO a 
		WHERE 	a.COMPANY_NO ='100'
		AND 	a.comp_DATE BETWEEN '2023-01-01' AND '2023-07-31' 
		GROUP BY a.EMP_NM
		UNION
		SELECT 	a.EMP_NM ,'사고'
			, 	count(a.acc_DATE ) 
		FROM 	TBM_ACCIDENT_INFO a 
		WHERE 	a.COMPANY_NO ='100'
		AND 	a.acc_DATE BETWEEN '2023-01-01' AND '2023-07-31' 
		GROUP BY a.EMP_NM
		UNION
		SELECT 	a.EMP_NM ,'사고금액'
			, 	trunc(sum(a.OUT_TOT_AMT) / 1000000,0)
		FROM 	TBM_ACCIDENT_INFO a 
		WHERE 	a.COMPANY_NO ='100'
		AND 	a.acc_DATE BETWEEN '2023-01-01' AND '2023-07-31' 
		GROUP BY a.EMP_NM
		UNION 
		select  a.EMP_NM ,'배차정시성'
			,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 10.0,1) AS wibanRate
		from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
		where   a.company_no = '100' 
		AND 	a.BASE_YMD BETWEEN  '2023-01-01' AND '2023-07-31' 
		AND 	a.emp_nm <> '-'
		GROUP BY  a.EMP_NM 
		UNION 
		SELECT	b.emp_nm,'위험운전지수'
			,	round(avg(decode(b.danger_level,'매우위험',5,'위험',4,'주의',3,'보통',2,'양호',1,0)) ,1) AS danger_level_no 
		FROM	TBL_DANGER_DRIVING_INFO b
		WHERE	b.company_no = '100'
		AND 	b.base_ym BETWEEN substring('2023-01-01',1,7) AND substring('2023-07-31',1,7) 
		GROUP BY b.EMP_NM 	
		UNION 
		SELECT 	m.emp_nm,'근무협조도'
			,	round(PERCENT_RANK() OVER (ORDER BY m.work_Avg) * 10,1) AS workRate
		FROM (
			SELECT k.emp_nm, avg(k.work_cnt) AS work_avg
			FROM (
				SELECT  a.EMP_NM 
						,substring(a.work_date,1,7) AS work_ym
						,count(a.work_Date) AS work_cnt
				FROM TBB_DRIVING_RECORD_DAY a
				WHERE a.COMPANY_NO ='100'
				AND 	a.work_date BETWEEN  '2023-01-01' AND '2023-07-31' 
				GROUP BY a.EMP_NM ,substring(a.work_date,1,7)
			)k
			GROUP BY k.emp_nm
		) m
	) 
	INSERT INTO TBM_EMP_POINT_INFO
	SELECT 	a.COMPANY_NO 
		,	'2023-01-01'
		,	'2023-07-31' 
		,	a.emp_nm
		,	a.code_gb
		,	a.CODE_ID 
		,	a.code_nm
		, 	a.MEMO 
		,	a.CODE_VALUE 
		,	a.code_max
		,	a.code_min
		,	nvl(b.point,0) AS point
		, 	a.code_value + (nvl(b.point,0) * a.code_min ) AS tot_point
		,	'batch'
		,	to_char(SYSDATE,'yyyy-MM-dd hh:mi:ss')
	FROM  codeInfo a LEFT OUTER JOIN workingInfo b ON  a.emp_nm = b.emp_nm and a.code_nm = b.CODE_TYPE1
 {executed in 3800 msec}
2023-07-12 23:25:32.606 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@5548789a
2023-07-12 23:25:32.610 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 23:25:32.842 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT k.*
	FROM (
		SELECT 	ROW_NUMBER() over(ORDER BY sum(a.tot_point) desc) AS seq
			,	a.emp_nm
			,	b.sp_gb
			,	b.route_nm
			,	listagg(a.code_nm,'/') WITHIN GROUP (ORDER BY a.code_id)   AS codeList
			,	listagg(a.tot_point,'/') WITHIN GROUP (ORDER BY a.code_id) AS pointList
			,	listagg(a.point,'/') WITHIN GROUP (ORDER BY a.code_id) AS cntList
			,	listagg(a.code_max,'/') WITHIN GROUP (ORDER BY a.code_id) AS maxList
			,	sum(a.tot_point) AS tot_point
			,	nvl(to_char(datediff(DAY,b.enter_date,to_char(SYSDATE,'yyyy-mm-dd'))),0) AS totWorkingDay
			,	substring(b.birth_ymd,1,2) as birth_year
		FROM  TBM_EMP_POINT_INFO a join TBL_DRIVERINFO b on a.company_no = b.company_no AND a.emp_nm = b.emp_nm
		WHERE	a.company_no = '100'
		AND	 	a.from_date = '2023-01-01' 
		AND 	a.to_date = '2023-07-31' 
		AND 	b.route_nm = decode('','',b.route_nm,'') 
		AND 	b.sp_gb = decode('ALL','ALL',b.sp_gb,'ALL')
		GROUP BY a.emp_nm
		ORDER BY 1
	) K
	WHERE 	k.emp_nm = decode ('','',k.emp_nm,'')
	AND		round(k.totWorkingDay/365,0) >= 0
 {executed in 230 msec}
2023-07-12 23:26:41.431 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@bd062ae5
2023-07-12 23:26:41.432 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 23:26:41.645 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT k.*
	FROM (
		SELECT 	ROW_NUMBER() over(ORDER BY sum(a.tot_point) desc) AS seq
			,	a.emp_nm
			,	b.sp_gb
			,	b.route_nm
			,	listagg(a.code_nm,'/') WITHIN GROUP (ORDER BY a.code_id)   AS codeList
			,	listagg(a.tot_point,'/') WITHIN GROUP (ORDER BY a.code_id) AS pointList
			,	listagg(a.point,'/') WITHIN GROUP (ORDER BY a.code_id) AS cntList
			,	listagg(a.code_max,'/') WITHIN GROUP (ORDER BY a.code_id) AS maxList
			,	sum(a.tot_point) AS tot_point
			,	nvl(to_char(datediff(DAY,b.enter_date,to_char(SYSDATE,'yyyy-mm-dd'))),0) AS totWorkingDay
			,	substring(b.birth_ymd,1,2) as birth_year
		FROM  TBM_EMP_POINT_INFO a join TBL_DRIVERINFO b on a.company_no = b.company_no AND a.emp_nm = b.emp_nm
		WHERE	a.company_no = '100'
		AND	 	a.from_date = '2023-01-01' 
		AND 	a.to_date = '2023-07-31' 
		AND 	b.route_nm = decode('','',b.route_nm,'') 
		AND 	b.sp_gb = decode('ALL','ALL',b.sp_gb,'ALL')
		GROUP BY a.emp_nm
		ORDER BY 1
	) K
	WHERE 	k.emp_nm = decode ('','',k.emp_nm,'')
	AND		round(k.totWorkingDay/365,0) >= 1
 {executed in 212 msec}
2023-07-12 23:27:52.121 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 23:27:52.122 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. SELECT ROUTE_NM  FROM TBL_ROUTEINFO a where 	a.company_no = '100' ORDER BY 1
 {executed in 1 msec}
2023-07-12 23:27:53.117 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@5548789a
2023-07-12 23:27:53.119 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-12 23:27:53.328 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT k.*
	FROM (
		SELECT 	ROW_NUMBER() over(ORDER BY sum(a.tot_point) desc) AS seq
			,	a.emp_nm
			,	b.sp_gb
			,	b.route_nm
			,	listagg(a.code_nm,'/') WITHIN GROUP (ORDER BY a.code_id)   AS codeList
			,	listagg(a.tot_point,'/') WITHIN GROUP (ORDER BY a.code_id) AS pointList
			,	listagg(a.point,'/') WITHIN GROUP (ORDER BY a.code_id) AS cntList
			,	listagg(a.code_max,'/') WITHIN GROUP (ORDER BY a.code_id) AS maxList
			,	sum(a.tot_point) AS tot_point
			,	nvl(to_char(datediff(DAY,b.enter_date,to_char(SYSDATE,'yyyy-mm-dd'))),0) AS totWorkingDay
			,	substring(b.birth_ymd,1,2) as birth_year
		FROM  TBM_EMP_POINT_INFO a join TBL_DRIVERINFO b on a.company_no = b.company_no AND a.emp_nm = b.emp_nm
		WHERE	a.company_no = '100'
		AND	 	a.from_date = '2023-01-01' 
		AND 	a.to_date = '2023-07-31' 
		AND 	b.route_nm = decode('','',b.route_nm,'') 
		AND 	b.sp_gb = decode('ALL','ALL',b.sp_gb,'ALL')
		GROUP BY a.emp_nm
		ORDER BY 1
	) K
	WHERE 	k.emp_nm = decode ('','',k.emp_nm,'')
	AND		round(k.totWorkingDay/365,0) >= 0
 {executed in 208 msec}
2023-07-12 23:27:58.186 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@bd062ae5
2023-07-12 23:27:58.188 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-12 23:27:58.393 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT k.*
	FROM (
		SELECT 	ROW_NUMBER() over(ORDER BY sum(a.tot_point) desc) AS seq
			,	a.emp_nm
			,	b.sp_gb
			,	b.route_nm
			,	listagg(a.code_nm,'/') WITHIN GROUP (ORDER BY a.code_id)   AS codeList
			,	listagg(a.tot_point,'/') WITHIN GROUP (ORDER BY a.code_id) AS pointList
			,	listagg(a.point,'/') WITHIN GROUP (ORDER BY a.code_id) AS cntList
			,	listagg(a.code_max,'/') WITHIN GROUP (ORDER BY a.code_id) AS maxList
			,	sum(a.tot_point) AS tot_point
			,	nvl(to_char(datediff(DAY,b.enter_date,to_char(SYSDATE,'yyyy-mm-dd'))),0) AS totWorkingDay
			,	substring(b.birth_ymd,1,2) as birth_year
		FROM  TBM_EMP_POINT_INFO a join TBL_DRIVERINFO b on a.company_no = b.company_no AND a.emp_nm = b.emp_nm
		WHERE	a.company_no = '100'
		AND	 	a.from_date = '2023-01-01' 
		AND 	a.to_date = '2023-07-31' 
		AND 	b.route_nm = decode('','',b.route_nm,'') 
		AND 	b.sp_gb = decode('ALL','ALL',b.sp_gb,'ALL')
		GROUP BY a.emp_nm
		ORDER BY 1
	) K
	WHERE 	k.emp_nm = decode ('','',k.emp_nm,'')
	AND		round(k.totWorkingDay/365,0) >= 1
 {executed in 204 msec}
2023-07-12 23:28:47.944 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-12 23:28:47.945 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. SELECT ROUTE_NM  FROM TBL_ROUTEINFO a where 	a.company_no = '100' ORDER BY 1
 {executed in 0 msec}
2023-07-12 23:28:51.041 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@bd062ae5
2023-07-12 23:28:51.042 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 23:28:51.247 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT k.*
	FROM (
		SELECT 	ROW_NUMBER() over(ORDER BY sum(a.tot_point) desc) AS seq
			,	a.emp_nm
			,	b.sp_gb
			,	b.route_nm
			,	listagg(a.code_nm,'/') WITHIN GROUP (ORDER BY a.code_id)   AS codeList
			,	listagg(a.tot_point,'/') WITHIN GROUP (ORDER BY a.code_id) AS pointList
			,	listagg(a.point,'/') WITHIN GROUP (ORDER BY a.code_id) AS cntList
			,	listagg(a.code_max,'/') WITHIN GROUP (ORDER BY a.code_id) AS maxList
			,	sum(a.tot_point) AS tot_point
			,	nvl(to_char(datediff(DAY,b.enter_date,to_char(SYSDATE,'yyyy-mm-dd'))),0) AS totWorkingDay
			,	substring(b.birth_ymd,1,2) as birth_year
		FROM  TBM_EMP_POINT_INFO a join TBL_DRIVERINFO b on a.company_no = b.company_no AND a.emp_nm = b.emp_nm
		WHERE	a.company_no = '100'
		AND	 	a.from_date = '2023-01-01' 
		AND 	a.to_date = '2023-07-31' 
		AND 	b.route_nm = decode('','',b.route_nm,'') 
		AND 	b.sp_gb = decode('ALL','ALL',b.sp_gb,'ALL')
		GROUP BY a.emp_nm
		ORDER BY 1
	) K
	WHERE 	k.emp_nm = decode ('','',k.emp_nm,'')
	AND		round(k.totWorkingDay/365,0) >= 1
 {executed in 205 msec}
2023-07-12 23:29:05.488 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-12 23:29:05.489 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. SELECT ROUTE_NM  FROM TBL_ROUTEINFO a where 	a.company_no = '100' ORDER BY 1
 {executed in 1 msec}
2023-07-12 23:29:07.952 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.emp_no,a.emp_nm,nvl(b.route_nm,'-') as route_nm, nvl(b.WORK_GROUP,'-') as work_group from    TBL_employeeInfo a left outer join TBL_DRIVERINFO b on a.company_no = b.company_no and a.emp_nm = b.emp_nm where   a.company_no = '100' and	    b.sp_gb = decode('ALL','ALL',b.sp_gb,'ALL') order by a.emp_nm
2023-07-12 23:29:07.953 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-12 23:29:07.975 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   a.emp_no,a.emp_nm,nvl(b.route_nm,'-') as route_nm, nvl(b.WORK_GROUP,'-') as work_group from    TBL_employeeInfo a left outer join TBL_DRIVERINFO b on a.company_no = b.company_no and a.emp_nm = b.emp_nm where   a.company_no = '100' and	    b.sp_gb = decode('ALL','ALL',b.sp_gb,'ALL') order by a.emp_nm
 {executed in 22 msec}
2023-07-12 23:29:09.227 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@4ec0afb5
2023-07-12 23:29:09.230 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-12 23:29:09.233 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  5 AS seq
		,  '5' AS a0 
		,	'현주소' AS a1, 		nvl(b.address,'') AS a1_value 
		,	'' AS a2, '' AS a2_value 
		,	'' AS a3, '' AS a3_value 
		,	'' AS a4, '' AS a4_value 
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='권오현' 
	union 
	SELECT  4 AS seq
		,  '4' AS a0 
		,	'이메일' AS a1, 		nvl(b.email,'')  AS a1_value 
		,	'호봉' AS a2, 		nvl(b.hobong,'') AS a2_value 
		,	'구분' AS a3, 		a.JOB_KIND AS a3_value 
		,	'생년월일' AS a4, 		b.birth_ymd  AS a4_value 
		,	'국민연금취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='권오현' 
	union 
	SELECT  3 AS seq
		,  '3' AS a0 
		,	'휴대폰' AS a1, 		a.PHONE_NO  AS a1_value 
		,	'정규직구분' AS a2, 	nvl(b.enter_gb,'')  AS a2_value 
		,	'부서' AS a3, 		a.TEAM_NM  AS a3_value  
		,	'운전면허번호' AS a4, 	nvl(b.dirver_regno,'')	  AS a4_value  
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='권오현' 
	union 
	SELECT  2 AS seq
		,  '2' AS a0 
		,	'생년월일' AS a1, 		nvl(b.BIRTH_YMD,'') AS a1_value  
		,	'근속일자' AS a2, 		nvl(to_char(datediff(DAY,a.enter_date,to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'직종' AS a3, 		a.JOB_TYPE AS a3_value  
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'건강보험취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='권오현' 
	union 
	SELECT  1 AS seq
		,	'1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'고정/SP구분' AS a3, 	nvl(b.sp_gb,'') AS a3_value 
		,	'가입조합' AS a4, 		nvl(b.work_group,'') AS a4_value 
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='권오현' 
	union 
	SELECT  0 AS seq
		,	a.emp_nm AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		a.enter_date AS a2_value 
		,	'노선' AS a3, 		nvl(b.route_nm,'')  AS a3_value 
		,	'성별' AS a4, 		a.sex AS a4_value 
		,	'고용보험취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='권오현'
	order by 1
 {executed in 1 msec}
2023-07-12 23:29:09.266 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@4e806a60
2023-07-12 23:29:09.266 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@f2f994e1
2023-07-12 23:29:09.266 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_EMP_WORKING_LOG_empNm} 
2023-07-12 23:29:09.267 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBM_EMP_WORKING_LOG a where   a.company_no = '100' and     a.emp_nm = '권오현' and     a.work_date between '2023-01-01' and '2023-07-31' order by a.work_date desc,a.work_time desc
2023-07-12 23:29:09.269 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
2. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-12 23:29:09.273 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
2. select   ROWNUM AS no,a.* from    TBM_EMP_WORKING_LOG a where   a.company_no = '100' and     a.emp_nm = '권오현' and     a.work_date between '2023-01-01' and '2023-07-31' order by a.work_date desc,a.work_time desc
 {executed in 4 msec}
2023-07-12 23:29:09.276 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
2. select   ROWNUM AS no,a.* from    TBM_EMP_WORKING_LOG a where   a.company_no = '100' and     a.emp_nm = '권오현' and     a.work_date between '2023-01-01' and '2023-07-31' order by a.work_date desc,a.work_time desc
 {executed in 1 msec}
2023-07-12 23:29:09.329 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
2. select * from TBL_FILE_INFO where company_no = '100' and file_gb = 'empImage' and file_id = '권오현'
 {executed in 0 msec}
2023-07-12 23:29:09.501 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT k.*
	FROM (
		SELECT 	ROW_NUMBER() over(ORDER BY sum(a.tot_point) desc) AS seq
			,	a.emp_nm
			,	b.sp_gb
			,	b.route_nm
			,	listagg(a.code_nm,'/') WITHIN GROUP (ORDER BY a.code_id)   AS codeList
			,	listagg(a.tot_point,'/') WITHIN GROUP (ORDER BY a.code_id) AS pointList
			,	listagg(a.point,'/') WITHIN GROUP (ORDER BY a.code_id) AS cntList
			,	listagg(a.code_max,'/') WITHIN GROUP (ORDER BY a.code_id) AS maxList
			,	sum(a.tot_point) AS tot_point
			,	nvl(to_char(datediff(DAY,b.enter_date,to_char(SYSDATE,'yyyy-mm-dd'))),0) AS totWorkingDay
			,	substring(b.birth_ymd,1,2) as birth_year
		FROM  TBM_EMP_POINT_INFO a join TBL_DRIVERINFO b on a.company_no = b.company_no AND a.emp_nm = b.emp_nm
		WHERE	a.company_no = '100'
		AND	 	a.from_date = '2023-01-01' 
		AND 	a.to_date = '2023-07-31' 
		AND 	b.route_nm = decode('','',b.route_nm,'') 
		AND 	b.sp_gb = decode('ALL','ALL',b.sp_gb,'ALL')
		GROUP BY a.emp_nm
		ORDER BY 1
	) K
	WHERE 	k.emp_nm = decode ('권오현','',k.emp_nm,'권오현')
	AND		round(k.totWorkingDay/365,0) >= 0
 {executed in 233 msec}
2023-07-12 23:29:25.885 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@62ca621b
2023-07-12 23:29:25.885 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_EMPLOYEE_VACATION_INFO_emp} 
2023-07-12 23:29:25.885 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBM_EMPLOYEE_VACATION_INFO a where   a.company_no = '100' and     a.emp_nm = '권오현' and     a.start_date between '2023-01-01' and '2023-07-31' and		a.delete_yn = 'N' order by a.start_date desc
2023-07-12 23:29:25.886 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 23:29:25.888 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBM_EMPLOYEE_VACATION_INFO a where   a.company_no = '100' and     a.emp_nm = '권오현' and     a.start_date between '2023-01-01' and '2023-07-31' and		a.delete_yn = 'N' order by a.start_date desc
 {executed in 2 msec}
2023-07-12 23:29:25.889 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBM_EMPLOYEE_VACATION_INFO a where   a.company_no = '100' and     a.emp_nm = '권오현' and     a.start_date between '2023-01-01' and '2023-07-31' and		a.delete_yn = 'N' order by a.start_date desc
 {executed in 1 msec}
2023-07-12 23:29:27.057 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@15d02d65
2023-07-12 23:29:27.057 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO_empNm} 
2023-07-12 23:29:27.057 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '권오현' and     a.acc_date between '2023-01-01' and '2023-07-31' order by a.acc_date desc,a.acc_time desc
2023-07-12 23:29:27.059 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-12 23:29:27.061 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '권오현' and     a.acc_date between '2023-01-01' and '2023-07-31' order by a.acc_date desc,a.acc_time desc
 {executed in 1 msec}
2023-07-12 23:29:27.062 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '권오현' and     a.acc_date between '2023-01-01' and '2023-07-31' order by a.acc_date desc,a.acc_time desc
 {executed in 1 msec}
2023-07-12 23:29:27.863 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@f394a9de
2023-07-12 23:29:27.863 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - filterType={danagerAnal_Employee2} 
2023-07-12 23:29:27.863 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT 	b.base_ym, b.emp_nm,b.danger_km100,b.DANGER_ACT_CNT, b.DANGER_ACT,b.DANGER_LEVEL,b.DRIVING_CNT,b.DRIVING_DISTANCE,b.DRIVING_TIME FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym > TO_CHAR(DATEADD(YEAR,-3,SYSDATE()),'yyyy-MM') AND   b.emp_nm = '권오현' ORDER BY b.base_ym desc
2023-07-12 23:29:27.864 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 23:29:27.872 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. SELECT 	b.base_ym, b.emp_nm,b.danger_km100,b.DANGER_ACT_CNT, b.DANGER_ACT,b.DANGER_LEVEL,b.DRIVING_CNT,b.DRIVING_DISTANCE,b.DRIVING_TIME FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym > TO_CHAR(DATEADD(YEAR,-3,SYSDATE()),'yyyy-MM') AND   b.emp_nm = '권오현' ORDER BY b.base_ym desc
 {executed in 6 msec}
2023-07-12 23:29:27.874 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. SELECT 	b.base_ym, b.emp_nm,b.danger_km100,b.DANGER_ACT_CNT, b.DANGER_ACT,b.DANGER_LEVEL,b.DRIVING_CNT,b.DRIVING_DISTANCE,b.DRIVING_TIME FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym > TO_CHAR(DATEADD(YEAR,-3,SYSDATE()),'yyyy-MM') AND   b.emp_nm = '권오현' ORDER BY b.base_ym desc
 {executed in 2 msec}
2023-07-12 23:29:29.167 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8ab36981
2023-07-12 23:29:29.167 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_ANALIZE_emp} 
2023-07-12 23:29:29.168 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select  a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.BASE_YMD BETWEEN '2023-01-01' AND '2023-07-31'  and		a.emp_nm = '권오현' ORDER BY a.base_ymd DESC,a.col003 desc
2023-07-12 23:29:29.169 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-12 23:29:29.171 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select  a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.BASE_YMD BETWEEN '2023-01-01' AND '2023-07-31'  and		a.emp_nm = '권오현' ORDER BY a.base_ymd DESC,a.col003 desc
 {executed in 2 msec}
2023-07-12 23:29:29.173 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select  a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.BASE_YMD BETWEEN '2023-01-01' AND '2023-07-31'  and		a.emp_nm = '권오현' ORDER BY a.base_ymd DESC,a.col003 desc
 {executed in 1 msec}
2023-07-12 23:29:29.862 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@93933de1
2023-07-12 23:29:29.862 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - filterType={getDrivingRecord_year} 
2023-07-12 23:29:29.863 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : WITH wholeAvgInfo AS ( SELECT 	k.base_ym ,	round(avg(k.bms_km),2) AS wholeAvg_bms_km ,	round(avg(k.tot_min),2) AS wholeAvg_tot_min FROM ( SELECT	a.base_ym,a.WORK_DATE ,a.driver_id,	sum(a.BMS_KM) bms_km ,	sum(a.TOT_MIN) tot_min FROM	TBL_DRIVING_RECORD a where 	a.company_no = '100' and 	a.BASE_YM between  '2023-01' and '2023-07' GROUP BY	a.base_ym,a.WORK_DATE,a.driver_id ) k	GROUP BY k.base_ym ) SELECT 	k.base_ym , 	count(k.base_ym) as tot_day ,	round(sum(k.bms_km),2) AS bms_km , 	round(sum(k.tot_min),2) AS tot_min ,	round(avg(k.bms_km),2) AS avg_bms_km ,	round(avg(k.tot_min),2) AS avg_tot_min ,	m.wholeAvg_bms_km ,	m.wholeAvg_tot_min FROM ( SELECT	a.base_ym, a.WORK_DATE ,	sum(a.BMS_KM) bms_km ,	sum(a.TOT_MIN) tot_min FROM	TBL_DRIVING_RECORD a JOIN 	TBL_ISC_DRIVER_INFO b ON	a.company_no = b.COMPANY_NO  AND b.EMP_NM = '권오현'	AND b.DRIVER_ID = a.DRIVER_ID where 	a.company_no = '100' AND     a.BASE_YM between  '2023-01' and '2023-07' GROUP BY	a.base_ym,a.WORK_DATE ) k JOIN wholeAvgInfo m ON m.base_ym = k.base_ym GROUP BY k.base_ym
2023-07-12 23:29:29.864 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-12 23:29:30.133 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. WITH wholeAvgInfo AS ( SELECT 	k.base_ym ,	round(avg(k.bms_km),2) AS wholeAvg_bms_km ,	round(avg(k.tot_min),2) AS wholeAvg_tot_min FROM ( SELECT	a.base_ym,a.WORK_DATE ,a.driver_id,	sum(a.BMS_KM) bms_km ,	sum(a.TOT_MIN) tot_min FROM	TBL_DRIVING_RECORD a where 	a.company_no = '100' and 	a.BASE_YM between  '2023-01' and '2023-07' GROUP BY	a.base_ym,a.WORK_DATE,a.driver_id ) k	GROUP BY k.base_ym ) SELECT 	k.base_ym , 	count(k.base_ym) as tot_day ,	round(sum(k.bms_km),2) AS bms_km , 	round(sum(k.tot_min),2) AS tot_min ,	round(avg(k.bms_km),2) AS avg_bms_km ,	round(avg(k.tot_min),2) AS avg_tot_min ,	m.wholeAvg_bms_km ,	m.wholeAvg_tot_min FROM ( SELECT	a.base_ym, a.WORK_DATE ,	sum(a.BMS_KM) bms_km ,	sum(a.TOT_MIN) tot_min FROM	TBL_DRIVING_RECORD a JOIN 	TBL_ISC_DRIVER_INFO b ON	a.company_no = b.COMPANY_NO  AND b.EMP_NM = '권오현'	AND b.DRIVER_ID = a.DRIVER_ID where 	a.company_no = '100' AND     a.BASE_YM between  '2023-01' and '2023-07' GROUP BY	a.base_ym,a.WORK_DATE ) k JOIN wholeAvgInfo m ON m.base_ym = k.base_ym GROUP BY k.base_ym
 {executed in 268 msec}
2023-07-12 23:29:30.530 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. WITH wholeAvgInfo AS ( SELECT 	k.base_ym ,	round(avg(k.bms_km),2) AS wholeAvg_bms_km ,	round(avg(k.tot_min),2) AS wholeAvg_tot_min FROM ( SELECT	a.base_ym,a.WORK_DATE ,a.driver_id,	sum(a.BMS_KM) bms_km ,	sum(a.TOT_MIN) tot_min FROM	TBL_DRIVING_RECORD a where 	a.company_no = '100' and 	a.BASE_YM between  '2023-01' and '2023-07' GROUP BY	a.base_ym,a.WORK_DATE,a.driver_id ) k	GROUP BY k.base_ym ) SELECT 	k.base_ym , 	count(k.base_ym) as tot_day ,	round(sum(k.bms_km),2) AS bms_km , 	round(sum(k.tot_min),2) AS tot_min ,	round(avg(k.bms_km),2) AS avg_bms_km ,	round(avg(k.tot_min),2) AS avg_tot_min ,	m.wholeAvg_bms_km ,	m.wholeAvg_tot_min FROM ( SELECT	a.base_ym, a.WORK_DATE ,	sum(a.BMS_KM) bms_km ,	sum(a.TOT_MIN) tot_min FROM	TBL_DRIVING_RECORD a JOIN 	TBL_ISC_DRIVER_INFO b ON	a.company_no = b.COMPANY_NO  AND b.EMP_NM = '권오현'	AND b.DRIVER_ID = a.DRIVER_ID where 	a.company_no = '100' AND     a.BASE_YM between  '2023-01' and '2023-07' GROUP BY	a.base_ym,a.WORK_DATE ) k JOIN wholeAvgInfo m ON m.base_ym = k.base_ym GROUP BY k.base_ym
 {executed in 397 msec}
2023-07-12 23:29:30.568 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@44283a8d
2023-07-12 23:29:30.568 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - filterType={getDrivingRecord_month} 
2023-07-12 23:29:30.569 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT 	/* filter_getDrivingRecord_month */ WORK_DATE ,	CASE WHEN substring(min(START_TIME),12) > '12:00:00' THEN 'P' ELSE 'A' END AS ampm_gb ,	substring(min(START_TIME),12) AS start_time ,	count(WORK_DATE) AS tot_cnt ,	round(sum(a.BMS_KM),2) bms_km ,	sum(a.TOT_MIN) tot_min FROM 	TBL_DRIVING_RECORD a JOIN TBL_ISC_DRIVER_INFO b ON b.EMP_NM  = '권오현' AND b.DRIVER_ID = a.DRIVER_ID where 	a.company_no = '100' AND   	a.BASE_YM = '2023-03' GROUP BY WORK_DATE
2023-07-12 23:29:31.031 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. SELECT 	/* filter_getDrivingRecord_month */ WORK_DATE ,	CASE WHEN substring(min(START_TIME),12) > '12:00:00' THEN 'P' ELSE 'A' END AS ampm_gb ,	substring(min(START_TIME),12) AS start_time ,	count(WORK_DATE) AS tot_cnt ,	round(sum(a.BMS_KM),2) bms_km ,	sum(a.TOT_MIN) tot_min FROM 	TBL_DRIVING_RECORD a JOIN TBL_ISC_DRIVER_INFO b ON b.EMP_NM  = '권오현' AND b.DRIVER_ID = a.DRIVER_ID where 	a.company_no = '100' AND   	a.BASE_YM = '2023-03' GROUP BY WORK_DATE
 {executed in 462 msec}
2023-07-12 23:29:31.032 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. SELECT 	/* filter_getDrivingRecord_month */ WORK_DATE ,	CASE WHEN substring(min(START_TIME),12) > '12:00:00' THEN 'P' ELSE 'A' END AS ampm_gb ,	substring(min(START_TIME),12) AS start_time ,	count(WORK_DATE) AS tot_cnt ,	round(sum(a.BMS_KM),2) bms_km ,	sum(a.TOT_MIN) tot_min FROM 	TBL_DRIVING_RECORD a JOIN TBL_ISC_DRIVER_INFO b ON b.EMP_NM  = '권오현' AND b.DRIVER_ID = a.DRIVER_ID where 	a.company_no = '100' AND   	a.BASE_YM = '2023-03' GROUP BY WORK_DATE
 {executed in 1 msec}
2023-07-12 23:29:31.082 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@6ed13032
2023-07-12 23:29:31.082 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - filterType={getDrivingRecord_day} 
2023-07-12 23:29:31.083 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT 	ROWNUM as no, a.CAR_REGNO ,substring(a.START_TIME,12) as START_TIME,substring(a.END_TIME,12) as END_TIME ,round(a.BMS_KM,2) as bms_km ,a.TOT_MIN FROM 	TBL_DRIVING_RECORD a JOIN TBL_ISC_DRIVER_INFO b ON b.EMP_NM  = '권오현' AND b.DRIVER_ID = a.DRIVER_ID where 	a.company_no = '100' AND   	a.WORK_DATE = '2023-03-02' ORDER BY a.START_TIME
2023-07-12 23:29:31.105 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. SELECT 	ROWNUM as no, a.CAR_REGNO ,substring(a.START_TIME,12) as START_TIME,substring(a.END_TIME,12) as END_TIME ,round(a.BMS_KM,2) as bms_km ,a.TOT_MIN FROM 	TBL_DRIVING_RECORD a JOIN TBL_ISC_DRIVER_INFO b ON b.EMP_NM  = '권오현' AND b.DRIVER_ID = a.DRIVER_ID where 	a.company_no = '100' AND   	a.WORK_DATE = '2023-03-02' ORDER BY a.START_TIME
 {executed in 22 msec}
2023-07-12 23:29:31.138 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. SELECT 	ROWNUM as no, a.CAR_REGNO ,substring(a.START_TIME,12) as START_TIME,substring(a.END_TIME,12) as END_TIME ,round(a.BMS_KM,2) as bms_km ,a.TOT_MIN FROM 	TBL_DRIVING_RECORD a JOIN TBL_ISC_DRIVER_INFO b ON b.EMP_NM  = '권오현' AND b.DRIVER_ID = a.DRIVER_ID where 	a.company_no = '100' AND   	a.WORK_DATE = '2023-03-02' ORDER BY a.START_TIME
 {executed in 31 msec}
2023-07-12 23:38:24.752 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.emp_no,a.emp_nm,nvl(b.route_nm,'-') as route_nm, nvl(b.WORK_GROUP,'-') as work_group from    TBL_employeeInfo a left outer join TBL_DRIVERINFO b on a.company_no = b.company_no and a.emp_nm = b.emp_nm where   a.company_no = '100' and	    b.sp_gb = decode('ALL','ALL',b.sp_gb,'ALL') order by a.emp_nm
2023-07-12 23:38:24.753 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
2. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 23:38:24.776 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
2. select   a.emp_no,a.emp_nm,nvl(b.route_nm,'-') as route_nm, nvl(b.WORK_GROUP,'-') as work_group from    TBL_employeeInfo a left outer join TBL_DRIVERINFO b on a.company_no = b.company_no and a.emp_nm = b.emp_nm where   a.company_no = '100' and	    b.sp_gb = decode('ALL','ALL',b.sp_gb,'ALL') order by a.emp_nm
 {executed in 21 msec}
2023-07-12 23:38:26.646 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@609d5eaa
2023-07-12 23:38:26.647 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 23:38:26.653 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  5 AS seq
		,  '5' AS a0 
		,	'현주소' AS a1, 		nvl(b.address,'') AS a1_value 
		,	'' AS a2, '' AS a2_value 
		,	'' AS a3, '' AS a3_value 
		,	'' AS a4, '' AS a4_value 
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='권용수' 
	union 
	SELECT  4 AS seq
		,  '4' AS a0 
		,	'이메일' AS a1, 		nvl(b.email,'')  AS a1_value 
		,	'호봉' AS a2, 		nvl(b.hobong,'') AS a2_value 
		,	'구분' AS a3, 		a.JOB_KIND AS a3_value 
		,	'생년월일' AS a4, 		b.birth_ymd  AS a4_value 
		,	'국민연금취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='권용수' 
	union 
	SELECT  3 AS seq
		,  '3' AS a0 
		,	'휴대폰' AS a1, 		a.PHONE_NO  AS a1_value 
		,	'정규직구분' AS a2, 	nvl(b.enter_gb,'')  AS a2_value 
		,	'부서' AS a3, 		a.TEAM_NM  AS a3_value  
		,	'운전면허번호' AS a4, 	nvl(b.dirver_regno,'')	  AS a4_value  
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='권용수' 
	union 
	SELECT  2 AS seq
		,  '2' AS a0 
		,	'생년월일' AS a1, 		nvl(b.BIRTH_YMD,'') AS a1_value  
		,	'근속일자' AS a2, 		nvl(to_char(datediff(DAY,a.enter_date,to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'직종' AS a3, 		a.JOB_TYPE AS a3_value  
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'건강보험취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='권용수' 
	union 
	SELECT  1 AS seq
		,	'1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'고정/SP구분' AS a3, 	nvl(b.sp_gb,'') AS a3_value 
		,	'가입조합' AS a4, 		nvl(b.work_group,'') AS a4_value 
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='권용수' 
	union 
	SELECT  0 AS seq
		,	a.emp_nm AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		a.enter_date AS a2_value 
		,	'노선' AS a3, 		nvl(b.route_nm,'')  AS a3_value 
		,	'성별' AS a4, 		a.sex AS a4_value 
		,	'고용보험취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='권용수'
	order by 1
 {executed in 2 msec}
2023-07-12 23:38:26.679 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@605d1955
2023-07-12 23:38:26.679 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@4d643d6
2023-07-12 23:38:26.679 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_EMP_WORKING_LOG_empNm} 
2023-07-12 23:38:26.679 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBM_EMP_WORKING_LOG a where   a.company_no = '100' and     a.emp_nm = '권용수' and     a.work_date between '2023-01-01' and '2023-07-31' order by a.work_date desc,a.work_time desc
2023-07-12 23:38:26.682 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
2. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-12 23:38:26.684 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
3. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-12 23:38:26.685 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBM_EMP_WORKING_LOG a where   a.company_no = '100' and     a.emp_nm = '권용수' and     a.work_date between '2023-01-01' and '2023-07-31' order by a.work_date desc,a.work_time desc
 {executed in 5 msec}
2023-07-12 23:38:26.685 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
3. select * from TBL_FILE_INFO where company_no = '100' and file_gb = 'empImage' and file_id = '권용수'
 {executed in 1 msec}
2023-07-12 23:38:26.687 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBM_EMP_WORKING_LOG a where   a.company_no = '100' and     a.emp_nm = '권용수' and     a.work_date between '2023-01-01' and '2023-07-31' order by a.work_date desc,a.work_time desc
 {executed in 2 msec}
2023-07-12 23:38:26.915 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT k.*
	FROM (
		SELECT 	ROW_NUMBER() over(ORDER BY sum(a.tot_point) desc) AS seq
			,	a.emp_nm
			,	b.sp_gb
			,	b.route_nm
			,	listagg(a.code_nm,'/') WITHIN GROUP (ORDER BY a.code_id)   AS codeList
			,	listagg(a.tot_point,'/') WITHIN GROUP (ORDER BY a.code_id) AS pointList
			,	listagg(a.point,'/') WITHIN GROUP (ORDER BY a.code_id) AS cntList
			,	listagg(a.code_max,'/') WITHIN GROUP (ORDER BY a.code_id) AS maxList
			,	sum(a.tot_point) AS tot_point
			,	nvl(to_char(datediff(DAY,b.enter_date,to_char(SYSDATE,'yyyy-mm-dd'))),0) AS totWorkingDay
			,	substring(b.birth_ymd,1,2) as birth_year
		FROM  TBM_EMP_POINT_INFO a join TBL_DRIVERINFO b on a.company_no = b.company_no AND a.emp_nm = b.emp_nm
		WHERE	a.company_no = '100'
		AND	 	a.from_date = '2023-01-01' 
		AND 	a.to_date = '2023-07-31' 
		AND 	b.route_nm = decode('','',b.route_nm,'') 
		AND 	b.sp_gb = decode('ALL','ALL',b.sp_gb,'ALL')
		GROUP BY a.emp_nm
		ORDER BY 1
	) K
	WHERE 	k.emp_nm = decode ('권용수','',k.emp_nm,'권용수')
	AND		round(k.totWorkingDay/365,0) >= 0
 {executed in 229 msec}
2023-07-12 23:38:28.204 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@6f1c5a38
2023-07-12 23:38:28.204 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_PUBLIC_COMPLAINT_INFO_emp} 
2023-07-12 23:38:28.204 ERROR [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - properties error: Cannot invoke "String.getBytes(String)" because "a" is null
2023-07-12 23:38:28.221 WARN  [http-nio-10010-exec-2] [o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver] - Resolved [com.pjy.dashboard.core.error.exception.BusinessException: properties read error]
2023-07-12 23:39:22.660 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.emp_no,a.emp_nm,nvl(b.route_nm,'-') as route_nm, nvl(b.WORK_GROUP,'-') as work_group from    TBL_employeeInfo a left outer join TBL_DRIVERINFO b on a.company_no = b.company_no and a.emp_nm = b.emp_nm where   a.company_no = '100' and	    b.sp_gb = decode('ALL','ALL',b.sp_gb,'ALL') order by a.emp_nm
2023-07-12 23:39:22.661 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 23:39:22.680 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   a.emp_no,a.emp_nm,nvl(b.route_nm,'-') as route_nm, nvl(b.WORK_GROUP,'-') as work_group from    TBL_employeeInfo a left outer join TBL_DRIVERINFO b on a.company_no = b.company_no and a.emp_nm = b.emp_nm where   a.company_no = '100' and	    b.sp_gb = decode('ALL','ALL',b.sp_gb,'ALL') order by a.emp_nm
 {executed in 19 msec}
2023-07-12 23:39:23.706 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@75b1f9d2
2023-07-12 23:39:23.707 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
3. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 23:39:23.711 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT  5 AS seq
		,  '5' AS a0 
		,	'현주소' AS a1, 		nvl(b.address,'') AS a1_value 
		,	'' AS a2, '' AS a2_value 
		,	'' AS a3, '' AS a3_value 
		,	'' AS a4, '' AS a4_value 
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김경연' 
	union 
	SELECT  4 AS seq
		,  '4' AS a0 
		,	'이메일' AS a1, 		nvl(b.email,'')  AS a1_value 
		,	'호봉' AS a2, 		nvl(b.hobong,'') AS a2_value 
		,	'구분' AS a3, 		a.JOB_KIND AS a3_value 
		,	'생년월일' AS a4, 		b.birth_ymd  AS a4_value 
		,	'국민연금취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김경연' 
	union 
	SELECT  3 AS seq
		,  '3' AS a0 
		,	'휴대폰' AS a1, 		a.PHONE_NO  AS a1_value 
		,	'정규직구분' AS a2, 	nvl(b.enter_gb,'')  AS a2_value 
		,	'부서' AS a3, 		a.TEAM_NM  AS a3_value  
		,	'운전면허번호' AS a4, 	nvl(b.dirver_regno,'')	  AS a4_value  
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김경연' 
	union 
	SELECT  2 AS seq
		,  '2' AS a0 
		,	'생년월일' AS a1, 		nvl(b.BIRTH_YMD,'') AS a1_value  
		,	'근속일자' AS a2, 		nvl(to_char(datediff(DAY,a.enter_date,to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'직종' AS a3, 		a.JOB_TYPE AS a3_value  
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'건강보험취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김경연' 
	union 
	SELECT  1 AS seq
		,	'1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'고정/SP구분' AS a3, 	nvl(b.sp_gb,'') AS a3_value 
		,	'가입조합' AS a4, 		nvl(b.work_group,'') AS a4_value 
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김경연' 
	union 
	SELECT  0 AS seq
		,	a.emp_nm AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		a.enter_date AS a2_value 
		,	'노선' AS a3, 		nvl(b.route_nm,'')  AS a3_value 
		,	'성별' AS a4, 		a.sex AS a4_value 
		,	'고용보험취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김경연'
	order by 1
 {executed in 2 msec}
2023-07-12 23:39:23.740 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@19eadefe
2023-07-12 23:39:23.740 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@7571b47d
2023-07-12 23:39:23.740 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_EMP_WORKING_LOG_empNm} 
2023-07-12 23:39:23.740 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBM_EMP_WORKING_LOG a where   a.company_no = '100' and     a.emp_nm = '김경연' and     a.work_date between '2023-01-01' and '2023-07-31' order by a.work_date desc,a.work_time desc
2023-07-12 23:39:23.741 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-12 23:39:23.741 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
2. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-12 23:39:23.743 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select * from TBL_FILE_INFO where company_no = '100' and file_gb = 'empImage' and file_id = '김경연'
 {executed in 0 msec}
2023-07-12 23:39:23.743 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
2. select   ROWNUM AS no,a.* from    TBM_EMP_WORKING_LOG a where   a.company_no = '100' and     a.emp_nm = '김경연' and     a.work_date between '2023-01-01' and '2023-07-31' order by a.work_date desc,a.work_time desc
 {executed in 1 msec}
2023-07-12 23:39:23.746 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
2. select   ROWNUM AS no,a.* from    TBM_EMP_WORKING_LOG a where   a.company_no = '100' and     a.emp_nm = '김경연' and     a.work_date between '2023-01-01' and '2023-07-31' order by a.work_date desc,a.work_time desc
 {executed in 2 msec}
2023-07-12 23:39:23.953 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT k.*
	FROM (
		SELECT 	ROW_NUMBER() over(ORDER BY sum(a.tot_point) desc) AS seq
			,	a.emp_nm
			,	b.sp_gb
			,	b.route_nm
			,	listagg(a.code_nm,'/') WITHIN GROUP (ORDER BY a.code_id)   AS codeList
			,	listagg(a.tot_point,'/') WITHIN GROUP (ORDER BY a.code_id) AS pointList
			,	listagg(a.point,'/') WITHIN GROUP (ORDER BY a.code_id) AS cntList
			,	listagg(a.code_max,'/') WITHIN GROUP (ORDER BY a.code_id) AS maxList
			,	sum(a.tot_point) AS tot_point
			,	nvl(to_char(datediff(DAY,b.enter_date,to_char(SYSDATE,'yyyy-mm-dd'))),0) AS totWorkingDay
			,	substring(b.birth_ymd,1,2) as birth_year
		FROM  TBM_EMP_POINT_INFO a join TBL_DRIVERINFO b on a.company_no = b.company_no AND a.emp_nm = b.emp_nm
		WHERE	a.company_no = '100'
		AND	 	a.from_date = '2023-01-01' 
		AND 	a.to_date = '2023-07-31' 
		AND 	b.route_nm = decode('','',b.route_nm,'') 
		AND 	b.sp_gb = decode('ALL','ALL',b.sp_gb,'ALL')
		GROUP BY a.emp_nm
		ORDER BY 1
	) K
	WHERE 	k.emp_nm = decode ('김경연','',k.emp_nm,'김경연')
	AND		round(k.totWorkingDay/365,0) >= 0
 {executed in 211 msec}
2023-07-12 23:39:25.468 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8430f560
2023-07-12 23:39:25.468 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_PUBLIC_COMPLAINT_INFO_emp} 
2023-07-12 23:39:25.468 ERROR [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - properties error: Cannot invoke "String.getBytes(String)" because "a" is null
2023-07-12 23:39:25.469 WARN  [http-nio-10010-exec-5] [o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver] - Resolved [com.pjy.dashboard.core.error.exception.BusinessException: properties read error]
2023-07-12 23:39:43.997 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.emp_no,a.emp_nm,nvl(b.route_nm,'-') as route_nm, nvl(b.WORK_GROUP,'-') as work_group from    TBL_employeeInfo a left outer join TBL_DRIVERINFO b on a.company_no = b.company_no and a.emp_nm = b.emp_nm where   a.company_no = '100' and	    b.sp_gb = decode('ALL','ALL',b.sp_gb,'ALL') order by a.emp_nm
2023-07-12 23:39:43.998 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
2. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 23:39:43.999 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
2. select   a.emp_no,a.emp_nm,nvl(b.route_nm,'-') as route_nm, nvl(b.WORK_GROUP,'-') as work_group from    TBL_employeeInfo a left outer join TBL_DRIVERINFO b on a.company_no = b.company_no and a.emp_nm = b.emp_nm where   a.company_no = '100' and	    b.sp_gb = decode('ALL','ALL',b.sp_gb,'ALL') order by a.emp_nm
 {executed in 1 msec}
2023-07-12 23:39:46.664 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@6c9309d9
2023-07-12 23:39:46.665 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-12 23:39:46.667 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  5 AS seq
		,  '5' AS a0 
		,	'현주소' AS a1, 		nvl(b.address,'') AS a1_value 
		,	'' AS a2, '' AS a2_value 
		,	'' AS a3, '' AS a3_value 
		,	'' AS a4, '' AS a4_value 
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='남기선' 
	union 
	SELECT  4 AS seq
		,  '4' AS a0 
		,	'이메일' AS a1, 		nvl(b.email,'')  AS a1_value 
		,	'호봉' AS a2, 		nvl(b.hobong,'') AS a2_value 
		,	'구분' AS a3, 		a.JOB_KIND AS a3_value 
		,	'생년월일' AS a4, 		b.birth_ymd  AS a4_value 
		,	'국민연금취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='남기선' 
	union 
	SELECT  3 AS seq
		,  '3' AS a0 
		,	'휴대폰' AS a1, 		a.PHONE_NO  AS a1_value 
		,	'정규직구분' AS a2, 	nvl(b.enter_gb,'')  AS a2_value 
		,	'부서' AS a3, 		a.TEAM_NM  AS a3_value  
		,	'운전면허번호' AS a4, 	nvl(b.dirver_regno,'')	  AS a4_value  
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='남기선' 
	union 
	SELECT  2 AS seq
		,  '2' AS a0 
		,	'생년월일' AS a1, 		nvl(b.BIRTH_YMD,'') AS a1_value  
		,	'근속일자' AS a2, 		nvl(to_char(datediff(DAY,a.enter_date,to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'직종' AS a3, 		a.JOB_TYPE AS a3_value  
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'건강보험취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='남기선' 
	union 
	SELECT  1 AS seq
		,	'1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'고정/SP구분' AS a3, 	nvl(b.sp_gb,'') AS a3_value 
		,	'가입조합' AS a4, 		nvl(b.work_group,'') AS a4_value 
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='남기선' 
	union 
	SELECT  0 AS seq
		,	a.emp_nm AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		a.enter_date AS a2_value 
		,	'노선' AS a3, 		nvl(b.route_nm,'')  AS a3_value 
		,	'성별' AS a4, 		a.sex AS a4_value 
		,	'고용보험취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='남기선'
	order by 1
 {executed in 1 msec}
2023-07-12 23:39:46.695 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@6c52c484
2023-07-12 23:39:46.695 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@10cbef05
2023-07-12 23:39:46.695 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_EMP_WORKING_LOG_empNm} 
2023-07-12 23:39:46.695 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBM_EMP_WORKING_LOG a where   a.company_no = '100' and     a.emp_nm = '남기선' and     a.work_date between '2023-01-01' and '2023-07-31' order by a.work_date desc,a.work_time desc
2023-07-12 23:39:46.696 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
2. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-12 23:39:46.697 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
3. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-12 23:39:46.698 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBM_EMP_WORKING_LOG a where   a.company_no = '100' and     a.emp_nm = '남기선' and     a.work_date between '2023-01-01' and '2023-07-31' order by a.work_date desc,a.work_time desc
 {executed in 1 msec}
2023-07-12 23:39:46.699 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
3. select * from TBL_FILE_INFO where company_no = '100' and file_gb = 'empImage' and file_id = '남기선'
 {executed in 1 msec}
2023-07-12 23:39:46.700 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBM_EMP_WORKING_LOG a where   a.company_no = '100' and     a.emp_nm = '남기선' and     a.work_date between '2023-01-01' and '2023-07-31' order by a.work_date desc,a.work_time desc
 {executed in 2 msec}
2023-07-12 23:39:46.911 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT k.*
	FROM (
		SELECT 	ROW_NUMBER() over(ORDER BY sum(a.tot_point) desc) AS seq
			,	a.emp_nm
			,	b.sp_gb
			,	b.route_nm
			,	listagg(a.code_nm,'/') WITHIN GROUP (ORDER BY a.code_id)   AS codeList
			,	listagg(a.tot_point,'/') WITHIN GROUP (ORDER BY a.code_id) AS pointList
			,	listagg(a.point,'/') WITHIN GROUP (ORDER BY a.code_id) AS cntList
			,	listagg(a.code_max,'/') WITHIN GROUP (ORDER BY a.code_id) AS maxList
			,	sum(a.tot_point) AS tot_point
			,	nvl(to_char(datediff(DAY,b.enter_date,to_char(SYSDATE,'yyyy-mm-dd'))),0) AS totWorkingDay
			,	substring(b.birth_ymd,1,2) as birth_year
		FROM  TBM_EMP_POINT_INFO a join TBL_DRIVERINFO b on a.company_no = b.company_no AND a.emp_nm = b.emp_nm
		WHERE	a.company_no = '100'
		AND	 	a.from_date = '2023-01-01' 
		AND 	a.to_date = '2023-07-31' 
		AND 	b.route_nm = decode('','',b.route_nm,'') 
		AND 	b.sp_gb = decode('ALL','ALL',b.sp_gb,'ALL')
		GROUP BY a.emp_nm
		ORDER BY 1
	) K
	WHERE 	k.emp_nm = decode ('남기선','',k.emp_nm,'남기선')
	AND		round(k.totWorkingDay/365,0) >= 0
 {executed in 213 msec}
2023-07-12 23:39:48.328 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@f35ab3cc
2023-07-12 23:39:48.328 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_PUBLIC_COMPLAINT_INFO_empNm} 
2023-07-12 23:39:48.329 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' and     a.emp_nm = '남기선' and     a.comp_date between '2023-01-01' and '2023-07-31' order by a.comp_date desc,a.seq desc
2023-07-12 23:39:48.330 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-12 23:39:48.330 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' and     a.emp_nm = '남기선' and     a.comp_date between '2023-01-01' and '2023-07-31' order by a.comp_date desc,a.seq desc
 {executed in 0 msec}
2023-07-12 23:39:48.332 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' and     a.emp_nm = '남기선' and     a.comp_date between '2023-01-01' and '2023-07-31' order by a.comp_date desc,a.seq desc
 {executed in 1 msec}
2023-07-12 23:40:00.805 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.emp_no,a.emp_nm,nvl(b.route_nm,'-') as route_nm, nvl(b.WORK_GROUP,'-') as work_group from    TBL_employeeInfo a left outer join TBL_DRIVERINFO b on a.company_no = b.company_no and a.emp_nm = b.emp_nm where   a.company_no = '100' and	    b.sp_gb = decode('ALL','ALL',b.sp_gb,'ALL') order by a.emp_nm
2023-07-12 23:40:00.806 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 23:40:00.807 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   a.emp_no,a.emp_nm,nvl(b.route_nm,'-') as route_nm, nvl(b.WORK_GROUP,'-') as work_group from    TBL_employeeInfo a left outer join TBL_DRIVERINFO b on a.company_no = b.company_no and a.emp_nm = b.emp_nm where   a.company_no = '100' and	    b.sp_gb = decode('ALL','ALL',b.sp_gb,'ALL') order by a.emp_nm
 {executed in 1 msec}
2023-07-12 23:40:04.365 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@6c9309d9
2023-07-12 23:40:04.366 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 23:40:04.368 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  5 AS seq
		,  '5' AS a0 
		,	'현주소' AS a1, 		nvl(b.address,'') AS a1_value 
		,	'' AS a2, '' AS a2_value 
		,	'' AS a3, '' AS a3_value 
		,	'' AS a4, '' AS a4_value 
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='남기선' 
	union 
	SELECT  4 AS seq
		,  '4' AS a0 
		,	'이메일' AS a1, 		nvl(b.email,'')  AS a1_value 
		,	'호봉' AS a2, 		nvl(b.hobong,'') AS a2_value 
		,	'구분' AS a3, 		a.JOB_KIND AS a3_value 
		,	'생년월일' AS a4, 		b.birth_ymd  AS a4_value 
		,	'국민연금취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='남기선' 
	union 
	SELECT  3 AS seq
		,  '3' AS a0 
		,	'휴대폰' AS a1, 		a.PHONE_NO  AS a1_value 
		,	'정규직구분' AS a2, 	nvl(b.enter_gb,'')  AS a2_value 
		,	'부서' AS a3, 		a.TEAM_NM  AS a3_value  
		,	'운전면허번호' AS a4, 	nvl(b.dirver_regno,'')	  AS a4_value  
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='남기선' 
	union 
	SELECT  2 AS seq
		,  '2' AS a0 
		,	'생년월일' AS a1, 		nvl(b.BIRTH_YMD,'') AS a1_value  
		,	'근속일자' AS a2, 		nvl(to_char(datediff(DAY,a.enter_date,to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'직종' AS a3, 		a.JOB_TYPE AS a3_value  
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'건강보험취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='남기선' 
	union 
	SELECT  1 AS seq
		,	'1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'고정/SP구분' AS a3, 	nvl(b.sp_gb,'') AS a3_value 
		,	'가입조합' AS a4, 		nvl(b.work_group,'') AS a4_value 
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='남기선' 
	union 
	SELECT  0 AS seq
		,	a.emp_nm AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		a.enter_date AS a2_value 
		,	'노선' AS a3, 		nvl(b.route_nm,'')  AS a3_value 
		,	'성별' AS a4, 		a.sex AS a4_value 
		,	'고용보험취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='남기선'
	order by 1
 {executed in 1 msec}
2023-07-12 23:40:04.377 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
3. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-12 23:40:04.378 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
3. select * from TBL_FILE_INFO where company_no = '100' and file_gb = 'empImage' and file_id = '남기선'
 {executed in 1 msec}
2023-07-12 23:40:04.396 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@10cbef05
2023-07-12 23:40:04.396 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@6c52c484
2023-07-12 23:40:04.396 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_EMP_WORKING_LOG_empNm} 
2023-07-12 23:40:04.397 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBM_EMP_WORKING_LOG a where   a.company_no = '100' and     a.emp_nm = '남기선' and     a.work_date between '2023-01-01' and '2023-07-31' order by a.work_date desc,a.work_time desc
2023-07-12 23:40:04.398 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
2. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-12 23:40:04.400 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
2. select   ROWNUM AS no,a.* from    TBM_EMP_WORKING_LOG a where   a.company_no = '100' and     a.emp_nm = '남기선' and     a.work_date between '2023-01-01' and '2023-07-31' order by a.work_date desc,a.work_time desc
 {executed in 2 msec}
2023-07-12 23:40:04.403 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
2. select   ROWNUM AS no,a.* from    TBM_EMP_WORKING_LOG a where   a.company_no = '100' and     a.emp_nm = '남기선' and     a.work_date between '2023-01-01' and '2023-07-31' order by a.work_date desc,a.work_time desc
 {executed in 1 msec}
2023-07-12 23:40:04.615 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT k.*
	FROM (
		SELECT 	ROW_NUMBER() over(ORDER BY sum(a.tot_point) desc) AS seq
			,	a.emp_nm
			,	b.sp_gb
			,	b.route_nm
			,	listagg(a.code_nm,'/') WITHIN GROUP (ORDER BY a.code_id)   AS codeList
			,	listagg(a.tot_point,'/') WITHIN GROUP (ORDER BY a.code_id) AS pointList
			,	listagg(a.point,'/') WITHIN GROUP (ORDER BY a.code_id) AS cntList
			,	listagg(a.code_max,'/') WITHIN GROUP (ORDER BY a.code_id) AS maxList
			,	sum(a.tot_point) AS tot_point
			,	nvl(to_char(datediff(DAY,b.enter_date,to_char(SYSDATE,'yyyy-mm-dd'))),0) AS totWorkingDay
			,	substring(b.birth_ymd,1,2) as birth_year
		FROM  TBM_EMP_POINT_INFO a join TBL_DRIVERINFO b on a.company_no = b.company_no AND a.emp_nm = b.emp_nm
		WHERE	a.company_no = '100'
		AND	 	a.from_date = '2023-01-01' 
		AND 	a.to_date = '2023-07-31' 
		AND 	b.route_nm = decode('','',b.route_nm,'') 
		AND 	b.sp_gb = decode('ALL','ALL',b.sp_gb,'ALL')
		GROUP BY a.emp_nm
		ORDER BY 1
	) K
	WHERE 	k.emp_nm = decode ('남기선','',k.emp_nm,'남기선')
	AND		round(k.totWorkingDay/365,0) >= 0
 {executed in 216 msec}
2023-07-12 23:40:05.544 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@f35ab3cc
2023-07-12 23:40:05.544 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_PUBLIC_COMPLAINT_INFO_empNm} 
2023-07-12 23:40:05.544 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' and     a.emp_nm = '남기선' and     a.comp_date between '2023-01-01' and '2023-07-31' order by a.comp_date desc,a.seq desc
2023-07-12 23:40:05.545 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
2. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 23:40:05.547 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
2. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' and     a.emp_nm = '남기선' and     a.comp_date between '2023-01-01' and '2023-07-31' order by a.comp_date desc,a.seq desc
 {executed in 1 msec}
2023-07-12 23:40:05.549 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
2. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' and     a.emp_nm = '남기선' and     a.comp_date between '2023-01-01' and '2023-07-31' order by a.comp_date desc,a.seq desc
 {executed in 1 msec}
2023-07-12 23:40:39.462 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.emp_no,a.emp_nm,nvl(b.route_nm,'-') as route_nm, nvl(b.WORK_GROUP,'-') as work_group from    TBL_employeeInfo a left outer join TBL_DRIVERINFO b on a.company_no = b.company_no and a.emp_nm = b.emp_nm where   a.company_no = '100' and	    b.sp_gb = decode('ALL','ALL',b.sp_gb,'ALL') order by a.emp_nm
2023-07-12 23:40:39.463 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
2. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 23:40:39.465 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
2. select   a.emp_no,a.emp_nm,nvl(b.route_nm,'-') as route_nm, nvl(b.WORK_GROUP,'-') as work_group from    TBL_employeeInfo a left outer join TBL_DRIVERINFO b on a.company_no = b.company_no and a.emp_nm = b.emp_nm where   a.company_no = '100' and	    b.sp_gb = decode('ALL','ALL',b.sp_gb,'ALL') order by a.emp_nm
 {executed in 0 msec}
2023-07-12 23:40:41.701 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@6c9309d9
2023-07-12 23:40:41.703 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-12 23:40:41.706 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  5 AS seq
		,  '5' AS a0 
		,	'현주소' AS a1, 		nvl(b.address,'') AS a1_value 
		,	'' AS a2, '' AS a2_value 
		,	'' AS a3, '' AS a3_value 
		,	'' AS a4, '' AS a4_value 
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='남기선' 
	union 
	SELECT  4 AS seq
		,  '4' AS a0 
		,	'이메일' AS a1, 		nvl(b.email,'')  AS a1_value 
		,	'호봉' AS a2, 		nvl(b.hobong,'') AS a2_value 
		,	'구분' AS a3, 		a.JOB_KIND AS a3_value 
		,	'생년월일' AS a4, 		b.birth_ymd  AS a4_value 
		,	'국민연금취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='남기선' 
	union 
	SELECT  3 AS seq
		,  '3' AS a0 
		,	'휴대폰' AS a1, 		a.PHONE_NO  AS a1_value 
		,	'정규직구분' AS a2, 	nvl(b.enter_gb,'')  AS a2_value 
		,	'부서' AS a3, 		a.TEAM_NM  AS a3_value  
		,	'운전면허번호' AS a4, 	nvl(b.dirver_regno,'')	  AS a4_value  
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='남기선' 
	union 
	SELECT  2 AS seq
		,  '2' AS a0 
		,	'생년월일' AS a1, 		nvl(b.BIRTH_YMD,'') AS a1_value  
		,	'근속일자' AS a2, 		nvl(to_char(datediff(DAY,a.enter_date,to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'직종' AS a3, 		a.JOB_TYPE AS a3_value  
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'건강보험취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='남기선' 
	union 
	SELECT  1 AS seq
		,	'1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'고정/SP구분' AS a3, 	nvl(b.sp_gb,'') AS a3_value 
		,	'가입조합' AS a4, 		nvl(b.work_group,'') AS a4_value 
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='남기선' 
	union 
	SELECT  0 AS seq
		,	a.emp_nm AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		a.enter_date AS a2_value 
		,	'노선' AS a3, 		nvl(b.route_nm,'')  AS a3_value 
		,	'성별' AS a4, 		a.sex AS a4_value 
		,	'고용보험취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='남기선'
	order by 1
 {executed in 2 msec}
2023-07-12 23:40:41.713 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
3. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 23:40:41.714 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
3. select * from TBL_FILE_INFO where company_no = '100' and file_gb = 'empImage' and file_id = '남기선'
 {executed in 1 msec}
2023-07-12 23:40:41.734 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@10cbef05
2023-07-12 23:40:41.734 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@6c52c484
2023-07-12 23:40:41.734 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_EMP_WORKING_LOG_empNm} 
2023-07-12 23:40:41.735 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBM_EMP_WORKING_LOG a where   a.company_no = '100' and     a.emp_nm = '남기선' and     a.work_date between '2023-01-01' and '2023-07-31' order by a.work_date desc,a.work_time desc
2023-07-12 23:40:41.736 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
2. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-12 23:40:41.738 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
2. select   ROWNUM AS no,a.* from    TBM_EMP_WORKING_LOG a where   a.company_no = '100' and     a.emp_nm = '남기선' and     a.work_date between '2023-01-01' and '2023-07-31' order by a.work_date desc,a.work_time desc
 {executed in 0 msec}
2023-07-12 23:40:41.739 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
2. select   ROWNUM AS no,a.* from    TBM_EMP_WORKING_LOG a where   a.company_no = '100' and     a.emp_nm = '남기선' and     a.work_date between '2023-01-01' and '2023-07-31' order by a.work_date desc,a.work_time desc
 {executed in 1 msec}
2023-07-12 23:40:41.945 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT k.*
	FROM (
		SELECT 	ROW_NUMBER() over(ORDER BY sum(a.tot_point) desc) AS seq
			,	a.emp_nm
			,	b.sp_gb
			,	b.route_nm
			,	listagg(a.code_nm,'/') WITHIN GROUP (ORDER BY a.code_id)   AS codeList
			,	listagg(a.tot_point,'/') WITHIN GROUP (ORDER BY a.code_id) AS pointList
			,	listagg(a.point,'/') WITHIN GROUP (ORDER BY a.code_id) AS cntList
			,	listagg(a.code_max,'/') WITHIN GROUP (ORDER BY a.code_id) AS maxList
			,	sum(a.tot_point) AS tot_point
			,	nvl(to_char(datediff(DAY,b.enter_date,to_char(SYSDATE,'yyyy-mm-dd'))),0) AS totWorkingDay
			,	substring(b.birth_ymd,1,2) as birth_year
		FROM  TBM_EMP_POINT_INFO a join TBL_DRIVERINFO b on a.company_no = b.company_no AND a.emp_nm = b.emp_nm
		WHERE	a.company_no = '100'
		AND	 	a.from_date = '2023-01-01' 
		AND 	a.to_date = '2023-07-31' 
		AND 	b.route_nm = decode('','',b.route_nm,'') 
		AND 	b.sp_gb = decode('ALL','ALL',b.sp_gb,'ALL')
		GROUP BY a.emp_nm
		ORDER BY 1
	) K
	WHERE 	k.emp_nm = decode ('남기선','',k.emp_nm,'남기선')
	AND		round(k.totWorkingDay/365,0) >= 0
 {executed in 209 msec}
2023-07-12 23:40:42.887 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@f35ab3cc
2023-07-12 23:40:42.887 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_PUBLIC_COMPLAINT_INFO_empNm} 
2023-07-12 23:40:42.887 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' and     a.emp_nm = '남기선' and     a.comp_date between '2023-01-01' and '2023-07-31' order by a.comp_date desc,a.seq desc
2023-07-12 23:40:42.888 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-12 23:40:42.889 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' and     a.emp_nm = '남기선' and     a.comp_date between '2023-01-01' and '2023-07-31' order by a.comp_date desc,a.seq desc
 {executed in 1 msec}
2023-07-12 23:40:42.891 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBL_PUBLIC_COMPLAINT_INFO a where   a.company_no = '100' and     a.emp_nm = '남기선' and     a.comp_date between '2023-01-01' and '2023-07-31' order by a.comp_date desc,a.seq desc
 {executed in 0 msec}
