2023-07-01 00:00:52.633 INFO  [http-nio-10010-exec-9] [c.p.d.interceptor.LoggerInterceptor] - ============================== START ==============================
2023-07-01 00:00:52.638 INFO  [http-nio-10010-exec-9] [c.p.d.interceptor.LoggerInterceptor] -  Class       	:  class org.springframework.web.method.HandlerMethod
2023-07-01 00:00:52.638 INFO  [http-nio-10010-exec-9] [c.p.d.interceptor.LoggerInterceptor] -  Request URI 	:  /error
2023-07-01 00:00:52.639 INFO  [http-nio-10010-exec-9] [c.p.d.interceptor.LoggerInterceptor] -  Request addr	:  0:0:0:0:0:0:0:1
2023-07-01 00:00:52.639 INFO  [http-nio-10010-exec-9] [c.p.d.interceptor.LoggerInterceptor] -  Servlet URI 	:  /error
2023-07-01 00:01:09.797 INFO  [http-nio-10010-exec-2] [c.p.d.interceptor.LoggerInterceptor] - ============================== START ==============================
2023-07-01 00:01:09.798 INFO  [http-nio-10010-exec-2] [c.p.d.interceptor.LoggerInterceptor] -  Class       	:  class org.springframework.web.method.HandlerMethod
2023-07-01 00:01:09.798 INFO  [http-nio-10010-exec-2] [c.p.d.interceptor.LoggerInterceptor] -  Request URI 	:  /
2023-07-01 00:01:09.798 INFO  [http-nio-10010-exec-2] [c.p.d.interceptor.LoggerInterceptor] -  Request addr	:  0:0:0:0:0:0:0:1
2023-07-01 00:01:09.798 INFO  [http-nio-10010-exec-2] [c.p.d.interceptor.LoggerInterceptor] -  Servlet URI 	:  /
2023-07-01 00:01:09.833 INFO  [http-nio-10010-exec-10] [c.p.d.interceptor.LoggerInterceptor] - ============================== START ==============================
2023-07-01 00:01:09.833 INFO  [http-nio-10010-exec-10] [c.p.d.interceptor.LoggerInterceptor] -  Class       	:  class org.springframework.web.method.HandlerMethod
2023-07-01 00:01:09.833 INFO  [http-nio-10010-exec-10] [c.p.d.interceptor.LoggerInterceptor] -  Request URI 	:  /error
2023-07-01 00:01:09.833 INFO  [http-nio-10010-exec-10] [c.p.d.interceptor.LoggerInterceptor] -  Request addr	:  0:0:0:0:0:0:0:1
2023-07-01 00:01:09.833 INFO  [http-nio-10010-exec-10] [c.p.d.interceptor.LoggerInterceptor] -  Servlet URI 	:  /error
2023-07-01 00:01:20.146 INFO  [http-nio-10010-exec-4] [c.p.d.interceptor.LoggerInterceptor] - ============================== START ==============================
2023-07-01 00:01:20.146 INFO  [http-nio-10010-exec-4] [c.p.d.interceptor.LoggerInterceptor] -  Class       	:  class org.springframework.web.method.HandlerMethod
2023-07-01 00:01:20.146 INFO  [http-nio-10010-exec-4] [c.p.d.interceptor.LoggerInterceptor] -  Request URI 	:  /error
2023-07-01 00:01:20.146 INFO  [http-nio-10010-exec-4] [c.p.d.interceptor.LoggerInterceptor] -  Request addr	:  0:0:0:0:0:0:0:1
2023-07-01 00:01:20.146 INFO  [http-nio-10010-exec-4] [c.p.d.interceptor.LoggerInterceptor] -  Servlet URI 	:  /error
2023-07-01 00:01:24.082 WARN  [http-nio-10010-exec-7] [o.h.engine.jdbc.spi.SqlExceptionHelper] - SQL Error: 0, SQLState: null
2023-07-01 00:01:24.082 ERROR [http-nio-10010-exec-7] [o.h.engine.jdbc.spi.SqlExceptionHelper] - H2 - Connection is not available, request timed out after 30005ms.
2023-07-01 00:01:24.088 ERROR [http-nio-10010-exec-7] [o.s.s.w.a.UsernamePasswordAuthenticationFilter] - An internal error occurred while trying to authenticate the user.
org.springframework.security.authentication.InternalAuthenticationServiceException: org.hibernate.exception.JDBCConnectionException: Unable to acquire JDBC Connection
	at org.springframework.security.authentication.dao.DaoAuthenticationProvider.retrieveUser(DaoAuthenticationProvider.java:123)
	at org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(AbstractUserDetailsAuthenticationProvider.java:144)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:175)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:200)
	at org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter.attemptAuthentication(UsernamePasswordAuthenticationFilter.java:94)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:97)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at jdk.internal.reflect.GeneratedMethodAccessor149.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$21c40c9e.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:114)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:104)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: javax.persistence.PersistenceException: org.hibernate.exception.JDBCConnectionException: Unable to acquire JDBC Connection
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:154)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1515)
	at org.hibernate.query.internal.AbstractProducedQuery.getSingleResult(AbstractProducedQuery.java:1554)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:404)
	at jdk.proxy2/jdk.proxy2.$Proxy167.getSingleResult(Unknown Source)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:221)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:91)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:136)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:125)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:605)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$invoke$3(RepositoryFactorySupport.java:595)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:595)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:59)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:144)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$ExposeRepositoryInvocationInterceptor.invoke(CrudMethodMetadataPostProcessor.java:364)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor.invoke(SurroundingTransactionDetectorMethodInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at jdk.proxy3/jdk.proxy3.$Proxy141.testserId(Unknown Source)
	at com.pjy.dashboard.service.MemberServiceImpl.loadUserByUsername(MemberServiceImpl.java:41)
	at com.pjy.dashboard.service.MemberServiceImpl$$FastClassBySpringCGLIB$$6a5d756c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at com.pjy.dashboard.service.MemberServiceImpl$$EnhancerBySpringCGLIB$$d7328e9d.loadUserByUsername(<generated>)
	at org.springframework.security.authentication.dao.DaoAuthenticationProvider.retrieveUser(DaoAuthenticationProvider.java:108)
	... 79 common frames omitted
Caused by: org.hibernate.exception.JDBCConnectionException: Unable to acquire JDBC Connection
	at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:48)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:42)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:113)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:99)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.acquireConnectionIfNeeded(LogicalConnectionManagedImpl.java:109)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.getPhysicalConnection(LogicalConnectionManagedImpl.java:136)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.connection(StatementPreparerImpl.java:50)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$5.doPrepare(StatementPreparerImpl.java:149)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:176)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareQueryStatement(StatementPreparerImpl.java:151)
	at org.hibernate.loader.Loader.prepareQueryStatement(Loader.java:2082)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:2012)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1990)
	at org.hibernate.loader.Loader.doQuery(Loader.java:949)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:351)
	at org.hibernate.loader.Loader.doList(Loader.java:2787)
	at org.hibernate.loader.Loader.doList(Loader.java:2770)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2604)
	at org.hibernate.loader.Loader.list(Loader.java:2599)
	at org.hibernate.loader.custom.CustomLoader.list(CustomLoader.java:338)
	at org.hibernate.internal.SessionImpl.listCustomQuery(SessionImpl.java:2243)
	at org.hibernate.internal.AbstractSharedSessionContract.list(AbstractSharedSessionContract.java:1069)
	at org.hibernate.query.internal.NativeQueryImpl.doList(NativeQueryImpl.java:170)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1506)
	... 117 common frames omitted
Caused by: java.sql.SQLTransientConnectionException: H2 - Connection is not available, request timed out after 30005ms.
	at com.zaxxer.hikari.pool.HikariPool.createTimeoutException(HikariPool.java:676)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:190)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.internal.NonContextualJdbcConnectionAccess.obtainConnection(NonContextualJdbcConnectionAccess.java:35)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.acquireConnectionIfNeeded(LogicalConnectionManagedImpl.java:106)
	... 136 common frames omitted
2023-07-01 00:01:24.089 INFO  [http-nio-10010-exec-7] [c.p.d.configuration.SecurityConfig] - exception:: org.hibernate.exception.JDBCConnectionException: Unable to acquire JDBC Connection
2023-07-01 00:01:26.475 WARN  [http-nio-10010-exec-9] [o.h.engine.jdbc.spi.SqlExceptionHelper] - SQL Error: 0, SQLState: null
2023-07-01 00:01:26.475 ERROR [http-nio-10010-exec-9] [o.h.engine.jdbc.spi.SqlExceptionHelper] - H2 - Connection is not available, request timed out after 30004ms.
2023-07-01 00:01:26.476 ERROR [http-nio-10010-exec-9] [o.s.s.w.a.UsernamePasswordAuthenticationFilter] - An internal error occurred while trying to authenticate the user.
org.springframework.security.authentication.InternalAuthenticationServiceException: org.hibernate.exception.JDBCConnectionException: Unable to acquire JDBC Connection
	at org.springframework.security.authentication.dao.DaoAuthenticationProvider.retrieveUser(DaoAuthenticationProvider.java:123)
	at org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(AbstractUserDetailsAuthenticationProvider.java:144)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:175)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:200)
	at org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter.attemptAuthentication(UsernamePasswordAuthenticationFilter.java:94)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:97)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at jdk.internal.reflect.GeneratedMethodAccessor149.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$21c40c9e.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:114)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:104)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: javax.persistence.PersistenceException: org.hibernate.exception.JDBCConnectionException: Unable to acquire JDBC Connection
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:154)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1515)
	at org.hibernate.query.internal.AbstractProducedQuery.getSingleResult(AbstractProducedQuery.java:1554)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:404)
	at jdk.proxy2/jdk.proxy2.$Proxy167.getSingleResult(Unknown Source)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:221)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:91)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:136)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:125)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:605)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$invoke$3(RepositoryFactorySupport.java:595)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:595)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:59)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:144)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$ExposeRepositoryInvocationInterceptor.invoke(CrudMethodMetadataPostProcessor.java:364)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor.invoke(SurroundingTransactionDetectorMethodInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at jdk.proxy3/jdk.proxy3.$Proxy141.testserId(Unknown Source)
	at com.pjy.dashboard.service.MemberServiceImpl.loadUserByUsername(MemberServiceImpl.java:41)
	at com.pjy.dashboard.service.MemberServiceImpl$$FastClassBySpringCGLIB$$6a5d756c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at com.pjy.dashboard.service.MemberServiceImpl$$EnhancerBySpringCGLIB$$d7328e9d.loadUserByUsername(<generated>)
	at org.springframework.security.authentication.dao.DaoAuthenticationProvider.retrieveUser(DaoAuthenticationProvider.java:108)
	... 79 common frames omitted
Caused by: org.hibernate.exception.JDBCConnectionException: Unable to acquire JDBC Connection
	at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:48)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:42)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:113)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:99)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.acquireConnectionIfNeeded(LogicalConnectionManagedImpl.java:109)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.getPhysicalConnection(LogicalConnectionManagedImpl.java:136)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.connection(StatementPreparerImpl.java:50)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$5.doPrepare(StatementPreparerImpl.java:149)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:176)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareQueryStatement(StatementPreparerImpl.java:151)
	at org.hibernate.loader.Loader.prepareQueryStatement(Loader.java:2082)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:2012)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1990)
	at org.hibernate.loader.Loader.doQuery(Loader.java:949)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:351)
	at org.hibernate.loader.Loader.doList(Loader.java:2787)
	at org.hibernate.loader.Loader.doList(Loader.java:2770)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2604)
	at org.hibernate.loader.Loader.list(Loader.java:2599)
	at org.hibernate.loader.custom.CustomLoader.list(CustomLoader.java:338)
	at org.hibernate.internal.SessionImpl.listCustomQuery(SessionImpl.java:2243)
	at org.hibernate.internal.AbstractSharedSessionContract.list(AbstractSharedSessionContract.java:1069)
	at org.hibernate.query.internal.NativeQueryImpl.doList(NativeQueryImpl.java:170)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1506)
	... 117 common frames omitted
Caused by: java.sql.SQLTransientConnectionException: H2 - Connection is not available, request timed out after 30004ms.
	at com.zaxxer.hikari.pool.HikariPool.createTimeoutException(HikariPool.java:676)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:190)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.internal.NonContextualJdbcConnectionAccess.obtainConnection(NonContextualJdbcConnectionAccess.java:35)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.acquireConnectionIfNeeded(LogicalConnectionManagedImpl.java:106)
	... 136 common frames omitted
2023-07-01 00:01:26.477 INFO  [http-nio-10010-exec-9] [c.p.d.configuration.SecurityConfig] - exception:: org.hibernate.exception.JDBCConnectionException: Unable to acquire JDBC Connection
2023-07-01 00:01:27.878 INFO  [RMI TCP Connection(253)-127.0.0.1] [o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin] - Application shutdown requested.
2023-07-01 00:01:27.908 INFO  [RMI TCP Connection(253)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Shutting down ExecutorService 'asyncThreadPool'
2023-07-01 00:01:27.910 INFO  [RMI TCP Connection(253)-127.0.0.1] [com.zaxxer.hikari.HikariDataSource] - H2 - Shutdown initiated...
2023-07-01 00:01:27.912 INFO  [RMI TCP Connection(253)-127.0.0.1] [com.zaxxer.hikari.HikariDataSource] - H2 - Shutdown completed.
2023-07-01 00:01:30.212 INFO  [RMI TCP Connection(253)-127.0.0.1] [com.pjy.dashboard.filter.TestFilter] - destroy Pjy Filter
2023-07-01 00:01:30.243 WARN  [http-nio-10010-exec-8] [o.h.engine.jdbc.spi.SqlExceptionHelper] - SQL Error: 0, SQLState: null
2023-07-01 00:01:30.243 WARN  [http-nio-10010-exec-6] [o.h.engine.jdbc.spi.SqlExceptionHelper] - SQL Error: 0, SQLState: null
2023-07-01 00:01:30.244 ERROR [http-nio-10010-exec-8] [o.h.engine.jdbc.spi.SqlExceptionHelper] - H2 - Interrupted during connection acquisition
2023-07-01 00:01:30.243 WARN  [http-nio-10010-exec-10] [o.h.engine.jdbc.spi.SqlExceptionHelper] - SQL Error: 0, SQLState: null
2023-07-01 00:01:30.244 ERROR [http-nio-10010-exec-6] [o.h.engine.jdbc.spi.SqlExceptionHelper] - H2 - Interrupted during connection acquisition
2023-07-01 00:01:30.243 WARN  [http-nio-10010-exec-1] [o.h.engine.jdbc.spi.SqlExceptionHelper] - SQL Error: 0, SQLState: null
2023-07-01 00:01:30.245 ERROR [http-nio-10010-exec-1] [o.h.engine.jdbc.spi.SqlExceptionHelper] - H2 - Interrupted during connection acquisition
2023-07-01 00:01:30.244 ERROR [http-nio-10010-exec-10] [o.h.engine.jdbc.spi.SqlExceptionHelper] - H2 - Interrupted during connection acquisition
2023-07-01 00:01:30.248 ERROR [http-nio-10010-exec-10] [o.s.s.w.a.UsernamePasswordAuthenticationFilter] - An internal error occurred while trying to authenticate the user.
org.springframework.security.authentication.InternalAuthenticationServiceException: org.hibernate.exception.GenericJDBCException: Unable to acquire JDBC Connection
	at org.springframework.security.authentication.dao.DaoAuthenticationProvider.retrieveUser(DaoAuthenticationProvider.java:123)
	at org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(AbstractUserDetailsAuthenticationProvider.java:144)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:175)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:200)
	at org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter.attemptAuthentication(UsernamePasswordAuthenticationFilter.java:94)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:97)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at jdk.internal.reflect.GeneratedMethodAccessor149.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$21c40c9e.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:114)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:104)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: javax.persistence.PersistenceException: org.hibernate.exception.GenericJDBCException: Unable to acquire JDBC Connection
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:154)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1515)
	at org.hibernate.query.internal.AbstractProducedQuery.getSingleResult(AbstractProducedQuery.java:1554)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:404)
	at jdk.proxy2/jdk.proxy2.$Proxy167.getSingleResult(Unknown Source)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:221)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:91)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:136)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:125)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:605)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$invoke$3(RepositoryFactorySupport.java:595)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:595)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:59)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:144)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$ExposeRepositoryInvocationInterceptor.invoke(CrudMethodMetadataPostProcessor.java:364)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor.invoke(SurroundingTransactionDetectorMethodInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at jdk.proxy3/jdk.proxy3.$Proxy141.testserId(Unknown Source)
	at com.pjy.dashboard.service.MemberServiceImpl.loadUserByUsername(MemberServiceImpl.java:41)
	at com.pjy.dashboard.service.MemberServiceImpl$$FastClassBySpringCGLIB$$6a5d756c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at com.pjy.dashboard.service.MemberServiceImpl$$EnhancerBySpringCGLIB$$d7328e9d.loadUserByUsername(<generated>)
	at org.springframework.security.authentication.dao.DaoAuthenticationProvider.retrieveUser(DaoAuthenticationProvider.java:108)
	... 79 common frames omitted
Caused by: org.hibernate.exception.GenericJDBCException: Unable to acquire JDBC Connection
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:47)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:113)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:99)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.acquireConnectionIfNeeded(LogicalConnectionManagedImpl.java:109)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.getPhysicalConnection(LogicalConnectionManagedImpl.java:136)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.connection(StatementPreparerImpl.java:50)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$5.doPrepare(StatementPreparerImpl.java:149)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:176)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareQueryStatement(StatementPreparerImpl.java:151)
	at org.hibernate.loader.Loader.prepareQueryStatement(Loader.java:2082)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:2012)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1990)
	at org.hibernate.loader.Loader.doQuery(Loader.java:949)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:351)
	at org.hibernate.loader.Loader.doList(Loader.java:2787)
	at org.hibernate.loader.Loader.doList(Loader.java:2770)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2604)
	at org.hibernate.loader.Loader.list(Loader.java:2599)
	at org.hibernate.loader.custom.CustomLoader.list(CustomLoader.java:338)
	at org.hibernate.internal.SessionImpl.listCustomQuery(SessionImpl.java:2243)
	at org.hibernate.internal.AbstractSharedSessionContract.list(AbstractSharedSessionContract.java:1069)
	at org.hibernate.query.internal.NativeQueryImpl.doList(NativeQueryImpl.java:170)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1506)
	... 117 common frames omitted
Caused by: java.sql.SQLException: H2 - Interrupted during connection acquisition
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:194)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.internal.NonContextualJdbcConnectionAccess.obtainConnection(NonContextualJdbcConnectionAccess.java:35)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.acquireConnectionIfNeeded(LogicalConnectionManagedImpl.java:106)
	... 136 common frames omitted
Caused by: java.lang.InterruptedException: null
	at java.base/java.util.concurrent.SynchronousQueue.poll(SynchronousQueue.java:906)
	at com.zaxxer.hikari.util.ConcurrentBag.borrow(ConcurrentBag.java:157)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:173)
	... 141 common frames omitted
2023-07-01 00:01:30.248 ERROR [http-nio-10010-exec-6] [o.s.s.w.a.UsernamePasswordAuthenticationFilter] - An internal error occurred while trying to authenticate the user.
org.springframework.security.authentication.InternalAuthenticationServiceException: org.hibernate.exception.GenericJDBCException: Unable to acquire JDBC Connection
	at org.springframework.security.authentication.dao.DaoAuthenticationProvider.retrieveUser(DaoAuthenticationProvider.java:123)
	at org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(AbstractUserDetailsAuthenticationProvider.java:144)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:175)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:200)
	at org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter.attemptAuthentication(UsernamePasswordAuthenticationFilter.java:94)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:97)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at jdk.internal.reflect.GeneratedMethodAccessor149.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$21c40c9e.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:114)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:104)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: javax.persistence.PersistenceException: org.hibernate.exception.GenericJDBCException: Unable to acquire JDBC Connection
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:154)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1515)
	at org.hibernate.query.internal.AbstractProducedQuery.getSingleResult(AbstractProducedQuery.java:1554)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:404)
	at jdk.proxy2/jdk.proxy2.$Proxy167.getSingleResult(Unknown Source)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:221)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:91)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:136)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:125)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:605)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$invoke$3(RepositoryFactorySupport.java:595)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:595)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:59)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:144)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$ExposeRepositoryInvocationInterceptor.invoke(CrudMethodMetadataPostProcessor.java:364)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor.invoke(SurroundingTransactionDetectorMethodInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at jdk.proxy3/jdk.proxy3.$Proxy141.testserId(Unknown Source)
	at com.pjy.dashboard.service.MemberServiceImpl.loadUserByUsername(MemberServiceImpl.java:41)
	at com.pjy.dashboard.service.MemberServiceImpl$$FastClassBySpringCGLIB$$6a5d756c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at com.pjy.dashboard.service.MemberServiceImpl$$EnhancerBySpringCGLIB$$d7328e9d.loadUserByUsername(<generated>)
	at org.springframework.security.authentication.dao.DaoAuthenticationProvider.retrieveUser(DaoAuthenticationProvider.java:108)
	... 79 common frames omitted
Caused by: org.hibernate.exception.GenericJDBCException: Unable to acquire JDBC Connection
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:47)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:113)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:99)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.acquireConnectionIfNeeded(LogicalConnectionManagedImpl.java:109)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.getPhysicalConnection(LogicalConnectionManagedImpl.java:136)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.connection(StatementPreparerImpl.java:50)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$5.doPrepare(StatementPreparerImpl.java:149)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:176)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareQueryStatement(StatementPreparerImpl.java:151)
	at org.hibernate.loader.Loader.prepareQueryStatement(Loader.java:2082)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:2012)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1990)
	at org.hibernate.loader.Loader.doQuery(Loader.java:949)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:351)
	at org.hibernate.loader.Loader.doList(Loader.java:2787)
	at org.hibernate.loader.Loader.doList(Loader.java:2770)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2604)
	at org.hibernate.loader.Loader.list(Loader.java:2599)
	at org.hibernate.loader.custom.CustomLoader.list(CustomLoader.java:338)
	at org.hibernate.internal.SessionImpl.listCustomQuery(SessionImpl.java:2243)
	at org.hibernate.internal.AbstractSharedSessionContract.list(AbstractSharedSessionContract.java:1069)
	at org.hibernate.query.internal.NativeQueryImpl.doList(NativeQueryImpl.java:170)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1506)
	... 117 common frames omitted
Caused by: java.sql.SQLException: H2 - Interrupted during connection acquisition
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:194)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.internal.NonContextualJdbcConnectionAccess.obtainConnection(NonContextualJdbcConnectionAccess.java:35)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.acquireConnectionIfNeeded(LogicalConnectionManagedImpl.java:106)
	... 136 common frames omitted
Caused by: java.lang.InterruptedException: null
	at java.base/java.util.concurrent.SynchronousQueue.poll(SynchronousQueue.java:906)
	at com.zaxxer.hikari.util.ConcurrentBag.borrow(ConcurrentBag.java:157)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:173)
	... 141 common frames omitted
2023-07-01 00:01:30.248 ERROR [http-nio-10010-exec-8] [o.s.s.w.a.UsernamePasswordAuthenticationFilter] - An internal error occurred while trying to authenticate the user.
org.springframework.security.authentication.InternalAuthenticationServiceException: org.hibernate.exception.GenericJDBCException: Unable to acquire JDBC Connection
	at org.springframework.security.authentication.dao.DaoAuthenticationProvider.retrieveUser(DaoAuthenticationProvider.java:123)
	at org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(AbstractUserDetailsAuthenticationProvider.java:144)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:175)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:200)
	at org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter.attemptAuthentication(UsernamePasswordAuthenticationFilter.java:94)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:97)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at jdk.internal.reflect.GeneratedMethodAccessor149.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$21c40c9e.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:114)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:104)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: javax.persistence.PersistenceException: org.hibernate.exception.GenericJDBCException: Unable to acquire JDBC Connection
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:154)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1515)
	at org.hibernate.query.internal.AbstractProducedQuery.getSingleResult(AbstractProducedQuery.java:1554)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:404)
	at jdk.proxy2/jdk.proxy2.$Proxy167.getSingleResult(Unknown Source)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:221)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:91)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:136)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:125)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:605)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$invoke$3(RepositoryFactorySupport.java:595)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:595)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:59)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:144)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$ExposeRepositoryInvocationInterceptor.invoke(CrudMethodMetadataPostProcessor.java:364)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor.invoke(SurroundingTransactionDetectorMethodInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at jdk.proxy3/jdk.proxy3.$Proxy141.testserId(Unknown Source)
	at com.pjy.dashboard.service.MemberServiceImpl.loadUserByUsername(MemberServiceImpl.java:41)
	at com.pjy.dashboard.service.MemberServiceImpl$$FastClassBySpringCGLIB$$6a5d756c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at com.pjy.dashboard.service.MemberServiceImpl$$EnhancerBySpringCGLIB$$d7328e9d.loadUserByUsername(<generated>)
	at org.springframework.security.authentication.dao.DaoAuthenticationProvider.retrieveUser(DaoAuthenticationProvider.java:108)
	... 79 common frames omitted
Caused by: org.hibernate.exception.GenericJDBCException: Unable to acquire JDBC Connection
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:47)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:113)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:99)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.acquireConnectionIfNeeded(LogicalConnectionManagedImpl.java:109)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.getPhysicalConnection(LogicalConnectionManagedImpl.java:136)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.connection(StatementPreparerImpl.java:50)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$5.doPrepare(StatementPreparerImpl.java:149)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:176)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareQueryStatement(StatementPreparerImpl.java:151)
	at org.hibernate.loader.Loader.prepareQueryStatement(Loader.java:2082)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:2012)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1990)
	at org.hibernate.loader.Loader.doQuery(Loader.java:949)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:351)
	at org.hibernate.loader.Loader.doList(Loader.java:2787)
	at org.hibernate.loader.Loader.doList(Loader.java:2770)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2604)
	at org.hibernate.loader.Loader.list(Loader.java:2599)
	at org.hibernate.loader.custom.CustomLoader.list(CustomLoader.java:338)
	at org.hibernate.internal.SessionImpl.listCustomQuery(SessionImpl.java:2243)
	at org.hibernate.internal.AbstractSharedSessionContract.list(AbstractSharedSessionContract.java:1069)
	at org.hibernate.query.internal.NativeQueryImpl.doList(NativeQueryImpl.java:170)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1506)
	... 117 common frames omitted
Caused by: java.sql.SQLException: H2 - Interrupted during connection acquisition
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:194)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.internal.NonContextualJdbcConnectionAccess.obtainConnection(NonContextualJdbcConnectionAccess.java:35)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.acquireConnectionIfNeeded(LogicalConnectionManagedImpl.java:106)
	... 136 common frames omitted
Caused by: java.lang.InterruptedException: null
	at java.base/java.util.concurrent.SynchronousQueue.poll(SynchronousQueue.java:906)
	at com.zaxxer.hikari.util.ConcurrentBag.borrow(ConcurrentBag.java:157)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:173)
	... 141 common frames omitted
2023-07-01 00:01:30.249 INFO  [http-nio-10010-exec-10] [c.p.d.configuration.SecurityConfig] - exception:: org.hibernate.exception.GenericJDBCException: Unable to acquire JDBC Connection
2023-07-01 00:01:30.248 ERROR [http-nio-10010-exec-1] [o.s.s.w.a.UsernamePasswordAuthenticationFilter] - An internal error occurred while trying to authenticate the user.
org.springframework.security.authentication.InternalAuthenticationServiceException: org.hibernate.exception.GenericJDBCException: Unable to acquire JDBC Connection
	at org.springframework.security.authentication.dao.DaoAuthenticationProvider.retrieveUser(DaoAuthenticationProvider.java:123)
	at org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(AbstractUserDetailsAuthenticationProvider.java:144)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:175)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:200)
	at org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter.attemptAuthentication(UsernamePasswordAuthenticationFilter.java:94)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:97)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at jdk.internal.reflect.GeneratedMethodAccessor149.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$21c40c9e.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:114)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:104)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: javax.persistence.PersistenceException: org.hibernate.exception.GenericJDBCException: Unable to acquire JDBC Connection
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:154)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1515)
	at org.hibernate.query.internal.AbstractProducedQuery.getSingleResult(AbstractProducedQuery.java:1554)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:404)
	at jdk.proxy2/jdk.proxy2.$Proxy167.getSingleResult(Unknown Source)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:221)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:91)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:136)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:125)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:605)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$invoke$3(RepositoryFactorySupport.java:595)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:595)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:59)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:144)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$ExposeRepositoryInvocationInterceptor.invoke(CrudMethodMetadataPostProcessor.java:364)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor.invoke(SurroundingTransactionDetectorMethodInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at jdk.proxy3/jdk.proxy3.$Proxy141.testserId(Unknown Source)
	at com.pjy.dashboard.service.MemberServiceImpl.loadUserByUsername(MemberServiceImpl.java:41)
	at com.pjy.dashboard.service.MemberServiceImpl$$FastClassBySpringCGLIB$$6a5d756c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at com.pjy.dashboard.service.MemberServiceImpl$$EnhancerBySpringCGLIB$$d7328e9d.loadUserByUsername(<generated>)
	at org.springframework.security.authentication.dao.DaoAuthenticationProvider.retrieveUser(DaoAuthenticationProvider.java:108)
	... 79 common frames omitted
Caused by: org.hibernate.exception.GenericJDBCException: Unable to acquire JDBC Connection
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:47)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:113)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:99)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.acquireConnectionIfNeeded(LogicalConnectionManagedImpl.java:109)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.getPhysicalConnection(LogicalConnectionManagedImpl.java:136)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.connection(StatementPreparerImpl.java:50)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$5.doPrepare(StatementPreparerImpl.java:149)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:176)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareQueryStatement(StatementPreparerImpl.java:151)
	at org.hibernate.loader.Loader.prepareQueryStatement(Loader.java:2082)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:2012)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1990)
	at org.hibernate.loader.Loader.doQuery(Loader.java:949)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:351)
	at org.hibernate.loader.Loader.doList(Loader.java:2787)
	at org.hibernate.loader.Loader.doList(Loader.java:2770)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2604)
	at org.hibernate.loader.Loader.list(Loader.java:2599)
	at org.hibernate.loader.custom.CustomLoader.list(CustomLoader.java:338)
	at org.hibernate.internal.SessionImpl.listCustomQuery(SessionImpl.java:2243)
	at org.hibernate.internal.AbstractSharedSessionContract.list(AbstractSharedSessionContract.java:1069)
	at org.hibernate.query.internal.NativeQueryImpl.doList(NativeQueryImpl.java:170)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1506)
	... 117 common frames omitted
Caused by: java.sql.SQLException: H2 - Interrupted during connection acquisition
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:194)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.internal.NonContextualJdbcConnectionAccess.obtainConnection(NonContextualJdbcConnectionAccess.java:35)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.acquireConnectionIfNeeded(LogicalConnectionManagedImpl.java:106)
	... 136 common frames omitted
Caused by: java.lang.InterruptedException: null
	at java.base/java.util.concurrent.SynchronousQueue.poll(SynchronousQueue.java:906)
	at com.zaxxer.hikari.util.ConcurrentBag.borrow(ConcurrentBag.java:157)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:173)
	... 141 common frames omitted
2023-07-01 00:01:30.249 INFO  [http-nio-10010-exec-6] [c.p.d.configuration.SecurityConfig] - exception:: org.hibernate.exception.GenericJDBCException: Unable to acquire JDBC Connection
2023-07-01 00:01:30.249 INFO  [http-nio-10010-exec-8] [c.p.d.configuration.SecurityConfig] - exception:: org.hibernate.exception.GenericJDBCException: Unable to acquire JDBC Connection
2023-07-01 00:01:30.249 INFO  [http-nio-10010-exec-1] [c.p.d.configuration.SecurityConfig] - exception:: org.hibernate.exception.GenericJDBCException: Unable to acquire JDBC Connection
2023-07-01 00:01:35.451 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Starting PjyApplication on DESKTOP-QJPD93S with PID 22768 (D:\BUS\dashboard\dashboard\target\classes started by admin in D:\BUS\dashboard\dashboard)
2023-07-01 00:01:35.455 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - The following profiles are active: oauth
2023-07-01 00:01:35.512 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-07-01 00:01:35.513 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-07-01 00:01:36.931 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-07-01 00:01:36.931 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-07-01 00:01:37.093 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 152ms. Found 3 JPA repository interfaces.
2023-07-01 00:01:37.535 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-07-01 00:01:37.535 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2023-07-01 00:01:37.584 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.FileRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-07-01 00:01:37.585 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.MemberRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-07-01 00:01:37.585 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.RememberMeRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-07-01 00:01:37.585 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 50ms. Found 0 JDBC repository interfaces.
2023-07-01 00:01:38.077 INFO  [restartedMain] [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] - Post-processing PropertySource instances
2023-07-01 00:01:38.148 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2023-07-01 00:01:38.148 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource commandLineArgs [org.springframework.core.env.SimpleCommandLinePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-07-01 00:01:38.148 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-07-01 00:01:38.148 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-07-01 00:01:38.148 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2023-07-01 00:01:38.149 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
2023-07-01 00:01:38.149 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2023-07-01 00:01:38.149 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application-oauth.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-07-01 00:01:38.149 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-07-01 00:01:38.149 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2023-07-01 00:01:38.149 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [pjy.properties] [org.springframework.core.env.CompositePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-07-01 00:01:38.150 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [common.properties] [org.springframework.core.io.support.ResourcePropertySource] to EncryptableMapPropertySourceWrapper
2023-07-01 00:01:38.219 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'asyncConfiguration' of type [com.pjy.dashboard.configuration.AsyncConfiguration$$EnhancerBySpringCGLIB$$af32156b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-01 00:01:38.281 INFO  [restartedMain] [c.u.j.filter.DefaultLazyPropertyFilter] - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2023-07-01 00:01:38.388 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$99287998] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-01 00:01:38.497 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-01 00:01:38.499 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@33c11225' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-01 00:01:38.503 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$bdfd1c4a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-01 00:01:38.516 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration$$EnhancerBySpringCGLIB$$e3523460] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-01 00:01:38.521 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-01 00:01:38.522 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-01 00:01:38.545 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$7ab15e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-01 00:01:38.574 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$7ffafe90] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-01 00:01:38.715 INFO  [restartedMain] [c.u.j.r.DefaultLazyPropertyResolver] - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2023-07-01 00:01:38.719 INFO  [restartedMain] [c.u.j.d.DefaultLazyPropertyDetector] - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2023-07-01 00:01:39.247 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 10010 (http)
2023-07-01 00:01:39.271 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Initializing ProtocolHandler ["http-nio-10010"]
2023-07-01 00:01:39.284 INFO  [restartedMain] [org.apache.catalina.core.StandardService] - Starting service [Tomcat]
2023-07-01 00:01:39.284 INFO  [restartedMain] [org.apache.catalina.core.StandardEngine] - Starting Servlet engine: [Apache Tomcat/9.0.29]
2023-07-01 00:01:39.735 INFO  [restartedMain] [org.apache.jasper.servlet.TldScanner] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2023-07-01 00:01:39.747 INFO  [restartedMain] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring embedded WebApplicationContext
2023-07-01 00:01:39.748 INFO  [restartedMain] [o.s.web.context.ContextLoader] - Root WebApplicationContext: initialization completed in 4235 ms
2023-07-01 00:01:40.648 INFO  [restartedMain] [c.u.j.encryptor.DefaultLazyEncryptor] - Found Custom Encryptor Bean org.jasypt.encryption.pbe.PooledPBEStringEncryptor@78ca805a with name: jasyptStringEncryptor
2023-07-01 00:01:40.716 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Starting...
2023-07-01 00:01:40.811 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.executeSql(PoolBase.java:567)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 8 msec}
2023-07-01 00:01:40.816 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Start completed.
2023-07-01 00:01:41.665 INFO  [restartedMain] [com.pjy.dashboard.filter.TestFilter] - init Pjy Filter
2023-07-01 00:01:42.120 INFO  [restartedMain] [o.hibernate.jpa.internal.util.LogHelper] - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2023-07-01 00:01:42.198 INFO  [restartedMain] [org.hibernate.Version] - HHH000412: Hibernate Core {5.3.14.Final}
2023-07-01 00:01:42.200 INFO  [restartedMain] [org.hibernate.cfg.Environment] - HHH000206: hibernate.properties not found
2023-07-01 00:01:42.360 INFO  [restartedMain] [org.hibernate.annotations.common.Version] - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2023-07-01 00:01:42.602 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 00:01:42.618 INFO  [restartedMain] [org.hibernate.dialect.Dialect] - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2023-07-01 00:01:43.344 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 00:01:43.347 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select SEQUENCE_CATALOG, SEQUENCE_SCHEMA, SEQUENCE_NAME, INCREMENT from information_schema.sequences
 {executed in 1 msec}
2023-07-01 00:01:43.395 INFO  [restartedMain] [o.s.o.j.LocalContainerEntityManagerFactoryBean] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-07-01 00:01:43.643 INFO  [restartedMain] [o.h.h.i.QueryTranslatorFactoryInitiator] - HHH000397: Using ASTQueryTranslatorFactory
2023-07-01 00:01:44.719 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService
2023-07-01 00:01:44.730 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'asyncThreadPool'
2023-07-01 00:01:44.908 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/h2-console/**'], []
2023-07-01 00:01:44.909 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/css/**'], []
2023-07-01 00:01:44.909 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/js/**'], []
2023-07-01 00:01:44.909 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/monitor/**'], []
2023-07-01 00:01:44.909 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/img/**'], []
2023-07-01 00:01:44.909 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/lib/**'], []
2023-07-01 00:01:44.909 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/main.css'], []
2023-07-01 00:01:44.909 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/common.js'], []
2023-07-01 00:01:44.909 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/resources/**'], []
2023-07-01 00:01:45.070 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4fb2aa06, org.springframework.security.web.context.SecurityContextPersistenceFilter@52d75297, org.springframework.security.web.header.HeaderWriterFilter@523db845, org.springframework.web.filter.CorsFilter@d3b9779, org.springframework.security.web.authentication.logout.LogoutFilter@1500e7d5, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@45a6d6f3, org.springframework.security.web.session.ConcurrentSessionFilter@139286bb, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@186f563a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@657e6eab, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7a71388, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@69c5bbf0, org.springframework.security.web.session.SessionManagementFilter@13ccb543, org.springframework.security.web.access.ExceptionTranslationFilter@7a7649ea, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4ff56347]
2023-07-01 00:01:45.092 INFO  [restartedMain] [o.s.aop.framework.CglibAopProxy] - Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(javax.servlet.FilterConfig) throws javax.servlet.ServletException] because it is marked as final: Consider using interface-based JDK proxies instead!
2023-07-01 00:01:45.448 WARN  [restartedMain] [o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-07-01 00:01:45.526 INFO  [restartedMain] [o.s.b.a.w.s.WelcomePageHandlerMapping] - Adding welcome page: ServletContext resource [/index.html]
2023-07-01 00:01:45.940 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 00:01:46.748 INFO  [restartedMain] [o.s.b.d.a.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2023-07-01 00:01:46.775 INFO  [restartedMain] [o.s.b.a.e.web.EndpointLinksResolver] - Exposing 16 endpoint(s) beneath base path '/actuator'
2023-07-01 00:01:46.914 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskScheduler] - Initializing ExecutorService
2023-07-01 00:01:46.917 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Starting ProtocolHandler ["http-nio-10010"]
2023-07-01 00:01:46.967 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 10010 (http) with context path ''
2023-07-01 00:01:46.973 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Started PjyApplication in 11.99 seconds (JVM running for 14.575)
2023-07-01 00:01:46.973 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-07-01 00:01:46.973 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - Application started
2023-07-01 00:01:46.974 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-07-01 00:01:47.971 INFO  [RMI TCP Connection(9)-127.0.0.1] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-07-01 00:01:47.972 INFO  [RMI TCP Connection(9)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Initializing Servlet 'dispatcherServlet'
2023-07-01 00:01:48.016 INFO  [RMI TCP Connection(9)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Completed initialization in 44 ms
2023-07-01 00:01:49.057 INFO  [http-nio-10010-exec-2] [c.p.d.interceptor.LoggerInterceptor] - ============================== START ==============================
2023-07-01 00:01:49.058 INFO  [http-nio-10010-exec-2] [c.p.d.interceptor.LoggerInterceptor] -  Class       	:  class org.springframework.web.method.HandlerMethod
2023-07-01 00:01:49.058 INFO  [http-nio-10010-exec-2] [c.p.d.interceptor.LoggerInterceptor] -  Request URI 	:  /error
2023-07-01 00:01:49.058 INFO  [http-nio-10010-exec-2] [c.p.d.interceptor.LoggerInterceptor] -  Request addr	:  0:0:0:0:0:0:0:1
2023-07-01 00:01:49.058 INFO  [http-nio-10010-exec-2] [c.p.d.interceptor.LoggerInterceptor] -  Servlet URI 	:  /error
2023-07-01 00:01:50.944 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 00:01:50.950 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select * from MEMBER where userId = 'p00139'
 {executed in 0 msec}
2023-07-01 00:01:50.975 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.MemberServiceImpl] - ROLE_ADMIN
2023-07-01 00:01:51.064 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.MemberServiceImpl] - pass:$2a$10$MNrQAPw.4k9j2y08eTmYEeI7oKPuaWbA97HHog.8PYep5HsRwhbae,$2a$10$1d25N9gaI6R9NWp0BlEbUOnzBWJEzLwVpal36z6mrkn93L98hG47K
2023-07-01 00:01:51.226 INFO  [http-nio-10010-exec-1] [c.p.d.configuration.SecurityConfig] - authentication:: p00139
2023-07-01 00:01:53.812 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 00:01:53.812 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 00:01:53.856 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 00:01:53.869 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 00:01:53.873 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 3 msec}
2023-07-01 00:01:53.880 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 00:01:57.809 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 00:05:14.608 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
2. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 00:05:15.433 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
3. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 00:05:15.440 INFO  [http-nio-10010-exec-10] [com.pjy.dashboard.dao.DynamicSqlDao] - merge sql : MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , :acc_date , :route_nm , :emp_nm , :acc_time , :car_no , :acc_gb , :gapi_gb , :acc_kind , :jacha_rate , :sangdae_rate , :proc_result , :proc_memo , :acc_place , :daein_in_amt , :daemul_in_amt , :in_tot_amt , :daein_out_amt , :daemul_out_amt , :jacha_amt , :out_tot_amt , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
2023-07-01 00:05:15.447 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
4. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 00:05:15.455 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeBatch(ProxyStatement.java:128)
4. batching 1 statements:
1:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-02-02' , '27번' , '전정훈' , '07:11:00' , '7125' , '자차' , '피해' , '측면충돌' , '0' , '100.0' , '종결' , '수리비' , '신선초교' , '0' , '400000' , '400000' , '0' , '0' , '0' , '0' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
 {executed in 4 msec}
2023-07-01 00:19:26.733 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 00:19:26.733 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 00:19:26.733 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 00:19:26.734 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
4. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 00:19:26.738 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
4. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 00:19:26.742 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
4. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 00:19:28.716 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
4. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 00:19:29.506 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
5. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 00:19:29.513 INFO  [http-nio-10010-exec-7] [com.pjy.dashboard.dao.DynamicSqlDao] - merge sql : MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , :acc_date , :route_nm , :emp_nm , :acc_time , :car_no , :acc_gb , :gapi_gb , :acc_kind , :jacha_rate , :sangdae_rate , :proc_result , :proc_memo , :acc_place , :daein_in_amt , :daemul_in_amt , :in_tot_amt , :daein_out_amt , :daemul_out_amt , :jacha_amt , :out_tot_amt , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
2023-07-01 00:19:29.514 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
6. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 00:19:29.516 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeBatch(ProxyStatement.java:128)
6. batching 1 statements:
1:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-01-18' , '38번' , '고상욱' , '13:59:00' , '3552' , '자차' , '피해' , '측면충돌' , '10(무과실주장)' , '90.0' , '종결' , '삼성접수' , '하늘마을앞' , '0' , '500000' , '500000' , '0' , '0' , '0' , '0' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
 {executed in 1 msec}
2023-07-01 00:21:31.301 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
6. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 00:21:32.123 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
11. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 00:21:32.129 INFO  [http-nio-10010-exec-7] [com.pjy.dashboard.dao.DynamicSqlDao] - merge sql : MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , :acc_date , :route_nm , :emp_nm , :acc_time , :car_no , :acc_gb , :gapi_gb , :acc_kind , :jacha_rate , :sangdae_rate , :proc_result , :proc_memo , :acc_place , :daein_in_amt , :daemul_in_amt , :in_tot_amt , :daein_out_amt , :daemul_out_amt , :jacha_amt , :out_tot_amt , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
2023-07-01 00:21:32.130 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
12. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 00:21:32.132 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeBatch(ProxyStatement.java:128)
12. batching 1 statements:
1:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-02-06' , '38번' , '최병국' , '09:46:00' , '3576' , '자차' , '피해' , '측면충돌' , '20' , '80.0' , '종결' , 'KB접수' , '새안의원' , '0' , '900000' , '900000' , '0' , '0' , '0' , '0' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
 {executed in 1 msec}
2023-07-01 00:22:58.089 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 00:22:58.089 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 00:22:58.089 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 00:22:58.090 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
12. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 00:22:58.094 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
12. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 4 msec}
2023-07-01 00:22:58.098 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
12. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 00:22:59.701 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
12. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 00:23:00.432 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
13. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 00:23:00.439 INFO  [http-nio-10010-exec-4] [com.pjy.dashboard.dao.DynamicSqlDao] - merge sql : MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , :acc_date , :route_nm , :emp_nm , :acc_time , :car_no , :acc_gb , :gapi_gb , :acc_kind , :jacha_rate , :sangdae_rate , :proc_result , :proc_memo , :acc_place , :daein_in_amt , :daemul_in_amt , :in_tot_amt , :daein_out_amt , :daemul_out_amt , :jacha_amt , :out_tot_amt , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
2023-07-01 00:23:00.440 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
14. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 00:23:00.442 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeBatch(ProxyStatement.java:128)
14. batching 1 statements:
1:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-01-19' , '21번' , '이용진' , '06:57:00' , '3623' , '자차' , '피해' , '측면충돌' , '0' , '100.0' , '종결' , '현대접수' , '매소홀터널' , '0' , '217040' , '217040' , '0' , '0' , '0' , '0' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
 {executed in 0 msec}
2023-07-01 00:23:35.921 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 00:23:35.921 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 00:23:35.922 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 00:23:35.922 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
14. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 00:23:35.926 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
14. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 00:23:35.937 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
14. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 00:23:37.139 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
14. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 00:23:38.019 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
15. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 00:23:38.024 INFO  [http-nio-10010-exec-10] [com.pjy.dashboard.dao.DynamicSqlDao] - merge sql : MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , :acc_date , :route_nm , :emp_nm , :acc_time , :car_no , :acc_gb , :gapi_gb , :acc_kind , :jacha_rate , :sangdae_rate , :proc_result , :proc_memo , :acc_place , :daein_in_amt , :daemul_in_amt , :in_tot_amt , :daein_out_amt , :daemul_out_amt , :jacha_amt , :out_tot_amt , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
2023-07-01 00:23:38.025 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
16. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 00:23:38.027 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeBatch(ProxyStatement.java:128)
16. batching 1 statements:
1:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-01-26' , '5--번' , '신경식' , '16:27:00' , '3646' , '자차' , '피해' , '측면충돌' , '0' , '100.0' , '종결' , '미추홀서경찰관/각자수리' , '굴다리' , '0' , '0' , '0' , '0' , '0' , '0' , '0' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
 {executed in 0 msec}
2023-07-01 00:27:21.499 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 00:27:21.499 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 00:27:21.499 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 00:27:21.500 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
16. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 00:27:21.503 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
16. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 3 msec}
2023-07-01 00:27:21.507 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
16. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 00:27:23.422 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
16. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 00:27:24.854 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
17. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 00:27:24.859 INFO  [http-nio-10010-exec-7] [com.pjy.dashboard.dao.DynamicSqlDao] - merge sql : MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , :acc_date , :route_nm , :emp_nm , :acc_time , :car_no , :acc_gb , :gapi_gb , :acc_kind , :jacha_rate , :sangdae_rate , :proc_result , :proc_memo , :acc_place , :daein_in_amt , :daemul_in_amt , :in_tot_amt , :daein_out_amt , :daemul_out_amt , :jacha_amt , :out_tot_amt , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
2023-07-01 00:27:24.861 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
18. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 00:27:24.862 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeBatch(ProxyStatement.java:128)
18. batching 1 statements:
1:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-01-18' , '38번' , '고상욱' , '13:59:00' , '3552' , '자차' , '피해' , '측면충돌' , '10(무과실주장)' , '90.0' , '종결' , '삼성접수' , '하늘마을앞' , '0' , '500000' , '500000' , '0' , '0' , '0' , '0' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
 {executed in 0 msec}
2023-07-01 00:32:26.708 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 00:32:26.708 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 00:32:26.708 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 00:32:26.709 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
18. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 00:32:26.711 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
18. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 00:32:26.714 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
18. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 00:32:28.399 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
18. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 00:32:29.472 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
19. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 00:32:29.478 INFO  [http-nio-10010-exec-6] [com.pjy.dashboard.dao.DynamicSqlDao] - merge sql : MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , :acc_date , :route_nm , :emp_nm , :acc_time , :car_no , :acc_gb , :gapi_gb , :acc_kind , :jacha_rate , :sangdae_rate , :proc_result , :proc_memo , :acc_place , :daein_in_amt , :daemul_in_amt , :in_tot_amt , :daein_out_amt , :daemul_out_amt , :jacha_amt , :out_tot_amt , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
2023-07-01 00:32:29.479 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
20. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 00:32:29.480 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeBatch(ProxyStatement.java:128)
20. batching 1 statements:
1:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-01-06' , '5-1번' , '이택선' , '18:28:00' , '3643' , '자차' , '피해' , '측면충돌' , '0' , '100.0' , '종결' , '전세버스' , '주안역' , '0' , '86820' , '86820' , '0' , '0' , '0' , '0' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
 {executed in 1 msec}
2023-07-01 00:32:52.269 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
20. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 00:32:53.206 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
21. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 00:32:53.212 INFO  [http-nio-10010-exec-10] [com.pjy.dashboard.dao.DynamicSqlDao] - merge sql : MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , :acc_date , :route_nm , :emp_nm , :acc_time , :car_no , :acc_gb , :gapi_gb , :acc_kind , :jacha_rate , :sangdae_rate , :proc_result , :proc_memo , :acc_place , :daein_in_amt , :daemul_in_amt , :in_tot_amt , :daein_out_amt , :daemul_out_amt , :jacha_amt , :out_tot_amt , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
2023-07-01 00:32:53.213 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
22. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 00:32:53.214 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeBatch(ProxyStatement.java:128)
22. batching 1 statements:
1:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-02-06' , '27번' , '권병묵' , '18:15:00' , '3638' , '자차' , '피해' , '추돌' , '0' , '100.0' , '종결' , 'DB접수' , '논현사거리' , '0' , '398520' , '398520' , '0' , '0' , '0' , '0' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
 {executed in 1 msec}
2023-07-01 00:33:22.739 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 00:33:22.739 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 00:33:22.739 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 00:33:22.740 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
22. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 00:33:22.743 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
22. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 00:33:22.745 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
22. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 00:33:23.933 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
22. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 00:33:26.630 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
23. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 00:33:26.636 INFO  [http-nio-10010-exec-3] [com.pjy.dashboard.dao.DynamicSqlDao] - merge sql : MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , :acc_date , :route_nm , :emp_nm , :acc_time , :car_no , :acc_gb , :gapi_gb , :acc_kind , :jacha_rate , :sangdae_rate , :proc_result , :proc_memo , :acc_place , :daein_in_amt , :daemul_in_amt , :in_tot_amt , :daein_out_amt , :daemul_out_amt , :jacha_amt , :out_tot_amt , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
2023-07-01 00:33:26.638 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
24. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 00:33:26.639 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeBatch(ProxyStatement.java:128)
24. batching 1 statements:
1:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-01-19' , '21번' , '이용진' , '06:57:00' , '3623' , '자차' , '피해' , '측면충돌' , '0' , '100.0' , '종결' , '현대접수' , '매소홀터널' , '0' , '217040' , '217040' , '0' , '0' , '0' , '0' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
 {executed in 1 msec}
2023-07-01 00:33:42.199 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
24. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 00:33:42.645 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 00:33:42.645 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 00:33:42.645 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 00:33:42.646 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
25. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 00:33:42.649 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
25. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 3 msec}
2023-07-01 00:33:42.653 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
25. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 00:33:44.172 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
25. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 00:33:45.117 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
26. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 00:33:45.123 INFO  [http-nio-10010-exec-2] [com.pjy.dashboard.dao.DynamicSqlDao] - merge sql : MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , :acc_date , :route_nm , :emp_nm , :acc_time , :car_no , :acc_gb , :gapi_gb , :acc_kind , :jacha_rate , :sangdae_rate , :proc_result , :proc_memo , :acc_place , :daein_in_amt , :daemul_in_amt , :in_tot_amt , :daein_out_amt , :daemul_out_amt , :jacha_amt , :out_tot_amt , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
2023-07-01 00:33:45.125 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
27. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 00:33:45.126 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeBatch(ProxyStatement.java:128)
27. batching 1 statements:
1:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-01-27' , '5-1번' , '남기선' , '20:25:00' , '3645' , '자차' , '피해' , '추돌' , '444' , '100.0' , '종결' , '수리비' , '대림아파트' , '0' , '400000' , '400000' , '0' , '0' , '0' , '0' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
 {executed in 0 msec}
2023-07-01 00:33:56.917 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 00:33:56.917 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 00:33:56.917 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 00:33:56.918 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
27. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 00:33:56.921 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
27. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 3 msec}
2023-07-01 00:33:56.924 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
27. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 1 msec}
2023-07-01 00:33:58.137 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
27. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 00:33:58.987 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
28. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 00:33:58.994 INFO  [http-nio-10010-exec-10] [com.pjy.dashboard.dao.DynamicSqlDao] - merge sql : MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , :acc_date , :route_nm , :emp_nm , :acc_time , :car_no , :acc_gb , :gapi_gb , :acc_kind , :jacha_rate , :sangdae_rate , :proc_result , :proc_memo , :acc_place , :daein_in_amt , :daemul_in_amt , :in_tot_amt , :daein_out_amt , :daemul_out_amt , :jacha_amt , :out_tot_amt , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
2023-07-01 00:33:58.995 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
29. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 00:33:58.996 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeBatch(ProxyStatement.java:128)
29. batching 1 statements:
1:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-01-27' , '5-1번' , '남기선' , '20:25:00' , '3645' , '자차' , '피해' , '추돌' , '444' , '100.0' , '종결' , '수리비' , '대림아파트' , '0' , '400000' , '400000' , '0' , '0' , '0' , '0' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
 {executed in 0 msec}
2023-07-01 00:34:19.256 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 00:34:19.257 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 00:34:19.257 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 00:34:19.258 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
29. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 00:34:19.261 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
29. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 00:34:19.265 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
29. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 00:34:20.801 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
29. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 00:34:22.037 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
30. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 00:34:22.042 INFO  [http-nio-10010-exec-2] [com.pjy.dashboard.dao.DynamicSqlDao] - merge sql : MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , :acc_date , :route_nm , :emp_nm , :acc_time , :car_no , :acc_gb , :gapi_gb , :acc_kind , :jacha_rate , :sangdae_rate , :proc_result , :proc_memo , :acc_place , :daein_in_amt , :daemul_in_amt , :in_tot_amt , :daein_out_amt , :daemul_out_amt , :jacha_amt , :out_tot_amt , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
2023-07-01 00:34:22.043 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 00:34:22.044 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeBatch(ProxyStatement.java:128)
31. batching 1 statements:
1:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-01-19' , '21번' , '이용진' , '06:57:00' , '3623' , '자차' , '피해' , '측면충돌' , '0' , '100.0' , '종결' , '현대접수' , '매소홀터널' , '0' , '217040' , '217040' , '0' , '0' , '0' , '0' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
 {executed in 1 msec}
2023-07-01 00:36:46.032 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 00:36:46.032 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 00:36:46.032 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 00:36:46.033 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 00:36:46.036 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
31. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 3 msec}
2023-07-01 00:36:46.039 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
31. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 00:36:47.382 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 00:36:48.555 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
32. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 00:36:48.561 INFO  [http-nio-10010-exec-8] [com.pjy.dashboard.dao.DynamicSqlDao] - merge sql : MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , :acc_date , :route_nm , :emp_nm , :acc_time , :car_no , :acc_gb , :gapi_gb , :acc_kind , :jacha_rate , :sangdae_rate , :proc_result , :proc_memo , :acc_place , :daein_in_amt , :daemul_in_amt , :in_tot_amt , :daein_out_amt , :daemul_out_amt , :jacha_amt , :out_tot_amt , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
2023-07-01 00:36:48.563 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
33. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 00:36:48.565 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeBatch(ProxyStatement.java:128)
33. batching 1 statements:
1:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-01-24' , '20번' , '서수찬' , '09:54:00' , '3506' , '대물,자차' , '가해' , '시설물' , '100.0' , '0' , '종결' , '공제접수' , '선수촌5단지' , '0' , '0' , '0' , '0' , '4892800' , '4609000' , '9501800' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
 {executed in 1 msec}
2023-07-01 00:37:59.926 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 00:37:59.926 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 00:37:59.926 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 00:37:59.927 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
33. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 00:37:59.929 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
33. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 00:37:59.932 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
33. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 1 msec}
2023-07-01 00:38:01.528 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
33. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 00:38:02.579 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
34. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 00:38:02.585 INFO  [http-nio-10010-exec-3] [com.pjy.dashboard.dao.DynamicSqlDao] - merge sql : MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , :acc_date , :route_nm , :emp_nm , :acc_time , :car_no , :acc_gb , :gapi_gb , :acc_kind , :jacha_rate , :sangdae_rate , :proc_result , :proc_memo , :acc_place , :daein_in_amt , :daemul_in_amt , :in_tot_amt , :daein_out_amt , :daemul_out_amt , :jacha_amt , :out_tot_amt , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
2023-07-01 00:38:02.586 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
35. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 00:38:02.588 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeBatch(ProxyStatement.java:128)
35. batching 1 statements:
1:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-01-24' , '20번' , '서수찬' , '09:54:00' , '3506' , '대물,자차' , '가해' , '시설물' , '100.0' , '0' , '종결' , '공제접수' , '선수촌5단지' , '0' , '0' , '0' , '0' , '4892800' , '4609000' , '9501800' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
 {executed in 0 msec}
2023-07-01 00:38:42.353 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
35. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 00:38:44.743 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 00:38:44.744 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 00:38:44.744 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 00:38:44.745 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
36. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 00:38:44.747 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
36. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 1 msec}
2023-07-01 00:38:44.749 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
36. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 00:38:45.937 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
36. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 00:38:47.281 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
37. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 00:38:47.288 INFO  [http-nio-10010-exec-2] [com.pjy.dashboard.dao.DynamicSqlDao] - merge sql : MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , :acc_date , :route_nm , :emp_nm , :acc_time , :car_no , :acc_gb , :gapi_gb , :acc_kind , :jacha_rate , :sangdae_rate , :proc_result , :proc_memo , :acc_place , :daein_in_amt , :daemul_in_amt , :in_tot_amt , :daein_out_amt , :daemul_out_amt , :jacha_amt , :out_tot_amt , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
2023-07-01 00:38:47.289 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
38. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 00:38:47.291 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeBatch(ProxyStatement.java:128)
38. batching 1 statements:
1:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-01-24' , '20번' , '서수찬' , '09:54:00' , '3506' , '대물,자차' , '가해' , '시설물' , '100.0' , '0' , '종결' , '공제접수' , '선수촌5단지' , '0' , '0' , '0' , '0' , '4892800' , '4609000' , '9501800' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
 {executed in 0 msec}
2023-07-01 00:39:02.312 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 00:39:02.312 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 00:39:02.312 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 00:39:02.313 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
38. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 00:39:02.316 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
38. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 00:39:02.319 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
38. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 1 msec}
2023-07-01 00:39:03.434 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
38. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 00:39:04.269 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
39. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 00:39:04.275 INFO  [http-nio-10010-exec-8] [com.pjy.dashboard.dao.DynamicSqlDao] - merge sql : MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , :acc_date , :route_nm , :emp_nm , :acc_time , :car_no , :acc_gb , :gapi_gb , :acc_kind , :jacha_rate , :sangdae_rate , :proc_result , :proc_memo , :acc_place , :daein_in_amt , :daemul_in_amt , :in_tot_amt , :daein_out_amt , :daemul_out_amt , :jacha_amt , :out_tot_amt , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
2023-07-01 00:39:04.276 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
40. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 00:39:04.277 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeBatch(ProxyStatement.java:128)
40. batching 1 statements:
1:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-01-24' , '20번' , '서수찬' , '09:54:00' , '3506' , '대물,자차' , '가해' , '시설물' , '100.0' , '0' , '종결' , '공제접수' , '선수촌5단지' , '0' , '0' , '0' , '0' , '4892800' , '4609000' , '9501800' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
 {executed in 1 msec}
2023-07-01 00:40:07.175 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 00:40:07.175 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 00:40:07.175 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 00:40:07.176 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
40. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 00:40:07.179 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
40. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 00:40:07.182 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
40. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 00:40:08.610 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
40. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 00:40:16.487 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
41. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 00:40:16.495 INFO  [http-nio-10010-exec-9] [com.pjy.dashboard.dao.DynamicSqlDao] - merge sql : MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , :acc_date , :route_nm , :emp_nm , :acc_time , :car_no , :acc_gb , :gapi_gb , :acc_kind , :jacha_rate , :sangdae_rate , :proc_result , :proc_memo , :acc_place , :daein_in_amt , :daemul_in_amt , :in_tot_amt , :daein_out_amt , :daemul_out_amt , :jacha_amt , :out_tot_amt , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
2023-07-01 00:40:16.496 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
42. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 00:40:16.497 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeBatch(ProxyStatement.java:128)
42. batching 1 statements:
1:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-01-26' , '5--번' , '신경식' , '16:27:00' , '3646' , '자차' , '피해' , '측면충돌' , '4444' , '100.0' , '종결' , '미추홀서경찰관/각자수리' , '굴다리' , '0' , '0' , '0' , '0' , '0' , '0' , '0' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
 {executed in 0 msec}
2023-07-01 00:40:44.670 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 00:40:44.670 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 00:40:44.670 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 00:40:44.671 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
42. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 00:40:44.673 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
42. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 00:40:44.675 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
42. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 1 msec}
2023-07-01 00:40:45.878 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
42. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 00:40:50.851 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
43. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 00:40:50.900 INFO  [http-nio-10010-exec-7] [com.pjy.dashboard.dao.DynamicSqlDao] - merge sql : MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , :acc_date , :route_nm , :emp_nm , :acc_time , :car_no , :acc_gb , :gapi_gb , :acc_kind , :jacha_rate , :sangdae_rate , :proc_result , :proc_memo , :acc_place , :daein_in_amt , :daemul_in_amt , :in_tot_amt , :daein_out_amt , :daemul_out_amt , :jacha_amt , :out_tot_amt , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
2023-07-01 00:40:50.901 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
44. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 00:40:50.901 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeBatch(ProxyStatement.java:128)
44. batching 1 statements:
1:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-01-27' , '5-1번' , '남기선' , '20:25:00' , '3645' , '자차' , '피해' , '추돌' , '222' , '100.0' , '종결' , '수리비' , '대림아파트' , '0' , '400000' , '400000' , '0' , '0' , '0' , '0' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
 {executed in 0 msec}
2023-07-01 00:41:43.250 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
44. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 00:41:50.782 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
45. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 00:41:50.790 INFO  [http-nio-10010-exec-4] [com.pjy.dashboard.dao.DynamicSqlDao] - merge sql : MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , :acc_date , :route_nm , :emp_nm , :acc_time , :car_no , :acc_gb , :gapi_gb , :acc_kind , :jacha_rate , :sangdae_rate , :proc_result , :proc_memo , :acc_place , :daein_in_amt , :daemul_in_amt , :in_tot_amt , :daein_out_amt , :daemul_out_amt , :jacha_amt , :out_tot_amt , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
2023-07-01 00:41:50.791 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
46. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 00:41:50.793 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeBatch(ProxyStatement.java:128)
46. batching 1 statements:
1:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-01-27' , '5-1번' , '남기선' , '20:25:00' , '3645' , '자차wn' , '피해' , '추돌' , '222' , '100.0' , '종결' , '수리비' , '대림아파트' , '0' , '400000' , '400000' , '0' , '0' , '0' , '0' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
 {executed in 1 msec}
2023-07-01 00:42:08.509 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
46. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 00:42:08.516 INFO  [http-nio-10010-exec-5] [com.pjy.dashboard.dao.DynamicSqlDao] - merge sql : MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , :acc_date , :route_nm , :emp_nm , :acc_time , :car_no , :acc_gb , :gapi_gb , :acc_kind , :jacha_rate , :sangdae_rate , :proc_result , :proc_memo , :acc_place , :daein_in_amt , :daemul_in_amt , :in_tot_amt , :daein_out_amt , :daemul_out_amt , :jacha_amt , :out_tot_amt , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
2023-07-01 00:42:08.517 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
47. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 00:42:08.518 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeBatch(ProxyStatement.java:128)
47. batching 1 statements:
1:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-01-27' , '5-1번' , '남기선' , '20:25:00' , '3645' , '자차wn' , '피해' , '추돌' , '222' , '100.0' , '종결' , '수리비' , '대림아파트' , '0' , '400000' , '400000' , '0' , '0' , '0' , '0' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
 {executed in 0 msec}
2023-07-01 00:42:08.547 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 00:42:08.547 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 00:42:08.547 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 00:42:08.551 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
47. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 3 msec}
2023-07-01 00:42:08.554 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
47. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 3 msec}
2023-07-01 00:43:14.638 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
47. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 00:45:39.436 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
48. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 00:45:39.864 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 00:45:39.864 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 00:45:39.864 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 00:45:39.865 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
49. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 00:45:39.868 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
49. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 3 msec}
2023-07-01 00:45:39.871 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
49. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 00:45:41.704 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
49. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 00:45:47.543 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
50. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 00:46:40.516 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
51. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 00:46:43.300 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
52. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 00:46:43.650 INFO  [Catalina-utility-1] [c.pjy.dashboard.listener.SessionListener] - updateUserCloseTime p00139 
2023-07-01 00:46:43.651 INFO  [Catalina-utility-1] [c.pjy.dashboard.listener.SessionListener] - currentSessionUserList ->  true
2023-07-01 00:46:43.651 INFO  [Catalina-utility-1] [c.pjy.dashboard.listener.SessionListener] - currentSessionUserList -> userId p00139 
2023-07-01 00:46:43.651 INFO  [Catalina-utility-1] [c.pjy.dashboard.listener.SessionListener] - updateUserCloseTime p00139 
2023-07-01 00:46:43.651 INFO  [Catalina-utility-1] [c.pjy.dashboard.listener.SessionListener] - currentSessionUserList ->  true
2023-07-01 00:46:43.651 INFO  [Catalina-utility-1] [c.pjy.dashboard.listener.SessionListener] - currentSessionUserList -> userId p00139 
2023-07-01 00:46:52.454 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
53. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 00:47:02.557 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 00:47:02.557 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 00:47:02.558 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 00:47:02.558 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
54. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 00:47:02.561 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
54. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 00:47:02.564 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
54. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 00:47:04.176 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
54. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 00:47:07.762 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
55. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 00:47:38.765 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
56. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 00:47:46.190 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
57. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 00:47:55.458 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
58. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 00:48:27.812 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 00:48:27.812 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 00:48:27.812 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 00:48:27.813 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
59. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 00:48:27.816 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
59. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 00:48:27.819 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
59. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 00:48:31.631 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
59. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 00:48:43.698 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
60. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 00:48:54.482 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 00:48:54.482 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 00:48:54.482 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 00:48:54.483 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
61. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 00:48:54.485 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
61. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 00:48:54.488 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
61. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 00:49:06.864 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
61. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 00:49:37.898 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 00:49:37.898 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 00:49:37.898 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 00:49:37.900 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
62. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 00:49:37.903 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
62. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 3 msec}
2023-07-01 00:49:37.905 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
62. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 1 msec}
2023-07-01 00:49:41.816 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
62. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 00:52:14.789 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 00:52:14.790 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 00:52:14.790 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 00:52:14.791 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
63. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 00:52:14.793 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
63. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 1 msec}
2023-07-01 00:52:14.796 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
63. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 1 msec}
2023-07-01 00:52:17.245 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
63. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 00:52:32.601 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 00:52:32.601 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 00:52:32.601 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 00:52:32.602 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
64. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 00:52:32.604 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
64. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 00:52:32.606 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
64. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 1 msec}
2023-07-01 00:52:35.549 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
64. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 00:52:49.671 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 00:52:49.671 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 00:52:49.671 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 00:52:49.672 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
65. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 00:52:49.675 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
65. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 00:52:49.677 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
65. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 00:53:07.247 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
65. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 00:54:37.838 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 00:54:37.838 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 00:54:37.838 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 00:54:37.839 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
66. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 00:54:37.842 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
66. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 3 msec}
2023-07-01 00:54:37.844 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
66. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 00:54:40.576 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
66. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 00:55:47.369 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 00:55:47.369 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 00:55:47.369 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 00:55:47.370 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
67. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 00:55:47.372 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
67. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 00:55:47.375 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
67. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 00:55:49.097 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
67. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 00:55:56.862 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
68. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 00:56:03.546 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
69. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 00:56:23.251 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
70. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 00:56:27.608 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 00:56:27.608 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 00:56:27.608 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 00:56:27.609 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 00:56:27.612 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 00:56:27.615 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 1 msec}
2023-07-01 00:56:29.172 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 00:57:52.002 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
72. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 00:57:57.745 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
73. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 00:58:03.079 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
74. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 00:58:08.638 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
75. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 03:58:42.607 INFO  [Catalina-utility-2] [c.pjy.dashboard.listener.SessionListener] - updateUserCloseTime p00139 
2023-07-01 03:58:42.607 INFO  [Catalina-utility-2] [c.pjy.dashboard.listener.SessionListener] - currentSessionUserList ->  false
2023-07-01 03:58:42.609 INFO  [Catalina-utility-2] [c.pjy.dashboard.listener.SessionListener] - updateUserCloseTime p00139 
2023-07-01 03:58:42.609 INFO  [Catalina-utility-2] [c.pjy.dashboard.listener.SessionListener] - currentSessionUserList ->  false
2023-07-01 03:58:46.906 WARN  [H2 housekeeper] [com.zaxxer.hikari.pool.HikariPool] - H2 - Thread starvation or clock leap detected (housekeeper delta=3h5s224ms392µs900ns).
2023-07-01 08:29:51.354 WARN  [H2 housekeeper] [com.zaxxer.hikari.pool.HikariPool] - H2 - Thread starvation or clock leap detected (housekeeper delta=4h31m12s573ms593µs500ns).
2023-07-01 08:30:03.190 INFO  [http-nio-10010-exec-8] [c.p.d.interceptor.LoggerInterceptor] - ============================== START ==============================
2023-07-01 08:30:03.190 INFO  [http-nio-10010-exec-8] [c.p.d.interceptor.LoggerInterceptor] -  Class       	:  class org.springframework.web.method.HandlerMethod
2023-07-01 08:30:03.190 INFO  [http-nio-10010-exec-8] [c.p.d.interceptor.LoggerInterceptor] -  Request URI 	:  /
2023-07-01 08:30:03.190 INFO  [http-nio-10010-exec-8] [c.p.d.interceptor.LoggerInterceptor] -  Request addr	:  0:0:0:0:0:0:0:1
2023-07-01 08:30:03.190 INFO  [http-nio-10010-exec-8] [c.p.d.interceptor.LoggerInterceptor] -  Servlet URI 	:  /
2023-07-01 08:30:03.206 ERROR [http-nio-10010-exec-8] [o.a.c.c.C.[Tomcat].[localhost].[/].[jsp]] - Servlet.service() for servlet [jsp] threw exception
java.lang.IllegalStateException: Cannot create a session after the response has been committed
	at org.apache.catalina.connector.Request.doGetSession(Request.java:2993)
	at org.apache.catalina.connector.Request.getSession(Request.java:2432)
	at org.apache.catalina.connector.RequestFacade.getSession(RequestFacade.java:908)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:244)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:582)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:527)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at org.apache.jasper.runtime.PageContextImpl.initialize(PageContextImpl.java:133)
	at org.apache.jasper.runtime.JspFactoryImpl.internalGetPageContext(JspFactoryImpl.java:109)
	at org.apache.jasper.runtime.JspFactoryImpl.getPageContext(JspFactoryImpl.java:60)
	at org.apache.jsp.WEB_002dINF.jsp.home_jsp._jspService(home_jsp.java:121)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:477)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:385)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:329)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:580)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:516)
	at org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequestDispatcher.include(HeaderWriterFilter.java:149)
	at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:163)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:317)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1372)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:97)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at jdk.internal.reflect.GeneratedMethodAccessor149.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$9a59d126.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:114)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:104)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-07-01 08:30:03.211 ERROR [http-nio-10010-exec-8] [o.a.c.c.C.[.[.[/].[dispatcherServlet]] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [javax.servlet.ServletException: java.lang.IllegalStateException: Cannot create a session after the response has been committed] with root cause
java.lang.IllegalStateException: Cannot create a session after the response has been committed
	at org.apache.catalina.connector.Request.doGetSession(Request.java:2993)
	at org.apache.catalina.connector.Request.getSession(Request.java:2432)
	at org.apache.catalina.connector.RequestFacade.getSession(RequestFacade.java:908)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:244)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:582)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:527)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at org.apache.jasper.runtime.PageContextImpl.initialize(PageContextImpl.java:133)
	at org.apache.jasper.runtime.JspFactoryImpl.internalGetPageContext(JspFactoryImpl.java:109)
	at org.apache.jasper.runtime.JspFactoryImpl.getPageContext(JspFactoryImpl.java:60)
	at org.apache.jsp.WEB_002dINF.jsp.home_jsp._jspService(home_jsp.java:121)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:477)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:385)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:329)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:580)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:516)
	at org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequestDispatcher.include(HeaderWriterFilter.java:149)
	at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:163)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:317)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1372)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:97)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at jdk.internal.reflect.GeneratedMethodAccessor149.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$9a59d126.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:114)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:104)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-07-01 08:30:03.213 INFO  [http-nio-10010-exec-8] [c.p.d.interceptor.LoggerInterceptor] - ============================== START ==============================
2023-07-01 08:30:03.213 INFO  [http-nio-10010-exec-8] [c.p.d.interceptor.LoggerInterceptor] -  Class       	:  class org.springframework.web.method.HandlerMethod
2023-07-01 08:30:03.213 INFO  [http-nio-10010-exec-8] [c.p.d.interceptor.LoggerInterceptor] -  Request URI 	:  /error
2023-07-01 08:30:03.213 INFO  [http-nio-10010-exec-8] [c.p.d.interceptor.LoggerInterceptor] -  Request addr	:  0:0:0:0:0:0:0:1
2023-07-01 08:30:03.214 INFO  [http-nio-10010-exec-8] [c.p.d.interceptor.LoggerInterceptor] -  Servlet URI 	:  /error
2023-07-01 08:30:03.648 ERROR [http-nio-10010-exec-8] [o.a.c.c.C.[Tomcat].[localhost].[/].[jsp]] - Servlet.service() for servlet [jsp] threw exception
java.lang.IllegalStateException: Cannot create a session after the response has been committed
	at org.apache.catalina.connector.Request.doGetSession(Request.java:2993)
	at org.apache.catalina.connector.Request.getSession(Request.java:2432)
	at org.apache.catalina.connector.RequestFacade.getSession(RequestFacade.java:908)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:244)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:582)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:244)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:582)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:527)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at org.apache.jasper.runtime.PageContextImpl.initialize(PageContextImpl.java:133)
	at org.apache.jasper.runtime.JspFactoryImpl.internalGetPageContext(JspFactoryImpl.java:109)
	at org.apache.jasper.runtime.JspFactoryImpl.getPageContext(JspFactoryImpl.java:60)
	at org.apache.jsp.WEB_002dINF.jsp.error_jsp._jspService(error_jsp.java:107)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:477)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:385)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:329)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:580)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:516)
	at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:163)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:317)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1372)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at jdk.internal.reflect.GeneratedMethodAccessor149.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$9a59d126.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-07-01 08:30:03.649 ERROR [http-nio-10010-exec-8] [o.a.c.c.C.[.[.[/].[dispatcherServlet]] - Servlet.service() for servlet [dispatcherServlet] threw exception
java.lang.IllegalStateException: Cannot create a session after the response has been committed
	at org.apache.catalina.connector.Request.doGetSession(Request.java:2993)
	at org.apache.catalina.connector.Request.getSession(Request.java:2432)
	at org.apache.catalina.connector.RequestFacade.getSession(RequestFacade.java:908)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:244)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:582)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:244)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:582)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:527)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at org.apache.jasper.runtime.PageContextImpl.initialize(PageContextImpl.java:133)
	at org.apache.jasper.runtime.JspFactoryImpl.internalGetPageContext(JspFactoryImpl.java:109)
	at org.apache.jasper.runtime.JspFactoryImpl.getPageContext(JspFactoryImpl.java:60)
	at org.apache.jsp.WEB_002dINF.jsp.error_jsp._jspService(error_jsp.java:107)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:477)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:385)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:329)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:580)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:516)
	at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:163)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:317)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1372)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at jdk.internal.reflect.GeneratedMethodAccessor149.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$9a59d126.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-07-01 08:30:03.650 ERROR [http-nio-10010-exec-8] [o.a.c.c.C.[Tomcat].[localhost]] - Exception Processing ErrorPage[errorCode=0, location=/error]
org.apache.jasper.JasperException: javax.servlet.ServletException: java.lang.IllegalStateException: Cannot create a session after the response has been committed
	at org.apache.jasper.servlet.JspServletWrapper.handleJspException(JspServletWrapper.java:639)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:500)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:385)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:329)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:580)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:516)
	at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:163)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:317)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1372)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at jdk.internal.reflect.GeneratedMethodAccessor149.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$9a59d126.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: javax.servlet.ServletException: java.lang.IllegalStateException: Cannot create a session after the response has been committed
	at org.apache.jsp.WEB_002dINF.jsp.error_jsp._jspService(error_jsp.java:144)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:477)
	... 97 common frames omitted
Caused by: java.lang.IllegalStateException: Cannot create a session after the response has been committed
	at org.apache.catalina.connector.Request.doGetSession(Request.java:2993)
	at org.apache.catalina.connector.Request.getSession(Request.java:2432)
	at org.apache.catalina.connector.RequestFacade.getSession(RequestFacade.java:908)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:244)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:582)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:244)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:582)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:527)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at org.apache.jasper.runtime.PageContextImpl.initialize(PageContextImpl.java:133)
	at org.apache.jasper.runtime.JspFactoryImpl.internalGetPageContext(JspFactoryImpl.java:109)
	at org.apache.jasper.runtime.JspFactoryImpl.getPageContext(JspFactoryImpl.java:60)
	at org.apache.jsp.WEB_002dINF.jsp.error_jsp._jspService(error_jsp.java:107)
	... 100 common frames omitted
2023-07-01 08:30:03.679 INFO  [http-nio-10010-exec-6] [c.p.d.interceptor.LoggerInterceptor] - ============================== START ==============================
2023-07-01 08:30:03.680 INFO  [http-nio-10010-exec-6] [c.p.d.interceptor.LoggerInterceptor] -  Class       	:  class org.springframework.web.method.HandlerMethod
2023-07-01 08:30:03.680 INFO  [http-nio-10010-exec-6] [c.p.d.interceptor.LoggerInterceptor] -  Request URI 	:  /error
2023-07-01 08:30:03.680 INFO  [http-nio-10010-exec-6] [c.p.d.interceptor.LoggerInterceptor] -  Request addr	:  0:0:0:0:0:0:0:1
2023-07-01 08:30:03.680 INFO  [http-nio-10010-exec-6] [c.p.d.interceptor.LoggerInterceptor] -  Servlet URI 	:  /error
2023-07-01 08:30:05.277 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
96. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 08:30:05.279 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
96. select * from MEMBER where userId = 'p00139'
 {executed in 0 msec}
2023-07-01 08:30:05.281 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.MemberServiceImpl] - ROLE_ADMIN
2023-07-01 08:30:05.377 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.MemberServiceImpl] - pass:$2a$10$MNrQAPw.4k9j2y08eTmYEeI7oKPuaWbA97HHog.8PYep5HsRwhbae,$2a$10$yrMVFvx0b6YkCYUBMKmsDOEIqViYzsM3tpBcBIyHfgCr/6uhcGtAy
2023-07-01 08:30:05.470 INFO  [http-nio-10010-exec-4] [c.p.d.configuration.SecurityConfig] - authentication:: p00139
2023-07-01 08:30:15.751 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 08:30:15.751 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 08:30:15.751 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 08:30:15.752 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
96. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 08:30:15.755 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
96. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 3 msec}
2023-07-01 08:30:15.759 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
96. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 08:30:26.307 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
96. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 08:35:49.269 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 08:35:49.269 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 08:35:49.269 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 08:35:49.270 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
97. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 08:35:49.273 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
97. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 08:35:49.277 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
97. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 08:35:53.126 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
97. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 08:36:08.305 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 08:36:08.305 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 08:36:08.305 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 08:36:08.306 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
98. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 08:36:08.309 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
98. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 08:36:08.312 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
98. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 08:36:38.999 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
98. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 08:37:15.239 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 08:37:15.239 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 08:37:15.239 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 08:37:15.240 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
99. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 08:37:15.242 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
99. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 08:37:15.246 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
99. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 08:37:17.700 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
99. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 08:37:23.535 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
100. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 08:37:27.230 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
101. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 08:38:02.049 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 08:38:02.049 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 08:38:02.049 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 08:38:02.050 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
102. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 08:38:02.052 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
102. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 08:38:02.055 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
102. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 08:38:03.926 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
102. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 08:38:25.435 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
103. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 08:38:40.789 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
104. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 08:38:57.773 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 08:38:57.773 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 08:38:57.773 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 08:38:57.777 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
105. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 4 msec}
2023-07-01 08:38:57.780 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
105. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 3 msec}
2023-07-01 08:38:57.783 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
105. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 08:38:59.501 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
105. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 08:39:54.350 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 08:39:54.350 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 08:39:54.350 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 08:39:54.351 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
106. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 08:39:54.354 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
106. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 3 msec}
2023-07-01 08:39:54.357 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
106. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 08:42:30.977 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 08:42:30.977 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 08:42:30.977 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 08:42:30.978 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
106. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 08:42:30.980 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
106. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 08:42:30.983 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
106. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 08:42:32.389 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
106. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 08:42:35.191 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
107. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 08:43:00.666 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
108. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 08:43:00.667 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
108. SELECT ROUTE_NM  FROM TBL_ROUTEINFO ORDER BY 1
 {executed in 0 msec}
2023-07-01 08:43:08.217 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - WITH carInfo AS ( SELECT '감차후 총 차량댓수' as CAR_REGNO,'' AS AMPM_GUBUN ,b.emp_nm,0 AS tot_work_date , b.D1    , b.D2    , b.D3    , b.D4    , b.D5    , b.D6    , b.D7    , b.D8    , b.D9    , b.D10 , b.D11    , b.D12    , b.D13    , b.D14    , b.D15    , b.D16    , b.D17    , b.D18    , b.D19    , b.D20 , b.D21    , b.D22    , b.D23    , b.D24    , b.D25    , b.D26    , b.D27    , b.D28    , b.D29    , b.D30 , b.D31 FROM 	TBL_MONTH_ARRANGE_BASIC b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-04' AND    b.DISPATCH_SEQ = 2  AND	b.CAR_REGNO  = '-' ), allocateInfo AS ( SELECT  decode(AMPM_GUBUN,'p','오전','오후') || ' 배정 건수' AS CAR_REGNO,ampm_gubun,'-' emp_nm,0 AS tot_work_date ,0 D1 ,0 D2 ,0 D3 ,0 D4 ,0 D5 ,0 D6 ,0 D7 ,0 D8 ,0 D9 ,0 D10 ,0 D11 ,0 D12 ,0 D13 ,0 D14 ,0 D15 ,0 D16 ,0 D17 ,0 D18 ,0 D19 ,0 D20 ,0 D21 ,0 D22 ,0 D23 ,0 D24 ,0 D25 ,0 D26 ,0 D27 ,0 D28 ,0 d29 ,0 d30 ,0 d31 FROM 	TBL_MONTH_ARRANGE_DETAIL b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-04' AND    b.DISPATCH_SEQ = 6  AND    b.PREV_DAILY_SEQ = 1 AND    b.AMPM_GUBUN IN ('a','p') ) SELECT * FROM carInfo union all SELECT '감차후 총 운행횟수' as CAR_REGNO,' ' AMPM_GUBUN ,b.emp_nm,0 AS tot_work_date , b.D1 *2   , b.D2 *2    , b.D3  *2   , b.D4 *2    , b.D5 *2    , b.D6 *2    , b.D7 *2    , b.D8 *2    , b.D9 *2    , b.D10 *2 , b.D11 *2    , b.D12 *2    , b.D13 *2    , b.D14 *2    , b.D15 *2    , b.D16 *2    , b.D17 *2    , b.D18 *2    , b.D19 *2    , b.D20 *2 , b.D21 *2    , b.D22 *2    , b.D23 *2    , b.D24 *2    , b.D25 *2    , b.D26 *2    , b.D27 *2    , b.D28 *2    , b.D29 *2    , b.D30 *2 , b.D31 *2 FROM 	carInfo b union all SELECT  * FROM 	allocateInfo b union all SELECT  decode(b.AMPM_GUBUN,'p','오전','오후') || ' 미배정 건수' AS CAR_REGNO,b.AMPM_GUBUN ,'-' emp_nm,0 AS tot_work_date ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  FROM 	allocateInfo b,carInfo a
2023-07-01 08:43:08.218 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
108. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 08:43:08.230 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
108. WITH carInfo AS ( SELECT '감차후 총 차량댓수' as CAR_REGNO,'' AS AMPM_GUBUN ,b.emp_nm,0 AS tot_work_date , b.D1    , b.D2    , b.D3    , b.D4    , b.D5    , b.D6    , b.D7    , b.D8    , b.D9    , b.D10 , b.D11    , b.D12    , b.D13    , b.D14    , b.D15    , b.D16    , b.D17    , b.D18    , b.D19    , b.D20 , b.D21    , b.D22    , b.D23    , b.D24    , b.D25    , b.D26    , b.D27    , b.D28    , b.D29    , b.D30 , b.D31 FROM 	TBL_MONTH_ARRANGE_BASIC b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-04' AND    b.DISPATCH_SEQ = 2  AND	b.CAR_REGNO  = '-' ), allocateInfo AS ( SELECT  decode(AMPM_GUBUN,'p','오전','오후') || ' 배정 건수' AS CAR_REGNO,ampm_gubun,'-' emp_nm,0 AS tot_work_date ,0 D1 ,0 D2 ,0 D3 ,0 D4 ,0 D5 ,0 D6 ,0 D7 ,0 D8 ,0 D9 ,0 D10 ,0 D11 ,0 D12 ,0 D13 ,0 D14 ,0 D15 ,0 D16 ,0 D17 ,0 D18 ,0 D19 ,0 D20 ,0 D21 ,0 D22 ,0 D23 ,0 D24 ,0 D25 ,0 D26 ,0 D27 ,0 D28 ,0 d29 ,0 d30 ,0 d31 FROM 	TBL_MONTH_ARRANGE_DETAIL b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-04' AND    b.DISPATCH_SEQ = 6  AND    b.PREV_DAILY_SEQ = 1 AND    b.AMPM_GUBUN IN ('a','p') ) SELECT * FROM carInfo union all SELECT '감차후 총 운행횟수' as CAR_REGNO,' ' AMPM_GUBUN ,b.emp_nm,0 AS tot_work_date , b.D1 *2   , b.D2 *2    , b.D3  *2   , b.D4 *2    , b.D5 *2    , b.D6 *2    , b.D7 *2    , b.D8 *2    , b.D9 *2    , b.D10 *2 , b.D11 *2    , b.D12 *2    , b.D13 *2    , b.D14 *2    , b.D15 *2    , b.D16 *2    , b.D17 *2    , b.D18 *2    , b.D19 *2    , b.D20 *2 , b.D21 *2    , b.D22 *2    , b.D23 *2    , b.D24 *2    , b.D25 *2    , b.D26 *2    , b.D27 *2    , b.D28 *2    , b.D29 *2    , b.D30 *2 , b.D31 *2 FROM 	carInfo b union all SELECT  * FROM 	allocateInfo b union all SELECT  decode(b.AMPM_GUBUN,'p','오전','오후') || ' 미배정 건수' AS CAR_REGNO,b.AMPM_GUBUN ,'-' emp_nm,0 AS tot_work_date ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  FROM 	allocateInfo b,carInfo a
 {executed in 12 msec}
2023-07-01 08:43:08.231 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - SELECT '[38번] 2023-04월' as CAR_REGNO,b.emp_nm,0 AS tot_work_date , b.D1    , b.D2    , b.D3    , b.D4    , b.D5    , b.D6    , b.D7    , b.D8    , b.D9    , b.D10 , b.D11    , b.D12    , b.D13    , b.D14    , b.D15    , b.D16    , b.D17    , b.D18    , b.D19    , b.D20 , b.D21    , b.D22    , b.D23    , b.D24    , b.D25    , b.D26    , b.D27    , b.D28    , b.D29    , b.D30 , b.D31 ,'N' as bit FROM 	TBL_MONTH_ARRANGE_DETAIL b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-04' AND    b.DISPATCH_SEQ = 1
2023-07-01 08:43:08.232 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
108. SELECT '[38번] 2023-04월' as CAR_REGNO,b.emp_nm,0 AS tot_work_date , b.D1    , b.D2    , b.D3    , b.D4    , b.D5    , b.D6    , b.D7    , b.D8    , b.D9    , b.D10 , b.D11    , b.D12    , b.D13    , b.D14    , b.D15    , b.D16    , b.D17    , b.D18    , b.D19    , b.D20 , b.D21    , b.D22    , b.D23    , b.D24    , b.D25    , b.D26    , b.D27    , b.D28    , b.D29    , b.D30 , b.D31 ,'N' as bit FROM 	TBL_MONTH_ARRANGE_DETAIL b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-04' AND    b.DISPATCH_SEQ = 1
 {executed in 1 msec}
2023-07-01 08:43:08.233 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - SELECT b.CAR_REGNO,b.emp_nm , 0 AS tot_work_date ,b.D1  ,b.D2  ,b.D3  ,b.D4  ,b.D5  ,b.D6  ,b.D7  ,b.D8  ,b.D9  ,b.D10 ,b.D11 ,b.D12 ,b.D13 ,b.D14 ,b.D15 ,b.D16 ,b.D17 ,b.D18 ,b.D19 ,b.D20 ,b.D21 ,b.D22 ,b.D23 ,b.D24 ,b.D25 ,b.D26 ,b.D27 ,b.D28 ,b.D29 ,b.D30 ,b.D31 ,'N' AS bit FROM 	TBL_MONTH_ARRANGE_DETAIL b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-04' AND    b.DISPATCH_SEQ = 6 AND    b.CAR_REGNO not like 'SP%' order by b.dispatch_seq,b.CAR_REGNO ,b.ampm_gubun,b.prev_daily_seq
2023-07-01 08:43:08.235 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
108. SELECT b.CAR_REGNO,b.emp_nm , 0 AS tot_work_date ,b.D1  ,b.D2  ,b.D3  ,b.D4  ,b.D5  ,b.D6  ,b.D7  ,b.D8  ,b.D9  ,b.D10 ,b.D11 ,b.D12 ,b.D13 ,b.D14 ,b.D15 ,b.D16 ,b.D17 ,b.D18 ,b.D19 ,b.D20 ,b.D21 ,b.D22 ,b.D23 ,b.D24 ,b.D25 ,b.D26 ,b.D27 ,b.D28 ,b.D29 ,b.D30 ,b.D31 ,'N' AS bit FROM 	TBL_MONTH_ARRANGE_DETAIL b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-04' AND    b.DISPATCH_SEQ = 6 AND    b.CAR_REGNO not like 'SP%' order by b.dispatch_seq,b.CAR_REGNO ,b.ampm_gubun,b.prev_daily_seq
 {executed in 2 msec}
2023-07-01 08:43:08.237 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - WITH sp_maxinfo AS ( SELECT  b.CAR_REGNO,b.EMP_NM ,nvl(max(CASE WHEN nvl(b.D1 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D1   ELSE '#' || b.D1  end),' ') as D1 ,nvl(max(CASE WHEN nvl(b.D2 ,'') = '' THEN '' WHEN b.route_nm = '38번' tHEN b.D2   ELSE '#' || b.D2  end),' ') as D2 ,nvl(max(CASE WHEN nvl(b.D3 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D3   ELSE '#' || b.D3   end),' ') as D3 ,nvl(max(CASE WHEN nvl(b.D4 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D4   ELSE '#' || b.D4   end),' ') as D4 ,nvl(max(CASE WHEN nvl(b.D5 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D5   ELSE '#' || b.D5   end),' ') as D5 ,nvl(max(CASE WHEN nvl(b.D6 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D6   ELSE '#' || b.D6   end),' ') as D6 ,nvl(max(CASE WHEN nvl(b.D7 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D7   ELSE '#' || b.D7   end),' ') as D7 ,nvl(max(CASE WHEN nvl(b.D8 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D8   ELSE '#' || b.D8   end),' ') as D8 ,nvl(max(CASE WHEN nvl(b.D9 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D9   ELSE '#' || b.D9   end),' ') as D9 ,nvl(max(CASE WHEN nvl(b.D10,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D10  ELSE '#' || b.D10  end),' ') as D10 ,nvl(max(CASE WHEN nvl(b.D11,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D11  ELSE '#' || b.D11  end),' ') as D11 ,nvl(max(CASE WHEN nvl(b.D12,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D12  ELSE '#' || b.D12  end),' ') as D12 ,nvl(max(CASE WHEN nvl(b.D13,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D13  ELSE '#' || b.D13  end),' ') as D13 ,nvl(max(CASE WHEN nvl(b.D14,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D14  ELSE '#' || b.D14  end),' ') as D14 ,nvl(max(CASE WHEN nvl(b.D15,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D15  ELSE '#' || b.D15  end),' ') as D15 ,nvl(max(CASE WHEN nvl(b.D16,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D16  ELSE '#' || b.D16  end),' ') as D16 ,nvl(max(CASE WHEN nvl(b.D17,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D17  ELSE '#' || b.D17  end),' ') as D17 ,nvl(max(CASE WHEN nvl(b.D18,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D18  ELSE '#' || b.D18  end),' ') as D18 ,nvl(max(CASE WHEN nvl(b.D19,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D19  ELSE '#' || b.D19  end),' ') as D19 ,nvl(max(CASE WHEN nvl(b.D20,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D20  ELSE '#' || b.D20  end),' ') as D20 ,nvl(max(CASE WHEN nvl(b.D21,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D21  ELSE '#' || b.D21  end),' ') as D21 ,nvl(max(CASE WHEN nvl(b.D22,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D22  ELSE '#' || b.D22  end),' ') as D22 ,nvl(max(CASE WHEN nvl(b.D23,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D23  ELSE '#' || b.D23  end),' ') as D23 ,nvl(max(CASE WHEN nvl(b.D24,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D24  ELSE '#' || b.D24  end),' ') as D24 ,nvl(max(CASE WHEN nvl(b.D25,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D25  ELSE '#' || b.D25  end),' ') as D25 ,nvl(max(CASE WHEN nvl(b.D26,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D26  ELSE '#' || b.D26  end),' ') as D26 ,nvl(max(CASE WHEN nvl(b.D27,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D27  ELSE '#' || b.D27  end),' ') as D27 ,nvl(max(CASE WHEN nvl(b.D28,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D28  ELSE '#' || b.D28  end),' ') as D28 ,nvl(max(CASE WHEN nvl(b.D29,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D29  ELSE '#' || b.D29  end),' ') as D29 ,nvl(max(CASE WHEN nvl(b.D30,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D30  ELSE '#' || b.D30  end),' ') as D30 ,nvl(max(CASE WHEN nvl(b.D31,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D31  ELSE '#' || b.D31  end),' ') as D31 FROM 	TBL_MONTH_ARRANGE_DETAIL b where 	b.company_no = '100' AND b.BASE_YM = '2023-04' and b.DISPATCH_SEQ = 6 and b.init_seq = 0 AND b.CAR_REGNO LIKE  'SP%' GROUP BY b.CAR_REGNO,b.emp_nm ) SELECT b.*,'N' as bit ,	LENGTH (REGEXP_REPLACE(b.D1||b.D2||b.D3||b.D4||b.D5||b.D6||b.D7||b.D8||b.D9||b.D10||b.D11||b.D12||b.D13||b.D14||b.D15||b.D16||b.D17||b.D18||b.D19||b.D20||b.D21||b.D22||b.D23||b.D24||b.D25||b.D26||b.D27||b.D28||b.D29||b.D30||b.D31,'[0-9# ]','') ) AS tot_work_date FROM ( SELECT  a.prev_daily_seq,b.* FROM 	TBL_MONTH_ARRANGE_DETAIL a LEFT OUTER JOIN sp_maxinfo b ON	a.emp_nm = b.EMP_NM AND  a.car_regno = b.CAR_REGNO where 	a.company_no = '100' AND a.BASE_YM = '2023-04' and a.DISPATCH_SEQ = 6 and a.init_seq = 0 AND a.CAR_REGNO LIKE  'SP%' AND a.emp_nm = decode('','',a.emp_nm,'') AND a.route_nm = '38번' ) b ORDER BY b.prev_daily_seq
2023-07-01 08:43:08.259 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
108. WITH sp_maxinfo AS ( SELECT  b.CAR_REGNO,b.EMP_NM ,nvl(max(CASE WHEN nvl(b.D1 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D1   ELSE '#' || b.D1  end),' ') as D1 ,nvl(max(CASE WHEN nvl(b.D2 ,'') = '' THEN '' WHEN b.route_nm = '38번' tHEN b.D2   ELSE '#' || b.D2  end),' ') as D2 ,nvl(max(CASE WHEN nvl(b.D3 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D3   ELSE '#' || b.D3   end),' ') as D3 ,nvl(max(CASE WHEN nvl(b.D4 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D4   ELSE '#' || b.D4   end),' ') as D4 ,nvl(max(CASE WHEN nvl(b.D5 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D5   ELSE '#' || b.D5   end),' ') as D5 ,nvl(max(CASE WHEN nvl(b.D6 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D6   ELSE '#' || b.D6   end),' ') as D6 ,nvl(max(CASE WHEN nvl(b.D7 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D7   ELSE '#' || b.D7   end),' ') as D7 ,nvl(max(CASE WHEN nvl(b.D8 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D8   ELSE '#' || b.D8   end),' ') as D8 ,nvl(max(CASE WHEN nvl(b.D9 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D9   ELSE '#' || b.D9   end),' ') as D9 ,nvl(max(CASE WHEN nvl(b.D10,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D10  ELSE '#' || b.D10  end),' ') as D10 ,nvl(max(CASE WHEN nvl(b.D11,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D11  ELSE '#' || b.D11  end),' ') as D11 ,nvl(max(CASE WHEN nvl(b.D12,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D12  ELSE '#' || b.D12  end),' ') as D12 ,nvl(max(CASE WHEN nvl(b.D13,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D13  ELSE '#' || b.D13  end),' ') as D13 ,nvl(max(CASE WHEN nvl(b.D14,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D14  ELSE '#' || b.D14  end),' ') as D14 ,nvl(max(CASE WHEN nvl(b.D15,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D15  ELSE '#' || b.D15  end),' ') as D15 ,nvl(max(CASE WHEN nvl(b.D16,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D16  ELSE '#' || b.D16  end),' ') as D16 ,nvl(max(CASE WHEN nvl(b.D17,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D17  ELSE '#' || b.D17  end),' ') as D17 ,nvl(max(CASE WHEN nvl(b.D18,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D18  ELSE '#' || b.D18  end),' ') as D18 ,nvl(max(CASE WHEN nvl(b.D19,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D19  ELSE '#' || b.D19  end),' ') as D19 ,nvl(max(CASE WHEN nvl(b.D20,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D20  ELSE '#' || b.D20  end),' ') as D20 ,nvl(max(CASE WHEN nvl(b.D21,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D21  ELSE '#' || b.D21  end),' ') as D21 ,nvl(max(CASE WHEN nvl(b.D22,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D22  ELSE '#' || b.D22  end),' ') as D22 ,nvl(max(CASE WHEN nvl(b.D23,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D23  ELSE '#' || b.D23  end),' ') as D23 ,nvl(max(CASE WHEN nvl(b.D24,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D24  ELSE '#' || b.D24  end),' ') as D24 ,nvl(max(CASE WHEN nvl(b.D25,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D25  ELSE '#' || b.D25  end),' ') as D25 ,nvl(max(CASE WHEN nvl(b.D26,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D26  ELSE '#' || b.D26  end),' ') as D26 ,nvl(max(CASE WHEN nvl(b.D27,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D27  ELSE '#' || b.D27  end),' ') as D27 ,nvl(max(CASE WHEN nvl(b.D28,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D28  ELSE '#' || b.D28  end),' ') as D28 ,nvl(max(CASE WHEN nvl(b.D29,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D29  ELSE '#' || b.D29  end),' ') as D29 ,nvl(max(CASE WHEN nvl(b.D30,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D30  ELSE '#' || b.D30  end),' ') as D30 ,nvl(max(CASE WHEN nvl(b.D31,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D31  ELSE '#' || b.D31  end),' ') as D31 FROM 	TBL_MONTH_ARRANGE_DETAIL b where 	b.company_no = '100' AND b.BASE_YM = '2023-04' and b.DISPATCH_SEQ = 6 and b.init_seq = 0 AND b.CAR_REGNO LIKE  'SP%' GROUP BY b.CAR_REGNO,b.emp_nm ) SELECT b.*,'N' as bit ,	LENGTH (REGEXP_REPLACE(b.D1||b.D2||b.D3||b.D4||b.D5||b.D6||b.D7||b.D8||b.D9||b.D10||b.D11||b.D12||b.D13||b.D14||b.D15||b.D16||b.D17||b.D18||b.D19||b.D20||b.D21||b.D22||b.D23||b.D24||b.D25||b.D26||b.D27||b.D28||b.D29||b.D30||b.D31,'[0-9# ]','') ) AS tot_work_date FROM ( SELECT  a.prev_daily_seq,b.* FROM 	TBL_MONTH_ARRANGE_DETAIL a LEFT OUTER JOIN sp_maxinfo b ON	a.emp_nm = b.EMP_NM AND  a.car_regno = b.CAR_REGNO where 	a.company_no = '100' AND a.BASE_YM = '2023-04' and a.DISPATCH_SEQ = 6 and a.init_seq = 0 AND a.CAR_REGNO LIKE  'SP%' AND a.emp_nm = decode('','',a.emp_nm,'') AND a.route_nm = '38번' ) b ORDER BY b.prev_daily_seq
 {executed in 22 msec}
2023-07-01 08:43:08.870 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - WITH carInfo AS ( SELECT '감차후 총 차량댓수' as CAR_REGNO,'' AS AMPM_GUBUN ,b.emp_nm,0 AS tot_work_date , b.D1    , b.D2    , b.D3    , b.D4    , b.D5    , b.D6    , b.D7    , b.D8    , b.D9    , b.D10 , b.D11    , b.D12    , b.D13    , b.D14    , b.D15    , b.D16    , b.D17    , b.D18    , b.D19    , b.D20 , b.D21    , b.D22    , b.D23    , b.D24    , b.D25    , b.D26    , b.D27    , b.D28    , b.D29    , b.D30 , b.D31 FROM 	TBL_MONTH_ARRANGE_BASIC b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-04' AND    b.DISPATCH_SEQ = 2  AND	b.CAR_REGNO  = '-' ), allocateInfo AS ( SELECT  decode(AMPM_GUBUN,'p','오전','오후') || ' 배정 건수' AS CAR_REGNO,ampm_gubun,'-' emp_nm,0 AS tot_work_date ,0 D1 ,0 D2 ,0 D3 ,0 D4 ,0 D5 ,0 D6 ,0 D7 ,0 D8 ,0 D9 ,0 D10 ,0 D11 ,0 D12 ,0 D13 ,0 D14 ,0 D15 ,0 D16 ,0 D17 ,0 D18 ,0 D19 ,0 D20 ,0 D21 ,0 D22 ,0 D23 ,0 D24 ,0 D25 ,0 D26 ,0 D27 ,0 D28 ,0 d29 ,0 d30 ,0 d31 FROM 	TBL_MONTH_ARRANGE_DETAIL b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-04' AND    b.DISPATCH_SEQ = 6  AND    b.PREV_DAILY_SEQ = 1 AND    b.AMPM_GUBUN IN ('a','p') ) SELECT * FROM carInfo union all SELECT '감차후 총 운행횟수' as CAR_REGNO,' ' AMPM_GUBUN ,b.emp_nm,0 AS tot_work_date , b.D1 *2   , b.D2 *2    , b.D3  *2   , b.D4 *2    , b.D5 *2    , b.D6 *2    , b.D7 *2    , b.D8 *2    , b.D9 *2    , b.D10 *2 , b.D11 *2    , b.D12 *2    , b.D13 *2    , b.D14 *2    , b.D15 *2    , b.D16 *2    , b.D17 *2    , b.D18 *2    , b.D19 *2    , b.D20 *2 , b.D21 *2    , b.D22 *2    , b.D23 *2    , b.D24 *2    , b.D25 *2    , b.D26 *2    , b.D27 *2    , b.D28 *2    , b.D29 *2    , b.D30 *2 , b.D31 *2 FROM 	carInfo b union all SELECT  * FROM 	allocateInfo b union all SELECT  decode(b.AMPM_GUBUN,'p','오전','오후') || ' 미배정 건수' AS CAR_REGNO,b.AMPM_GUBUN ,'-' emp_nm,0 AS tot_work_date ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  FROM 	allocateInfo b,carInfo a
2023-07-01 08:43:08.870 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
108. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 08:43:08.873 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
108. WITH carInfo AS ( SELECT '감차후 총 차량댓수' as CAR_REGNO,'' AS AMPM_GUBUN ,b.emp_nm,0 AS tot_work_date , b.D1    , b.D2    , b.D3    , b.D4    , b.D5    , b.D6    , b.D7    , b.D8    , b.D9    , b.D10 , b.D11    , b.D12    , b.D13    , b.D14    , b.D15    , b.D16    , b.D17    , b.D18    , b.D19    , b.D20 , b.D21    , b.D22    , b.D23    , b.D24    , b.D25    , b.D26    , b.D27    , b.D28    , b.D29    , b.D30 , b.D31 FROM 	TBL_MONTH_ARRANGE_BASIC b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-04' AND    b.DISPATCH_SEQ = 2  AND	b.CAR_REGNO  = '-' ), allocateInfo AS ( SELECT  decode(AMPM_GUBUN,'p','오전','오후') || ' 배정 건수' AS CAR_REGNO,ampm_gubun,'-' emp_nm,0 AS tot_work_date ,0 D1 ,0 D2 ,0 D3 ,0 D4 ,0 D5 ,0 D6 ,0 D7 ,0 D8 ,0 D9 ,0 D10 ,0 D11 ,0 D12 ,0 D13 ,0 D14 ,0 D15 ,0 D16 ,0 D17 ,0 D18 ,0 D19 ,0 D20 ,0 D21 ,0 D22 ,0 D23 ,0 D24 ,0 D25 ,0 D26 ,0 D27 ,0 D28 ,0 d29 ,0 d30 ,0 d31 FROM 	TBL_MONTH_ARRANGE_DETAIL b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-04' AND    b.DISPATCH_SEQ = 6  AND    b.PREV_DAILY_SEQ = 1 AND    b.AMPM_GUBUN IN ('a','p') ) SELECT * FROM carInfo union all SELECT '감차후 총 운행횟수' as CAR_REGNO,' ' AMPM_GUBUN ,b.emp_nm,0 AS tot_work_date , b.D1 *2   , b.D2 *2    , b.D3  *2   , b.D4 *2    , b.D5 *2    , b.D6 *2    , b.D7 *2    , b.D8 *2    , b.D9 *2    , b.D10 *2 , b.D11 *2    , b.D12 *2    , b.D13 *2    , b.D14 *2    , b.D15 *2    , b.D16 *2    , b.D17 *2    , b.D18 *2    , b.D19 *2    , b.D20 *2 , b.D21 *2    , b.D22 *2    , b.D23 *2    , b.D24 *2    , b.D25 *2    , b.D26 *2    , b.D27 *2    , b.D28 *2    , b.D29 *2    , b.D30 *2 , b.D31 *2 FROM 	carInfo b union all SELECT  * FROM 	allocateInfo b union all SELECT  decode(b.AMPM_GUBUN,'p','오전','오후') || ' 미배정 건수' AS CAR_REGNO,b.AMPM_GUBUN ,'-' emp_nm,0 AS tot_work_date ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  FROM 	allocateInfo b,carInfo a
 {executed in 2 msec}
2023-07-01 08:43:08.873 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - SELECT '[38번] 2023-04월' as CAR_REGNO,b.emp_nm,0 AS tot_work_date , b.D1    , b.D2    , b.D3    , b.D4    , b.D5    , b.D6    , b.D7    , b.D8    , b.D9    , b.D10 , b.D11    , b.D12    , b.D13    , b.D14    , b.D15    , b.D16    , b.D17    , b.D18    , b.D19    , b.D20 , b.D21    , b.D22    , b.D23    , b.D24    , b.D25    , b.D26    , b.D27    , b.D28    , b.D29    , b.D30 , b.D31 ,'N' as bit FROM 	TBL_MONTH_ARRANGE_DETAIL b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-04' AND    b.DISPATCH_SEQ = 1
2023-07-01 08:43:08.874 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
108. SELECT '[38번] 2023-04월' as CAR_REGNO,b.emp_nm,0 AS tot_work_date , b.D1    , b.D2    , b.D3    , b.D4    , b.D5    , b.D6    , b.D7    , b.D8    , b.D9    , b.D10 , b.D11    , b.D12    , b.D13    , b.D14    , b.D15    , b.D16    , b.D17    , b.D18    , b.D19    , b.D20 , b.D21    , b.D22    , b.D23    , b.D24    , b.D25    , b.D26    , b.D27    , b.D28    , b.D29    , b.D30 , b.D31 ,'N' as bit FROM 	TBL_MONTH_ARRANGE_DETAIL b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-04' AND    b.DISPATCH_SEQ = 1
 {executed in 1 msec}
2023-07-01 08:43:08.875 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - SELECT b.CAR_REGNO,b.emp_nm , 0 AS tot_work_date ,b.D1  ,b.D2  ,b.D3  ,b.D4  ,b.D5  ,b.D6  ,b.D7  ,b.D8  ,b.D9  ,b.D10 ,b.D11 ,b.D12 ,b.D13 ,b.D14 ,b.D15 ,b.D16 ,b.D17 ,b.D18 ,b.D19 ,b.D20 ,b.D21 ,b.D22 ,b.D23 ,b.D24 ,b.D25 ,b.D26 ,b.D27 ,b.D28 ,b.D29 ,b.D30 ,b.D31 ,'N' AS bit FROM 	TBL_MONTH_ARRANGE_DETAIL b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-04' AND    b.DISPATCH_SEQ = 6 AND    b.CAR_REGNO not like 'SP%' order by b.dispatch_seq,b.CAR_REGNO ,b.ampm_gubun,b.prev_daily_seq
2023-07-01 08:43:08.876 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
108. SELECT b.CAR_REGNO,b.emp_nm , 0 AS tot_work_date ,b.D1  ,b.D2  ,b.D3  ,b.D4  ,b.D5  ,b.D6  ,b.D7  ,b.D8  ,b.D9  ,b.D10 ,b.D11 ,b.D12 ,b.D13 ,b.D14 ,b.D15 ,b.D16 ,b.D17 ,b.D18 ,b.D19 ,b.D20 ,b.D21 ,b.D22 ,b.D23 ,b.D24 ,b.D25 ,b.D26 ,b.D27 ,b.D28 ,b.D29 ,b.D30 ,b.D31 ,'N' AS bit FROM 	TBL_MONTH_ARRANGE_DETAIL b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-04' AND    b.DISPATCH_SEQ = 6 AND    b.CAR_REGNO not like 'SP%' order by b.dispatch_seq,b.CAR_REGNO ,b.ampm_gubun,b.prev_daily_seq
 {executed in 1 msec}
2023-07-01 08:43:08.878 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - WITH sp_maxinfo AS ( SELECT  b.CAR_REGNO,b.EMP_NM ,nvl(max(CASE WHEN nvl(b.D1 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D1   ELSE '#' || b.D1  end),' ') as D1 ,nvl(max(CASE WHEN nvl(b.D2 ,'') = '' THEN '' WHEN b.route_nm = '38번' tHEN b.D2   ELSE '#' || b.D2  end),' ') as D2 ,nvl(max(CASE WHEN nvl(b.D3 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D3   ELSE '#' || b.D3   end),' ') as D3 ,nvl(max(CASE WHEN nvl(b.D4 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D4   ELSE '#' || b.D4   end),' ') as D4 ,nvl(max(CASE WHEN nvl(b.D5 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D5   ELSE '#' || b.D5   end),' ') as D5 ,nvl(max(CASE WHEN nvl(b.D6 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D6   ELSE '#' || b.D6   end),' ') as D6 ,nvl(max(CASE WHEN nvl(b.D7 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D7   ELSE '#' || b.D7   end),' ') as D7 ,nvl(max(CASE WHEN nvl(b.D8 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D8   ELSE '#' || b.D8   end),' ') as D8 ,nvl(max(CASE WHEN nvl(b.D9 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D9   ELSE '#' || b.D9   end),' ') as D9 ,nvl(max(CASE WHEN nvl(b.D10,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D10  ELSE '#' || b.D10  end),' ') as D10 ,nvl(max(CASE WHEN nvl(b.D11,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D11  ELSE '#' || b.D11  end),' ') as D11 ,nvl(max(CASE WHEN nvl(b.D12,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D12  ELSE '#' || b.D12  end),' ') as D12 ,nvl(max(CASE WHEN nvl(b.D13,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D13  ELSE '#' || b.D13  end),' ') as D13 ,nvl(max(CASE WHEN nvl(b.D14,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D14  ELSE '#' || b.D14  end),' ') as D14 ,nvl(max(CASE WHEN nvl(b.D15,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D15  ELSE '#' || b.D15  end),' ') as D15 ,nvl(max(CASE WHEN nvl(b.D16,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D16  ELSE '#' || b.D16  end),' ') as D16 ,nvl(max(CASE WHEN nvl(b.D17,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D17  ELSE '#' || b.D17  end),' ') as D17 ,nvl(max(CASE WHEN nvl(b.D18,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D18  ELSE '#' || b.D18  end),' ') as D18 ,nvl(max(CASE WHEN nvl(b.D19,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D19  ELSE '#' || b.D19  end),' ') as D19 ,nvl(max(CASE WHEN nvl(b.D20,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D20  ELSE '#' || b.D20  end),' ') as D20 ,nvl(max(CASE WHEN nvl(b.D21,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D21  ELSE '#' || b.D21  end),' ') as D21 ,nvl(max(CASE WHEN nvl(b.D22,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D22  ELSE '#' || b.D22  end),' ') as D22 ,nvl(max(CASE WHEN nvl(b.D23,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D23  ELSE '#' || b.D23  end),' ') as D23 ,nvl(max(CASE WHEN nvl(b.D24,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D24  ELSE '#' || b.D24  end),' ') as D24 ,nvl(max(CASE WHEN nvl(b.D25,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D25  ELSE '#' || b.D25  end),' ') as D25 ,nvl(max(CASE WHEN nvl(b.D26,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D26  ELSE '#' || b.D26  end),' ') as D26 ,nvl(max(CASE WHEN nvl(b.D27,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D27  ELSE '#' || b.D27  end),' ') as D27 ,nvl(max(CASE WHEN nvl(b.D28,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D28  ELSE '#' || b.D28  end),' ') as D28 ,nvl(max(CASE WHEN nvl(b.D29,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D29  ELSE '#' || b.D29  end),' ') as D29 ,nvl(max(CASE WHEN nvl(b.D30,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D30  ELSE '#' || b.D30  end),' ') as D30 ,nvl(max(CASE WHEN nvl(b.D31,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D31  ELSE '#' || b.D31  end),' ') as D31 FROM 	TBL_MONTH_ARRANGE_DETAIL b where 	b.company_no = '100' AND b.BASE_YM = '2023-04' and b.DISPATCH_SEQ = 6 and b.init_seq = 0 AND b.CAR_REGNO LIKE  'SP%' GROUP BY b.CAR_REGNO,b.emp_nm ) SELECT b.*,'N' as bit ,	LENGTH (REGEXP_REPLACE(b.D1||b.D2||b.D3||b.D4||b.D5||b.D6||b.D7||b.D8||b.D9||b.D10||b.D11||b.D12||b.D13||b.D14||b.D15||b.D16||b.D17||b.D18||b.D19||b.D20||b.D21||b.D22||b.D23||b.D24||b.D25||b.D26||b.D27||b.D28||b.D29||b.D30||b.D31,'[0-9# ]','') ) AS tot_work_date FROM ( SELECT  a.prev_daily_seq,b.* FROM 	TBL_MONTH_ARRANGE_DETAIL a LEFT OUTER JOIN sp_maxinfo b ON	a.emp_nm = b.EMP_NM AND  a.car_regno = b.CAR_REGNO where 	a.company_no = '100' AND a.BASE_YM = '2023-04' and a.DISPATCH_SEQ = 6 and a.init_seq = 0 AND a.CAR_REGNO LIKE  'SP%' AND a.emp_nm = decode('','',a.emp_nm,'') AND a.route_nm = '38번' ) b ORDER BY b.prev_daily_seq
2023-07-01 08:43:08.893 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
108. WITH sp_maxinfo AS ( SELECT  b.CAR_REGNO,b.EMP_NM ,nvl(max(CASE WHEN nvl(b.D1 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D1   ELSE '#' || b.D1  end),' ') as D1 ,nvl(max(CASE WHEN nvl(b.D2 ,'') = '' THEN '' WHEN b.route_nm = '38번' tHEN b.D2   ELSE '#' || b.D2  end),' ') as D2 ,nvl(max(CASE WHEN nvl(b.D3 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D3   ELSE '#' || b.D3   end),' ') as D3 ,nvl(max(CASE WHEN nvl(b.D4 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D4   ELSE '#' || b.D4   end),' ') as D4 ,nvl(max(CASE WHEN nvl(b.D5 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D5   ELSE '#' || b.D5   end),' ') as D5 ,nvl(max(CASE WHEN nvl(b.D6 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D6   ELSE '#' || b.D6   end),' ') as D6 ,nvl(max(CASE WHEN nvl(b.D7 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D7   ELSE '#' || b.D7   end),' ') as D7 ,nvl(max(CASE WHEN nvl(b.D8 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D8   ELSE '#' || b.D8   end),' ') as D8 ,nvl(max(CASE WHEN nvl(b.D9 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D9   ELSE '#' || b.D9   end),' ') as D9 ,nvl(max(CASE WHEN nvl(b.D10,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D10  ELSE '#' || b.D10  end),' ') as D10 ,nvl(max(CASE WHEN nvl(b.D11,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D11  ELSE '#' || b.D11  end),' ') as D11 ,nvl(max(CASE WHEN nvl(b.D12,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D12  ELSE '#' || b.D12  end),' ') as D12 ,nvl(max(CASE WHEN nvl(b.D13,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D13  ELSE '#' || b.D13  end),' ') as D13 ,nvl(max(CASE WHEN nvl(b.D14,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D14  ELSE '#' || b.D14  end),' ') as D14 ,nvl(max(CASE WHEN nvl(b.D15,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D15  ELSE '#' || b.D15  end),' ') as D15 ,nvl(max(CASE WHEN nvl(b.D16,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D16  ELSE '#' || b.D16  end),' ') as D16 ,nvl(max(CASE WHEN nvl(b.D17,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D17  ELSE '#' || b.D17  end),' ') as D17 ,nvl(max(CASE WHEN nvl(b.D18,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D18  ELSE '#' || b.D18  end),' ') as D18 ,nvl(max(CASE WHEN nvl(b.D19,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D19  ELSE '#' || b.D19  end),' ') as D19 ,nvl(max(CASE WHEN nvl(b.D20,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D20  ELSE '#' || b.D20  end),' ') as D20 ,nvl(max(CASE WHEN nvl(b.D21,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D21  ELSE '#' || b.D21  end),' ') as D21 ,nvl(max(CASE WHEN nvl(b.D22,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D22  ELSE '#' || b.D22  end),' ') as D22 ,nvl(max(CASE WHEN nvl(b.D23,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D23  ELSE '#' || b.D23  end),' ') as D23 ,nvl(max(CASE WHEN nvl(b.D24,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D24  ELSE '#' || b.D24  end),' ') as D24 ,nvl(max(CASE WHEN nvl(b.D25,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D25  ELSE '#' || b.D25  end),' ') as D25 ,nvl(max(CASE WHEN nvl(b.D26,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D26  ELSE '#' || b.D26  end),' ') as D26 ,nvl(max(CASE WHEN nvl(b.D27,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D27  ELSE '#' || b.D27  end),' ') as D27 ,nvl(max(CASE WHEN nvl(b.D28,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D28  ELSE '#' || b.D28  end),' ') as D28 ,nvl(max(CASE WHEN nvl(b.D29,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D29  ELSE '#' || b.D29  end),' ') as D29 ,nvl(max(CASE WHEN nvl(b.D30,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D30  ELSE '#' || b.D30  end),' ') as D30 ,nvl(max(CASE WHEN nvl(b.D31,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D31  ELSE '#' || b.D31  end),' ') as D31 FROM 	TBL_MONTH_ARRANGE_DETAIL b where 	b.company_no = '100' AND b.BASE_YM = '2023-04' and b.DISPATCH_SEQ = 6 and b.init_seq = 0 AND b.CAR_REGNO LIKE  'SP%' GROUP BY b.CAR_REGNO,b.emp_nm ) SELECT b.*,'N' as bit ,	LENGTH (REGEXP_REPLACE(b.D1||b.D2||b.D3||b.D4||b.D5||b.D6||b.D7||b.D8||b.D9||b.D10||b.D11||b.D12||b.D13||b.D14||b.D15||b.D16||b.D17||b.D18||b.D19||b.D20||b.D21||b.D22||b.D23||b.D24||b.D25||b.D26||b.D27||b.D28||b.D29||b.D30||b.D31,'[0-9# ]','') ) AS tot_work_date FROM ( SELECT  a.prev_daily_seq,b.* FROM 	TBL_MONTH_ARRANGE_DETAIL a LEFT OUTER JOIN sp_maxinfo b ON	a.emp_nm = b.EMP_NM AND  a.car_regno = b.CAR_REGNO where 	a.company_no = '100' AND a.BASE_YM = '2023-04' and a.DISPATCH_SEQ = 6 and a.init_seq = 0 AND a.CAR_REGNO LIKE  'SP%' AND a.emp_nm = decode('','',a.emp_nm,'') AND a.route_nm = '38번' ) b ORDER BY b.prev_daily_seq
 {executed in 13 msec}
2023-07-01 08:43:10.704 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - WITH carInfo AS ( SELECT '감차후 총 차량댓수' as CAR_REGNO,'' AS AMPM_GUBUN ,b.emp_nm,0 AS tot_work_date , b.D1    , b.D2    , b.D3    , b.D4    , b.D5    , b.D6    , b.D7    , b.D8    , b.D9    , b.D10 , b.D11    , b.D12    , b.D13    , b.D14    , b.D15    , b.D16    , b.D17    , b.D18    , b.D19    , b.D20 , b.D21    , b.D22    , b.D23    , b.D24    , b.D25    , b.D26    , b.D27    , b.D28    , b.D29    , b.D30 , b.D31 FROM 	TBL_MONTH_ARRANGE_BASIC b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-04' AND    b.DISPATCH_SEQ = 2  AND	b.CAR_REGNO  = '-' ), allocateInfo AS ( SELECT  decode(AMPM_GUBUN,'p','오전','오후') || ' 배정 건수' AS CAR_REGNO,ampm_gubun,'-' emp_nm,0 AS tot_work_date ,0 D1 ,0 D2 ,0 D3 ,0 D4 ,0 D5 ,0 D6 ,0 D7 ,0 D8 ,0 D9 ,0 D10 ,0 D11 ,0 D12 ,0 D13 ,0 D14 ,0 D15 ,0 D16 ,0 D17 ,0 D18 ,0 D19 ,0 D20 ,0 D21 ,0 D22 ,0 D23 ,0 D24 ,0 D25 ,0 D26 ,0 D27 ,0 D28 ,0 d29 ,0 d30 ,0 d31 FROM 	TBL_MONTH_ARRANGE_DETAIL b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-04' AND    b.DISPATCH_SEQ = 6  AND    b.PREV_DAILY_SEQ = 1 AND    b.AMPM_GUBUN IN ('a','p') ) SELECT * FROM carInfo union all SELECT '감차후 총 운행횟수' as CAR_REGNO,' ' AMPM_GUBUN ,b.emp_nm,0 AS tot_work_date , b.D1 *2   , b.D2 *2    , b.D3  *2   , b.D4 *2    , b.D5 *2    , b.D6 *2    , b.D7 *2    , b.D8 *2    , b.D9 *2    , b.D10 *2 , b.D11 *2    , b.D12 *2    , b.D13 *2    , b.D14 *2    , b.D15 *2    , b.D16 *2    , b.D17 *2    , b.D18 *2    , b.D19 *2    , b.D20 *2 , b.D21 *2    , b.D22 *2    , b.D23 *2    , b.D24 *2    , b.D25 *2    , b.D26 *2    , b.D27 *2    , b.D28 *2    , b.D29 *2    , b.D30 *2 , b.D31 *2 FROM 	carInfo b union all SELECT  * FROM 	allocateInfo b union all SELECT  decode(b.AMPM_GUBUN,'p','오전','오후') || ' 미배정 건수' AS CAR_REGNO,b.AMPM_GUBUN ,'-' emp_nm,0 AS tot_work_date ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  FROM 	allocateInfo b,carInfo a
2023-07-01 08:43:10.704 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
108. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 08:43:10.707 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
108. WITH carInfo AS ( SELECT '감차후 총 차량댓수' as CAR_REGNO,'' AS AMPM_GUBUN ,b.emp_nm,0 AS tot_work_date , b.D1    , b.D2    , b.D3    , b.D4    , b.D5    , b.D6    , b.D7    , b.D8    , b.D9    , b.D10 , b.D11    , b.D12    , b.D13    , b.D14    , b.D15    , b.D16    , b.D17    , b.D18    , b.D19    , b.D20 , b.D21    , b.D22    , b.D23    , b.D24    , b.D25    , b.D26    , b.D27    , b.D28    , b.D29    , b.D30 , b.D31 FROM 	TBL_MONTH_ARRANGE_BASIC b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-04' AND    b.DISPATCH_SEQ = 2  AND	b.CAR_REGNO  = '-' ), allocateInfo AS ( SELECT  decode(AMPM_GUBUN,'p','오전','오후') || ' 배정 건수' AS CAR_REGNO,ampm_gubun,'-' emp_nm,0 AS tot_work_date ,0 D1 ,0 D2 ,0 D3 ,0 D4 ,0 D5 ,0 D6 ,0 D7 ,0 D8 ,0 D9 ,0 D10 ,0 D11 ,0 D12 ,0 D13 ,0 D14 ,0 D15 ,0 D16 ,0 D17 ,0 D18 ,0 D19 ,0 D20 ,0 D21 ,0 D22 ,0 D23 ,0 D24 ,0 D25 ,0 D26 ,0 D27 ,0 D28 ,0 d29 ,0 d30 ,0 d31 FROM 	TBL_MONTH_ARRANGE_DETAIL b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-04' AND    b.DISPATCH_SEQ = 6  AND    b.PREV_DAILY_SEQ = 1 AND    b.AMPM_GUBUN IN ('a','p') ) SELECT * FROM carInfo union all SELECT '감차후 총 운행횟수' as CAR_REGNO,' ' AMPM_GUBUN ,b.emp_nm,0 AS tot_work_date , b.D1 *2   , b.D2 *2    , b.D3  *2   , b.D4 *2    , b.D5 *2    , b.D6 *2    , b.D7 *2    , b.D8 *2    , b.D9 *2    , b.D10 *2 , b.D11 *2    , b.D12 *2    , b.D13 *2    , b.D14 *2    , b.D15 *2    , b.D16 *2    , b.D17 *2    , b.D18 *2    , b.D19 *2    , b.D20 *2 , b.D21 *2    , b.D22 *2    , b.D23 *2    , b.D24 *2    , b.D25 *2    , b.D26 *2    , b.D27 *2    , b.D28 *2    , b.D29 *2    , b.D30 *2 , b.D31 *2 FROM 	carInfo b union all SELECT  * FROM 	allocateInfo b union all SELECT  decode(b.AMPM_GUBUN,'p','오전','오후') || ' 미배정 건수' AS CAR_REGNO,b.AMPM_GUBUN ,'-' emp_nm,0 AS tot_work_date ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  FROM 	allocateInfo b,carInfo a
 {executed in 2 msec}
2023-07-01 08:43:10.708 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - SELECT '[38번] 2023-04월' as CAR_REGNO,b.emp_nm,0 AS tot_work_date , b.D1    , b.D2    , b.D3    , b.D4    , b.D5    , b.D6    , b.D7    , b.D8    , b.D9    , b.D10 , b.D11    , b.D12    , b.D13    , b.D14    , b.D15    , b.D16    , b.D17    , b.D18    , b.D19    , b.D20 , b.D21    , b.D22    , b.D23    , b.D24    , b.D25    , b.D26    , b.D27    , b.D28    , b.D29    , b.D30 , b.D31 ,'N' as bit FROM 	TBL_MONTH_ARRANGE_DETAIL b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-04' AND    b.DISPATCH_SEQ = 1
2023-07-01 08:43:10.709 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
108. SELECT '[38번] 2023-04월' as CAR_REGNO,b.emp_nm,0 AS tot_work_date , b.D1    , b.D2    , b.D3    , b.D4    , b.D5    , b.D6    , b.D7    , b.D8    , b.D9    , b.D10 , b.D11    , b.D12    , b.D13    , b.D14    , b.D15    , b.D16    , b.D17    , b.D18    , b.D19    , b.D20 , b.D21    , b.D22    , b.D23    , b.D24    , b.D25    , b.D26    , b.D27    , b.D28    , b.D29    , b.D30 , b.D31 ,'N' as bit FROM 	TBL_MONTH_ARRANGE_DETAIL b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-04' AND    b.DISPATCH_SEQ = 1
 {executed in 1 msec}
2023-07-01 08:43:10.710 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - WITH RECURSIVE countera(n) AS ( WITH routeCount AS ( SELECT 'a' ampm_gubun, a.AUTO_CNT FROM TBL_ROUTEINFO a WHERE 	a.COMPANY_NO  = '100' AND 	a.ROUTE_NM    = '38번'	 union SELECT 'p' ampm_gubun, a.AUTO_CNT FROM TBL_ROUTEINFO a WHERE 	a.COMPANY_NO  = '100' AND 	a.ROUTE_NM    = '38번' ) SELECT t.n+1,t.n as no,c.ampm_gubun,to_char(t.n,'00') || c.ampm_gubun AS gubun ,  CASE WHEN a.ampm_gubun = '' AND a.d1 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d1 ,'[*@?]') and a.d1  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d1        ,  CASE WHEN a.ampm_gubun = '' AND a.d2  like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d2  ,'[*@?]') and a.d2   like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d2     ,  CASE WHEN a.ampm_gubun = '' AND a.d3  like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d3  ,'[*@?]') and a.d3   like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d3     ,  CASE WHEN a.ampm_gubun = '' AND a.d4  like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d4  ,'[*@?]') and a.d4   like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d4     ,  CASE WHEN a.ampm_gubun = '' AND a.d5  like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d5  ,'[*@?]') and a.d5   like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d5     ,  CASE WHEN a.ampm_gubun = '' AND a.d6  like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d6  ,'[*@?]') and a.d6   like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d6     ,  CASE WHEN a.ampm_gubun = '' AND a.d7  like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d7  ,'[*@?]') and a.d7   like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d7     ,  CASE WHEN a.ampm_gubun = '' AND a.d8  like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d8  ,'[*@?]') and a.d8   like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d8     ,  CASE WHEN a.ampm_gubun = '' AND a.d9  like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d9  ,'[*@?]') and a.d9   like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d9     ,  CASE WHEN a.ampm_gubun = '' AND a.d10 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d10 ,'[*@?]') and a.d10  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d10    ,  CASE WHEN a.ampm_gubun = '' AND a.d11 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d11 ,'[*@?]') and a.d11  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d11    ,  CASE WHEN a.ampm_gubun = '' AND a.d12 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d12 ,'[*@?]') and a.d12  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d12    ,  CASE WHEN a.ampm_gubun = '' AND a.d13 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d13 ,'[*@?]') and a.d13  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d13    ,  CASE WHEN a.ampm_gubun = '' AND a.d14 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d14 ,'[*@?]') and a.d14  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d14    ,  CASE WHEN a.ampm_gubun = '' AND a.d15 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d15 ,'[*@?]') and a.d15  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d15    ,  CASE WHEN a.ampm_gubun = '' AND a.d16 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d16 ,'[*@?]') and a.d16  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d16    ,  CASE WHEN a.ampm_gubun = '' AND a.d17 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d17 ,'[*@?]') and a.d17  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d17    ,  CASE WHEN a.ampm_gubun = '' AND a.d18 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d18 ,'[*@?]') and a.d18  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d18    ,  CASE WHEN a.ampm_gubun = '' AND a.d19 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d19 ,'[*@?]') and a.d19  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d19    ,  CASE WHEN a.ampm_gubun = '' AND a.d20 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d20 ,'[*@?]') and a.d20  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d20    ,  CASE WHEN a.ampm_gubun = '' AND a.d21 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d21 ,'[*@?]') and a.d21  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d21    ,  CASE WHEN a.ampm_gubun = '' AND a.d22 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d22 ,'[*@?]') and a.d22  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d22    ,  CASE WHEN a.ampm_gubun = '' AND a.d23 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d23 ,'[*@?]') and a.d23  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d23    ,  CASE WHEN a.ampm_gubun = '' AND a.d24 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d24 ,'[*@?]') and a.d24  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d24    ,  CASE WHEN a.ampm_gubun = '' AND a.d25 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d25 ,'[*@?]') and a.d25  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d25    ,  CASE WHEN a.ampm_gubun = '' AND a.d26 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d26 ,'[*@?]') and a.d26  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d26    ,  CASE WHEN a.ampm_gubun = '' AND a.d27 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d27 ,'[*@?]') and a.d27  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d27    ,  CASE WHEN a.ampm_gubun = '' AND a.d28 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d28 ,'[*@?]') and a.d28  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d28    ,  CASE WHEN a.ampm_gubun = '' AND a.d29 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d29 ,'[*@?]') and a.d29  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d29    ,  CASE WHEN a.ampm_gubun = '' AND a.d30 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d30 ,'[*@?]') and a.d30  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d30    ,  CASE WHEN a.ampm_gubun = '' AND a.d31 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d31 ,'[*@?]') and a.d31  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d31    FROM t ,TBL_MONTH_ARRANGE_DETAIL a , routeCount c WHERE 	a.COMPANY_NO  = '100' AND 	a.ROUTE_NM    = '38번' AND 	a.BASE_YM = '2023-04' AND 	a.dispatch_seq = 6 AND     a.init_seq = 0 AND     t.n <= c.auto_cnt ) SELECT 	decode(ampm_gubun,'a','오전','오후') as ampm_gubun , no as seq,0 as cnt ,	max(d1 ) as d1 ,	max(d2 ) as d2 ,	max(d3 ) as d3 ,	max(d4 ) as d4 ,	max(d5 ) as d5 ,	max(d6 ) as d6 ,	max(d7 ) as d7 ,	max(d8 ) as d8 ,	max(d9 ) as d9 ,	max(d10) as d10 ,	max(d11) as d11 ,	max(d12) as d12 ,	max(d13) as d13 ,	max(d14) as d14 ,	max(d15) as d15 ,	max(d16) as d16 ,	max(d17) as d17 ,	max(d18) as d18 ,	max(d19) as d19 ,	max(d20) as d20 ,	max(d21) as d21 ,	max(d22) as d22 ,	max(d23) as d23 ,	max(d24) as d24 ,	max(d25) as d25 ,	max(d26) as d26 ,	max(d27) as d27 ,	max(d28) as d28 ,	max(d29) as d29 ,	max(d30) as d30 ,	max(d31) as d31 from countera GROUP BY ampm_gubun,gubun
2023-07-01 08:43:10.767 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
108. WITH RECURSIVE countera(n) AS ( WITH routeCount AS ( SELECT 'a' ampm_gubun, a.AUTO_CNT FROM TBL_ROUTEINFO a WHERE 	a.COMPANY_NO  = '100' AND 	a.ROUTE_NM    = '38번'	 union SELECT 'p' ampm_gubun, a.AUTO_CNT FROM TBL_ROUTEINFO a WHERE 	a.COMPANY_NO  = '100' AND 	a.ROUTE_NM    = '38번' ) SELECT t.n+1,t.n as no,c.ampm_gubun,to_char(t.n,'00') || c.ampm_gubun AS gubun ,  CASE WHEN a.ampm_gubun = '' AND a.d1 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d1 ,'[*@?]') and a.d1  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d1        ,  CASE WHEN a.ampm_gubun = '' AND a.d2  like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d2  ,'[*@?]') and a.d2   like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d2     ,  CASE WHEN a.ampm_gubun = '' AND a.d3  like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d3  ,'[*@?]') and a.d3   like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d3     ,  CASE WHEN a.ampm_gubun = '' AND a.d4  like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d4  ,'[*@?]') and a.d4   like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d4     ,  CASE WHEN a.ampm_gubun = '' AND a.d5  like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d5  ,'[*@?]') and a.d5   like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d5     ,  CASE WHEN a.ampm_gubun = '' AND a.d6  like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d6  ,'[*@?]') and a.d6   like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d6     ,  CASE WHEN a.ampm_gubun = '' AND a.d7  like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d7  ,'[*@?]') and a.d7   like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d7     ,  CASE WHEN a.ampm_gubun = '' AND a.d8  like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d8  ,'[*@?]') and a.d8   like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d8     ,  CASE WHEN a.ampm_gubun = '' AND a.d9  like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d9  ,'[*@?]') and a.d9   like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d9     ,  CASE WHEN a.ampm_gubun = '' AND a.d10 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d10 ,'[*@?]') and a.d10  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d10    ,  CASE WHEN a.ampm_gubun = '' AND a.d11 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d11 ,'[*@?]') and a.d11  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d11    ,  CASE WHEN a.ampm_gubun = '' AND a.d12 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d12 ,'[*@?]') and a.d12  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d12    ,  CASE WHEN a.ampm_gubun = '' AND a.d13 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d13 ,'[*@?]') and a.d13  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d13    ,  CASE WHEN a.ampm_gubun = '' AND a.d14 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d14 ,'[*@?]') and a.d14  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d14    ,  CASE WHEN a.ampm_gubun = '' AND a.d15 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d15 ,'[*@?]') and a.d15  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d15    ,  CASE WHEN a.ampm_gubun = '' AND a.d16 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d16 ,'[*@?]') and a.d16  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d16    ,  CASE WHEN a.ampm_gubun = '' AND a.d17 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d17 ,'[*@?]') and a.d17  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d17    ,  CASE WHEN a.ampm_gubun = '' AND a.d18 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d18 ,'[*@?]') and a.d18  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d18    ,  CASE WHEN a.ampm_gubun = '' AND a.d19 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d19 ,'[*@?]') and a.d19  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d19    ,  CASE WHEN a.ampm_gubun = '' AND a.d20 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d20 ,'[*@?]') and a.d20  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d20    ,  CASE WHEN a.ampm_gubun = '' AND a.d21 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d21 ,'[*@?]') and a.d21  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d21    ,  CASE WHEN a.ampm_gubun = '' AND a.d22 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d22 ,'[*@?]') and a.d22  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d22    ,  CASE WHEN a.ampm_gubun = '' AND a.d23 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d23 ,'[*@?]') and a.d23  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d23    ,  CASE WHEN a.ampm_gubun = '' AND a.d24 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d24 ,'[*@?]') and a.d24  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d24    ,  CASE WHEN a.ampm_gubun = '' AND a.d25 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d25 ,'[*@?]') and a.d25  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d25    ,  CASE WHEN a.ampm_gubun = '' AND a.d26 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d26 ,'[*@?]') and a.d26  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d26    ,  CASE WHEN a.ampm_gubun = '' AND a.d27 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d27 ,'[*@?]') and a.d27  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d27    ,  CASE WHEN a.ampm_gubun = '' AND a.d28 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d28 ,'[*@?]') and a.d28  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d28    ,  CASE WHEN a.ampm_gubun = '' AND a.d29 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d29 ,'[*@?]') and a.d29  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d29    ,  CASE WHEN a.ampm_gubun = '' AND a.d30 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d30 ,'[*@?]') and a.d30  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d30    ,  CASE WHEN a.ampm_gubun = '' AND a.d31 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d31 ,'[*@?]') and a.d31  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d31    FROM t ,TBL_MONTH_ARRANGE_DETAIL a , routeCount c WHERE 	a.COMPANY_NO  = '100' AND 	a.ROUTE_NM    = '38번' AND 	a.BASE_YM = '2023-04' AND 	a.dispatch_seq = 6 AND     a.init_seq = 0 AND     t.n <= c.auto_cnt ) SELECT 	decode(ampm_gubun,'a','오전','오후') as ampm_gubun , no as seq,0 as cnt ,	max(d1 ) as d1 ,	max(d2 ) as d2 ,	max(d3 ) as d3 ,	max(d4 ) as d4 ,	max(d5 ) as d5 ,	max(d6 ) as d6 ,	max(d7 ) as d7 ,	max(d8 ) as d8 ,	max(d9 ) as d9 ,	max(d10) as d10 ,	max(d11) as d11 ,	max(d12) as d12 ,	max(d13) as d13 ,	max(d14) as d14 ,	max(d15) as d15 ,	max(d16) as d16 ,	max(d17) as d17 ,	max(d18) as d18 ,	max(d19) as d19 ,	max(d20) as d20 ,	max(d21) as d21 ,	max(d22) as d22 ,	max(d23) as d23 ,	max(d24) as d24 ,	max(d25) as d25 ,	max(d26) as d26 ,	max(d27) as d27 ,	max(d28) as d28 ,	max(d29) as d29 ,	max(d30) as d30 ,	max(d31) as d31 from countera GROUP BY ampm_gubun,gubun
 {executed in 57 msec}
2023-07-01 08:43:14.392 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@5daaeb69
2023-07-01 08:43:14.392 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - filterType={dailyArrangeInfo} 
2023-07-01 08:43:14.393 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT k.*,e.phone_no,e.email,e.emp_no FROM ( SELECT a.CAR_REGNO ,a.EMP_NM ,'-' as value,REGEXP_REPLACE(a.d7,'[*0-9@]','') AS ampm,convert(REGEXP_REPLACE(a.d7,'[*ap@]',''),int) AS seq FROM 	TBL_MONTH_ARRANGE_DETAIL a WHERE 	a.company_no = '100' AND 	a.route_nm = '38번' AND    a.BASE_Ym = '2023-04' AND    a.CAR_REGNO  NOT LIKE 'SP%' AND 	a.d7 NOT LIKE '%*%' AND 	a.d7 NOT LIKE '%@%' AND    a.DISPATCH_SEQ = 6 AND    a.INIT_SEQ = 0 UNION ALL SELECT a.CAR_REGNO ,b.EMP_NM ,decode(b.EMP_NM,NULL,'-','SP') AS value,REGEXP_REPLACE(a.d7,'[*0-9@-]','') AS ampm,convert(REGEXP_REPLACE(a.d7,'[*ap@-]',''),int) AS seq FROM 	TBL_MONTH_ARRANGE_DETAIL a LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b on     a.COMPANY_NO =b.COMPANY_NO AND 	a.ROUTE_NM = b.ROUTE_NM AND 	a.BASE_YM  = b.BASE_YM AND 	a.DISPATCH_SEQ = b.DISPATCH_SEQ AND 	a.INIT_SEQ = b.INIT_SEQ AND    b.CAR_REGNO LIKE 'SP%' AND    b.d7 <>'' AND 	a.d7 LIKE b.d7 || '%' WHERE	a.company_no = '100'  AND 	a.route_nm = '38번' AND     a.BASE_Ym = '2023-04' AND     a.CAR_REGNO  NOT LIKE 'SP%' AND 	(a.d7 LIKE '%*%' OR a.d7 LIKE '%@%') AND     a.DISPATCH_SEQ = 6 AND     a.INIT_SEQ = 0 ) k left outer join tbl_employeeInfo e on k.emp_nm = e.emp_nm AND 	e.company_no = '100' ORDER BY 4 ,5
2023-07-01 08:43:14.394 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
108. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 08:43:14.403 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
108. SELECT k.*,e.phone_no,e.email,e.emp_no FROM ( SELECT a.CAR_REGNO ,a.EMP_NM ,'-' as value,REGEXP_REPLACE(a.d7,'[*0-9@]','') AS ampm,convert(REGEXP_REPLACE(a.d7,'[*ap@]',''),int) AS seq FROM 	TBL_MONTH_ARRANGE_DETAIL a WHERE 	a.company_no = '100' AND 	a.route_nm = '38번' AND    a.BASE_Ym = '2023-04' AND    a.CAR_REGNO  NOT LIKE 'SP%' AND 	a.d7 NOT LIKE '%*%' AND 	a.d7 NOT LIKE '%@%' AND    a.DISPATCH_SEQ = 6 AND    a.INIT_SEQ = 0 UNION ALL SELECT a.CAR_REGNO ,b.EMP_NM ,decode(b.EMP_NM,NULL,'-','SP') AS value,REGEXP_REPLACE(a.d7,'[*0-9@-]','') AS ampm,convert(REGEXP_REPLACE(a.d7,'[*ap@-]',''),int) AS seq FROM 	TBL_MONTH_ARRANGE_DETAIL a LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b on     a.COMPANY_NO =b.COMPANY_NO AND 	a.ROUTE_NM = b.ROUTE_NM AND 	a.BASE_YM  = b.BASE_YM AND 	a.DISPATCH_SEQ = b.DISPATCH_SEQ AND 	a.INIT_SEQ = b.INIT_SEQ AND    b.CAR_REGNO LIKE 'SP%' AND    b.d7 <>'' AND 	a.d7 LIKE b.d7 || '%' WHERE	a.company_no = '100'  AND 	a.route_nm = '38번' AND     a.BASE_Ym = '2023-04' AND     a.CAR_REGNO  NOT LIKE 'SP%' AND 	(a.d7 LIKE '%*%' OR a.d7 LIKE '%@%') AND     a.DISPATCH_SEQ = 6 AND     a.INIT_SEQ = 0 ) k left outer join tbl_employeeInfo e on k.emp_nm = e.emp_nm AND 	e.company_no = '100' ORDER BY 4 ,5
 {executed in 9 msec}
2023-07-01 08:43:14.409 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
108. SELECT k.*,e.phone_no,e.email,e.emp_no FROM ( SELECT a.CAR_REGNO ,a.EMP_NM ,'-' as value,REGEXP_REPLACE(a.d7,'[*0-9@]','') AS ampm,convert(REGEXP_REPLACE(a.d7,'[*ap@]',''),int) AS seq FROM 	TBL_MONTH_ARRANGE_DETAIL a WHERE 	a.company_no = '100' AND 	a.route_nm = '38번' AND    a.BASE_Ym = '2023-04' AND    a.CAR_REGNO  NOT LIKE 'SP%' AND 	a.d7 NOT LIKE '%*%' AND 	a.d7 NOT LIKE '%@%' AND    a.DISPATCH_SEQ = 6 AND    a.INIT_SEQ = 0 UNION ALL SELECT a.CAR_REGNO ,b.EMP_NM ,decode(b.EMP_NM,NULL,'-','SP') AS value,REGEXP_REPLACE(a.d7,'[*0-9@-]','') AS ampm,convert(REGEXP_REPLACE(a.d7,'[*ap@-]',''),int) AS seq FROM 	TBL_MONTH_ARRANGE_DETAIL a LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b on     a.COMPANY_NO =b.COMPANY_NO AND 	a.ROUTE_NM = b.ROUTE_NM AND 	a.BASE_YM  = b.BASE_YM AND 	a.DISPATCH_SEQ = b.DISPATCH_SEQ AND 	a.INIT_SEQ = b.INIT_SEQ AND    b.CAR_REGNO LIKE 'SP%' AND    b.d7 <>'' AND 	a.d7 LIKE b.d7 || '%' WHERE	a.company_no = '100'  AND 	a.route_nm = '38번' AND     a.BASE_Ym = '2023-04' AND     a.CAR_REGNO  NOT LIKE 'SP%' AND 	(a.d7 LIKE '%*%' OR a.d7 LIKE '%@%') AND     a.DISPATCH_SEQ = 6 AND     a.INIT_SEQ = 0 ) k left outer join tbl_employeeInfo e on k.emp_nm = e.emp_nm AND 	e.company_no = '100' ORDER BY 4 ,5
 {executed in 6 msec}
2023-07-01 08:43:40.314 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@a71be66
2023-07-01 08:43:40.384 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
108. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 08:43:40.389 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
108. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-전체-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-04-01' AND '2023-07-01' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-04-01' AND '2023-07-01' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 3 msec}
2023-07-01 08:43:43.903 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@ccbfd21a
2023-07-01 08:43:43.905 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
108. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 08:43:43.907 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
108. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			'-전체-' AS route_nm
		,	SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-04-01' AND '2023-07-01' 
	AND 	a.ROUTE_NM = decode('-전체-','-전체-',a.ROUTE_NM,'-전체-')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 2 msec}
2023-07-01 08:43:43.936 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@b92bbafe
2023-07-01 08:43:43.938 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
108. select  /* select_PunctualityAnalize_emp : 배차정시성분석 사원별 */
			a.EMP_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-04-01' AND '2023-07-01' 
	AND 	a.BASE_YMD like  '' || '%'
	AND 	a.BASE_YMD = decode('','',a.base_ymd,  '')
	AND 	a.ROUTE_NM = decode('-전체-','-전체-',a.ROUTE_NM,'-전체-')
	GROUP BY  a.EMP_NM 
	ORDER BY 7 desc
 {executed in 1 msec}
2023-07-01 08:43:46.416 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@76e0723d
2023-07-01 08:43:46.418 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
108. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 08:43:46.419 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
108. select  /* select_PunctualityAnalize_day : 배차정시성분석 일별 */
			'-전체-' AS route_nm
		,	a.BASE_YMD
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-04-01' AND '2023-07-01' 
	AND 	a.BASE_YMD like  '2023-04' || '%' 
	AND 	a.ROUTE_NM = decode('-전체-','-전체-',a.ROUTE_NM,'-전체-')
	GROUP BY  a.BASE_YMD
	ORDER BY 1
 {executed in 1 msec}
2023-07-01 08:43:46.442 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@76e1a361
2023-07-01 08:43:46.443 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
108. select  /* select_PunctualityAnalize_emp : 배차정시성분석 사원별 */
			a.EMP_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-04-01' AND '2023-07-01' 
	AND 	a.BASE_YMD like  '2023-04' || '%'
	AND 	a.BASE_YMD = decode('','',a.base_ymd,  '')
	AND 	a.ROUTE_NM = decode('-전체-','-전체-',a.ROUTE_NM,'-전체-')
	GROUP BY  a.EMP_NM 
	ORDER BY 7 desc
 {executed in 0 msec}
2023-07-01 08:43:52.197 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@449abc72
2023-07-01 08:43:52.198 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
108. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 08:43:52.200 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
108. select  /* select_PunctualityAnalize_detail : 배차정시성분석 일별 */
			a.BASE_YMD
		,	a.ROUTE_NM
		,	a.EMP_NM
		,	a.COL001
		,	a.COL002
		,	a.COL003
		,	a.COL004
		,	a.TERM
		,	a.TERM_85
		,	a.TERM_125
		,	a.TERM_PAST_CNT
		,	a.TERM_LATE_CNT
		,	a.TERM_WIBAN_CNT
		,	a.TOTAL_STATION_CNT
		,	round((a.TERM_WIBAN_CNT*1.0) / (a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD =  '2023-04-03' 
	AND 	a.ROUTE_NM = decode('-전체-','-전체-',a.ROUTE_NM,'-전체-')
	ORDER BY a.ROUTE_NM,a.col002,a.col003
 {executed in 1 msec}
2023-07-01 08:43:52.330 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@d736fd8c
2023-07-01 08:43:52.331 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
108. select  /* select_PunctualityAnalize_emp : 배차정시성분석 사원별 */
			a.EMP_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-04-01' AND '2023-07-01' 
	AND 	a.BASE_YMD like  '' || '%'
	AND 	a.BASE_YMD = decode('2023-04-03','',a.base_ymd,  '2023-04-03')
	AND 	a.ROUTE_NM = decode('-전체-','-전체-',a.ROUTE_NM,'-전체-')
	GROUP BY  a.EMP_NM 
	ORDER BY 7 desc
 {executed in 0 msec}
2023-07-01 08:43:52.430 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@18a7d6f
2023-07-01 08:43:52.433 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
108. select  /* select_PunctualityAnalize_emp : 배차정시성분석 사원별 */
			a.EMP_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-04-01' AND '2023-07-01' 
	AND 	a.BASE_YMD like  '' || '%'
	AND 	a.BASE_YMD = decode('','',a.base_ymd,  '')
	AND 	a.ROUTE_NM = decode('-전체-','-전체-',a.ROUTE_NM,'-전체-')
	GROUP BY  a.EMP_NM 
	ORDER BY 7 desc
 {executed in 0 msec}
2023-07-01 08:44:13.673 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 08:44:13.673 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 08:44:13.673 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 08:44:13.674 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
108. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 08:44:13.676 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
108. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 1 msec}
2023-07-01 08:44:13.678 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
108. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 1 msec}
2023-07-01 08:44:28.461 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
108. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 08:45:10.956 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 08:45:10.956 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 08:45:10.956 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 08:45:10.957 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
109. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 08:45:10.959 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
109. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 08:45:10.962 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
109. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 1 msec}
2023-07-01 08:45:13.463 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
109. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 08:45:16.599 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
110. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 08:45:19.796 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
111. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 08:45:52.079 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
112. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 08:46:10.228 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
113. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 2 msec}
2023-07-01 08:46:23.890 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
114. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 08:48:10.685 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 08:48:10.685 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 08:48:10.685 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 08:48:10.686 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
115. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 08:48:10.690 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
115. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 08:48:10.694 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
115. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 08:48:14.340 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
115. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 08:49:14.426 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 08:49:14.426 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 08:49:14.426 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 08:49:14.427 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
116. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 08:49:14.429 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
116. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 08:49:14.432 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
116. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 08:49:20.241 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
116. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 08:49:38.774 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
117. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 08:49:38.782 INFO  [http-nio-10010-exec-8] [com.pjy.dashboard.dao.DynamicSqlDao] - merge sql : MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , :acc_date , :route_nm , :emp_nm , :acc_time , :car_no , :acc_gb , :gapi_gb , :acc_kind , :jacha_rate , :sangdae_rate , :proc_result , :proc_memo , :acc_place , :daein_in_amt , :daemul_in_amt , :in_tot_amt , :daein_out_amt , :daemul_out_amt , :jacha_amt , :out_tot_amt , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
2023-07-01 08:49:38.783 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
118. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 08:49:38.784 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeBatch(ProxyStatement.java:128)
118. batching 1 statements:
1:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-02-05' , '5-1번' , '남기선' , '13:50:00' , '3548' , '대인' , '가해' , '기타' , '100.0' , '888' , '종결' , '피해자' , '주안7동행정복지센터' , '0' , '0' , '0' , '300000' , '0' , '0' , '300000' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
 {executed in 1 msec}
2023-07-01 08:49:38.810 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 08:49:38.810 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 08:49:38.810 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 08:49:38.813 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
118. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 08:49:38.816 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
118. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 08:50:21.185 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 08:50:21.185 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 08:50:21.185 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 08:50:21.186 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
118. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 08:50:21.188 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
118. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 08:50:21.190 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
118. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 08:50:22.991 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
118. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 08:50:56.972 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 08:50:56.972 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 08:50:56.972 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 08:50:56.973 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
119. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 08:50:56.976 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
119. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 3 msec}
2023-07-01 08:50:56.978 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
119. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 08:51:00.004 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
119. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 08:55:39.255 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 08:55:39.255 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 08:55:39.255 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 08:55:39.256 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
120. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 08:55:39.259 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
120. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 3 msec}
2023-07-01 08:55:39.262 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
120. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 09:00:23.658 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 09:00:23.658 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 09:00:23.659 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 09:00:23.660 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
120. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 09:00:23.663 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
120. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 3 msec}
2023-07-01 09:00:23.667 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
120. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 09:01:00.094 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 09:01:00.095 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 09:01:00.095 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 09:01:00.096 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
120. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 09:01:00.098 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
120. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 09:01:00.100 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
120. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 09:01:01.804 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 09:01:01.804 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 09:01:01.804 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 09:01:01.805 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
120. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 09:01:01.807 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
120. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 1 msec}
2023-07-01 09:01:01.809 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
120. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 09:01:03.016 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 09:01:03.016 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 09:01:03.016 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 09:01:03.018 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
120. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 09:01:03.020 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
120. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 09:01:03.023 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
120. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 09:01:56.712 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 09:01:56.712 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 09:01:56.712 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 09:01:56.713 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
120. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 09:01:56.715 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
120. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 09:01:56.718 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
120. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 1 msec}
2023-07-01 09:02:20.165 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 09:02:20.165 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 09:02:20.166 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 09:02:20.166 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
120. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 09:02:20.168 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
120. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 09:02:20.171 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
120. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 1 msec}
2023-07-01 09:04:05.875 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 09:04:05.875 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 09:04:05.875 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 09:04:05.876 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
120. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 09:04:05.878 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
120. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 1 msec}
2023-07-01 09:04:05.881 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
120. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 09:04:27.107 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 09:04:27.107 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 09:04:27.107 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 09:04:27.108 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
120. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 09:04:27.111 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
120. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 3 msec}
2023-07-01 09:04:27.114 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
120. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 09:05:22.990 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 09:05:22.990 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 09:05:22.990 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 09:05:22.991 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
122. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 09:05:22.994 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
122. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 09:05:22.997 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
122. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 1 msec}
2023-07-01 09:05:25.192 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
122. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 09:05:29.485 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
123. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 09:07:25.452 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 09:07:25.452 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 09:07:25.452 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 09:07:25.453 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
125. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 09:07:25.456 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
125. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 09:07:25.458 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
125. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 09:07:27.376 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
125. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 09:07:39.687 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
126. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 09:07:39.695 INFO  [http-nio-10010-exec-4] [com.pjy.dashboard.dao.DynamicSqlDao] - merge sql : MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , :acc_date , :route_nm , :emp_nm , :acc_time , :car_no , :acc_gb , :gapi_gb , :acc_kind , :jacha_rate , :sangdae_rate , :proc_result , :proc_memo , :acc_place , :daein_in_amt , :daemul_in_amt , :in_tot_amt , :daein_out_amt , :daemul_out_amt , :jacha_amt , :out_tot_amt , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
2023-07-01 09:07:39.696 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
127. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 09:07:39.697 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeBatch(ProxyStatement.java:128)
127. batching 1 statements:
1:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-02-02' , '27번' , '전정훈' , '07:11:00' , '7125' , '자차' , '피해' , '측면충돌' , '888' , '100.0' , '종결' , '수리비' , '신선초교' , '0' , '400000' , '400000' , '0' , '0' , '0' , '0' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
 {executed in 0 msec}
2023-07-01 09:07:47.589 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
127. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 09:08:21.995 ERROR [http-nio-10010-exec-6] [c.p.d.core.error.GlobalExceptionHandler] - handleEntityNotFoundException
java.sql.SQLTransientConnectionException: H2 - Connection is not available, request timed out after 30012ms.
	at com.zaxxer.hikari.pool.HikariPool.createTimeoutException(HikariPool.java:676)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:190)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at com.pjy.dashboard.dao.DynamicSqlDao.getMergeSql(DynamicSqlDao.java:791)
	at com.pjy.dashboard.dao.DynamicSqlDao$$FastClassBySpringCGLIB$$8af24191.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at com.pjy.dashboard.dao.DynamicSqlH2Dao$$EnhancerBySpringCGLIB$$6422f18d.getMergeSql(<generated>)
	at com.pjy.dashboard.service.DynamicSqlService.mergeInfo(DynamicSqlService.java:642)
	at com.pjy.dashboard.controller.TestController.BUS_mergeInfo(TestController.java:432)
	at jdk.internal.reflect.GeneratedMethodAccessor160.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:893)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:798)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:97)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at jdk.internal.reflect.GeneratedMethodAccessor149.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$9a59d126.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:114)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:104)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-07-01 09:08:22.053 WARN  [http-nio-10010-exec-6] [o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver] - Resolved [java.sql.SQLTransientConnectionException: H2 - Connection is not available, request timed out after 30012ms.]
2023-07-01 09:08:22.565 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 09:08:22.565 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 09:08:22.565 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 09:08:52.574 ERROR [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - jdbcTemplate error: Failed to obtain JDBC Connection; nested exception is java.sql.SQLTransientConnectionException: H2 - Connection is not available, request timed out after 30007ms.
2023-07-01 09:08:52.575 WARN  [http-nio-10010-exec-10] [o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver] - Resolved [com.pjy.dashboard.core.error.exception.BusinessException: jdbcTemplate query error]
2023-07-01 09:08:52.594 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 09:08:52.595 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 09:08:52.595 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 09:09:22.607 ERROR [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - jdbcTemplate error: Failed to obtain JDBC Connection; nested exception is java.sql.SQLTransientConnectionException: H2 - Connection is not available, request timed out after 30012ms.
2023-07-01 09:09:22.608 WARN  [http-nio-10010-exec-2] [o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver] - Resolved [com.pjy.dashboard.core.error.exception.BusinessException: jdbcTemplate query error]
2023-07-01 09:09:23.029 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 09:09:23.029 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 09:09:23.029 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 09:09:53.043 ERROR [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - jdbcTemplate error: Failed to obtain JDBC Connection; nested exception is java.sql.SQLTransientConnectionException: H2 - Connection is not available, request timed out after 30013ms.
2023-07-01 09:09:53.044 WARN  [http-nio-10010-exec-6] [o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver] - Resolved [com.pjy.dashboard.core.error.exception.BusinessException: jdbcTemplate query error]
2023-07-01 09:10:31.355 WARN  [http-nio-10010-exec-2] [o.h.engine.jdbc.spi.SqlExceptionHelper] - SQL Error: 0, SQLState: null
2023-07-01 09:10:31.355 ERROR [http-nio-10010-exec-2] [o.h.engine.jdbc.spi.SqlExceptionHelper] - H2 - Connection is not available, request timed out after 30014ms.
2023-07-01 09:10:31.363 ERROR [http-nio-10010-exec-2] [o.s.s.w.a.UsernamePasswordAuthenticationFilter] - An internal error occurred while trying to authenticate the user.
org.springframework.security.authentication.InternalAuthenticationServiceException: org.hibernate.exception.JDBCConnectionException: Unable to acquire JDBC Connection
	at org.springframework.security.authentication.dao.DaoAuthenticationProvider.retrieveUser(DaoAuthenticationProvider.java:123)
	at org.springframework.security.authentication.dao.AbstractUserDetailsAuthenticationProvider.authenticate(AbstractUserDetailsAuthenticationProvider.java:144)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:175)
	at org.springframework.security.authentication.ProviderManager.authenticate(ProviderManager.java:200)
	at org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter.attemptAuthentication(UsernamePasswordAuthenticationFilter.java:94)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:212)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:97)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at jdk.internal.reflect.GeneratedMethodAccessor149.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$9a59d126.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:114)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:104)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: javax.persistence.PersistenceException: org.hibernate.exception.JDBCConnectionException: Unable to acquire JDBC Connection
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:154)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1515)
	at org.hibernate.query.internal.AbstractProducedQuery.getSingleResult(AbstractProducedQuery.java:1554)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.orm.jpa.SharedEntityManagerCreator$DeferredQueryInvocationHandler.invoke(SharedEntityManagerCreator.java:404)
	at jdk.proxy2/jdk.proxy2.$Proxy165.getSingleResult(Unknown Source)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution$SingleEntityExecution.doExecute(JpaQueryExecution.java:221)
	at org.springframework.data.jpa.repository.query.JpaQueryExecution.execute(JpaQueryExecution.java:91)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.doExecute(AbstractJpaQuery.java:136)
	at org.springframework.data.jpa.repository.query.AbstractJpaQuery.execute(AbstractJpaQuery.java:125)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.doInvoke(RepositoryFactorySupport.java:605)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.lambda$invoke$3(RepositoryFactorySupport.java:595)
	at org.springframework.data.repository.core.support.RepositoryFactorySupport$QueryExecutorMethodInterceptor.invoke(RepositoryFactorySupport.java:595)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.projection.DefaultMethodInvokingMethodInterceptor.invoke(DefaultMethodInvokingMethodInterceptor.java:59)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:295)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:98)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:139)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:144)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$ExposeRepositoryInvocationInterceptor.invoke(CrudMethodMetadataPostProcessor.java:364)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.repository.core.support.SurroundingTransactionDetectorMethodInterceptor.invoke(SurroundingTransactionDetectorMethodInterceptor.java:61)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:212)
	at jdk.proxy3/jdk.proxy3.$Proxy141.testserId(Unknown Source)
	at com.pjy.dashboard.service.MemberServiceImpl.loadUserByUsername(MemberServiceImpl.java:41)
	at com.pjy.dashboard.service.MemberServiceImpl$$FastClassBySpringCGLIB$$6a5d756c.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at com.pjy.dashboard.service.MemberServiceImpl$$EnhancerBySpringCGLIB$$3a5ccefc.loadUserByUsername(<generated>)
	at org.springframework.security.authentication.dao.DaoAuthenticationProvider.retrieveUser(DaoAuthenticationProvider.java:108)
	... 79 common frames omitted
Caused by: org.hibernate.exception.JDBCConnectionException: Unable to acquire JDBC Connection
	at org.hibernate.exception.internal.SQLExceptionTypeDelegate.convert(SQLExceptionTypeDelegate.java:48)
	at org.hibernate.exception.internal.StandardSQLExceptionConverter.convert(StandardSQLExceptionConverter.java:42)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:113)
	at org.hibernate.engine.jdbc.spi.SqlExceptionHelper.convert(SqlExceptionHelper.java:99)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.acquireConnectionIfNeeded(LogicalConnectionManagedImpl.java:109)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.getPhysicalConnection(LogicalConnectionManagedImpl.java:136)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.connection(StatementPreparerImpl.java:50)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$5.doPrepare(StatementPreparerImpl.java:149)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl$StatementPreparationTemplate.prepareStatement(StatementPreparerImpl.java:176)
	at org.hibernate.engine.jdbc.internal.StatementPreparerImpl.prepareQueryStatement(StatementPreparerImpl.java:151)
	at org.hibernate.loader.Loader.prepareQueryStatement(Loader.java:2082)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:2012)
	at org.hibernate.loader.Loader.executeQueryStatement(Loader.java:1990)
	at org.hibernate.loader.Loader.doQuery(Loader.java:949)
	at org.hibernate.loader.Loader.doQueryAndInitializeNonLazyCollections(Loader.java:351)
	at org.hibernate.loader.Loader.doList(Loader.java:2787)
	at org.hibernate.loader.Loader.doList(Loader.java:2770)
	at org.hibernate.loader.Loader.listIgnoreQueryCache(Loader.java:2604)
	at org.hibernate.loader.Loader.list(Loader.java:2599)
	at org.hibernate.loader.custom.CustomLoader.list(CustomLoader.java:338)
	at org.hibernate.internal.SessionImpl.listCustomQuery(SessionImpl.java:2243)
	at org.hibernate.internal.AbstractSharedSessionContract.list(AbstractSharedSessionContract.java:1069)
	at org.hibernate.query.internal.NativeQueryImpl.doList(NativeQueryImpl.java:170)
	at org.hibernate.query.internal.AbstractProducedQuery.list(AbstractProducedQuery.java:1506)
	... 117 common frames omitted
Caused by: java.sql.SQLTransientConnectionException: H2 - Connection is not available, request timed out after 30014ms.
	at com.zaxxer.hikari.pool.HikariPool.createTimeoutException(HikariPool.java:676)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:190)
	at com.zaxxer.hikari.pool.HikariPool.getConnection(HikariPool.java:155)
	at com.zaxxer.hikari.HikariDataSource.getConnection(HikariDataSource.java:100)
	at org.hibernate.engine.jdbc.connections.internal.DatasourceConnectionProviderImpl.getConnection(DatasourceConnectionProviderImpl.java:122)
	at org.hibernate.internal.NonContextualJdbcConnectionAccess.obtainConnection(NonContextualJdbcConnectionAccess.java:35)
	at org.hibernate.resource.jdbc.internal.LogicalConnectionManagedImpl.acquireConnectionIfNeeded(LogicalConnectionManagedImpl.java:106)
	... 136 common frames omitted
2023-07-01 09:10:31.363 INFO  [http-nio-10010-exec-2] [c.p.d.configuration.SecurityConfig] - exception:: org.hibernate.exception.JDBCConnectionException: Unable to acquire JDBC Connection
2023-07-01 09:10:31.404 INFO  [http-nio-10010-exec-5] [c.p.d.interceptor.LoggerInterceptor] - ============================== START ==============================
2023-07-01 09:10:31.404 INFO  [http-nio-10010-exec-5] [c.p.d.interceptor.LoggerInterceptor] -  Class       	:  class org.springframework.web.method.HandlerMethod
2023-07-01 09:10:31.404 INFO  [http-nio-10010-exec-5] [c.p.d.interceptor.LoggerInterceptor] -  Request URI 	:  /error
2023-07-01 09:10:31.404 INFO  [http-nio-10010-exec-5] [c.p.d.interceptor.LoggerInterceptor] -  Request addr	:  0:0:0:0:0:0:0:1
2023-07-01 09:10:31.404 INFO  [http-nio-10010-exec-5] [c.p.d.interceptor.LoggerInterceptor] -  Servlet URI 	:  /error
2023-07-01 09:10:47.417 INFO  [RMI TCP Connection(112)-127.0.0.1] [o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin] - Application shutdown requested.
2023-07-01 09:10:47.445 INFO  [RMI TCP Connection(112)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Shutting down ExecutorService 'asyncThreadPool'
2023-07-01 09:10:47.449 INFO  [RMI TCP Connection(112)-127.0.0.1] [com.zaxxer.hikari.HikariDataSource] - H2 - Shutdown initiated...
2023-07-01 09:10:47.450 INFO  [RMI TCP Connection(112)-127.0.0.1] [com.zaxxer.hikari.HikariDataSource] - H2 - Shutdown completed.
2023-07-01 09:10:47.484 INFO  [RMI TCP Connection(112)-127.0.0.1] [com.pjy.dashboard.filter.TestFilter] - destroy Pjy Filter
2023-07-01 09:10:52.644 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Starting PjyApplication on DESKTOP-QJPD93S with PID 26068 (D:\BUS\dashboard\dashboard\target\classes started by admin in D:\BUS\dashboard\dashboard)
2023-07-01 09:10:52.653 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - The following profiles are active: oauth
2023-07-01 09:10:52.707 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-07-01 09:10:52.707 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-07-01 09:10:53.912 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-07-01 09:10:53.913 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-07-01 09:10:54.060 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 137ms. Found 3 JPA repository interfaces.
2023-07-01 09:10:54.415 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-07-01 09:10:54.415 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2023-07-01 09:10:54.459 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.FileRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-07-01 09:10:54.460 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.MemberRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-07-01 09:10:54.462 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.RememberMeRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-07-01 09:10:54.462 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 47ms. Found 0 JDBC repository interfaces.
2023-07-01 09:10:54.896 INFO  [restartedMain] [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] - Post-processing PropertySource instances
2023-07-01 09:10:54.961 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2023-07-01 09:10:54.961 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource commandLineArgs [org.springframework.core.env.SimpleCommandLinePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-07-01 09:10:54.962 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-07-01 09:10:54.962 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-07-01 09:10:54.962 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2023-07-01 09:10:54.962 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
2023-07-01 09:10:54.962 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2023-07-01 09:10:54.963 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application-oauth.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-07-01 09:10:54.963 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-07-01 09:10:54.963 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2023-07-01 09:10:54.963 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [pjy.properties] [org.springframework.core.env.CompositePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-07-01 09:10:54.963 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [common.properties] [org.springframework.core.io.support.ResourcePropertySource] to EncryptableMapPropertySourceWrapper
2023-07-01 09:10:55.033 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'asyncConfiguration' of type [com.pjy.dashboard.configuration.AsyncConfiguration$$EnhancerBySpringCGLIB$$168ac79d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-01 09:10:55.084 INFO  [restartedMain] [c.u.j.filter.DefaultLazyPropertyFilter] - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2023-07-01 09:10:55.170 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$812bca] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-01 09:10:55.249 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-01 09:10:55.252 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@f0f1dc8' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-01 09:10:55.253 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$2555ce7c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-01 09:10:55.263 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration$$EnhancerBySpringCGLIB$$4aaae692] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-01 09:10:55.267 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-01 09:10:55.268 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-01 09:10:55.298 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$67d36390] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-01 09:10:55.325 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$e753b0c2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-01 09:10:55.460 INFO  [restartedMain] [c.u.j.r.DefaultLazyPropertyResolver] - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2023-07-01 09:10:55.466 INFO  [restartedMain] [c.u.j.d.DefaultLazyPropertyDetector] - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2023-07-01 09:10:55.884 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 10010 (http)
2023-07-01 09:10:55.908 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Initializing ProtocolHandler ["http-nio-10010"]
2023-07-01 09:10:55.919 INFO  [restartedMain] [org.apache.catalina.core.StandardService] - Starting service [Tomcat]
2023-07-01 09:10:55.919 INFO  [restartedMain] [org.apache.catalina.core.StandardEngine] - Starting Servlet engine: [Apache Tomcat/9.0.29]
2023-07-01 09:10:56.289 INFO  [restartedMain] [org.apache.jasper.servlet.TldScanner] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2023-07-01 09:10:56.302 INFO  [restartedMain] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring embedded WebApplicationContext
2023-07-01 09:10:56.302 INFO  [restartedMain] [o.s.web.context.ContextLoader] - Root WebApplicationContext: initialization completed in 3595 ms
2023-07-01 09:10:57.145 INFO  [restartedMain] [c.u.j.encryptor.DefaultLazyEncryptor] - Found Custom Encryptor Bean org.jasypt.encryption.pbe.PooledPBEStringEncryptor@38d9a900 with name: jasyptStringEncryptor
2023-07-01 09:10:57.193 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Starting...
2023-07-01 09:10:57.288 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.executeSql(PoolBase.java:567)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 8 msec}
2023-07-01 09:10:57.293 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Start completed.
2023-07-01 09:10:58.082 INFO  [restartedMain] [com.pjy.dashboard.filter.TestFilter] - init Pjy Filter
2023-07-01 09:10:58.408 INFO  [restartedMain] [o.hibernate.jpa.internal.util.LogHelper] - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2023-07-01 09:10:58.481 INFO  [restartedMain] [org.hibernate.Version] - HHH000412: Hibernate Core {5.3.14.Final}
2023-07-01 09:10:58.482 INFO  [restartedMain] [org.hibernate.cfg.Environment] - HHH000206: hibernate.properties not found
2023-07-01 09:10:58.630 INFO  [restartedMain] [org.hibernate.annotations.common.Version] - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2023-07-01 09:10:58.872 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 09:10:58.890 INFO  [restartedMain] [org.hibernate.dialect.Dialect] - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2023-07-01 09:10:59.611 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 09:10:59.613 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select SEQUENCE_CATALOG, SEQUENCE_SCHEMA, SEQUENCE_NAME, INCREMENT from information_schema.sequences
 {executed in 0 msec}
2023-07-01 09:10:59.662 INFO  [restartedMain] [o.s.o.j.LocalContainerEntityManagerFactoryBean] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-07-01 09:10:59.932 INFO  [restartedMain] [o.h.h.i.QueryTranslatorFactoryInitiator] - HHH000397: Using ASTQueryTranslatorFactory
2023-07-01 09:11:01.004 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService
2023-07-01 09:11:01.015 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'asyncThreadPool'
2023-07-01 09:11:01.217 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/h2-console/**'], []
2023-07-01 09:11:01.217 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/css/**'], []
2023-07-01 09:11:01.217 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/js/**'], []
2023-07-01 09:11:01.217 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/monitor/**'], []
2023-07-01 09:11:01.217 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/img/**'], []
2023-07-01 09:11:01.217 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/lib/**'], []
2023-07-01 09:11:01.217 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/main.css'], []
2023-07-01 09:11:01.217 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/common.js'], []
2023-07-01 09:11:01.217 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/resources/**'], []
2023-07-01 09:11:01.380 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@67c6840f, org.springframework.security.web.context.SecurityContextPersistenceFilter@3986808c, org.springframework.security.web.header.HeaderWriterFilter@5f8a3a62, org.springframework.web.filter.CorsFilter@469f2646, org.springframework.security.web.authentication.logout.LogoutFilter@65150c00, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@284d6c09, org.springframework.security.web.session.ConcurrentSessionFilter@698b89cd, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@53c1b17, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1745aa22, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5e80e7d3, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@379ca4a0, org.springframework.security.web.session.SessionManagementFilter@22f140c3, org.springframework.security.web.access.ExceptionTranslationFilter@5cc6fbe4, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@739e73eb]
2023-07-01 09:11:01.402 INFO  [restartedMain] [o.s.aop.framework.CglibAopProxy] - Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(javax.servlet.FilterConfig) throws javax.servlet.ServletException] because it is marked as final: Consider using interface-based JDK proxies instead!
2023-07-01 09:11:01.765 WARN  [restartedMain] [o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-07-01 09:11:01.842 INFO  [restartedMain] [o.s.b.a.w.s.WelcomePageHandlerMapping] - Adding welcome page: ServletContext resource [/index.html]
2023-07-01 09:11:02.272 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 09:11:03.081 INFO  [restartedMain] [o.s.b.d.a.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2023-07-01 09:11:03.109 INFO  [restartedMain] [o.s.b.a.e.web.EndpointLinksResolver] - Exposing 16 endpoint(s) beneath base path '/actuator'
2023-07-01 09:11:03.252 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskScheduler] - Initializing ExecutorService
2023-07-01 09:11:03.256 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Starting ProtocolHandler ["http-nio-10010"]
2023-07-01 09:11:03.314 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 10010 (http) with context path ''
2023-07-01 09:11:03.317 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Started PjyApplication in 11.128 seconds (JVM running for 12.476)
2023-07-01 09:11:03.318 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-07-01 09:11:03.318 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - Application started
2023-07-01 09:11:03.318 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-07-01 09:11:22.397 INFO  [http-nio-10010-exec-1] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-07-01 09:11:22.397 INFO  [http-nio-10010-exec-1] [o.s.web.servlet.DispatcherServlet] - Initializing Servlet 'dispatcherServlet'
2023-07-01 09:11:22.454 INFO  [http-nio-10010-exec-1] [o.s.web.servlet.DispatcherServlet] - Completed initialization in 57 ms
2023-07-01 09:11:22.643 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 09:11:22.650 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select * from MEMBER where userId = 'p00139'
 {executed in 0 msec}
2023-07-01 09:11:22.672 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.MemberServiceImpl] - ROLE_ADMIN
2023-07-01 09:11:22.762 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.MemberServiceImpl] - pass:$2a$10$MNrQAPw.4k9j2y08eTmYEeI7oKPuaWbA97HHog.8PYep5HsRwhbae,$2a$10$W2ipJYv6i4XQ9qN2oTFHBucmiWeNsqQHvAOqDm/2XGxKyopiovipS
2023-07-01 09:11:22.927 INFO  [http-nio-10010-exec-1] [c.p.d.configuration.SecurityConfig] - authentication:: p00139
2023-07-01 09:11:26.376 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 09:11:26.377 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 09:11:26.425 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 09:11:26.438 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 09:11:26.442 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 3 msec}
2023-07-01 09:11:26.448 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 3 msec}
2023-07-01 09:11:28.542 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 09:11:32.178 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
2. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 09:11:32.185 INFO  [http-nio-10010-exec-10] [com.pjy.dashboard.dao.DynamicSqlDao] - merge sql : MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , :acc_date , :route_nm , :emp_nm , :acc_time , :car_no , :acc_gb , :gapi_gb , :acc_kind , :jacha_rate , :sangdae_rate , :proc_result , :proc_memo , :acc_place , :daein_in_amt , :daemul_in_amt , :in_tot_amt , :daein_out_amt , :daemul_out_amt , :jacha_amt , :out_tot_amt , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
2023-07-01 09:11:32.191 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
3. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 09:11:32.199 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeBatch(ProxyStatement.java:128)
3. batching 1 statements:
1:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-01-19' , '21번' , '이용진' , '06:57:00' , '3623' , '자차' , '피해' , '측면충돌' , '0' , '100.0' , '종결' , '현대접수' , '매소홀터널' , '0' , '217040' , '217040' , '0' , '0' , '0' , '0' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
 {executed in 3 msec}
2023-07-01 09:12:00.338 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 09:12:00.338 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 09:12:00.338 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 09:12:00.339 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
3. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 09:12:00.342 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
3. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 09:12:00.345 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
3. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 09:12:02.144 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
3. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 09:12:05.400 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
4. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 09:12:05.411 INFO  [http-nio-10010-exec-8] [com.pjy.dashboard.dao.DynamicSqlDao] - merge sql : MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , :acc_date , :route_nm , :emp_nm , :acc_time , :car_no , :acc_gb , :gapi_gb , :acc_kind , :jacha_rate , :sangdae_rate , :proc_result , :proc_memo , :acc_place , :daein_in_amt , :daemul_in_amt , :in_tot_amt , :daein_out_amt , :daemul_out_amt , :jacha_amt , :out_tot_amt , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
2023-07-01 09:12:05.412 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
5. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 09:12:05.413 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeBatch(ProxyStatement.java:128)
5. batching 1 statements:
1:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-01-15' , '27번' , '임인복' , '22:32:00' , '3638' , '자차' , '자피' , '시설물' , '100.0' , '0' , '종결' , '회사' , '남동중학교' , '0' , '0' , '0' , '0' , '0' , '172720' , '172720' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
 {executed in 1 msec}
2023-07-01 09:12:08.509 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
5. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 09:12:09.736 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
6. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 09:12:09.745 INFO  [http-nio-10010-exec-5] [com.pjy.dashboard.dao.DynamicSqlDao] - merge sql : MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , :acc_date , :route_nm , :emp_nm , :acc_time , :car_no , :acc_gb , :gapi_gb , :acc_kind , :jacha_rate , :sangdae_rate , :proc_result , :proc_memo , :acc_place , :daein_in_amt , :daemul_in_amt , :in_tot_amt , :daein_out_amt , :daemul_out_amt , :jacha_amt , :out_tot_amt , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
2023-07-01 09:12:09.747 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
7. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 09:12:09.749 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeBatch(ProxyStatement.java:128)
7. batching 1 statements:
1:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-01-26' , '5--번' , '신경식' , '16:27:00' , '3646' , '자차' , '피해' , '측면충돌' , '4444' , '100.0' , '종결' , '미추홀서경찰관/각자수리' , '굴다리' , '0' , '0' , '0' , '0' , '0' , '0' , '0' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
 {executed in 1 msec}
2023-07-01 09:12:11.649 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
7. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 09:12:13.653 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
8. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 09:12:13.660 INFO  [http-nio-10010-exec-5] [com.pjy.dashboard.dao.DynamicSqlDao] - merge sql : MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , :acc_date , :route_nm , :emp_nm , :acc_time , :car_no , :acc_gb , :gapi_gb , :acc_kind , :jacha_rate , :sangdae_rate , :proc_result , :proc_memo , :acc_place , :daein_in_amt , :daemul_in_amt , :in_tot_amt , :daein_out_amt , :daemul_out_amt , :jacha_amt , :out_tot_amt , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
2023-07-01 09:12:13.661 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
9. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 09:12:13.663 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeBatch(ProxyStatement.java:128)
9. batching 1 statements:
1:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-02-02' , '27번' , '전정훈' , '07:11:00' , '7125' , '자차' , '피해' , '측면충돌' , '888' , '100.0' , '종결' , '수리비' , '신선초교' , '0' , '400000' , '400000' , '0' , '0' , '0' , '0' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
 {executed in 1 msec}
2023-07-01 09:12:17.028 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
9. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 09:12:23.261 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
10. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 09:12:23.266 INFO  [http-nio-10010-exec-2] [com.pjy.dashboard.dao.DynamicSqlDao] - merge sql : MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , :acc_date , :route_nm , :emp_nm , :acc_time , :car_no , :acc_gb , :gapi_gb , :acc_kind , :jacha_rate , :sangdae_rate , :proc_result , :proc_memo , :acc_place , :daein_in_amt , :daemul_in_amt , :in_tot_amt , :daein_out_amt , :daemul_out_amt , :jacha_amt , :out_tot_amt , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
2023-07-01 09:12:23.268 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
11. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 09:12:23.270 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeBatch(ProxyStatement.java:128)
11. batching 1 statements:
1:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-01-29' , '38번' , '박정훈' , '12:16:00' , '3575' , '자차' , '피해' , '측면충돌' , '777' , '100.0' , '종결' , '삼성접수' , '독정이고개' , '0' , '500000' , '500000' , '0' , '0' , '0' , '0' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
 {executed in 0 msec}
2023-07-01 09:12:27.064 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
11. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 09:12:32.346 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
12. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 3 msec}
2023-07-01 09:12:34.137 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
13. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 09:12:38.950 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
14. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 09:14:02.156 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 09:14:02.157 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 09:14:02.157 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 09:14:02.158 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
15. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 09:14:02.161 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
15. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 09:14:02.166 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
15. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 3 msec}
2023-07-01 09:14:03.696 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
15. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 09:14:15.699 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
16. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 09:14:15.707 INFO  [http-nio-10010-exec-6] [com.pjy.dashboard.dao.DynamicSqlDao] - merge sql : MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , :acc_date , :route_nm , :emp_nm , :acc_time , :car_no , :acc_gb , :gapi_gb , :acc_kind , :jacha_rate , :sangdae_rate , :proc_result , :proc_memo , :acc_place , :daein_in_amt , :daemul_in_amt , :in_tot_amt , :daein_out_amt , :daemul_out_amt , :jacha_amt , :out_tot_amt , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
2023-07-01 09:14:15.708 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
17. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 09:14:15.710 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeBatch(ProxyStatement.java:128)
17. batching 1 statements:
1:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-02-02' , '27번' , '전정훈' , '07:11:00' , '7125' , '자차' , '피해' , '측면충돌' , '888' , '100.0' , '종결' , '수리비' , '신선초교' , '0' , '400000' , '400000' , '0' , '0' , '0' , '0' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
 {executed in 1 msec}
2023-07-01 09:16:22.766 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 09:16:22.766 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 09:16:22.767 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 09:16:22.768 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
17. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 09:16:22.770 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
17. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 09:16:22.773 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
17. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 1 msec}
2023-07-01 09:16:24.391 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
17. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 09:16:28.260 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
18. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 09:20:06.529 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 09:20:06.529 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 09:20:06.529 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 09:20:06.530 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
19. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 09:20:06.532 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
19. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 09:20:06.535 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
19. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 09:45:30.971 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 09:45:30.971 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 09:45:30.971 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 09:45:30.973 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
29. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 09:45:30.977 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
29. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 3 msec}
2023-07-01 09:45:30.980 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
29. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 09:46:28.363 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 09:46:28.363 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 09:46:28.363 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 09:46:28.364 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
29. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 09:46:28.366 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
29. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 09:46:28.369 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
29. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 09:47:22.465 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 09:47:22.465 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 09:47:22.465 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 09:47:22.466 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
29. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 09:47:22.472 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
29. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 5 msec}
2023-07-01 09:47:22.475 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
29. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 09:51:37.147 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 09:51:37.147 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 09:51:37.147 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 09:51:37.148 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
29. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 09:51:37.150 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
29. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 09:51:37.153 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
29. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 09:55:21.985 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 09:55:21.985 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 09:55:21.985 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 09:55:21.986 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
37. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 09:55:21.989 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
37. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 3 msec}
2023-07-01 09:55:21.993 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
37. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 10:03:02.535 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 10:03:02.535 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 10:03:02.536 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 10:03:02.537 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
39. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 10:03:02.540 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
39. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 3 msec}
2023-07-01 10:03:02.543 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
39. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 10:06:36.887 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 10:06:36.887 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 10:06:36.887 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 10:06:36.888 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
39. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 10:06:36.891 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
39. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 3 msec}
2023-07-01 10:06:36.895 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
39. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 10:08:28.717 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 10:08:28.717 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 10:08:28.717 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 10:08:28.718 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
39. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 10:08:28.720 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
39. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 10:08:28.723 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
39. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 3 msec}
2023-07-01 10:09:07.187 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 10:09:07.187 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 10:09:07.187 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 10:09:07.188 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
39. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 10:09:07.191 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
39. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 10:09:07.193 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
39. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 13:59:28.698 WARN  [H2 housekeeper] [com.zaxxer.hikari.pool.HikariPool] - H2 - Thread starvation or clock leap detected (housekeeper delta=3h29s785ms567µs).
2023-07-01 14:55:17.639 INFO  [Catalina-utility-2] [c.pjy.dashboard.listener.SessionListener] - updateUserCloseTime p00139 
2023-07-01 14:55:17.640 INFO  [Catalina-utility-2] [c.pjy.dashboard.listener.SessionListener] - currentSessionUserList ->  false
2023-07-01 14:55:17.640 INFO  [Catalina-utility-2] [c.pjy.dashboard.listener.SessionListener] - updateUserCloseTime p00139 
2023-07-01 14:55:17.640 INFO  [Catalina-utility-2] [c.pjy.dashboard.listener.SessionListener] - currentSessionUserList ->  false
2023-07-01 14:55:19.066 WARN  [H2 housekeeper] [com.zaxxer.hikari.pool.HikariPool] - H2 - Thread starvation or clock leap detected (housekeeper delta=55m58s37ms124µs).
2023-07-01 14:56:55.015 INFO  [http-nio-10010-exec-6] [c.p.d.interceptor.LoggerInterceptor] - ============================== START ==============================
2023-07-01 14:56:55.015 INFO  [http-nio-10010-exec-6] [c.p.d.interceptor.LoggerInterceptor] -  Class       	:  class org.springframework.web.method.HandlerMethod
2023-07-01 14:56:55.015 INFO  [http-nio-10010-exec-6] [c.p.d.interceptor.LoggerInterceptor] -  Request URI 	:  /
2023-07-01 14:56:55.015 INFO  [http-nio-10010-exec-6] [c.p.d.interceptor.LoggerInterceptor] -  Request addr	:  0:0:0:0:0:0:0:1
2023-07-01 14:56:55.016 INFO  [http-nio-10010-exec-6] [c.p.d.interceptor.LoggerInterceptor] -  Servlet URI 	:  /
2023-07-01 14:56:55.102 ERROR [http-nio-10010-exec-6] [o.a.c.c.C.[Tomcat].[localhost].[/].[jsp]] - Servlet.service() for servlet [jsp] threw exception
java.lang.IllegalStateException: Cannot create a session after the response has been committed
	at org.apache.catalina.connector.Request.doGetSession(Request.java:2993)
	at org.apache.catalina.connector.Request.getSession(Request.java:2432)
	at org.apache.catalina.connector.RequestFacade.getSession(RequestFacade.java:908)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:244)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:582)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:527)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at org.apache.jasper.runtime.PageContextImpl.initialize(PageContextImpl.java:133)
	at org.apache.jasper.runtime.JspFactoryImpl.internalGetPageContext(JspFactoryImpl.java:109)
	at org.apache.jasper.runtime.JspFactoryImpl.getPageContext(JspFactoryImpl.java:60)
	at org.apache.jsp.WEB_002dINF.jsp.home_jsp._jspService(home_jsp.java:121)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:477)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:385)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:329)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:580)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:516)
	at org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequestDispatcher.include(HeaderWriterFilter.java:149)
	at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:163)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:317)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1372)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:97)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at jdk.internal.reflect.GeneratedMethodAccessor111.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$22989add.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:114)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:104)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-07-01 14:56:55.109 ERROR [http-nio-10010-exec-6] [o.a.c.c.C.[.[.[/].[dispatcherServlet]] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [javax.servlet.ServletException: java.lang.IllegalStateException: Cannot create a session after the response has been committed] with root cause
java.lang.IllegalStateException: Cannot create a session after the response has been committed
	at org.apache.catalina.connector.Request.doGetSession(Request.java:2993)
	at org.apache.catalina.connector.Request.getSession(Request.java:2432)
	at org.apache.catalina.connector.RequestFacade.getSession(RequestFacade.java:908)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:244)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:582)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:527)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at org.apache.jasper.runtime.PageContextImpl.initialize(PageContextImpl.java:133)
	at org.apache.jasper.runtime.JspFactoryImpl.internalGetPageContext(JspFactoryImpl.java:109)
	at org.apache.jasper.runtime.JspFactoryImpl.getPageContext(JspFactoryImpl.java:60)
	at org.apache.jsp.WEB_002dINF.jsp.home_jsp._jspService(home_jsp.java:121)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:477)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:385)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:329)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:580)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:516)
	at org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequestDispatcher.include(HeaderWriterFilter.java:149)
	at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:163)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:317)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1372)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:97)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at jdk.internal.reflect.GeneratedMethodAccessor111.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$22989add.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:114)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:104)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-07-01 14:56:55.117 INFO  [http-nio-10010-exec-6] [c.p.d.interceptor.LoggerInterceptor] - ============================== START ==============================
2023-07-01 14:56:55.117 INFO  [http-nio-10010-exec-6] [c.p.d.interceptor.LoggerInterceptor] -  Class       	:  class org.springframework.web.method.HandlerMethod
2023-07-01 14:56:55.117 INFO  [http-nio-10010-exec-6] [c.p.d.interceptor.LoggerInterceptor] -  Request URI 	:  /error
2023-07-01 14:56:55.117 INFO  [http-nio-10010-exec-6] [c.p.d.interceptor.LoggerInterceptor] -  Request addr	:  0:0:0:0:0:0:0:1
2023-07-01 14:56:55.117 INFO  [http-nio-10010-exec-6] [c.p.d.interceptor.LoggerInterceptor] -  Servlet URI 	:  /error
2023-07-01 14:56:56.270 ERROR [http-nio-10010-exec-6] [o.a.c.c.C.[Tomcat].[localhost].[/].[jsp]] - Servlet.service() for servlet [jsp] threw exception
java.lang.IllegalStateException: Cannot create a session after the response has been committed
	at org.apache.catalina.connector.Request.doGetSession(Request.java:2993)
	at org.apache.catalina.connector.Request.getSession(Request.java:2432)
	at org.apache.catalina.connector.RequestFacade.getSession(RequestFacade.java:908)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:244)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:582)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:244)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:582)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:527)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at org.apache.jasper.runtime.PageContextImpl.initialize(PageContextImpl.java:133)
	at org.apache.jasper.runtime.JspFactoryImpl.internalGetPageContext(JspFactoryImpl.java:109)
	at org.apache.jasper.runtime.JspFactoryImpl.getPageContext(JspFactoryImpl.java:60)
	at org.apache.jsp.WEB_002dINF.jsp.error_jsp._jspService(error_jsp.java:107)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:477)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:385)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:329)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:580)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:516)
	at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:163)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:317)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1372)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at jdk.internal.reflect.GeneratedMethodAccessor111.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$22989add.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-07-01 14:56:56.272 ERROR [http-nio-10010-exec-6] [o.a.c.c.C.[.[.[/].[dispatcherServlet]] - Servlet.service() for servlet [dispatcherServlet] threw exception
java.lang.IllegalStateException: Cannot create a session after the response has been committed
	at org.apache.catalina.connector.Request.doGetSession(Request.java:2993)
	at org.apache.catalina.connector.Request.getSession(Request.java:2432)
	at org.apache.catalina.connector.RequestFacade.getSession(RequestFacade.java:908)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:244)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:582)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:244)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:582)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:527)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at org.apache.jasper.runtime.PageContextImpl.initialize(PageContextImpl.java:133)
	at org.apache.jasper.runtime.JspFactoryImpl.internalGetPageContext(JspFactoryImpl.java:109)
	at org.apache.jasper.runtime.JspFactoryImpl.getPageContext(JspFactoryImpl.java:60)
	at org.apache.jsp.WEB_002dINF.jsp.error_jsp._jspService(error_jsp.java:107)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:477)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:385)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:329)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:580)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:516)
	at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:163)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:317)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1372)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at jdk.internal.reflect.GeneratedMethodAccessor111.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$22989add.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-07-01 14:56:56.273 ERROR [http-nio-10010-exec-6] [o.a.c.c.C.[Tomcat].[localhost]] - Exception Processing ErrorPage[errorCode=0, location=/error]
org.apache.jasper.JasperException: javax.servlet.ServletException: java.lang.IllegalStateException: Cannot create a session after the response has been committed
	at org.apache.jasper.servlet.JspServletWrapper.handleJspException(JspServletWrapper.java:639)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:500)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:385)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:329)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:580)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:516)
	at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:163)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:317)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1372)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at jdk.internal.reflect.GeneratedMethodAccessor111.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$22989add.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: javax.servlet.ServletException: java.lang.IllegalStateException: Cannot create a session after the response has been committed
	at org.apache.jsp.WEB_002dINF.jsp.error_jsp._jspService(error_jsp.java:144)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:477)
	... 97 common frames omitted
Caused by: java.lang.IllegalStateException: Cannot create a session after the response has been committed
	at org.apache.catalina.connector.Request.doGetSession(Request.java:2993)
	at org.apache.catalina.connector.Request.getSession(Request.java:2432)
	at org.apache.catalina.connector.RequestFacade.getSession(RequestFacade.java:908)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:244)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:582)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:244)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:582)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:527)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at org.apache.jasper.runtime.PageContextImpl.initialize(PageContextImpl.java:133)
	at org.apache.jasper.runtime.JspFactoryImpl.internalGetPageContext(JspFactoryImpl.java:109)
	at org.apache.jasper.runtime.JspFactoryImpl.getPageContext(JspFactoryImpl.java:60)
	at org.apache.jsp.WEB_002dINF.jsp.error_jsp._jspService(error_jsp.java:107)
	... 100 common frames omitted
2023-07-01 14:56:56.516 INFO  [http-nio-10010-exec-10] [c.p.d.interceptor.LoggerInterceptor] - ============================== START ==============================
2023-07-01 14:56:56.517 INFO  [http-nio-10010-exec-10] [c.p.d.interceptor.LoggerInterceptor] -  Class       	:  class org.springframework.web.method.HandlerMethod
2023-07-01 14:56:56.517 INFO  [http-nio-10010-exec-10] [c.p.d.interceptor.LoggerInterceptor] -  Request URI 	:  /error
2023-07-01 14:56:56.517 INFO  [http-nio-10010-exec-10] [c.p.d.interceptor.LoggerInterceptor] -  Request addr	:  0:0:0:0:0:0:0:1
2023-07-01 14:56:56.517 INFO  [http-nio-10010-exec-10] [c.p.d.interceptor.LoggerInterceptor] -  Servlet URI 	:  /error
2023-07-01 14:56:57.872 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
89. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 14:56:57.873 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
89. select * from MEMBER where userId = 'p00139'
 {executed in 0 msec}
2023-07-01 14:56:57.875 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.MemberServiceImpl] - ROLE_ADMIN
2023-07-01 14:56:57.986 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.MemberServiceImpl] - pass:$2a$10$MNrQAPw.4k9j2y08eTmYEeI7oKPuaWbA97HHog.8PYep5HsRwhbae,$2a$10$jItDljtqMqRmGxeOo.QnUO/EAU1jgvydCiuM0VUamQX8a5kMgbyRK
2023-07-01 14:56:58.082 INFO  [http-nio-10010-exec-9] [c.p.d.configuration.SecurityConfig] - authentication:: p00139
2023-07-01 14:56:59.841 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 14:56:59.841 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 14:56:59.841 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 14:56:59.842 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
89. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 14:56:59.846 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
89. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 14:56:59.849 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
89. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 3 msec}
2023-07-01 15:03:03.146 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 15:03:03.146 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 15:03:03.146 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 15:03:03.147 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
89. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 15:03:03.150 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
89. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 15:03:03.152 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
89. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 1 msec}
2023-07-01 15:03:36.125 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 15:03:36.126 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 15:03:36.126 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 15:03:36.127 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
89. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 15:03:36.130 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
89. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 15:03:36.133 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
89. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 15:03:54.389 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 15:03:54.390 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 15:03:54.390 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 15:03:54.390 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
89. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 15:03:54.393 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
89. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 1 msec}
2023-07-01 15:03:54.395 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
89. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 15:05:18.950 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 15:05:18.950 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 15:05:18.950 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 15:05:18.951 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
89. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 15:05:18.953 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
89. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 15:05:18.956 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
89. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 15:05:38.323 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 15:05:38.324 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 15:05:38.324 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 15:05:38.325 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
89. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 15:05:38.327 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
89. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 15:05:38.331 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
89. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 15:06:10.349 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 15:06:10.349 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 15:06:10.349 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 15:06:10.350 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
89. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 15:06:10.353 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
89. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 15:06:10.359 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
89. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 5 msec}
2023-07-01 15:06:47.758 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 15:06:47.758 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 15:06:47.758 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 15:06:47.759 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
89. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 15:06:47.762 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
89. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 3 msec}
2023-07-01 15:06:47.765 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
89. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 3 msec}
2023-07-01 15:07:11.871 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 15:07:11.871 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 15:07:11.871 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 15:07:11.872 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
89. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 15:07:11.875 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
89. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 3 msec}
2023-07-01 15:07:11.878 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
89. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 3 msec}
2023-07-01 15:07:50.170 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 15:07:50.170 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 15:07:50.171 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 15:07:50.172 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
89. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 15:07:50.174 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
89. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 15:07:50.177 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
89. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 15:09:36.703 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 15:09:36.703 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 15:09:36.704 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 15:09:36.704 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
89. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 15:09:36.708 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
89. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 4 msec}
2023-07-01 15:09:36.711 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
89. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 3 msec}
2023-07-01 15:11:36.452 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 15:11:36.452 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 15:11:36.452 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 15:11:36.453 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
89. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 15:11:36.456 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
89. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 15:11:36.458 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
89. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 15:11:37.919 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
89. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 15:11:44.252 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
90. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 15:14:31.140 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 15:14:31.140 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 15:14:31.140 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 15:14:31.141 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
91. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 15:14:31.143 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
91. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 15:14:31.146 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
91. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 1 msec}
2023-07-01 15:14:46.801 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 15:14:46.801 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 15:14:46.801 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 15:14:46.802 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
91. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 15:14:46.804 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
91. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 15:14:46.807 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
91. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 3 msec}
2023-07-01 15:17:40.385 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 15:17:40.385 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 15:17:40.385 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 15:17:40.386 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
99. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 15:17:40.390 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
99. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 15:17:40.393 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
99. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 1 msec}
2023-07-01 15:17:47.910 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
99. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 15:21:48.883 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
100. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 15:36:31.897 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 15:36:31.897 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 15:36:31.897 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 15:36:31.898 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
109. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 15:36:31.901 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
109. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 3 msec}
2023-07-01 15:36:31.905 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
109. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 15:36:33.398 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
109. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 16:04:34.245 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Starting PjyApplication on DESKTOP-QJPD93S with PID 5940 (D:\BUS\dashboard\dashboard\target\classes started by admin in D:\BUS\dashboard\dashboard)
2023-07-01 16:04:34.255 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - The following profiles are active: oauth
2023-07-01 16:04:34.313 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-07-01 16:04:34.314 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-07-01 16:04:35.800 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-07-01 16:04:35.800 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-07-01 16:04:35.951 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 139ms. Found 3 JPA repository interfaces.
2023-07-01 16:04:36.305 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-07-01 16:04:36.306 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2023-07-01 16:04:36.351 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.FileRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-07-01 16:04:36.351 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.MemberRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-07-01 16:04:36.352 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.RememberMeRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-07-01 16:04:36.353 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 47ms. Found 0 JDBC repository interfaces.
2023-07-01 16:04:36.789 INFO  [restartedMain] [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] - Post-processing PropertySource instances
2023-07-01 16:04:36.860 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2023-07-01 16:04:36.860 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource commandLineArgs [org.springframework.core.env.SimpleCommandLinePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-07-01 16:04:36.861 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-07-01 16:04:36.861 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-07-01 16:04:36.861 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2023-07-01 16:04:36.861 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
2023-07-01 16:04:36.861 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2023-07-01 16:04:36.861 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application-oauth.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-07-01 16:04:36.861 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-07-01 16:04:36.861 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2023-07-01 16:04:36.862 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [pjy.properties] [org.springframework.core.env.CompositePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-07-01 16:04:36.862 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [common.properties] [org.springframework.core.io.support.ResourcePropertySource] to EncryptableMapPropertySourceWrapper
2023-07-01 16:04:36.928 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'asyncConfiguration' of type [com.pjy.dashboard.configuration.AsyncConfiguration$$EnhancerBySpringCGLIB$$6922d1ad] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-01 16:04:36.985 INFO  [restartedMain] [c.u.j.filter.DefaultLazyPropertyFilter] - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2023-07-01 16:04:37.083 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$531935da] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-01 16:04:37.168 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-01 16:04:37.171 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@4bc3e9cb' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-01 16:04:37.172 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$77edd88c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-01 16:04:37.182 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration$$EnhancerBySpringCGLIB$$9d42f0a2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-01 16:04:37.187 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-01 16:04:37.189 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-01 16:04:37.208 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ba6b6da0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-01 16:04:37.237 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$39ebbad2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-01 16:04:37.379 INFO  [restartedMain] [c.u.j.r.DefaultLazyPropertyResolver] - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2023-07-01 16:04:37.385 INFO  [restartedMain] [c.u.j.d.DefaultLazyPropertyDetector] - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2023-07-01 16:04:37.848 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 10010 (http)
2023-07-01 16:04:37.866 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Initializing ProtocolHandler ["http-nio-10010"]
2023-07-01 16:04:37.877 INFO  [restartedMain] [org.apache.catalina.core.StandardService] - Starting service [Tomcat]
2023-07-01 16:04:37.877 INFO  [restartedMain] [org.apache.catalina.core.StandardEngine] - Starting Servlet engine: [Apache Tomcat/9.0.29]
2023-07-01 16:04:38.260 INFO  [restartedMain] [org.apache.jasper.servlet.TldScanner] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2023-07-01 16:04:38.271 INFO  [restartedMain] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring embedded WebApplicationContext
2023-07-01 16:04:38.272 INFO  [restartedMain] [o.s.web.context.ContextLoader] - Root WebApplicationContext: initialization completed in 3958 ms
2023-07-01 16:04:39.155 INFO  [restartedMain] [c.u.j.encryptor.DefaultLazyEncryptor] - Found Custom Encryptor Bean org.jasypt.encryption.pbe.PooledPBEStringEncryptor@1d2098c1 with name: jasyptStringEncryptor
2023-07-01 16:04:39.215 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Starting...
2023-07-01 16:04:39.332 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.executeSql(PoolBase.java:567)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 7 msec}
2023-07-01 16:04:39.337 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Start completed.
2023-07-01 16:04:40.148 INFO  [restartedMain] [com.pjy.dashboard.filter.TestFilter] - init Pjy Filter
2023-07-01 16:04:40.539 INFO  [restartedMain] [o.hibernate.jpa.internal.util.LogHelper] - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2023-07-01 16:04:40.616 INFO  [restartedMain] [org.hibernate.Version] - HHH000412: Hibernate Core {5.3.14.Final}
2023-07-01 16:04:40.619 INFO  [restartedMain] [org.hibernate.cfg.Environment] - HHH000206: hibernate.properties not found
2023-07-01 16:04:40.776 INFO  [restartedMain] [org.hibernate.annotations.common.Version] - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2023-07-01 16:04:41.025 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 16:04:41.046 INFO  [restartedMain] [org.hibernate.dialect.Dialect] - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2023-07-01 16:04:41.808 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 16:04:41.810 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select SEQUENCE_CATALOG, SEQUENCE_SCHEMA, SEQUENCE_NAME, INCREMENT from information_schema.sequences
 {executed in 1 msec}
2023-07-01 16:04:41.863 INFO  [restartedMain] [o.s.o.j.LocalContainerEntityManagerFactoryBean] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-07-01 16:04:42.126 INFO  [restartedMain] [o.h.h.i.QueryTranslatorFactoryInitiator] - HHH000397: Using ASTQueryTranslatorFactory
2023-07-01 16:04:43.232 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService
2023-07-01 16:04:43.244 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'asyncThreadPool'
2023-07-01 16:04:43.428 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/h2-console/**'], []
2023-07-01 16:04:43.429 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/css/**'], []
2023-07-01 16:04:43.429 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/js/**'], []
2023-07-01 16:04:43.429 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/monitor/**'], []
2023-07-01 16:04:43.429 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/img/**'], []
2023-07-01 16:04:43.429 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/lib/**'], []
2023-07-01 16:04:43.429 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/main.css'], []
2023-07-01 16:04:43.429 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/common.js'], []
2023-07-01 16:04:43.429 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/resources/**'], []
2023-07-01 16:04:43.591 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2b3c40f4, org.springframework.security.web.context.SecurityContextPersistenceFilter@2d328b4a, org.springframework.security.web.header.HeaderWriterFilter@79331791, org.springframework.web.filter.CorsFilter@1ab75ec1, org.springframework.security.web.authentication.logout.LogoutFilter@695db756, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@5ed1eb2c, org.springframework.security.web.session.ConcurrentSessionFilter@5fd40c51, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@9a49785, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2092c73c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@63a80faa, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@51791d4e, org.springframework.security.web.session.SessionManagementFilter@6a3378e9, org.springframework.security.web.access.ExceptionTranslationFilter@19c7fcee, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2a4bc614]
2023-07-01 16:04:43.613 INFO  [restartedMain] [o.s.aop.framework.CglibAopProxy] - Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(javax.servlet.FilterConfig) throws javax.servlet.ServletException] because it is marked as final: Consider using interface-based JDK proxies instead!
2023-07-01 16:04:43.972 WARN  [restartedMain] [o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-07-01 16:04:44.047 INFO  [restartedMain] [o.s.b.a.w.s.WelcomePageHandlerMapping] - Adding welcome page: ServletContext resource [/index.html]
2023-07-01 16:04:44.463 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 16:04:45.276 INFO  [restartedMain] [o.s.b.d.a.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2023-07-01 16:04:45.305 INFO  [restartedMain] [o.s.b.a.e.web.EndpointLinksResolver] - Exposing 16 endpoint(s) beneath base path '/actuator'
2023-07-01 16:04:45.449 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskScheduler] - Initializing ExecutorService
2023-07-01 16:04:45.452 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Starting ProtocolHandler ["http-nio-10010"]
2023-07-01 16:04:45.510 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 10010 (http) with context path ''
2023-07-01 16:04:45.515 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Started PjyApplication in 11.785 seconds (JVM running for 13.324)
2023-07-01 16:04:45.516 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-07-01 16:04:45.516 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - Application started
2023-07-01 16:04:45.516 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-07-01 16:04:46.570 INFO  [RMI TCP Connection(10)-127.0.0.1] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-07-01 16:04:46.570 INFO  [RMI TCP Connection(10)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Initializing Servlet 'dispatcherServlet'
2023-07-01 16:04:46.590 INFO  [RMI TCP Connection(10)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Completed initialization in 20 ms
2023-07-01 16:04:51.466 INFO  [http-nio-10010-exec-3] [c.p.d.interceptor.LoggerInterceptor] - ============================== START ==============================
2023-07-01 16:04:51.466 INFO  [http-nio-10010-exec-3] [c.p.d.interceptor.LoggerInterceptor] -  Class       	:  class org.springframework.web.method.HandlerMethod
2023-07-01 16:04:51.467 INFO  [http-nio-10010-exec-3] [c.p.d.interceptor.LoggerInterceptor] -  Request URI 	:  /error
2023-07-01 16:04:51.467 INFO  [http-nio-10010-exec-3] [c.p.d.interceptor.LoggerInterceptor] -  Request addr	:  0:0:0:0:0:0:0:1
2023-07-01 16:04:51.467 INFO  [http-nio-10010-exec-3] [c.p.d.interceptor.LoggerInterceptor] -  Servlet URI 	:  /error
2023-07-01 16:04:52.911 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 16:04:52.919 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select * from MEMBER where userId = 'p00139'
 {executed in 1 msec}
2023-07-01 16:04:52.947 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.MemberServiceImpl] - ROLE_ADMIN
2023-07-01 16:04:53.038 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.MemberServiceImpl] - pass:$2a$10$MNrQAPw.4k9j2y08eTmYEeI7oKPuaWbA97HHog.8PYep5HsRwhbae,$2a$10$JlOTHKqee39guPO./o1YO.XrMEAqrY8OZLSW8Cg3EG/AEzLo/vMi2
2023-07-01 16:04:53.131 INFO  [http-nio-10010-exec-6] [c.p.d.configuration.SecurityConfig] - authentication:: p00139
2023-07-01 16:04:55.396 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@6e1be03c
2023-07-01 16:04:55.396 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ROUTEINFO} 
2023-07-01 16:04:55.470 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_ROUTEINFO a where   a.company_no = '100' order by a.lno
2023-07-01 16:04:55.484 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 16:04:55.486 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBL_ROUTEINFO a where   a.company_no = '100' order by a.lno
 {executed in 2 msec}
2023-07-01 16:04:55.491 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBL_ROUTEINFO a where   a.company_no = '100' order by a.lno
 {executed in 1 msec}
2023-07-01 16:04:57.397 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 16:04:57.397 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 16:04:57.398 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 16:04:57.399 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 16:04:57.402 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 3 msec}
2023-07-01 16:04:57.405 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 16:05:01.532 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 16:05:01.549 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
2. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 16:05:01.552 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT	/* select_accident_option : 교통사고 칼럼별 option값 */ 	
			listagg( DISTINCT(GAPI_GB ),'/')  	AS gapi_gb
		,	listagg( DISTINCT(acc_gb ),'/') 	AS acc_gb
		,	listagg( DISTINCT(acc_kind ),'/') 	AS acc_kind
		,	listagg( DISTINCT(proc_result ),'/') 	AS proc_result
	FROM TBM_ACCIDENT_INFO a
 {executed in 0 msec}
2023-07-01 16:07:23.393 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 16:07:23.394 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 16:07:23.394 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 16:07:23.395 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
2. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 16:07:23.398 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
2. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 3 msec}
2023-07-01 16:07:23.401 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
2. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 16:07:24.866 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
2. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 16:07:24.868 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
3. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 16:07:24.869 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT	/* select_accident_option : 교통사고 칼럼별 option값 */ 	
			listagg( DISTINCT(GAPI_GB ),'/')  	AS gapi_gb
		,	listagg( DISTINCT(acc_gb ),'/') 	AS acc_gb
		,	listagg( DISTINCT(acc_kind ),'/') 	AS acc_kind
		,	listagg( DISTINCT(proc_result ),'/') 	AS proc_result
	FROM TBM_ACCIDENT_INFO a
 {executed in 1 msec}
2023-07-01 16:57:42.471 INFO  [Catalina-utility-2] [c.pjy.dashboard.listener.SessionListener] - updateUserCloseTime p00139 
2023-07-01 16:57:42.472 INFO  [Catalina-utility-2] [c.pjy.dashboard.listener.SessionListener] - currentSessionUserList ->  false
2023-07-01 16:57:42.472 INFO  [Catalina-utility-2] [c.pjy.dashboard.listener.SessionListener] - updateUserCloseTime p00139 
2023-07-01 16:57:42.472 INFO  [Catalina-utility-2] [c.pjy.dashboard.listener.SessionListener] - currentSessionUserList ->  false
2023-07-01 17:25:56.033 WARN  [H2 housekeeper] [com.zaxxer.hikari.pool.HikariPool] - H2 - Thread starvation or clock leap detected (housekeeper delta=28m15s775ms470µs500ns).
2023-07-01 17:28:01.715 INFO  [http-nio-10010-exec-4] [c.p.d.interceptor.LoggerInterceptor] - ============================== START ==============================
2023-07-01 17:28:01.715 INFO  [http-nio-10010-exec-4] [c.p.d.interceptor.LoggerInterceptor] -  Class       	:  class org.springframework.web.method.HandlerMethod
2023-07-01 17:28:01.716 INFO  [http-nio-10010-exec-4] [c.p.d.interceptor.LoggerInterceptor] -  Request URI 	:  /error
2023-07-01 17:28:01.716 INFO  [http-nio-10010-exec-4] [c.p.d.interceptor.LoggerInterceptor] -  Request addr	:  0:0:0:0:0:0:0:1
2023-07-01 17:28:01.716 INFO  [http-nio-10010-exec-4] [c.p.d.interceptor.LoggerInterceptor] -  Servlet URI 	:  /error
2023-07-01 17:28:06.155 INFO  [http-nio-10010-exec-3] [c.p.d.interceptor.LoggerInterceptor] - ============================== START ==============================
2023-07-01 17:28:06.155 INFO  [http-nio-10010-exec-3] [c.p.d.interceptor.LoggerInterceptor] -  Class       	:  class org.springframework.web.method.HandlerMethod
2023-07-01 17:28:06.155 INFO  [http-nio-10010-exec-3] [c.p.d.interceptor.LoggerInterceptor] -  Request URI 	:  /
2023-07-01 17:28:06.155 INFO  [http-nio-10010-exec-3] [c.p.d.interceptor.LoggerInterceptor] -  Request addr	:  0:0:0:0:0:0:0:1
2023-07-01 17:28:06.155 INFO  [http-nio-10010-exec-3] [c.p.d.interceptor.LoggerInterceptor] -  Servlet URI 	:  /
2023-07-01 17:28:06.203 INFO  [http-nio-10010-exec-10] [c.p.d.interceptor.LoggerInterceptor] - ============================== START ==============================
2023-07-01 17:28:06.203 INFO  [http-nio-10010-exec-10] [c.p.d.interceptor.LoggerInterceptor] -  Class       	:  class org.springframework.web.method.HandlerMethod
2023-07-01 17:28:06.203 INFO  [http-nio-10010-exec-10] [c.p.d.interceptor.LoggerInterceptor] -  Request URI 	:  /error
2023-07-01 17:28:06.203 INFO  [http-nio-10010-exec-10] [c.p.d.interceptor.LoggerInterceptor] -  Request addr	:  0:0:0:0:0:0:0:1
2023-07-01 17:28:06.203 INFO  [http-nio-10010-exec-10] [c.p.d.interceptor.LoggerInterceptor] -  Servlet URI 	:  /error
2023-07-01 17:28:07.520 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
33. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 17:28:07.521 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
33. select * from MEMBER where userId = 'p00139'
 {executed in 0 msec}
2023-07-01 17:28:07.522 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.MemberServiceImpl] - ROLE_ADMIN
2023-07-01 17:28:07.615 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.MemberServiceImpl] - pass:$2a$10$MNrQAPw.4k9j2y08eTmYEeI7oKPuaWbA97HHog.8PYep5HsRwhbae,$2a$10$q29CChoPTi6XmWWwWMjF2e4KHflKSvgay5ckr2tb1IvYnERB3ixf2
2023-07-01 17:28:07.705 INFO  [http-nio-10010-exec-6] [c.p.d.configuration.SecurityConfig] - authentication:: p00139
2023-07-01 17:28:09.733 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 17:28:09.734 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 17:28:09.734 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 17:28:09.735 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
33. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 17:28:09.737 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
33. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 17:28:09.741 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
33. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 17:28:13.377 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
33. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 17:28:13.378 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
34. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 17:28:13.380 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
34. SELECT	/* select_accident_option : 교통사고 칼럼별 option값 */ 	
			listagg( DISTINCT(GAPI_GB ),'/')  	AS gapi_gb
		,	listagg( DISTINCT(acc_gb ),'/') 	AS acc_gb
		,	listagg( DISTINCT(acc_kind ),'/') 	AS acc_kind
		,	listagg( DISTINCT(proc_result ),'/') 	AS proc_result
	FROM TBM_ACCIDENT_INFO a
 {executed in 0 msec}
2023-07-01 17:29:42.732 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
34. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 17:29:42.735 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
35. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 17:29:42.737 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
35. SELECT	/* select_accident_option : 교통사고 칼럼별 option값 */ 	
			listagg( DISTINCT(GAPI_GB ),'/')  	AS gapi_gb
		,	listagg( DISTINCT(acc_gb ),'/') 	AS acc_gb
		,	listagg( DISTINCT(acc_kind ),'/') 	AS acc_kind
		,	listagg( DISTINCT(proc_result ),'/') 	AS proc_result
	FROM TBM_ACCIDENT_INFO a
 {executed in 1 msec}
2023-07-01 17:35:47.466 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 17:35:47.466 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 17:35:47.466 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 17:35:47.467 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
35. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 17:35:47.474 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
35. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 6 msec}
2023-07-01 17:35:47.476 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
35. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 17:35:49.112 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
35. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 17:35:49.114 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
36. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 17:35:49.116 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
36. SELECT	/* select_accident_option : 교통사고 칼럼별 option값 */ 	
			listagg( DISTINCT(GAPI_GB ),'/')  	AS gapi_gb
		,	listagg( DISTINCT(acc_gb ),'/') 	AS acc_gb
		,	listagg( DISTINCT(acc_kind ),'/') 	AS acc_kind
		,	listagg( DISTINCT(proc_result ),'/') 	AS proc_result
	FROM TBM_ACCIDENT_INFO a
 {executed in 0 msec}
2023-07-01 17:37:50.019 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
36. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 17:37:50.020 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
37. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 17:37:50.021 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
37. SELECT	/* select_accident_option : 교통사고 칼럼별 option값 */ 	
			listagg( DISTINCT(GAPI_GB ),'/')  	AS gapi_gb
		,	listagg( DISTINCT(acc_gb ),'/') 	AS acc_gb
		,	listagg( DISTINCT(acc_kind ),'/') 	AS acc_kind
		,	listagg( DISTINCT(proc_result ),'/') 	AS proc_result
	FROM TBM_ACCIDENT_INFO a
 {executed in 0 msec}
2023-07-01 17:38:41.438 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
37. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 17:38:41.440 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
38. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 17:38:41.442 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
38. SELECT	/* select_accident_option : 교통사고 칼럼별 option값 */ 	
			listagg( DISTINCT(GAPI_GB ),'/')  	AS gapi_gb
		,	listagg( DISTINCT(acc_gb ),'/') 	AS acc_gb
		,	listagg( DISTINCT(acc_kind ),'/') 	AS acc_kind
		,	listagg( DISTINCT(proc_result ),'/') 	AS proc_result
	FROM TBM_ACCIDENT_INFO a
 {executed in 0 msec}
2023-07-01 17:46:00.811 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
43. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 17:46:00.813 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
44. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 17:46:00.814 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
44. SELECT	/* select_accident_option : 교통사고 칼럼별 option값 */ 	
			listagg( DISTINCT(GAPI_GB ),'/')  	AS gapi_gb
		,	listagg( DISTINCT(acc_gb ),'/') 	AS acc_gb
		,	listagg( DISTINCT(acc_kind ),'/') 	AS acc_kind
		,	listagg( DISTINCT(proc_result ),'/') 	AS proc_result
	FROM TBM_ACCIDENT_INFO a
 {executed in 1 msec}
2023-07-01 17:47:29.435 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
44. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 17:47:29.437 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
45. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 17:47:29.438 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
45. SELECT	/* select_accident_option : 교통사고 칼럼별 option값 */ 	
			listagg( DISTINCT(GAPI_GB ),'/')  	AS gapi_gb
		,	listagg( DISTINCT(acc_gb ),'/') 	AS acc_gb
		,	listagg( DISTINCT(acc_kind ),'/') 	AS acc_kind
		,	listagg( DISTINCT(proc_result ),'/') 	AS proc_result
	FROM TBM_ACCIDENT_INFO a
 {executed in 0 msec}
2023-07-01 17:48:30.801 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
45. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 17:48:30.802 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
46. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 17:48:30.803 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
46. SELECT	/* select_accident_option : 교통사고 칼럼별 option값 */ 	
			listagg( DISTINCT(GAPI_GB ),'/')  	AS gapi_gb
		,	listagg( DISTINCT(acc_gb ),'/') 	AS acc_gb
		,	listagg( DISTINCT(acc_kind ),'/') 	AS acc_kind
		,	listagg( DISTINCT(proc_result ),'/') 	AS proc_result
	FROM TBM_ACCIDENT_INFO a
 {executed in 0 msec}
2023-07-01 17:50:31.377 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
46. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 17:50:31.379 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
47. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 17:50:31.380 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
47. SELECT	/* select_accident_option : 교통사고 칼럼별 option값 */ 	
			listagg( DISTINCT(GAPI_GB ),'/')  	AS gapi_gb
		,	listagg( DISTINCT(acc_gb ),'/') 	AS acc_gb
		,	listagg( DISTINCT(acc_kind ),'/') 	AS acc_kind
		,	listagg( DISTINCT(proc_result ),'/') 	AS proc_result
	FROM TBM_ACCIDENT_INFO a
 {executed in 0 msec}
2023-07-01 17:51:30.623 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
47. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 17:51:30.624 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
48. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 17:51:30.626 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
48. SELECT	/* select_accident_option : 교통사고 칼럼별 option값 */ 	
			listagg( DISTINCT(GAPI_GB ),'/')  	AS gapi_gb
		,	listagg( DISTINCT(acc_gb ),'/') 	AS acc_gb
		,	listagg( DISTINCT(acc_kind ),'/') 	AS acc_kind
		,	listagg( DISTINCT(proc_result ),'/') 	AS proc_result
	FROM TBM_ACCIDENT_INFO a
 {executed in 0 msec}
2023-07-01 17:52:53.726 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
48. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 17:52:53.728 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
49. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 17:52:53.729 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
49. SELECT	/* select_accident_option : 교통사고 칼럼별 option값 */ 	
			listagg( DISTINCT(GAPI_GB ),'/')  	AS gapi_gb
		,	listagg( DISTINCT(acc_gb ),'/') 	AS acc_gb
		,	listagg( DISTINCT(acc_kind ),'/') 	AS acc_kind
		,	listagg( DISTINCT(proc_result ),'/') 	AS proc_result
	FROM TBM_ACCIDENT_INFO a
 {executed in 0 msec}
2023-07-01 18:43:23.522 INFO  [Catalina-utility-2] [c.pjy.dashboard.listener.SessionListener] - updateUserCloseTime p00139 
2023-07-01 18:43:23.522 INFO  [Catalina-utility-2] [c.pjy.dashboard.listener.SessionListener] - currentSessionUserList ->  false
2023-07-01 18:43:23.522 INFO  [Catalina-utility-2] [c.pjy.dashboard.listener.SessionListener] - updateUserCloseTime p00139 
2023-07-01 18:43:23.522 INFO  [Catalina-utility-2] [c.pjy.dashboard.listener.SessionListener] - currentSessionUserList ->  false
2023-07-01 19:03:02.847 WARN  [H2 housekeeper] [com.zaxxer.hikari.pool.HikariPool] - H2 - Thread starvation or clock leap detected (housekeeper delta=19m35s731ms176µs600ns).
2023-07-01 19:03:31.511 INFO  [http-nio-10010-exec-3] [c.p.d.interceptor.LoggerInterceptor] - ============================== START ==============================
2023-07-01 19:03:31.511 INFO  [http-nio-10010-exec-3] [c.p.d.interceptor.LoggerInterceptor] -  Class       	:  class org.springframework.web.method.HandlerMethod
2023-07-01 19:03:31.511 INFO  [http-nio-10010-exec-3] [c.p.d.interceptor.LoggerInterceptor] -  Request URI 	:  /error
2023-07-01 19:03:31.511 INFO  [http-nio-10010-exec-3] [c.p.d.interceptor.LoggerInterceptor] -  Request addr	:  0:0:0:0:0:0:0:1
2023-07-01 19:03:31.511 INFO  [http-nio-10010-exec-3] [c.p.d.interceptor.LoggerInterceptor] -  Servlet URI 	:  /error
2023-07-01 19:03:34.429 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
79. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 19:03:34.431 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
79. select * from MEMBER where userId = 'p00139'
 {executed in 1 msec}
2023-07-01 19:03:34.433 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.MemberServiceImpl] - ROLE_ADMIN
2023-07-01 19:03:34.527 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.MemberServiceImpl] - pass:$2a$10$MNrQAPw.4k9j2y08eTmYEeI7oKPuaWbA97HHog.8PYep5HsRwhbae,$2a$10$HU1hi6LlEXqXsLiL5jZpEOUj8f/3sYznK0yWwgTYlBBzYzAwczjAm
2023-07-01 19:03:34.616 INFO  [http-nio-10010-exec-7] [c.p.d.configuration.SecurityConfig] - authentication:: p00139
2023-07-01 19:03:39.689 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 19:03:39.689 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 19:03:39.689 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 19:03:39.690 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
79. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 19:03:39.693 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
79. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 19:03:39.696 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
79. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 1 msec}
2023-07-01 19:03:41.715 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
79. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 19:03:41.716 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
80. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 19:03:41.718 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
80. SELECT	/* select_accident_option : 교통사고 칼럼별 option값 */ 	
			listagg( DISTINCT(GAPI_GB ),'/')  	AS gapi_gb
		,	listagg( DISTINCT(acc_gb ),'/') 	AS acc_gb
		,	listagg( DISTINCT(acc_kind ),'/') 	AS acc_kind
		,	listagg( DISTINCT(proc_result ),'/') 	AS proc_result
	FROM TBM_ACCIDENT_INFO a
 {executed in 0 msec}
2023-07-01 19:05:20.774 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
80. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 19:05:20.776 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
81. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 19:05:20.777 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT	/* select_accident_option : 교통사고 칼럼별 option값 */ 	
			listagg( DISTINCT(GAPI_GB ),'/')  	AS gapi_gb
		,	listagg( DISTINCT(acc_gb ),'/') 	AS acc_gb
		,	listagg( DISTINCT(acc_kind ),'/') 	AS acc_kind
		,	listagg( DISTINCT(proc_result ),'/') 	AS proc_result
	FROM TBM_ACCIDENT_INFO a
 {executed in 0 msec}
2023-07-01 19:07:11.728 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
81. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 19:07:11.730 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
82. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 19:07:11.731 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
82. SELECT	/* select_accident_option : 교통사고 칼럼별 option값 */ 	
			listagg( DISTINCT(GAPI_GB ),'/')  	AS gapi_gb
		,	listagg( DISTINCT(acc_gb ),'/') 	AS acc_gb
		,	listagg( DISTINCT(acc_kind ),'/') 	AS acc_kind
		,	listagg( DISTINCT(proc_result ),'/') 	AS proc_result
	FROM TBM_ACCIDENT_INFO a
 {executed in 0 msec}
2023-07-01 19:57:26.528 INFO  [Catalina-utility-1] [c.pjy.dashboard.listener.SessionListener] - updateUserCloseTime p00139 
2023-07-01 19:57:26.528 INFO  [Catalina-utility-1] [c.pjy.dashboard.listener.SessionListener] - currentSessionUserList ->  false
2023-07-01 19:57:26.528 INFO  [Catalina-utility-1] [c.pjy.dashboard.listener.SessionListener] - updateUserCloseTime p00139 
2023-07-01 19:57:26.529 INFO  [Catalina-utility-1] [c.pjy.dashboard.listener.SessionListener] - currentSessionUserList ->  false
2023-07-01 21:08:14.030 WARN  [H2 housekeeper] [com.zaxxer.hikari.pool.HikariPool] - H2 - Thread starvation or clock leap detected (housekeeper delta=1h9m10s321ms431µs200ns).
2023-07-01 21:09:21.284 INFO  [http-nio-10010-exec-9] [c.p.d.interceptor.LoggerInterceptor] - ============================== START ==============================
2023-07-01 21:09:21.284 INFO  [http-nio-10010-exec-9] [c.p.d.interceptor.LoggerInterceptor] -  Class       	:  class org.springframework.web.method.HandlerMethod
2023-07-01 21:09:21.284 INFO  [http-nio-10010-exec-9] [c.p.d.interceptor.LoggerInterceptor] -  Request URI 	:  /
2023-07-01 21:09:21.284 INFO  [http-nio-10010-exec-9] [c.p.d.interceptor.LoggerInterceptor] -  Request addr	:  0:0:0:0:0:0:0:1
2023-07-01 21:09:21.284 INFO  [http-nio-10010-exec-9] [c.p.d.interceptor.LoggerInterceptor] -  Servlet URI 	:  /
2023-07-01 21:09:21.320 ERROR [http-nio-10010-exec-9] [o.a.c.c.C.[Tomcat].[localhost].[/].[jsp]] - Servlet.service() for servlet [jsp] threw exception
java.lang.IllegalStateException: Cannot create a session after the response has been committed
	at org.apache.catalina.connector.Request.doGetSession(Request.java:2993)
	at org.apache.catalina.connector.Request.getSession(Request.java:2432)
	at org.apache.catalina.connector.RequestFacade.getSession(RequestFacade.java:908)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:244)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:582)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:527)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at org.apache.jasper.runtime.PageContextImpl.initialize(PageContextImpl.java:133)
	at org.apache.jasper.runtime.JspFactoryImpl.internalGetPageContext(JspFactoryImpl.java:109)
	at org.apache.jasper.runtime.JspFactoryImpl.getPageContext(JspFactoryImpl.java:60)
	at org.apache.jsp.WEB_002dINF.jsp.home_jsp._jspService(home_jsp.java:121)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:477)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:385)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:329)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:580)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:516)
	at org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequestDispatcher.include(HeaderWriterFilter.java:149)
	at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:163)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:317)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1372)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:97)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at jdk.internal.reflect.GeneratedMethodAccessor147.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$970d4aa4.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:114)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:104)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-07-01 21:09:21.326 ERROR [http-nio-10010-exec-9] [o.a.c.c.C.[.[.[/].[dispatcherServlet]] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [javax.servlet.ServletException: java.lang.IllegalStateException: Cannot create a session after the response has been committed] with root cause
java.lang.IllegalStateException: Cannot create a session after the response has been committed
	at org.apache.catalina.connector.Request.doGetSession(Request.java:2993)
	at org.apache.catalina.connector.Request.getSession(Request.java:2432)
	at org.apache.catalina.connector.RequestFacade.getSession(RequestFacade.java:908)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:244)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:582)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:527)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at org.apache.jasper.runtime.PageContextImpl.initialize(PageContextImpl.java:133)
	at org.apache.jasper.runtime.JspFactoryImpl.internalGetPageContext(JspFactoryImpl.java:109)
	at org.apache.jasper.runtime.JspFactoryImpl.getPageContext(JspFactoryImpl.java:60)
	at org.apache.jsp.WEB_002dINF.jsp.home_jsp._jspService(home_jsp.java:121)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:477)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:385)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:329)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:580)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:516)
	at org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequestDispatcher.include(HeaderWriterFilter.java:149)
	at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:163)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:317)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1372)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:97)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at jdk.internal.reflect.GeneratedMethodAccessor147.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$970d4aa4.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:114)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:104)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-07-01 21:09:21.328 INFO  [http-nio-10010-exec-9] [c.p.d.interceptor.LoggerInterceptor] - ============================== START ==============================
2023-07-01 21:09:21.328 INFO  [http-nio-10010-exec-9] [c.p.d.interceptor.LoggerInterceptor] -  Class       	:  class org.springframework.web.method.HandlerMethod
2023-07-01 21:09:21.328 INFO  [http-nio-10010-exec-9] [c.p.d.interceptor.LoggerInterceptor] -  Request URI 	:  /error
2023-07-01 21:09:21.328 INFO  [http-nio-10010-exec-9] [c.p.d.interceptor.LoggerInterceptor] -  Request addr	:  0:0:0:0:0:0:0:1
2023-07-01 21:09:21.328 INFO  [http-nio-10010-exec-9] [c.p.d.interceptor.LoggerInterceptor] -  Servlet URI 	:  /error
2023-07-01 21:09:21.611 ERROR [http-nio-10010-exec-9] [o.a.c.c.C.[Tomcat].[localhost].[/].[jsp]] - Servlet.service() for servlet [jsp] threw exception
java.lang.IllegalStateException: Cannot create a session after the response has been committed
	at org.apache.catalina.connector.Request.doGetSession(Request.java:2993)
	at org.apache.catalina.connector.Request.getSession(Request.java:2432)
	at org.apache.catalina.connector.RequestFacade.getSession(RequestFacade.java:908)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:244)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:582)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:244)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:582)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:527)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at org.apache.jasper.runtime.PageContextImpl.initialize(PageContextImpl.java:133)
	at org.apache.jasper.runtime.JspFactoryImpl.internalGetPageContext(JspFactoryImpl.java:109)
	at org.apache.jasper.runtime.JspFactoryImpl.getPageContext(JspFactoryImpl.java:60)
	at org.apache.jsp.WEB_002dINF.jsp.error_jsp._jspService(error_jsp.java:107)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:477)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:385)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:329)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:580)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:516)
	at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:163)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:317)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1372)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at jdk.internal.reflect.GeneratedMethodAccessor147.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$970d4aa4.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-07-01 21:09:21.613 ERROR [http-nio-10010-exec-9] [o.a.c.c.C.[.[.[/].[dispatcherServlet]] - Servlet.service() for servlet [dispatcherServlet] threw exception
java.lang.IllegalStateException: Cannot create a session after the response has been committed
	at org.apache.catalina.connector.Request.doGetSession(Request.java:2993)
	at org.apache.catalina.connector.Request.getSession(Request.java:2432)
	at org.apache.catalina.connector.RequestFacade.getSession(RequestFacade.java:908)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:244)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:582)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:244)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:582)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:527)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at org.apache.jasper.runtime.PageContextImpl.initialize(PageContextImpl.java:133)
	at org.apache.jasper.runtime.JspFactoryImpl.internalGetPageContext(JspFactoryImpl.java:109)
	at org.apache.jasper.runtime.JspFactoryImpl.getPageContext(JspFactoryImpl.java:60)
	at org.apache.jsp.WEB_002dINF.jsp.error_jsp._jspService(error_jsp.java:107)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:477)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:385)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:329)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:580)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:516)
	at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:163)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:317)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1372)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at jdk.internal.reflect.GeneratedMethodAccessor147.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$970d4aa4.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-07-01 21:09:21.614 ERROR [http-nio-10010-exec-9] [o.a.c.c.C.[Tomcat].[localhost]] - Exception Processing ErrorPage[errorCode=0, location=/error]
org.apache.jasper.JasperException: javax.servlet.ServletException: java.lang.IllegalStateException: Cannot create a session after the response has been committed
	at org.apache.jasper.servlet.JspServletWrapper.handleJspException(JspServletWrapper.java:639)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:500)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:385)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:329)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:580)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:516)
	at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:163)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:317)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1372)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at jdk.internal.reflect.GeneratedMethodAccessor147.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$970d4aa4.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: javax.servlet.ServletException: java.lang.IllegalStateException: Cannot create a session after the response has been committed
	at org.apache.jsp.WEB_002dINF.jsp.error_jsp._jspService(error_jsp.java:144)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:477)
	... 97 common frames omitted
Caused by: java.lang.IllegalStateException: Cannot create a session after the response has been committed
	at org.apache.catalina.connector.Request.doGetSession(Request.java:2993)
	at org.apache.catalina.connector.Request.getSession(Request.java:2432)
	at org.apache.catalina.connector.RequestFacade.getSession(RequestFacade.java:908)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:244)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:582)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:244)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:582)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:527)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at org.apache.jasper.runtime.PageContextImpl.initialize(PageContextImpl.java:133)
	at org.apache.jasper.runtime.JspFactoryImpl.internalGetPageContext(JspFactoryImpl.java:109)
	at org.apache.jasper.runtime.JspFactoryImpl.getPageContext(JspFactoryImpl.java:60)
	at org.apache.jsp.WEB_002dINF.jsp.error_jsp._jspService(error_jsp.java:107)
	... 100 common frames omitted
2023-07-01 21:09:21.652 INFO  [http-nio-10010-exec-10] [c.p.d.interceptor.LoggerInterceptor] - ============================== START ==============================
2023-07-01 21:09:21.652 INFO  [http-nio-10010-exec-10] [c.p.d.interceptor.LoggerInterceptor] -  Class       	:  class org.springframework.web.method.HandlerMethod
2023-07-01 21:09:21.652 INFO  [http-nio-10010-exec-10] [c.p.d.interceptor.LoggerInterceptor] -  Request URI 	:  /error
2023-07-01 21:09:21.652 INFO  [http-nio-10010-exec-10] [c.p.d.interceptor.LoggerInterceptor] -  Request addr	:  0:0:0:0:0:0:0:1
2023-07-01 21:09:21.653 INFO  [http-nio-10010-exec-10] [c.p.d.interceptor.LoggerInterceptor] -  Servlet URI 	:  /error
2023-07-01 21:09:23.288 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
112. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 21:09:23.290 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
112. select * from MEMBER where userId = 'p00139'
 {executed in 0 msec}
2023-07-01 21:09:23.292 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.MemberServiceImpl] - ROLE_ADMIN
2023-07-01 21:09:23.397 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.MemberServiceImpl] - pass:$2a$10$MNrQAPw.4k9j2y08eTmYEeI7oKPuaWbA97HHog.8PYep5HsRwhbae,$2a$10$3JE/L4PAVha8NbtEo/FMMeuBkglvwGs4LoyQbUr2Pe/NimT8Wz28K
2023-07-01 21:09:23.502 INFO  [http-nio-10010-exec-2] [c.p.d.configuration.SecurityConfig] - authentication:: p00139
2023-07-01 21:09:25.584 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 21:09:25.584 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 21:09:25.584 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 21:09:25.585 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
112. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 21:09:25.589 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
112. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 3 msec}
2023-07-01 21:09:25.592 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
112. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 1 msec}
2023-07-01 21:09:28.682 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
112. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 21:09:28.684 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
113. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 21:09:28.685 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
113. SELECT	/* select_accident_option : 교통사고 칼럼별 option값 */ 	
			listagg( DISTINCT(GAPI_GB ),'/')  	AS gapi_gb
		,	listagg( DISTINCT(acc_gb ),'/') 	AS acc_gb
		,	listagg( DISTINCT(acc_kind ),'/') 	AS acc_kind
		,	listagg( DISTINCT(proc_result ),'/') 	AS proc_result
	FROM TBM_ACCIDENT_INFO a
 {executed in 0 msec}
2023-07-01 21:10:32.772 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 21:10:32.772 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 21:10:32.772 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 21:10:32.774 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
113. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 2 msec}
2023-07-01 21:10:32.777 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
113. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 21:10:32.780 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
113. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 21:10:34.709 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
113. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 21:10:34.710 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
114. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 21:10:34.711 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
114. SELECT	/* select_accident_option : 교통사고 칼럼별 option값 */ 	
			listagg( DISTINCT(GAPI_GB ),'/')  	AS gapi_gb
		,	listagg( DISTINCT(acc_gb ),'/') 	AS acc_gb
		,	listagg( DISTINCT(acc_kind ),'/') 	AS acc_kind
		,	listagg( DISTINCT(proc_result ),'/') 	AS proc_result
	FROM TBM_ACCIDENT_INFO a
 {executed in 0 msec}
2023-07-01 21:11:19.693 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 21:11:19.693 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 21:11:19.693 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 21:11:19.694 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
114. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 21:11:19.698 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
114. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 21:11:19.700 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
114. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 21:11:21.611 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
114. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 21:11:21.613 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
115. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 21:11:21.614 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
115. SELECT	/* select_accident_option : 교통사고 칼럼별 option값 */ 	
			listagg( DISTINCT(GAPI_GB ),'/')  	AS gapi_gb
		,	listagg( DISTINCT(acc_gb ),'/') 	AS acc_gb
		,	listagg( DISTINCT(acc_kind ),'/') 	AS acc_kind
		,	listagg( DISTINCT(proc_result ),'/') 	AS proc_result
	FROM TBM_ACCIDENT_INFO a
 {executed in 0 msec}
2023-07-01 21:15:39.467 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
115. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 21:15:39.469 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
116. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 21:15:39.470 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
116. SELECT	/* select_accident_option : 교통사고 칼럼별 option값 */ 	
			listagg( DISTINCT(GAPI_GB ),'/')  	AS gapi_gb
		,	listagg( DISTINCT(acc_gb ),'/') 	AS acc_gb
		,	listagg( DISTINCT(acc_kind ),'/') 	AS acc_kind
		,	listagg( DISTINCT(proc_result ),'/') 	AS proc_result
	FROM TBM_ACCIDENT_INFO a
 {executed in 0 msec}
2023-07-01 21:27:11.563 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 21:27:11.563 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 21:27:11.563 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 21:27:11.564 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
116. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 21:27:11.567 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
116. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 21:27:11.570 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
116. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 21:27:13.799 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
116. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 21:27:13.800 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
117. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 21:27:13.802 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
117. SELECT	/* select_accident_option : 교통사고 칼럼별 option값 */ 	
			listagg( DISTINCT(GAPI_GB ),'/')  	AS gapi_gb
		,	listagg( DISTINCT(acc_gb ),'/') 	AS acc_gb
		,	listagg( DISTINCT(acc_kind ),'/') 	AS acc_kind
		,	listagg( DISTINCT(proc_result ),'/') 	AS proc_result
	FROM TBM_ACCIDENT_INFO a
 {executed in 0 msec}
2023-07-01 21:28:21.477 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
122. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 21:28:21.478 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
123. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 21:28:21.480 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
123. SELECT	/* select_accident_option : 교통사고 칼럼별 option값 */ 	
			listagg( DISTINCT(GAPI_GB ),'/')  	AS gapi_gb
		,	listagg( DISTINCT(acc_gb ),'/') 	AS acc_gb
		,	listagg( DISTINCT(acc_kind ),'/') 	AS acc_kind
		,	listagg( DISTINCT(proc_result ),'/') 	AS proc_result
	FROM TBM_ACCIDENT_INFO a
 {executed in 0 msec}
2023-07-01 21:29:06.976 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
123. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 21:29:06.977 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
124. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 21:29:06.979 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
124. SELECT	/* select_accident_option : 교통사고 칼럼별 option값 */ 	
			listagg( DISTINCT(GAPI_GB ),'/')  	AS gapi_gb
		,	listagg( DISTINCT(acc_gb ),'/') 	AS acc_gb
		,	listagg( DISTINCT(acc_kind ),'/') 	AS acc_kind
		,	listagg( DISTINCT(proc_result ),'/') 	AS proc_result
	FROM TBM_ACCIDENT_INFO a
 {executed in 0 msec}
2023-07-01 21:30:23.200 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 21:30:23.200 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 21:30:23.201 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 21:30:23.202 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
124. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 21:30:23.205 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
124. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 3 msec}
2023-07-01 21:30:23.208 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
124. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 21:30:24.714 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
124. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 21:30:24.716 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
125. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 21:30:24.717 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
125. SELECT	/* select_accident_option : 교통사고 칼럼별 option값 */ 	
			listagg( DISTINCT(GAPI_GB ),'/')  	AS gapi_gb
		,	listagg( DISTINCT(acc_gb ),'/') 	AS acc_gb
		,	listagg( DISTINCT(acc_kind ),'/') 	AS acc_kind
		,	listagg( DISTINCT(proc_result ),'/') 	AS proc_result
	FROM TBM_ACCIDENT_INFO a
 {executed in 0 msec}
2023-07-01 21:30:34.192 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
125. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 21:30:34.194 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
126. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 21:30:34.196 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
126. SELECT	/* select_accident_option : 교통사고 칼럼별 option값 */ 	
			listagg( DISTINCT(GAPI_GB ),'/')  	AS gapi_gb
		,	listagg( DISTINCT(acc_gb ),'/') 	AS acc_gb
		,	listagg( DISTINCT(acc_kind ),'/') 	AS acc_kind
		,	listagg( DISTINCT(proc_result ),'/') 	AS proc_result
	FROM TBM_ACCIDENT_INFO a
 {executed in 0 msec}
2023-07-01 21:30:44.655 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
126. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 21:30:44.657 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
127. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 21:30:44.658 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
127. SELECT	/* select_accident_option : 교통사고 칼럼별 option값 */ 	
			listagg( DISTINCT(GAPI_GB ),'/')  	AS gapi_gb
		,	listagg( DISTINCT(acc_gb ),'/') 	AS acc_gb
		,	listagg( DISTINCT(acc_kind ),'/') 	AS acc_kind
		,	listagg( DISTINCT(proc_result ),'/') 	AS proc_result
	FROM TBM_ACCIDENT_INFO a
 {executed in 1 msec}
2023-07-01 21:30:58.243 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
127. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 21:30:58.244 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
128. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 21:30:58.245 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
128. SELECT	/* select_accident_option : 교통사고 칼럼별 option값 */ 	
			listagg( DISTINCT(GAPI_GB ),'/')  	AS gapi_gb
		,	listagg( DISTINCT(acc_gb ),'/') 	AS acc_gb
		,	listagg( DISTINCT(acc_kind ),'/') 	AS acc_kind
		,	listagg( DISTINCT(proc_result ),'/') 	AS proc_result
	FROM TBM_ACCIDENT_INFO a
 {executed in 0 msec}
2023-07-01 21:31:10.611 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
128. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 21:31:10.613 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
129. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 21:31:10.614 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
129. SELECT	/* select_accident_option : 교통사고 칼럼별 option값 */ 	
			listagg( DISTINCT(GAPI_GB ),'/')  	AS gapi_gb
		,	listagg( DISTINCT(acc_gb ),'/') 	AS acc_gb
		,	listagg( DISTINCT(acc_kind ),'/') 	AS acc_kind
		,	listagg( DISTINCT(proc_result ),'/') 	AS proc_result
	FROM TBM_ACCIDENT_INFO a
 {executed in 1 msec}
2023-07-01 21:32:34.994 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
129. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 21:32:34.996 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
130. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 21:32:34.997 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
130. SELECT	/* select_accident_option : 교통사고 칼럼별 option값 */ 	
			listagg( DISTINCT(GAPI_GB ),'/')  	AS gapi_gb
		,	listagg( DISTINCT(acc_gb ),'/') 	AS acc_gb
		,	listagg( DISTINCT(acc_kind ),'/') 	AS acc_kind
		,	listagg( DISTINCT(proc_result ),'/') 	AS proc_result
	FROM TBM_ACCIDENT_INFO a
 {executed in 1 msec}
2023-07-01 21:32:56.779 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
130. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 21:32:56.781 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
131. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 21:32:56.782 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
131. SELECT	/* select_accident_option : 교통사고 칼럼별 option값 */ 	
			listagg( DISTINCT(GAPI_GB ),'/')  	AS gapi_gb
		,	listagg( DISTINCT(acc_gb ),'/') 	AS acc_gb
		,	listagg( DISTINCT(acc_kind ),'/') 	AS acc_kind
		,	listagg( DISTINCT(proc_result ),'/') 	AS proc_result
	FROM TBM_ACCIDENT_INFO a
 {executed in 1 msec}
2023-07-01 21:33:23.884 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 21:33:23.884 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 21:33:23.884 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 21:33:23.884 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
131. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 21:33:23.887 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
131. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 21:33:23.890 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
131. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 21:33:25.451 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
131. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 21:33:25.453 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
132. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 21:33:25.454 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
132. SELECT	/* select_accident_option : 교통사고 칼럼별 option값 */ 	
			listagg( DISTINCT(GAPI_GB ),'/')  	AS gapi_gb
		,	listagg( DISTINCT(acc_gb ),'/') 	AS acc_gb
		,	listagg( DISTINCT(acc_kind ),'/') 	AS acc_kind
		,	listagg( DISTINCT(proc_result ),'/') 	AS proc_result
	FROM TBM_ACCIDENT_INFO a
 {executed in 1 msec}
2023-07-01 21:33:34.087 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 21:33:34.088 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 21:33:34.088 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 21:33:34.089 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
132. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 21:33:34.091 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
132. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 21:33:34.093 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
132. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 1 msec}
2023-07-01 21:33:35.330 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
132. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 21:33:35.332 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
133. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 21:33:35.333 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
133. SELECT	/* select_accident_option : 교통사고 칼럼별 option값 */ 	
			listagg( DISTINCT(GAPI_GB ),'/')  	AS gapi_gb
		,	listagg( DISTINCT(acc_gb ),'/') 	AS acc_gb
		,	listagg( DISTINCT(acc_kind ),'/') 	AS acc_kind
		,	listagg( DISTINCT(proc_result ),'/') 	AS proc_result
	FROM TBM_ACCIDENT_INFO a
 {executed in 0 msec}
2023-07-01 21:34:03.837 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
133. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 21:34:03.843 INFO  [http-nio-10010-exec-10] [com.pjy.dashboard.dao.DynamicSqlDao] - merge sql : MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , :acc_date , :route_nm , :emp_nm , :acc_time , :car_no , :acc_gb , :gapi_gb , :acc_kind , :jacha_rate , :sangdae_rate , :proc_result , :proc_memo , :acc_place , :daein_in_amt , :daemul_in_amt , :in_tot_amt , :daein_out_amt , :daemul_out_amt , :jacha_amt , :out_tot_amt , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
2023-07-01 21:34:03.850 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
134. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 21:34:03.855 ERROR [http-nio-10010-exec-10] [c.p.d.core.error.GlobalExceptionHandler] - handleEntityNotFoundException
org.springframework.dao.InvalidDataAccessApiUsageException: No value supplied for the SQL parameter 'car_no': No value registered for key 'car_no'
	at org.springframework.jdbc.core.namedparam.NamedParameterUtils.buildValueArray(NamedParameterUtils.java:355)
	at org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate$2.setValues(NamedParameterJdbcTemplate.java:371)
	at org.springframework.jdbc.core.JdbcTemplate.lambda$batchUpdate$2(JdbcTemplate.java:944)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:617)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:647)
	at org.springframework.jdbc.core.JdbcTemplate.batchUpdate(JdbcTemplate.java:936)
	at org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.batchUpdate(NamedParameterJdbcTemplate.java:366)
	at com.pjy.dashboard.dao.DynamicSqlDao.batchInsert(DynamicSqlDao.java:737)
	at com.pjy.dashboard.dao.DynamicSqlDao$$FastClassBySpringCGLIB$$8af24191.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at com.pjy.dashboard.dao.DynamicSqlH2Dao$$EnhancerBySpringCGLIB$$c962d597.batchInsert(<generated>)
	at com.pjy.dashboard.service.DynamicSqlService.mergeInfo(DynamicSqlService.java:651)
	at com.pjy.dashboard.controller.TestController.BUS_mergeInfo(TestController.java:432)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:893)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:798)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:97)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at jdk.internal.reflect.GeneratedMethodAccessor147.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$970d4aa4.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:114)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:104)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-07-01 21:34:03.868 WARN  [http-nio-10010-exec-10] [o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver] - Resolved [org.springframework.dao.InvalidDataAccessApiUsageException: No value supplied for the SQL parameter 'car_no': No value registered for key 'car_no']
2023-07-01 21:39:06.004 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
134. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 21:39:06.006 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
135. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 21:39:06.008 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
135. SELECT	/* select_accident_option : 교통사고 칼럼별 option값 */ 	
			listagg( DISTINCT(GAPI_GB ),'/')  	AS gapi_gb
		,	listagg( DISTINCT(acc_gb ),'/') 	AS acc_gb
		,	listagg( DISTINCT(acc_kind ),'/') 	AS acc_kind
		,	listagg( DISTINCT(proc_result ),'/') 	AS proc_result
	FROM TBM_ACCIDENT_INFO a
 {executed in 0 msec}
2023-07-01 21:39:20.789 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
135. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 21:39:20.796 INFO  [http-nio-10010-exec-10] [com.pjy.dashboard.dao.DynamicSqlDao] - merge sql : MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , :acc_date , :route_nm , :emp_nm , :acc_time , :car_no , :acc_gb , :gapi_gb , :acc_kind , :jacha_rate , :sangdae_rate , :proc_result , :proc_memo , :acc_place , :daein_in_amt , :daemul_in_amt , :in_tot_amt , :daein_out_amt , :daemul_out_amt , :jacha_amt , :out_tot_amt , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
2023-07-01 21:39:20.797 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
136. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 21:39:20.809 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeBatch(ProxyStatement.java:128)
136. batching 1 statements:
1:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-01-18' , 'Y' , '고상욱' , '13:59:00' , '3552' , '자차' , '피해' , '측면충돌' , '10(무과실주장)' , '190.0' , '종결' , '삼성접수' , '하늘마을앞' , '0' , '500000' , '500000' , '0' , '0' , '0' , '0' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
 {executed in 5 msec}
2023-07-01 21:40:20.475 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
136. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 2 msec}
2023-07-01 21:40:20.476 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
137. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 21:40:20.477 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
137. SELECT	/* select_accident_option : 교통사고 칼럼별 option값 */ 	
			listagg( DISTINCT(GAPI_GB ),'/')  	AS gapi_gb
		,	listagg( DISTINCT(acc_gb ),'/') 	AS acc_gb
		,	listagg( DISTINCT(acc_kind ),'/') 	AS acc_kind
		,	listagg( DISTINCT(proc_result ),'/') 	AS proc_result
	FROM TBM_ACCIDENT_INFO a
 {executed in 1 msec}
2023-07-01 21:40:55.795 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
137. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 21:40:55.797 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
138. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 21:40:55.798 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
138. SELECT	/* select_accident_option : 교통사고 칼럼별 option값 */ 	
			listagg( DISTINCT(GAPI_GB ),'/')  	AS gapi_gb
		,	listagg( DISTINCT(acc_gb ),'/') 	AS acc_gb
		,	listagg( DISTINCT(acc_kind ),'/') 	AS acc_kind
		,	listagg( DISTINCT(proc_result ),'/') 	AS proc_result
	FROM TBM_ACCIDENT_INFO a
 {executed in 0 msec}
2023-07-01 21:41:00.973 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
138. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 21:41:00.981 INFO  [http-nio-10010-exec-1] [com.pjy.dashboard.dao.DynamicSqlDao] - merge sql : MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , :acc_date , :route_nm , :emp_nm , :acc_time , :car_no , :acc_gb , :gapi_gb , :acc_kind , :jacha_rate , :sangdae_rate , :proc_result , :proc_memo , :acc_place , :daein_in_amt , :daemul_in_amt , :in_tot_amt , :daein_out_amt , :daemul_out_amt , :jacha_amt , :out_tot_amt , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
2023-07-01 21:41:00.983 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
139. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 21:41:00.984 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeBatch(ProxyStatement.java:128)
139. batching 1 statements:
1:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-01-19' , '21번' , '이용진' , '06:57:00' , '3623' , '자차' , '피해' , '측면충돌' , '888' , '100.0' , '종결' , '현대접수' , '매소홀터널' , '0' , '217040' , '217040' , '0' , '0' , '0' , '0' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
 {executed in 0 msec}
2023-07-01 21:41:13.106 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 21:41:13.106 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 21:41:13.107 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 21:41:13.108 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
139. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 21:41:13.111 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
139. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 21:41:13.114 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
139. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 21:41:48.450 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 21:41:48.450 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 21:41:48.450 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 21:41:48.451 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
139. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 21:41:48.455 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
139. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 3 msec}
2023-07-01 21:41:48.459 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
139. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 21:41:54.525 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 21:41:54.525 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 21:41:54.526 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 21:41:54.527 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
139. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 21:41:54.530 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
139. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 21:41:54.532 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
139. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 21:42:50.883 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 21:42:50.883 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 21:42:50.883 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 21:42:50.884 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
139. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 21:42:50.886 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
139. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 21:42:50.888 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
139. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 21:43:01.528 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 21:43:01.528 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 21:43:01.528 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 21:43:01.529 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
139. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 21:43:01.532 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
139. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 21:43:01.534 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
139. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 21:43:03.989 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 21:43:03.989 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 21:43:03.989 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 21:43:03.990 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
139. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 21:43:03.993 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
139. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 3 msec}
2023-07-01 21:43:03.996 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
139. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 21:43:58.409 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 21:43:58.409 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 21:43:58.409 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 21:43:58.410 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
139. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 21:43:58.413 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
139. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 3 msec}
2023-07-01 21:43:58.416 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
139. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 21:44:28.091 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 21:44:28.091 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 21:44:28.091 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 21:44:28.092 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
139. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 21:44:28.094 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
139. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 21:44:28.097 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
139. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 21:47:37.487 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 21:47:37.487 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 21:47:37.487 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 21:47:37.488 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
139. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 21:47:37.491 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
139. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 3 msec}
2023-07-01 21:47:37.493 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
139. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 21:57:50.436 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 21:57:50.436 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 21:57:50.436 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 21:57:50.437 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
144. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 21:57:50.440 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
144. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 3 msec}
2023-07-01 21:57:50.443 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
144. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 21:58:22.725 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 21:58:22.725 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 21:58:22.725 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 21:58:22.726 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
144. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 21:58:22.728 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
144. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 1 msec}
2023-07-01 21:58:22.730 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
144. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 1 msec}
2023-07-01 21:58:47.284 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 21:58:47.284 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 21:58:47.285 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 21:58:47.285 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
144. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 21:58:47.288 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
144. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 21:58:47.291 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
144. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 21:59:11.748 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
145. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 21:59:11.750 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
146. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 21:59:11.752 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
146. SELECT	/* select_accident_option : 교통사고 칼럼별 option값 */ 	
			listagg( DISTINCT(GAPI_GB ),'/')  	AS gapi_gb
		,	listagg( DISTINCT(acc_gb ),'/') 	AS acc_gb
		,	listagg( DISTINCT(acc_kind ),'/') 	AS acc_kind
		,	listagg( DISTINCT(proc_result ),'/') 	AS proc_result
	FROM TBM_ACCIDENT_INFO a
 {executed in 0 msec}
2023-07-01 21:59:48.971 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 21:59:48.971 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 21:59:48.971 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 21:59:48.972 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
146. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 21:59:48.975 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
146. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 21:59:48.978 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
146. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 22:02:30.060 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 22:02:30.060 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 22:02:30.060 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 22:02:30.061 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
149. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 22:02:30.064 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
149. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 3 msec}
2023-07-01 22:02:30.069 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
149. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 3 msec}
2023-07-01 22:04:00.058 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 22:04:00.058 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 22:04:00.058 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 22:04:00.059 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
149. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 22:04:00.062 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
149. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 22:04:00.064 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
149. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 22:06:12.823 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 22:06:12.823 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 22:06:12.823 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 22:06:12.825 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
149. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 22:06:12.828 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
149. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 3 msec}
2023-07-01 22:06:12.832 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
149. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 22:12:34.723 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 22:12:34.723 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 22:12:34.724 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 22:12:34.725 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
151. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 22:12:34.727 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
151. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 22:12:34.730 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
151. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 3 msec}
2023-07-01 22:12:47.133 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
151. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 22:12:47.135 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
152. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 22:12:47.137 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
152. SELECT	/* select_accident_option : 교통사고 칼럼별 option값 */ 	
			listagg( DISTINCT(GAPI_GB ),'/')  	AS gapi_gb
		,	listagg( DISTINCT(acc_gb ),'/') 	AS acc_gb
		,	listagg( DISTINCT(acc_kind ),'/') 	AS acc_kind
		,	listagg( DISTINCT(proc_result ),'/') 	AS proc_result
	FROM TBM_ACCIDENT_INFO a
 {executed in 0 msec}
2023-07-01 22:12:55.962 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
152. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 22:12:55.973 INFO  [http-nio-10010-exec-9] [com.pjy.dashboard.dao.DynamicSqlDao] - merge sql : MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , :acc_date , :route_nm , :emp_nm , :acc_time , :car_no , :acc_gb , :gapi_gb , :acc_kind , :jacha_rate , :sangdae_rate , :proc_result , :proc_memo , :acc_place , :daein_in_amt , :daemul_in_amt , :in_tot_amt , :daein_out_amt , :daemul_out_amt , :jacha_amt , :out_tot_amt , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
2023-07-01 22:12:55.975 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
153. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 22:12:55.984 ERROR [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeBatch(ProxyStatement.java:128)
153. batching 1 statements:
1:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '' , '1' , '' , '' , '1' , '1' , '' , '1' , '' , '1' , '' , '' , '1' , '' , '' , '1' , '' , '' , '' , '' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
 {FAILED after 8 msec}
org.h2.jdbc.JdbcBatchUpdateException: Data conversion error converting "'' (TBM_ACCIDENT_INFO: ""DAEIN_IN_AMT"" DECIMAL(12, 0))"; SQL statement:
MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss') [22018-200]
	at org.h2.jdbc.JdbcPreparedStatement.executeBatch(JdbcPreparedStatement.java:1235)
	at net.sf.log4jdbc.sql.jdbcapi.StatementSpy.executeBatch(StatementSpy.java:571)
	at com.zaxxer.hikari.pool.ProxyStatement.executeBatch(ProxyStatement.java:128)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeBatch(HikariProxyPreparedStatement.java)
	at org.springframework.jdbc.core.JdbcTemplate.lambda$batchUpdate$2(JdbcTemplate.java:950)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:617)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:647)
	at org.springframework.jdbc.core.JdbcTemplate.batchUpdate(JdbcTemplate.java:936)
	at org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.batchUpdate(NamedParameterJdbcTemplate.java:366)
	at com.pjy.dashboard.dao.DynamicSqlDao.batchInsert(DynamicSqlDao.java:737)
	at com.pjy.dashboard.dao.DynamicSqlDao$$FastClassBySpringCGLIB$$8af24191.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at com.pjy.dashboard.dao.DynamicSqlH2Dao$$EnhancerBySpringCGLIB$$c962d597.batchInsert(<generated>)
	at com.pjy.dashboard.service.DynamicSqlService.mergeInfo(DynamicSqlService.java:651)
	at com.pjy.dashboard.controller.TestController.BUS_mergeInfo(TestController.java:432)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:893)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:798)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:97)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at jdk.internal.reflect.GeneratedMethodAccessor147.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$970d4aa4.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:114)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:104)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-07-01 22:12:56.038 ERROR [http-nio-10010-exec-9] [c.p.d.core.error.GlobalExceptionHandler] - handleEntityNotFoundException
org.springframework.dao.DataIntegrityViolationException: PreparedStatementCallback; SQL [MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')]; Data conversion error converting "'' (TBM_ACCIDENT_INFO: ""DAEIN_IN_AMT"" DECIMAL(12, 0))"; SQL statement:
MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss') [22018-200]; nested exception is org.h2.jdbc.JdbcSQLDataException: Data conversion error converting "'' (TBM_ACCIDENT_INFO: ""DAEIN_IN_AMT"" DECIMAL(12, 0))"; SQL statement:
MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss') [22018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:457)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.table.Column.getDataConversionError(Column.java:409)
	at org.h2.table.Column.validateConvertUpdateSequence(Column.java:381)
	at org.h2.table.Table.validateConvertUpdateSequence(Table.java:845)
	at org.h2.command.dml.Merge.merge(Merge.java:175)
	at org.h2.command.dml.Merge.update(Merge.java:132)
	at org.h2.command.CommandContainer.update(CommandContainer.java:198)
	at org.h2.command.Command.executeUpdate(Command.java:251)
	at org.h2.server.TcpServerThread.process(TcpServerThread.java:406)
	at org.h2.server.TcpServerThread.run(TcpServerThread.java:183)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.h2.message.DbException: Data conversion error converting  [22018-200]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.value.Value.convertTo(Value.java:875)
	at org.h2.value.Value.convertTo(Value.java:772)
	at org.h2.value.TypeInfo.cast(TypeInfo.java:515)
	at org.h2.table.Column.validateConvertUpdateSequence(Column.java:378)
	... 8 more
Caused by: org.h2.jdbc.JdbcSQLDataException: Data conversion error converting  [22018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:457)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 13 more
Caused by: java.lang.NumberFormatException
	at java.math.BigDecimal.<init>(Unknown Source)
	at java.math.BigDecimal.<init>(Unknown Source)
	at java.math.BigDecimal.<init>(Unknown Source)
	at org.h2.value.Value.convertToDecimal(Value.java:1031)
	at org.h2.value.Value.convertTo(Value.java:810)
	... 11 more

	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:247)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1443)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:633)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:647)
	at org.springframework.jdbc.core.JdbcTemplate.batchUpdate(JdbcTemplate.java:936)
	at org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.batchUpdate(NamedParameterJdbcTemplate.java:366)
	at com.pjy.dashboard.dao.DynamicSqlDao.batchInsert(DynamicSqlDao.java:737)
	at com.pjy.dashboard.dao.DynamicSqlDao$$FastClassBySpringCGLIB$$8af24191.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at com.pjy.dashboard.dao.DynamicSqlH2Dao$$EnhancerBySpringCGLIB$$c962d597.batchInsert(<generated>)
	at com.pjy.dashboard.service.DynamicSqlService.mergeInfo(DynamicSqlService.java:651)
	at com.pjy.dashboard.controller.TestController.BUS_mergeInfo(TestController.java:432)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:893)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:798)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:97)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at jdk.internal.reflect.GeneratedMethodAccessor147.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$970d4aa4.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:114)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:104)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.h2.jdbc.JdbcSQLDataException: Data conversion error converting "'' (TBM_ACCIDENT_INFO: ""DAEIN_IN_AMT"" DECIMAL(12, 0))"; SQL statement:
MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss') [22018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:457)
	at org.h2.engine.SessionRemote.done(SessionRemote.java:611)
	at org.h2.command.CommandRemote.executeUpdate(CommandRemote.java:237)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdateInternal(JdbcPreparedStatement.java:191)
	at org.h2.jdbc.JdbcPreparedStatement.executeBatch(JdbcPreparedStatement.java:1219)
	at net.sf.log4jdbc.sql.jdbcapi.StatementSpy.executeBatch(StatementSpy.java:571)
	at com.zaxxer.hikari.pool.ProxyStatement.executeBatch(ProxyStatement.java:128)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeBatch(HikariProxyPreparedStatement.java)
	at org.springframework.jdbc.core.JdbcTemplate.lambda$batchUpdate$2(JdbcTemplate.java:950)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:617)
	... 133 common frames omitted
2023-07-01 22:12:56.040 WARN  [http-nio-10010-exec-9] [o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver] - Resolved [org.springframework.dao.DataIntegrityViolationException: PreparedStatementCallback; SQL [MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')]; Data conversion error converting "'' (TBM_ACCIDENT_INFO: ""DAEIN_IN_AMT"" DECIMAL(12, 0))"; SQL statement:
MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss') [22018-200]; nested exception is org.h2.jdbc.JdbcSQLDataException: Data conversion error converting "'' (TBM_ACCIDENT_INFO: ""DAEIN_IN_AMT"" DECIMAL(12, 0))"; SQL statement:
MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss') [22018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:457)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.table.Column.getDataConversionError(Column.java:409)
	at org.h2.table.Column.validateConvertUpdateSequence(Column.java:381)
	at org.h2.table.Table.validateConvertUpdateSequence(Table.java:845)
	at org.h2.command.dml.Merge.merge(Merge.java:175)
	at org.h2.command.dml.Merge.update(Merge.java:132)
	at org.h2.command.CommandContainer.update(CommandContainer.java:198)
	at org.h2.command.Command.executeUpdate(Command.java:251)
	at org.h2.server.TcpServerThread.process(TcpServerThread.java:406)
	at org.h2.server.TcpServerThread.run(TcpServerThread.java:183)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.h2.message.DbException: Data conversion error converting  [22018-200]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.value.Value.convertTo(Value.java:875)
	at org.h2.value.Value.convertTo(Value.java:772)
	at org.h2.value.TypeInfo.cast(TypeInfo.java:515)
	at org.h2.table.Column.validateConvertUpdateSequence(Column.java:378)
	... 8 more
Caused by: org.h2.jdbc.JdbcSQLDataException: Data conversion error converting  [22018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:457)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 13 more
Caused by: java.lang.NumberFormatException
	at java.math.BigDecimal.<init>(Unknown Source)
	at java.math.BigDecimal.<init>(Unknown Source)
	at java.math.BigDecimal.<init>(Unknown Source)
	at org.h2.value.Value.convertToDecimal(Value.java:1031)
	at org.h2.value.Value.convertTo(Value.java:810)
	... 11 more
]
2023-07-01 22:13:53.733 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
154. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 22:13:53.735 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
155. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 22:13:53.736 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
155. SELECT	/* select_accident_option : 교통사고 칼럼별 option값 */ 	
			listagg( DISTINCT(GAPI_GB ),'/')  	AS gapi_gb
		,	listagg( DISTINCT(acc_gb ),'/') 	AS acc_gb
		,	listagg( DISTINCT(acc_kind ),'/') 	AS acc_kind
		,	listagg( DISTINCT(proc_result ),'/') 	AS proc_result
	FROM TBM_ACCIDENT_INFO a
 {executed in 0 msec}
2023-07-01 22:14:02.733 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
155. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 22:14:02.744 INFO  [http-nio-10010-exec-10] [com.pjy.dashboard.dao.DynamicSqlDao] - merge sql : MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , :acc_date , :route_nm , :emp_nm , :acc_time , :car_no , :acc_gb , :gapi_gb , :acc_kind , :jacha_rate , :sangdae_rate , :proc_result , :proc_memo , :acc_place , :daein_in_amt , :daemul_in_amt , :in_tot_amt , :daein_out_amt , :daemul_out_amt , :jacha_amt , :out_tot_amt , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
2023-07-01 22:14:02.746 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
156. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 22:14:02.748 ERROR [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeBatch(ProxyStatement.java:128)
156. batching 1 statements:
1:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '' , '21' , '' , '' , '11' , '1' , '' , '1' , '' , '1' , '' , '' , '' , '' , '' , '1' , '1' , '1' , '' , '' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
 {FAILED after 1 msec}
org.h2.jdbc.JdbcBatchUpdateException: Data conversion error converting "'' (TBM_ACCIDENT_INFO: ""DAEIN_IN_AMT"" DECIMAL(12, 0))"; SQL statement:
MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss') [22018-200]
	at org.h2.jdbc.JdbcPreparedStatement.executeBatch(JdbcPreparedStatement.java:1235)
	at net.sf.log4jdbc.sql.jdbcapi.StatementSpy.executeBatch(StatementSpy.java:571)
	at com.zaxxer.hikari.pool.ProxyStatement.executeBatch(ProxyStatement.java:128)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeBatch(HikariProxyPreparedStatement.java)
	at org.springframework.jdbc.core.JdbcTemplate.lambda$batchUpdate$2(JdbcTemplate.java:950)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:617)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:647)
	at org.springframework.jdbc.core.JdbcTemplate.batchUpdate(JdbcTemplate.java:936)
	at org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.batchUpdate(NamedParameterJdbcTemplate.java:366)
	at com.pjy.dashboard.dao.DynamicSqlDao.batchInsert(DynamicSqlDao.java:737)
	at com.pjy.dashboard.dao.DynamicSqlDao$$FastClassBySpringCGLIB$$8af24191.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at com.pjy.dashboard.dao.DynamicSqlH2Dao$$EnhancerBySpringCGLIB$$c962d597.batchInsert(<generated>)
	at com.pjy.dashboard.service.DynamicSqlService.mergeInfo(DynamicSqlService.java:651)
	at com.pjy.dashboard.controller.TestController.BUS_mergeInfo(TestController.java:432)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:893)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:798)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:97)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at jdk.internal.reflect.GeneratedMethodAccessor147.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$970d4aa4.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:114)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:104)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-07-01 22:14:02.750 ERROR [http-nio-10010-exec-10] [c.p.d.core.error.GlobalExceptionHandler] - handleEntityNotFoundException
org.springframework.dao.DataIntegrityViolationException: PreparedStatementCallback; SQL [MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')]; Data conversion error converting "'' (TBM_ACCIDENT_INFO: ""DAEIN_IN_AMT"" DECIMAL(12, 0))"; SQL statement:
MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss') [22018-200]; nested exception is org.h2.jdbc.JdbcSQLDataException: Data conversion error converting "'' (TBM_ACCIDENT_INFO: ""DAEIN_IN_AMT"" DECIMAL(12, 0))"; SQL statement:
MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss') [22018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:457)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.table.Column.getDataConversionError(Column.java:409)
	at org.h2.table.Column.validateConvertUpdateSequence(Column.java:381)
	at org.h2.table.Table.validateConvertUpdateSequence(Table.java:845)
	at org.h2.command.dml.Merge.merge(Merge.java:175)
	at org.h2.command.dml.Merge.update(Merge.java:132)
	at org.h2.command.CommandContainer.update(CommandContainer.java:198)
	at org.h2.command.Command.executeUpdate(Command.java:251)
	at org.h2.server.TcpServerThread.process(TcpServerThread.java:406)
	at org.h2.server.TcpServerThread.run(TcpServerThread.java:183)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.h2.message.DbException: Data conversion error converting  [22018-200]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.value.Value.convertTo(Value.java:875)
	at org.h2.value.Value.convertTo(Value.java:772)
	at org.h2.value.TypeInfo.cast(TypeInfo.java:515)
	at org.h2.table.Column.validateConvertUpdateSequence(Column.java:378)
	... 8 more
Caused by: org.h2.jdbc.JdbcSQLDataException: Data conversion error converting  [22018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:457)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 13 more
Caused by: java.lang.NumberFormatException
	at java.math.BigDecimal.<init>(Unknown Source)
	at java.math.BigDecimal.<init>(Unknown Source)
	at java.math.BigDecimal.<init>(Unknown Source)
	at org.h2.value.Value.convertToDecimal(Value.java:1031)
	at org.h2.value.Value.convertTo(Value.java:810)
	... 11 more

	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:247)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1443)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:633)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:647)
	at org.springframework.jdbc.core.JdbcTemplate.batchUpdate(JdbcTemplate.java:936)
	at org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.batchUpdate(NamedParameterJdbcTemplate.java:366)
	at com.pjy.dashboard.dao.DynamicSqlDao.batchInsert(DynamicSqlDao.java:737)
	at com.pjy.dashboard.dao.DynamicSqlDao$$FastClassBySpringCGLIB$$8af24191.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at com.pjy.dashboard.dao.DynamicSqlH2Dao$$EnhancerBySpringCGLIB$$c962d597.batchInsert(<generated>)
	at com.pjy.dashboard.service.DynamicSqlService.mergeInfo(DynamicSqlService.java:651)
	at com.pjy.dashboard.controller.TestController.BUS_mergeInfo(TestController.java:432)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:893)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:798)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:97)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at jdk.internal.reflect.GeneratedMethodAccessor147.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$970d4aa4.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:114)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:104)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.h2.jdbc.JdbcSQLDataException: Data conversion error converting "'' (TBM_ACCIDENT_INFO: ""DAEIN_IN_AMT"" DECIMAL(12, 0))"; SQL statement:
MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss') [22018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:457)
	at org.h2.engine.SessionRemote.done(SessionRemote.java:611)
	at org.h2.command.CommandRemote.executeUpdate(CommandRemote.java:237)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdateInternal(JdbcPreparedStatement.java:191)
	at org.h2.jdbc.JdbcPreparedStatement.executeBatch(JdbcPreparedStatement.java:1219)
	at net.sf.log4jdbc.sql.jdbcapi.StatementSpy.executeBatch(StatementSpy.java:571)
	at com.zaxxer.hikari.pool.ProxyStatement.executeBatch(ProxyStatement.java:128)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeBatch(HikariProxyPreparedStatement.java)
	at org.springframework.jdbc.core.JdbcTemplate.lambda$batchUpdate$2(JdbcTemplate.java:950)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:617)
	... 133 common frames omitted
2023-07-01 22:14:02.752 WARN  [http-nio-10010-exec-10] [o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver] - Resolved [org.springframework.dao.DataIntegrityViolationException: PreparedStatementCallback; SQL [MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')]; Data conversion error converting "'' (TBM_ACCIDENT_INFO: ""DAEIN_IN_AMT"" DECIMAL(12, 0))"; SQL statement:
MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss') [22018-200]; nested exception is org.h2.jdbc.JdbcSQLDataException: Data conversion error converting "'' (TBM_ACCIDENT_INFO: ""DAEIN_IN_AMT"" DECIMAL(12, 0))"; SQL statement:
MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss') [22018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:457)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.table.Column.getDataConversionError(Column.java:409)
	at org.h2.table.Column.validateConvertUpdateSequence(Column.java:381)
	at org.h2.table.Table.validateConvertUpdateSequence(Table.java:845)
	at org.h2.command.dml.Merge.merge(Merge.java:175)
	at org.h2.command.dml.Merge.update(Merge.java:132)
	at org.h2.command.CommandContainer.update(CommandContainer.java:198)
	at org.h2.command.Command.executeUpdate(Command.java:251)
	at org.h2.server.TcpServerThread.process(TcpServerThread.java:406)
	at org.h2.server.TcpServerThread.run(TcpServerThread.java:183)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.h2.message.DbException: Data conversion error converting  [22018-200]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.value.Value.convertTo(Value.java:875)
	at org.h2.value.Value.convertTo(Value.java:772)
	at org.h2.value.TypeInfo.cast(TypeInfo.java:515)
	at org.h2.table.Column.validateConvertUpdateSequence(Column.java:378)
	... 8 more
Caused by: org.h2.jdbc.JdbcSQLDataException: Data conversion error converting  [22018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:457)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 13 more
Caused by: java.lang.NumberFormatException
	at java.math.BigDecimal.<init>(Unknown Source)
	at java.math.BigDecimal.<init>(Unknown Source)
	at java.math.BigDecimal.<init>(Unknown Source)
	at org.h2.value.Value.convertToDecimal(Value.java:1031)
	at org.h2.value.Value.convertTo(Value.java:810)
	... 11 more
]
2023-07-01 22:31:45.580 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 22:31:45.580 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 22:31:45.580 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 22:31:45.582 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
160. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 22:31:45.585 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
160. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 3 msec}
2023-07-01 22:31:45.589 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
160. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 22:34:08.929 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 22:34:08.929 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 22:34:08.929 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 22:34:08.930 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
164. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 22:34:08.933 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
164. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 3 msec}
2023-07-01 22:34:08.937 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
164. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 22:34:11.835 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
166. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 22:34:11.837 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
167. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 22:34:11.838 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
167. SELECT	/* select_accident_option : 교통사고 칼럼별 option값 */ 	
			listagg( DISTINCT(GAPI_GB ),'/')  	AS gapi_gb
		,	listagg( DISTINCT(acc_gb ),'/') 	AS acc_gb
		,	listagg( DISTINCT(acc_kind ),'/') 	AS acc_kind
		,	listagg( DISTINCT(proc_result ),'/') 	AS proc_result
	FROM TBM_ACCIDENT_INFO a
 {executed in 0 msec}
2023-07-01 22:34:24.185 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 22:34:24.185 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 22:34:24.185 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 22:34:24.186 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
167. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 22:34:24.188 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
167. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 22:34:24.190 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
167. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 22:34:26.460 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
167. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 22:34:26.462 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
168. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 22:34:26.463 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
168. SELECT	/* select_accident_option : 교통사고 칼럼별 option값 */ 	
			listagg( DISTINCT(GAPI_GB ),'/')  	AS gapi_gb
		,	listagg( DISTINCT(acc_gb ),'/') 	AS acc_gb
		,	listagg( DISTINCT(acc_kind ),'/') 	AS acc_kind
		,	listagg( DISTINCT(proc_result ),'/') 	AS proc_result
	FROM TBM_ACCIDENT_INFO a
 {executed in 1 msec}
2023-07-01 22:34:45.398 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 22:34:45.398 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 22:34:45.398 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 22:34:45.399 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
168. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 22:34:45.402 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
168. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 3 msec}
2023-07-01 22:34:45.405 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
168. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 1 msec}
2023-07-01 22:34:48.160 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
168. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 22:34:48.161 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
169. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 22:34:48.162 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
169. SELECT	/* select_accident_option : 교통사고 칼럼별 option값 */ 	
			listagg( DISTINCT(GAPI_GB ),'/')  	AS gapi_gb
		,	listagg( DISTINCT(acc_gb ),'/') 	AS acc_gb
		,	listagg( DISTINCT(acc_kind ),'/') 	AS acc_kind
		,	listagg( DISTINCT(proc_result ),'/') 	AS proc_result
	FROM TBM_ACCIDENT_INFO a
 {executed in 0 msec}
2023-07-01 22:35:33.552 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
169. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 22:35:33.554 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
170. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 22:35:33.556 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
170. SELECT	/* select_accident_option : 교통사고 칼럼별 option값 */ 	
			listagg( DISTINCT(GAPI_GB ),'/')  	AS gapi_gb
		,	listagg( DISTINCT(acc_gb ),'/') 	AS acc_gb
		,	listagg( DISTINCT(acc_kind ),'/') 	AS acc_kind
		,	listagg( DISTINCT(proc_result ),'/') 	AS proc_result
	FROM TBM_ACCIDENT_INFO a
 {executed in 0 msec}
2023-07-01 22:39:03.233 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 22:39:03.233 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 22:39:03.233 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 22:39:03.234 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
170. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 22:39:03.237 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
170. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 3 msec}
2023-07-01 22:39:03.240 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
170. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 3 msec}
2023-07-01 22:39:05.810 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
170. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 22:39:05.812 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
171. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 22:39:05.813 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
171. SELECT	/* select_accident_option : 교통사고 칼럼별 option값 */ 	
			listagg( DISTINCT(GAPI_GB ),'/')  	AS gapi_gb
		,	listagg( DISTINCT(acc_gb ),'/') 	AS acc_gb
		,	listagg( DISTINCT(acc_kind ),'/') 	AS acc_kind
		,	listagg( DISTINCT(proc_result ),'/') 	AS proc_result
	FROM TBM_ACCIDENT_INFO a
 {executed in 1 msec}
2023-07-01 22:39:41.499 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 22:39:41.499 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 22:39:41.499 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 22:39:41.500 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
171. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 22:39:41.502 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
171. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 22:39:41.505 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
171. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 1 msec}
2023-07-01 22:39:44.383 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
171. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 22:39:44.385 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
172. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 22:39:44.386 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
172. SELECT	/* select_accident_option : 교통사고 칼럼별 option값 */ 	
			listagg( DISTINCT(GAPI_GB ),'/')  	AS gapi_gb
		,	listagg( DISTINCT(acc_gb ),'/') 	AS acc_gb
		,	listagg( DISTINCT(acc_kind ),'/') 	AS acc_kind
		,	listagg( DISTINCT(proc_result ),'/') 	AS proc_result
	FROM TBM_ACCIDENT_INFO a
 {executed in 1 msec}
2023-07-01 22:49:34.927 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 22:49:34.927 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 22:49:34.927 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 22:49:34.928 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
172. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 22:49:34.932 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
172. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 3 msec}
2023-07-01 22:49:34.935 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
172. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 22:50:09.744 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
172. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 22:50:09.746 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
173. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 22:50:09.747 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
173. SELECT	/* select_accident_option : 교통사고 칼럼별 option값 */ 	
			listagg( DISTINCT(GAPI_GB ),'/')  	AS gapi_gb
		,	listagg( DISTINCT(acc_gb ),'/') 	AS acc_gb
		,	listagg( DISTINCT(acc_kind ),'/') 	AS acc_kind
		,	listagg( DISTINCT(proc_result ),'/') 	AS proc_result
	FROM TBM_ACCIDENT_INFO a
 {executed in 0 msec}
2023-07-01 22:50:57.295 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
173. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 22:50:57.297 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
174. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 22:50:57.298 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
174. SELECT	/* select_accident_option : 교통사고 칼럼별 option값 */ 	
			listagg( DISTINCT(GAPI_GB ),'/')  	AS gapi_gb
		,	listagg( DISTINCT(acc_gb ),'/') 	AS acc_gb
		,	listagg( DISTINCT(acc_kind ),'/') 	AS acc_kind
		,	listagg( DISTINCT(proc_result ),'/') 	AS proc_result
	FROM TBM_ACCIDENT_INFO a
 {executed in 1 msec}
2023-07-01 22:53:41.107 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
174. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 22:53:41.109 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
175. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 22:53:41.110 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
175. SELECT	/* select_accident_option : 교통사고 칼럼별 option값 */ 	
			listagg( DISTINCT(GAPI_GB ),'/')  	AS gapi_gb
		,	listagg( DISTINCT(acc_gb ),'/') 	AS acc_gb
		,	listagg( DISTINCT(acc_kind ),'/') 	AS acc_kind
		,	listagg( DISTINCT(proc_result ),'/') 	AS proc_result
	FROM TBM_ACCIDENT_INFO a
 {executed in 0 msec}
2023-07-01 22:54:38.714 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
178. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 22:54:38.716 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
179. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 22:54:38.718 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
179. SELECT	/* select_accident_option : 교통사고 칼럼별 option값 */ 	
			listagg( DISTINCT(GAPI_GB ),'/')  	AS gapi_gb
		,	listagg( DISTINCT(acc_gb ),'/') 	AS acc_gb
		,	listagg( DISTINCT(acc_kind ),'/') 	AS acc_kind
		,	listagg( DISTINCT(proc_result ),'/') 	AS proc_result
	FROM TBM_ACCIDENT_INFO a
 {executed in 0 msec}
2023-07-01 22:54:56.049 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
179. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 22:54:56.050 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
180. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 22:54:56.051 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
180. SELECT	/* select_accident_option : 교통사고 칼럼별 option값 */ 	
			listagg( DISTINCT(GAPI_GB ),'/')  	AS gapi_gb
		,	listagg( DISTINCT(acc_gb ),'/') 	AS acc_gb
		,	listagg( DISTINCT(acc_kind ),'/') 	AS acc_kind
		,	listagg( DISTINCT(proc_result ),'/') 	AS proc_result
	FROM TBM_ACCIDENT_INFO a
 {executed in 1 msec}
2023-07-01 22:55:03.121 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
180. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 22:55:03.122 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
181. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 22:55:03.123 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
181. SELECT	/* select_accident_option : 교통사고 칼럼별 option값 */ 	
			listagg( DISTINCT(GAPI_GB ),'/')  	AS gapi_gb
		,	listagg( DISTINCT(acc_gb ),'/') 	AS acc_gb
		,	listagg( DISTINCT(acc_kind ),'/') 	AS acc_kind
		,	listagg( DISTINCT(proc_result ),'/') 	AS proc_result
	FROM TBM_ACCIDENT_INFO a
 {executed in 1 msec}
2023-07-01 22:57:04.069 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
181. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 22:57:04.072 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
182. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 22:57:04.073 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
182. SELECT	/* select_accident_option : 교통사고 칼럼별 option값 */ 	
			listagg( DISTINCT(GAPI_GB ),'/')  	AS gapi_gb
		,	listagg( DISTINCT(acc_gb ),'/') 	AS acc_gb
		,	listagg( DISTINCT(acc_kind ),'/') 	AS acc_kind
		,	listagg( DISTINCT(proc_result ),'/') 	AS proc_result
	FROM TBM_ACCIDENT_INFO a
 {executed in 1 msec}
2023-07-01 22:57:08.168 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
182. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 22:57:08.170 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
183. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 22:57:08.171 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
183. SELECT	/* select_accident_option : 교통사고 칼럼별 option값 */ 	
			listagg( DISTINCT(GAPI_GB ),'/')  	AS gapi_gb
		,	listagg( DISTINCT(acc_gb ),'/') 	AS acc_gb
		,	listagg( DISTINCT(acc_kind ),'/') 	AS acc_kind
		,	listagg( DISTINCT(proc_result ),'/') 	AS proc_result
	FROM TBM_ACCIDENT_INFO a
 {executed in 0 msec}
2023-07-01 22:58:07.047 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 22:58:07.047 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 22:58:07.048 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 22:58:07.049 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
183. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 22:58:07.050 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
183. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 0 msec}
2023-07-01 22:58:07.050 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
183. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 0 msec}
2023-07-01 22:58:15.306 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
183. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 22:58:15.313 INFO  [http-nio-10010-exec-1] [com.pjy.dashboard.dao.DynamicSqlDao] - merge sql : MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , :acc_date , :acc_time , :emp_nm , :route_nm , :car_no , :acc_gb , :gapi_gb , :acc_kind , :jacha_rate , :sangdae_rate , :proc_result , :proc_memo , :acc_place , :daein_in_amt , :daemul_in_amt , :in_tot_amt , :daein_out_amt , :daemul_out_amt , :jacha_amt , :out_tot_amt , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
2023-07-01 22:58:15.315 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
184. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 22:58:15.344 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeBatch(ProxyStatement.java:128)
184. batching 73 statements:
 1:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-01-06' , '09:24:00' , '김종국' , '20번' , 3573.0 , '자차' , '피해' , '측면충돌' , '0' , 100.0 , '종결' , 'DB / 수리비입금' , '논현주공 13단지 앞' , '0' , 908520.0 , 908520.0 , '0' , '0' , '0' , '0' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
 2:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-01-06' , '18:28:00' , '이택선' , '5-1번' , 3643.0 , '자차' , '피해' , '측면충돌' , '0' , 100.0 , '종결' , '전세버스 / 수리완료' , '주안역 환승장' , '0' , 86820.0 , 86820.0 , '0' , '0' , '0' , '0' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
 3:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-01-07' , '12:45:00' , '채종두' , '38번' , 3551.0 , '대물' , '가해' , '측면충돌' , 100.0 , '0' , '종결' , '대물 90 / 회사처리' , '주안역 앞' , '0' , '0' , '0' , '0' , 900000.0 , '0' , 900000.0 , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
 4:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-01-08' , '14:41:00' , '윤세호' , '38번' , 3546.0 , '자차' , '피해' , '측면충돌' , '0' , 100.0 , '종결' , '삼성접수 / 수리완료' , '서창캠핑장 앞' , '0' , '0' , '0' , '0' , '0' , '0' , '0' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
 5:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-01-13' , '15:26:00' , '심기섭' , '21번' , 3625.0 , '자차' , '피해' , '측면충돌' , '0' , 100.0 , '종결' , '삼성접수 / 수리완료' , '예술회관 앞' , '0' , '0' , '0' , '0' , '0' , '0' , '0' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
 6:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-01-15' , '22:32:00' , '임인복' , '27번' , 3638.0 , '자차' , '자피' , '시설물 충격' , 100.0 , '0' , '종결' , '회사 자체 수리' , '남동중학교 정류장' , '0' , '0' , '0' , '0' , '0' , 172720.0 , 172720.0 , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
 7:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-01-18' , '13:59:00' , '고상욱' , '38번' , 3552.0 , '자차' , '피해' , '측면충돌' , '10(무과실주장)' , 90.0 , '종결' , '삼성접수 / 수리비 50입금' , '하늘마을앞 사거리' , '0' , 500000.0 , 500000.0 , '0' , '0' , '0' , '0' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
 8:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-01-19' , '06:57:00' , '이용진' , '21번' , 3623.0 , '자차' , '피해' , '측면충돌' , '0' , 100.0 , '종결' , '현대접수 / 삼공수리' , '매소홀터널 앞' , '0' , 217040.0 , 217040.0 , '0' , '0' , '0' , '0' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
 9:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-01-24' , '09:54:00' , '서수찬' , '20번' , 3506.0 , '대물,자차' , '가해' , '시설물 충격' , 100.0 , '0' , '종결' , '공제접수 / 가로등,가로수' , '선수촌5단지 앞' , '0' , '0' , '0' , '0' , 4892800.0 , 4609000.0 , 9501800.0 , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
10:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-01-26' , '16:27:00' , '신경식' , '5--번' , 3646.0 , '자차' , '피해' , '측면충돌' , '0' , 100.0 , '종결' , '미추홀서경찰관/각자수리' , '굴다리 종점' , '0' , '0' , '0' , '0' , '0' , '0' , '0' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
11:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-01-27' , '20:25:00' , '남기선' , '5-1번' , 3645.0 , '자차' , '피해' , '추돌' , '0' , 100.0 , '종결' , '수리비 40 입금' , '대림아파트 정류장' , '0' , 400000.0 , 400000.0 , '0' , '0' , '0' , '0' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
12:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-01-29' , '12:16:00' , '박정훈' , '38번' , 3575.0 , '자차' , '피해' , '측면충돌' , '0' , 100.0 , '종결' , '삼성접수 / 수리비 50입금' , '독정이고개' , '0' , 500000.0 , 500000.0 , '0' , '0' , '0' , '0' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
13:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-02-02' , '07:11:00' , '전정훈' , '27번' , 7125.0 , '자차' , '피해' , '측면충돌' , '0' , 100.0 , '종결' , '수리비 40 입금완료' , '신선초교 앞 공사장 입구' , '0' , 400000.0 , 400000.0 , '0' , '0' , '0' , '0' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
14:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-02-04' , '07:00:00' , '남기선' , '5-1번' , 3645.0 , '자차' , '피해' , '추돌' , '0' , 100.0 , '종결' , 'KB접수/수리비 입금' , '소방본부 정류장' , '0' , 700000.0 , 700000.0 , '0' , '0' , '0' , '0' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
15:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2020-01-21' , '10:29:00' , '홍성운' , '27번' , 3676.0 , '대인' , '피해' , '비접촉(현대 구상금)' , '0 (무과실 주장)' , 100.0 , '진행' , '현대 선처리후 구상 청구' , '주안1동성당 앞' , '0' , '0' , '0' , '0' , '0' , '0' , '0' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
16:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-02-06' , '09:46:00' , '최병국' , '38번' , 3576.0 , '자차' , '피해' , '측면충돌' , '20 (무과실 주장)' , 80.0 , '종결' , 'KB접수 / 수리비 입금' , '새안의원 앞' , '0' , 900000.0 , 900000.0 , '0' , '0' , '0' , '0' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
17:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-02-06' , '18:15:00' , '권병묵' , '27번' , 3638.0 , '자차' , '피해' , '추돌' , '0' , 100.0 , '종결' , 'DB접수 / 수리비 입금' , '논현사거리 정류장' , '0' , 398520.0 , 398520.0 , '0' , '0' , '0' , '0' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
18:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-02-05' , '13:50:00' , '남기선' , '5-1번' , 3548.0 , '대인' , '가해' , '기타' , 100.0 , '0' , '종결' , '피해자 김복순 30합의' , '주안7동행정복지센터 정류장' , '0' , '0' , '0' , 300000.0 , '0' , '0' , 300000.0 , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
19:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-02-08' , '10:18:00' , '이종식' , '20번' , 3556.0 , '대인,대물,자차' , '가해' , '추돌' , 100.0 , '0' , '진행' , '공제접수(대인,대물)' , '논현주공14단지 앞' , '0' , '0' , '0' , 1339560.0 , 9717620.0 , 2863454.0 , '0' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
20:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-02-08' , '08:35:00' , '박근호' , '38번' , 3547.0 , '자차' , '피해' , '측면충돌' , '0' , 100.0 , '종결' , '롯데접수 / 수리완료' , '전재울사거리' , '0' , 108000.0 , 108000.0 , '0' , '0' , '0' , '0' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
21:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-02-08' , '13:37:00' , '허선균' , '21번' , 3562.0 , '대물' , '가해' , '측면충돌' , 100.0 , '0' , '진행' , '대인X, 대물 공제접수' , '도화고가 앞' , '0' , '0' , '0' , '0' , 1800000.0 , 103400.0 , '0' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
22:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-02-09' , '13:38:00' , '박근호' , '38번' , 3547.0 , '자차' , '피해' , '측면충돌' , '0' , 100.0 , '종결' , 'KB접수/수리완료' , '세일빌라 입구' , '0' , 108520.0 , 108520.0 , '0' , '0' , '0' , '0' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
23:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-02-09' , '12:44:00' , '장길영' , '38번' , 3551.0 , '대인' , '가해' , '승차' , 100.0 , '0' , '진행' , '경찰신고 / 합의 조율중' , '하늘마을정류장' , '0' , '0' , '0' , '0' , '0' , '0' , '0' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
24:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2022-11-04' , '13:38:00' , '오정택' , '5-1번' , 3645.0 , '자차,대인' , '피해' , '측면충돌 (현대구상금)' , '0 (무과실 주장)' , 100.0 , '진행' , '현대 선처리후 구상청구' , '학익2동 행정복지센터 앞' , '0' , '0' , '0' , '0' , '0' , '0' , '0' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
25:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-02-17' , '13:40:00' , '박인서' , '21번' , 3649.0 , '자차' , '피해' , '추돌' , '0' , 100.0 , '종결' , '삼성 / 수리비 입금' , '현대시장 정류장' , '0' , 500000.0 , 500000.0 , '0' , '0' , '0' , '0' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
26:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-02-21' , '12:21:00' , '윤세호' , '38번' , 3549.0 , '자차' , '피해' , '측면충돌' , '0' , 100.0 , '종결' , '빽밀러 파손 / 30입금' , '구월동 우리은행사거리' , '0' , 300000.0 , 300000.0 , '0' , '0' , '0' , '0' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
27:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-02-22' , '08:31:00' , '허선균' , '21번' , 3628.0 , '자차' , '피해' , '측면충돌' , 20.0 , 80.0 , '진행' , '하나손해 / 수리예정' , '경인지방노동청 입구' , '0' , '0' , '0' , '0' , '0' , '0' , '0' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
28:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-03-06' , '00:35:00' , '최정수' , '5번' , 3619.0 , '자차' , '피해' , '기타' , '0' , 100.0 , '종결' , '수리비 15 입금' , '연안부두 차고지' , '0' , 150000.0 , 150000.0 , '0' , '0' , '0' , '0' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
29:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-03-06' , '20:25:00' , '백종필' , '27번' , 3659.0 , '자차, 승객' , '피해' , '측면충돌' , 10.0 , 90.0 , '종결' , '삼성접수/수리비 70입금' , '주적골삼거리' , '0' , 700000.0 , 700000.0 , '0' , '0' , '0' , '0' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
30:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-03-09' , '19:19:00' , '김성취' , '5번' , 3619.0 , '자차' , '피해' , '추돌' , '0' , 100.0 , '종결' , '메리츠 / 수리비 35입금' , '임광그대로가 103동 앞' , '0' , 350000.0 , 350000.0 , '0' , '0' , '0' , '0' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
31:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-03-10' , '21:13:00' , '한태전' , '5번' , 3632.0 , '자차' , '피해' , '측면충돌' , 20.0 , 80.0 , '종결' , 'DB접수 / 수리비 70입금' , '문학 목우촌 앞' , '0' , 700000.0 , 700000.0 , '0' , '0' , '0' , '0' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
32:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-03-13' , '20:31:00' , '임인복' , '27번' , 7123.0 , '자차' , '피해' , '측면충돌' , 10.0 , 90.0 , '진행' , '렌트공제/ 과실 9:1확정' , '항동 SK주유소 앞' , '0' , 1599300.0 , 1599300.0 , 818000.0 , 500000.0 , '0' , '0' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
33:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-03-15' , '23:50:00' , '김도근' , '5번' , 3621.0 , '자차' , '피해' , '측면충돌' , '0' , 100.0 , '종결' , '수리비 25입금' , '연안부두 차고지' , '0' , 250000.0 , 250000.0 , '0' , '0' , '0' , '0' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
34:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-03-16' , '14:40:00' , '임충환' , '5번' , 3632.0 , '자차' , '피해' , '추돌' , '0' , 100.0 , '종결' , '악사접수/ 수리비 50입금' , '토지금고 굴다리 앞' , '0' , 500000.0 , 500000.0 , '0' , '0' , '0' , '0' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
35:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-03-18' , '11:20:00' , '박정배' , '5-1번' , 3644.0 , '자차' , '피해' , '측면충돌' , '0' , 100.0 , '진행' , '삼성접수 /수리예정' , '굴다리 종점' , '0' , '0' , '0' , '0' , '0' , '0' , '0' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
36:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-03-19' , '12:27:00' , '김동회' , '20번' , 3504.0 , '자차' , '피해' , '추돌' , '0' , 100.0 , '종결' , '현대 접수/수리비 50입금' , '동방중학교 앞' , '0' , 500000.0 , 500000.0 , '0' , '0' , '0' , '0' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
37:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-03-15' , '19:51:00' , '윤세호' , '38번' , 3553.0 , '대인' , '가해' , '차내전도' , 100.0 , '0' , '종결' , '김명희(78세,여)/120 회사처리' , '윤성아파트 앞' , '0' , '0' , '0' , 1200000.0 , 1200000.0 , '0' , 1200000.0 , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
38:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-03-21' , '19:43:00' , '자선호' , '5번' , 3622.0 , '자차' , '피해' , '측면충돌' , '0' , 100.0 , '종결' , '악사접수/ 수리비 입급' , '롯데백화점 사거리' , '0' , 800000.0 , 800000.0 , '0' , '0' , '0' , '0' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
39:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-03-21' , '21:00:00' , '김요섭' , '5번' , 3632.0 , '자차,대인' , '쌍피' , '측면충돌' , 40.0 , 60.0 , '종결' , '차량 각 처리, 승객 상대처리' , '선수촌아파트 입구 회전교차로' , '0' , 200000.0 , 200000.0 , '0' , '0' , '0' , '0' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
40:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-03-23' , '18:51:00' , '임재준' , '20번' , 3574.0 , '자차' , '피해' , '측면충돌' , '0' , 100.0 , '종결' , '수리비 25입금' , '소래풍림사거리' , '0' , '0' , '0' , '0' , '0' , '0' , '0' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
41:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-03-23' , '15:50:00' , '김용문' , '27번' , 3641.0 , '대인' , '가해' , ' 문 끼임사고' , 100.0 , '0' , '종결' , '합의금(박순예)60지급' , '인하대역 1번출구' , '0' , '0' , '0' , 600000.0 , '0' , '0' , 600000.0 , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
42:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-03-25' , '10:45:00' , '인호덕' , '27번' , 3676.0 , '자차' , '피해' , '추돌' , '0' , 100.0 , '종결' , '삼성 / 수리완료' , '도림동고개' , '0' , 217040.0 , 217040.0 , '0' , '0' , '0' , '0' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
43:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-03-25' , '16:06:00' , '이용재' , '27번' , 3637.0 , '자차' , '피해' , '측면충돌' , '0' , 100.0 , '종결' , 'KB / 수리비 70입금' , '논현역사거리' , '0' , 700000.0 , 700000.0 , '0' , '0' , '0' , '0' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
44:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-03-25' , '18:51:00' , '임재준' , '20번' , 3574.0 , '자차' , '피해' , '측면충돌' , 20.0 , 80.0 , '진행' , '삼성접수/신고예정' , '소래풍림사거리' , '0' , '0' , '0' , '0' , '0' , '0' , '0' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
45:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-03-25' , '14:31:00' , '이용일' , '27번' , 3634.0 , '대인' , '가해' , '개문발차' , 100.0 , '0' , '종결' , '공제접수' , '한신휴아파트 정류장' , '0' , '0' , '0' , 2710000.0 , '0' , '0' , 2710000.0 , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
46:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-03-28' , '23:05:00' , '조성훈' , '21번' , 3563.0 , '대물' , '가해' , '측면충돌' , 80.0 , 20.0 , '종결' , '대인X, 대물 90회사합의' , '롯데백화점 사거리' , '0' , '0' , '0' , '0' , 900000.0 , '0' , 900000.0 , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
47:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-03-31' , '07:30:00' , '유병수' , '21번' , 3628.0 , '자차' , '피해' , '측면충돌' , '0' , 100.0 , '종결' , '한화 / 수리비 60입금' , '서창중 정류장' , '0' , 600000.0 , 600000.0 , '0' , '0' , '0' , '0' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
48:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-04-04' , '20:05:00' , '이형규' , '20번' , 3505.0 , '자차' , '피해' , '측면충돌' , '0' , 100.0 , '종결' , '수리비 25만 입금' , '인평고 정류장' , '0' , '0' , '0' , '0' , '0' , '0' , '0' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
49:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-04-05' , '09:31:00' , '윤병진' , '27번' , 7122.0 , '자차' , '피해' , '측면충돌' , '무과실 주장' , 80.0 , '진행' , 'DB접수 / 과실협의중' , '토지금고시장 입구 삼거리' , '0' , '0' , '0' , '0' , '0' , '0' , '0' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
50:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-04-05' , '12:05:00' , '임재준' , '20번' , 3574.0 , '대인' , '가해' , '차내전도' , 100.0 , '0' , '종결' , '공제접수' , '남촌동입구 정류장' , '0' , '0' , '0' , 1700000.0 , '0' , '0' , 1700000.0 , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
51:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-04-05' , '13:06:00' , '이승수' , '27번' , 3640.0 , '자차' , '피해' , '측면충돌' , '0' , 100.0 , '종결' , '메리츠 / 수리비 60입금' , '주적골 삼거리' , '0' , 600000.0 , 600000.0 , '0' , '0' , '0' , '0' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
52:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-04-06' , '10:44:00' , '이용일' , '27번' , 3634.0 , '자차' , '피해' , '측면충돌' , '0' , 100.0 , '진행' , 'KB / 수리비입금예정' , '용현고가교' , '0' , '0' , '0' , '0' , '0' , '0' , '0' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
53:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-04-10' , '10:30:00' , '김동회' , '20번' , 3504.0 , '대인' , '가해' , '차내전도' , 100.0 , '0' , '종결' , '50 합의' , '모래내시장전 사거리' , '0' , '0' , '0' , 500000.0 , '0' , '0' , 500000.0 , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
54:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-04-10' , '16:30:00' , '박정훈' , '38번' , 3546.0 , '자차' , '피해' , '측면충돌' , '0' , 100.0 , '종결' , '수리비 20 입금 ' , '경인식약청 앞' , '0' , 200000.0 , 200000.0 , '0' , '0' , '0' , '0' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
55:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-04-11' , '14:02:00' , '김승배' , '38번' , 3550.0 , '인,물피' , '쌍피' , '측면충돌' , 60.0 , 40.0 , '진행' , '현대접수 / 공제접수' , '신기사거리' , '0' , '0' , '0' , '0' , '0' , '0' , '0' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
56:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-04-13' , '14:57:00' , '장명근' , '38번' , 3553.0 , '자차' , '피해' , '측면충돌' , '0' , 100.0 , '종결' , '수리비 20 입금' , '소래포구역 정류장' , '0' , '0' , '0' , '0' , '0' , '0' , '0' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
57:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-04-14' , '15:42:00' , '임충환' , '5번' , 3632.0 , '대물' , '가해' , '측면충돌' , 100.0 , '0' , '종결' , '공제접수' , '서창119안전센터 앞' , '0' , '0' , '0' , '0' , 1152880.0 , '0' , '0' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
58:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-04-16' , '16:40:00' , '이택선' , '5-1번' , 3645.0 , '자차' , '피해' , '측면충돌' , '0' , 100.0 , '종결' , '현대접수 / 수리완료' , '명보주유소 앞' , '0' , 108520.0 , 108520.0 , '0' , '0' , '0' , '0' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
59:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-04-18' , '16:52:00' , '손신영' , '20번' , 3565.0 , '대인' , '가해' , '차내전도' , 100.0 , '0' , '진행' , '공제접수' , '태화아파트 정류장 전' , '0' , '0' , '0' , 818000.0 , '0' , '0' , '0' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
60:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-04-19' , '15:33:00' , '이덕길' , '5-1번' , 3648.0 , '자차' , '피해' , '측면충돌' , '0' , 100.0 , '종결' , '악사 접수 / 수리완료' , '신기시장 앞' , '0' , 108520.0 , 108520.0 , '0' , '0' , '0' , '0' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
61:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-04-22' , '23:42:00' , '장남균' , '5번' , 3631.0 , '자차' , '피해' , '추돌' , '0' , 100.0 , '종결' , 'KB / 수리완료' , '신선초교 사거리 앞' , '0' , 500000.0 , 500000.0 , '0' , '0' , '0' , '0' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
62:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2018-08-16' , '20:00:00' , '정재철' , '27번' , 3633.0 , '대인' , '피해' , '비접촉(현대 구상금)' , '무과실 주장' , 100.0 , '진행' , '현대 선처리후 구상청구' , '논현동 소래풍림아파트 앞' , '0' , '0' , '0' , '0' , '0' , '0' , '0' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
63:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-04-28' , '07:03:00' , '이정성' , '38번' , 3546.0 , '대인,대물,자차' , '가해' , '측면충돌' , 80.0 , 20.0 , '진행' , '공제접수' , '남동경찰서 사거리' , '0' , '0' , '0' , '0' , 660000.0 , '0' , '0' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
64:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-05-04' , '12:41:00' , '유종각' , '38번' , 3548.0 , '대인' , '가해' , '차내전도' , 50.0 , 50.0 , '종결' , '80 합의, 경찰신고' , '토지금고시장 사거리' , '0' , '0' , '0' , 800000.0 , '0' , '0' , 800000.0 , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
65:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-05-05' , '11:23:00' , '이용재B' , '27번' , 3639.0 , '대물' , '가해' , '측면충돌' , 80.0 , 20.0 , '진행' , '빽밀러 파손 / 공제접수' , '신선초교 정류장 앞' , '0' , '0' , '0' , '0' , '0' , '0' , '0' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
66:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-05-06' , '13:53:00' , '이경환' , '38번' , 3551.0 , '대인,대물,자차' , '가해' , '추돌' , 100.0 , '0' , '진행' , '공제접수' , '관교동 풍림아파트 앞' , '0' , '0' , '0' , '0' , '0' , 212828.0 , '0' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
67:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-05-07' , '11:32:00' , '박준용' , '20번' , 3053.0 , '자차' , '피해' , '추돌' , '0' , 100.0 , '종결' , '공제접수 / 수리완료' , '하늘마을3단지 정류장' , '0' , '0' , '0' , '0' , '0' , '0' , '0' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
68:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-05-07' , '11:48:00' , '박덕환' , '5-1번' , 3648.0 , '대믈' , '가해' , '측면충돌' , 80.0 , 20.0 , '진행' , '공제접수 / 대물' , '토지금고시장 정류장 앞' , '0' , '0' , '0' , '0' , '0' , '0' , '0' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
69:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-05-07' , '13:50:00' , '유종선' , '21번' , 3626.0 , '대인' , '피해' , '비접촉' , '0' , 100.0 , '종결' , '승객 DB접수처리' , '석바위사거리 앞' , '0' , '0' , '0' , '0' , '0' , '0' , '0' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
70:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-05-11' , '09:23:00' , '이용재B' , '27번' , 3639.0 , '자차' , '피해' , '접촉' , '0' , 100.0 , '종결' , '현대접수 / 수리완료' , '롯데백화점 건너 정류장' , '0' , 108520.0 , 108520.0 , '0' , '0' , '0' , '0' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
71:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-05-12' , '22:44:00' , '양광일 ' , '5번' , 3629.0 , '자차' , '피해' , '측면충돌' , '0' , 100.0 , '진행' , '삼성접수 / 수리예정' , '토지금고시장 사거리' , '0' , '0' , '0' , '0' , '0' , '0' , '0' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
72:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-05-15' , '10:40:00' , '노주성' , '21번' , 3649.0 , '자차' , '피해' , '추돌' , '0' , 100.0 , '진행' , 'KB접수 / 수리예정' , '서창도서관 정류장 앞' , '0' , '0' , '0' , '0' , '0' , '0' , '0' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
73:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , '2023-05-16' , '21:52:00' , '권태종' , '5-1번' , 3647.0 , '대물' , '가해' , '측면충돌' , 100.0 , '0' , '진행' , '공제접수 / 대물' , '주안역 정류장 앞' , '0' , '0' , '0' , '0' , '0' , '0' , '0' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
 {executed in 18 msec}
2023-07-01 22:58:15.361 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 22:58:15.361 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 22:58:15.361 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 22:58:15.365 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
184. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 3 msec}
2023-07-01 22:58:15.367 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
184. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 22:58:25.326 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
184. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 22:58:25.328 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
185. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 22:58:25.330 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
185. SELECT	/* select_accident_option : 교통사고 칼럼별 option값 */ 	
			listagg( DISTINCT(GAPI_GB ),'/')  	AS gapi_gb
		,	listagg( DISTINCT(acc_gb ),'/') 	AS acc_gb
		,	listagg( DISTINCT(acc_kind ),'/') 	AS acc_kind
		,	listagg( DISTINCT(proc_result ),'/') 	AS proc_result
	FROM TBM_ACCIDENT_INFO a
 {executed in 1 msec}
2023-07-01 22:58:55.360 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
185. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 22:58:55.361 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
186. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 22:58:55.363 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
186. SELECT	/* select_accident_option : 교통사고 칼럼별 option값 */ 	
			listagg( DISTINCT(GAPI_GB ),'/')  	AS gapi_gb
		,	listagg( DISTINCT(acc_gb ),'/') 	AS acc_gb
		,	listagg( DISTINCT(acc_kind ),'/') 	AS acc_kind
		,	listagg( DISTINCT(proc_result ),'/') 	AS proc_result
	FROM TBM_ACCIDENT_INFO a
 {executed in 0 msec}
2023-07-01 23:07:30.508 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
186. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 23:07:30.510 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
187. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 23:07:30.511 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
187. SELECT	/* select_accident_option : 교통사고 칼럼별 option값 */ 	
			listagg( DISTINCT(GAPI_GB ),'/')  	AS gapi_gb
		,	listagg( DISTINCT(acc_gb ),'/') 	AS acc_gb
		,	listagg( DISTINCT(acc_kind ),'/') 	AS acc_kind
		,	listagg( DISTINCT(proc_result ),'/') 	AS proc_result
	FROM TBM_ACCIDENT_INFO a
 {executed in 0 msec}
2023-07-01 23:08:08.581 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
187. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 23:08:08.582 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
188. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 23:08:08.583 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
188. SELECT	/* select_accident_option : 교통사고 칼럼별 option값 */ 	
			listagg( DISTINCT(GAPI_GB ),'/')  	AS gapi_gb
		,	listagg( DISTINCT(acc_gb ),'/') 	AS acc_gb
		,	listagg( DISTINCT(acc_kind ),'/') 	AS acc_kind
		,	listagg( DISTINCT(proc_result ),'/') 	AS proc_result
	FROM TBM_ACCIDENT_INFO a
 {executed in 0 msec}
2023-07-01 23:08:26.174 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 23:08:26.174 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 23:08:26.174 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 23:08:26.175 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
188. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 23:08:26.178 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
188. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 3 msec}
2023-07-01 23:08:26.181 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
188. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 23:08:28.698 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
188. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 2 msec}
2023-07-01 23:08:28.698 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
189. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 23:08:28.699 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
189. SELECT	/* select_accident_option : 교통사고 칼럼별 option값 */ 	
			listagg( DISTINCT(GAPI_GB ),'/')  	AS gapi_gb
		,	listagg( DISTINCT(acc_gb ),'/') 	AS acc_gb
		,	listagg( DISTINCT(acc_kind ),'/') 	AS acc_kind
		,	listagg( DISTINCT(proc_result ),'/') 	AS proc_result
	FROM TBM_ACCIDENT_INFO a
 {executed in 0 msec}
2023-07-01 23:12:07.599 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
189. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 23:12:07.601 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
190. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 23:12:07.603 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
190. SELECT	/* select_accident_option : 교통사고 칼럼별 option값 */ 	
			listagg( DISTINCT(GAPI_GB ),'/')  	AS gapi_gb
		,	listagg( DISTINCT(acc_gb ),'/') 	AS acc_gb
		,	listagg( DISTINCT(acc_kind ),'/') 	AS acc_kind
		,	listagg( DISTINCT(proc_result ),'/') 	AS proc_result
	FROM TBM_ACCIDENT_INFO a
 {executed in 0 msec}
2023-07-01 23:18:54.828 INFO  [RMI TCP Connection(336)-127.0.0.1] [o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin] - Application shutdown requested.
2023-07-01 23:18:54.861 INFO  [RMI TCP Connection(336)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Shutting down ExecutorService 'asyncThreadPool'
2023-07-01 23:18:54.864 INFO  [RMI TCP Connection(336)-127.0.0.1] [com.zaxxer.hikari.HikariDataSource] - H2 - Shutdown initiated...
2023-07-01 23:18:54.871 INFO  [RMI TCP Connection(336)-127.0.0.1] [com.zaxxer.hikari.HikariDataSource] - H2 - Shutdown completed.
2023-07-01 23:18:54.918 INFO  [RMI TCP Connection(336)-127.0.0.1] [com.pjy.dashboard.filter.TestFilter] - destroy Pjy Filter
2023-07-01 23:18:59.738 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Starting PjyApplication on DESKTOP-QJPD93S with PID 21804 (D:\BUS\dashboard\dashboard\target\classes started by admin in D:\BUS\dashboard\dashboard)
2023-07-01 23:18:59.743 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - The following profiles are active: oauth
2023-07-01 23:18:59.801 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-07-01 23:18:59.801 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-07-01 23:19:01.169 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-07-01 23:19:01.170 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-07-01 23:19:01.323 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 144ms. Found 3 JPA repository interfaces.
2023-07-01 23:19:01.686 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-07-01 23:19:01.686 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2023-07-01 23:19:01.737 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.FileRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-07-01 23:19:01.738 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.MemberRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-07-01 23:19:01.739 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.RememberMeRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-07-01 23:19:01.739 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 53ms. Found 0 JDBC repository interfaces.
2023-07-01 23:19:02.208 INFO  [restartedMain] [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] - Post-processing PropertySource instances
2023-07-01 23:19:02.281 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2023-07-01 23:19:02.282 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource commandLineArgs [org.springframework.core.env.SimpleCommandLinePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-07-01 23:19:02.282 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-07-01 23:19:02.282 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-07-01 23:19:02.282 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2023-07-01 23:19:02.282 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
2023-07-01 23:19:02.282 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2023-07-01 23:19:02.282 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application-oauth.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-07-01 23:19:02.282 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-07-01 23:19:02.282 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2023-07-01 23:19:02.283 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [pjy.properties] [org.springframework.core.env.CompositePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-07-01 23:19:02.283 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [common.properties] [org.springframework.core.io.support.ResourcePropertySource] to EncryptableMapPropertySourceWrapper
2023-07-01 23:19:02.345 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'asyncConfiguration' of type [com.pjy.dashboard.configuration.AsyncConfiguration$$EnhancerBySpringCGLIB$$1be04605] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-01 23:19:02.402 INFO  [restartedMain] [c.u.j.filter.DefaultLazyPropertyFilter] - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2023-07-01 23:19:02.492 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$5d6aa32] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-01 23:19:02.580 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-01 23:19:02.583 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@52b4d072' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-01 23:19:02.588 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$2aab4ce4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-01 23:19:02.599 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration$$EnhancerBySpringCGLIB$$500064fa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-01 23:19:02.603 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-01 23:19:02.605 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-01 23:19:02.625 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$6d28e1f8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-01 23:19:02.654 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$eca92f2a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-01 23:19:02.787 INFO  [restartedMain] [c.u.j.r.DefaultLazyPropertyResolver] - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2023-07-01 23:19:02.792 INFO  [restartedMain] [c.u.j.d.DefaultLazyPropertyDetector] - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2023-07-01 23:19:03.239 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 10010 (http)
2023-07-01 23:19:03.256 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Initializing ProtocolHandler ["http-nio-10010"]
2023-07-01 23:19:03.267 INFO  [restartedMain] [org.apache.catalina.core.StandardService] - Starting service [Tomcat]
2023-07-01 23:19:03.267 INFO  [restartedMain] [org.apache.catalina.core.StandardEngine] - Starting Servlet engine: [Apache Tomcat/9.0.29]
2023-07-01 23:19:03.666 INFO  [restartedMain] [org.apache.jasper.servlet.TldScanner] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2023-07-01 23:19:03.677 INFO  [restartedMain] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring embedded WebApplicationContext
2023-07-01 23:19:03.677 INFO  [restartedMain] [o.s.web.context.ContextLoader] - Root WebApplicationContext: initialization completed in 3876 ms
2023-07-01 23:19:04.581 INFO  [restartedMain] [c.u.j.encryptor.DefaultLazyEncryptor] - Found Custom Encryptor Bean org.jasypt.encryption.pbe.PooledPBEStringEncryptor@7677949f with name: jasyptStringEncryptor
2023-07-01 23:19:04.631 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Starting...
2023-07-01 23:19:04.727 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.executeSql(PoolBase.java:567)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 7 msec}
2023-07-01 23:19:04.731 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Start completed.
2023-07-01 23:19:05.531 INFO  [restartedMain] [com.pjy.dashboard.filter.TestFilter] - init Pjy Filter
2023-07-01 23:19:05.947 INFO  [restartedMain] [o.hibernate.jpa.internal.util.LogHelper] - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2023-07-01 23:19:06.047 INFO  [restartedMain] [org.hibernate.Version] - HHH000412: Hibernate Core {5.3.14.Final}
2023-07-01 23:19:06.048 INFO  [restartedMain] [org.hibernate.cfg.Environment] - HHH000206: hibernate.properties not found
2023-07-01 23:19:06.207 INFO  [restartedMain] [org.hibernate.annotations.common.Version] - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2023-07-01 23:19:06.455 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 23:19:06.473 INFO  [restartedMain] [org.hibernate.dialect.Dialect] - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2023-07-01 23:19:07.214 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 23:19:07.216 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select SEQUENCE_CATALOG, SEQUENCE_SCHEMA, SEQUENCE_NAME, INCREMENT from information_schema.sequences
 {executed in 1 msec}
2023-07-01 23:19:07.267 INFO  [restartedMain] [o.s.o.j.LocalContainerEntityManagerFactoryBean] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-07-01 23:19:07.522 INFO  [restartedMain] [o.h.h.i.QueryTranslatorFactoryInitiator] - HHH000397: Using ASTQueryTranslatorFactory
2023-07-01 23:19:08.651 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService
2023-07-01 23:19:08.663 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'asyncThreadPool'
2023-07-01 23:19:08.849 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/h2-console/**'], []
2023-07-01 23:19:08.849 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/css/**'], []
2023-07-01 23:19:08.850 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/js/**'], []
2023-07-01 23:19:08.850 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/monitor/**'], []
2023-07-01 23:19:08.850 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/img/**'], []
2023-07-01 23:19:08.850 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/lib/**'], []
2023-07-01 23:19:08.850 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/main.css'], []
2023-07-01 23:19:08.850 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/common.js'], []
2023-07-01 23:19:08.850 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/resources/**'], []
2023-07-01 23:19:09.023 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1473627b, org.springframework.security.web.context.SecurityContextPersistenceFilter@738d1b44, org.springframework.security.web.header.HeaderWriterFilter@5e8452f6, org.springframework.web.filter.CorsFilter@27d29e54, org.springframework.security.web.authentication.logout.LogoutFilter@4eff8f0d, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@643acf38, org.springframework.security.web.session.ConcurrentSessionFilter@6f422bca, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@56f1ff51, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1ef15ec1, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2f451b25, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@35b7b216, org.springframework.security.web.session.SessionManagementFilter@5c50a586, org.springframework.security.web.access.ExceptionTranslationFilter@5f1e188f, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@72887781]
2023-07-01 23:19:09.046 INFO  [restartedMain] [o.s.aop.framework.CglibAopProxy] - Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(javax.servlet.FilterConfig) throws javax.servlet.ServletException] because it is marked as final: Consider using interface-based JDK proxies instead!
2023-07-01 23:19:09.398 WARN  [restartedMain] [o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-07-01 23:19:09.474 INFO  [restartedMain] [o.s.b.a.w.s.WelcomePageHandlerMapping] - Adding welcome page: ServletContext resource [/index.html]
2023-07-01 23:19:09.911 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 23:19:10.737 INFO  [restartedMain] [o.s.b.d.a.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2023-07-01 23:19:10.766 INFO  [restartedMain] [o.s.b.a.e.web.EndpointLinksResolver] - Exposing 16 endpoint(s) beneath base path '/actuator'
2023-07-01 23:19:10.913 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskScheduler] - Initializing ExecutorService
2023-07-01 23:19:10.915 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Starting ProtocolHandler ["http-nio-10010"]
2023-07-01 23:19:10.974 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 10010 (http) with context path ''
2023-07-01 23:19:10.979 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Started PjyApplication in 11.71 seconds (JVM running for 14.01)
2023-07-01 23:19:10.979 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-07-01 23:19:10.979 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - Application started
2023-07-01 23:19:10.979 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-07-01 23:19:12.071 INFO  [RMI TCP Connection(8)-127.0.0.1] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-07-01 23:19:12.071 INFO  [RMI TCP Connection(8)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Initializing Servlet 'dispatcherServlet'
2023-07-01 23:19:12.092 INFO  [RMI TCP Connection(8)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Completed initialization in 21 ms
2023-07-01 23:19:19.114 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 23:19:19.114 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 23:19:19.157 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 23:19:19.166 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 23:19:19.171 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 3 msec}
2023-07-01 23:19:19.177 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 23:19:57.181 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 23:19:57.181 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 23:19:57.181 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 23:19:57.182 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 23:19:57.184 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 23:19:57.187 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 23:22:56.449 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 23:22:56.449 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 23:22:56.449 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 23:22:56.450 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 23:22:56.453 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 23:22:56.455 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 1 msec}
2023-07-01 23:23:41.298 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 23:23:41.298 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 23:23:41.298 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 23:23:41.300 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 23:23:41.303 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 3 msec}
2023-07-01 23:23:41.306 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 3 msec}
2023-07-01 23:23:48.586 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 23:23:48.586 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 23:23:48.587 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 23:23:48.587 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 23:23:48.590 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 23:23:48.594 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-07-01 23:23:53.531 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 23:23:53.551 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
2. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 23:23:53.557 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT	/* select_accident_option : 교통사고 칼럼별 option값 */ 	
			listagg( DISTINCT(GAPI_GB ),'/')  	AS gapi_gb
		,	listagg( DISTINCT(acc_gb ),'/') 	AS acc_gb
		,	listagg( DISTINCT(acc_kind ),'/') 	AS acc_kind
		,	listagg( DISTINCT(proc_result ),'/') 	AS proc_result
	FROM TBM_ACCIDENT_INFO a
 {executed in 1 msec}
2023-07-01 23:23:53.573 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
2. SELECT ROUTE_NM  FROM TBL_ROUTEINFO a where 	a.company_no = '100' ORDER BY 1
 {executed in 1 msec}
2023-07-01 23:23:53.575 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
2. SELECT DISTINCT(car_no) FROM TBL_CARINFO a where 	a.company_no = '100' order by 1
 {executed in 1 msec}
2023-07-01 23:32:19.804 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
2. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 23:32:19.806 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
3. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 23:32:19.808 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT	/* select_accident_option : 교통사고 칼럼별 option값 */ 	
			listagg( DISTINCT(GAPI_GB ),'/')  	AS gapi_gb
		,	listagg( DISTINCT(acc_gb ),'/') 	AS acc_gb
		,	listagg( DISTINCT(acc_kind ),'/') 	AS acc_kind
		,	listagg( DISTINCT(proc_result ),'/') 	AS proc_result
	FROM TBM_ACCIDENT_INFO a
 {executed in 0 msec}
2023-07-01 23:32:19.810 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
3. SELECT ROUTE_NM  FROM TBL_ROUTEINFO a where 	a.company_no = '100' ORDER BY 1
 {executed in 1 msec}
2023-07-01 23:32:19.812 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
3. SELECT DISTINCT(car_no) FROM TBL_CARINFO a where 	a.company_no = '100' order by 1
 {executed in 0 msec}
2023-07-01 23:32:48.920 INFO  [RMI TCP Connection(26)-127.0.0.1] [o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin] - Application shutdown requested.
2023-07-01 23:32:48.953 INFO  [RMI TCP Connection(26)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Shutting down ExecutorService 'asyncThreadPool'
2023-07-01 23:32:48.956 INFO  [RMI TCP Connection(26)-127.0.0.1] [com.zaxxer.hikari.HikariDataSource] - H2 - Shutdown initiated...
2023-07-01 23:32:48.963 INFO  [RMI TCP Connection(26)-127.0.0.1] [com.zaxxer.hikari.HikariDataSource] - H2 - Shutdown completed.
2023-07-01 23:32:48.996 INFO  [RMI TCP Connection(26)-127.0.0.1] [com.pjy.dashboard.filter.TestFilter] - destroy Pjy Filter
2023-07-01 23:32:52.596 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Starting PjyApplication on DESKTOP-QJPD93S with PID 3488 (D:\BUS\dashboard\dashboard\target\classes started by admin in D:\BUS\dashboard\dashboard)
2023-07-01 23:32:52.600 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - The following profiles are active: oauth
2023-07-01 23:32:52.655 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-07-01 23:32:52.655 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-07-01 23:32:53.856 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-07-01 23:32:53.856 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-07-01 23:32:54.014 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 148ms. Found 3 JPA repository interfaces.
2023-07-01 23:32:54.362 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-07-01 23:32:54.362 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2023-07-01 23:32:54.408 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.FileRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-07-01 23:32:54.409 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.MemberRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-07-01 23:32:54.410 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.RememberMeRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-07-01 23:32:54.410 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 48ms. Found 0 JDBC repository interfaces.
2023-07-01 23:32:54.872 INFO  [restartedMain] [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] - Post-processing PropertySource instances
2023-07-01 23:32:54.939 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2023-07-01 23:32:54.939 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource commandLineArgs [org.springframework.core.env.SimpleCommandLinePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-07-01 23:32:54.940 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-07-01 23:32:54.940 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-07-01 23:32:54.940 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2023-07-01 23:32:54.941 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
2023-07-01 23:32:54.941 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2023-07-01 23:32:54.941 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application-oauth.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-07-01 23:32:54.941 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-07-01 23:32:54.941 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2023-07-01 23:32:54.941 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [pjy.properties] [org.springframework.core.env.CompositePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-07-01 23:32:54.942 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [common.properties] [org.springframework.core.io.support.ResourcePropertySource] to EncryptableMapPropertySourceWrapper
2023-07-01 23:32:55.004 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'asyncConfiguration' of type [com.pjy.dashboard.configuration.AsyncConfiguration$$EnhancerBySpringCGLIB$$421821d4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-01 23:32:55.059 INFO  [restartedMain] [c.u.j.filter.DefaultLazyPropertyFilter] - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2023-07-01 23:32:55.152 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$2c0e8601] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-01 23:32:55.239 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-01 23:32:55.242 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@239fd9d0' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-01 23:32:55.244 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$50e328b3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-01 23:32:55.254 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration$$EnhancerBySpringCGLIB$$763840c9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-01 23:32:55.258 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-01 23:32:55.260 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-01 23:32:55.284 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$9360bdc7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-01 23:32:55.313 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$12e10af9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-07-01 23:32:55.458 INFO  [restartedMain] [c.u.j.r.DefaultLazyPropertyResolver] - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2023-07-01 23:32:55.463 INFO  [restartedMain] [c.u.j.d.DefaultLazyPropertyDetector] - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2023-07-01 23:32:55.904 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 10010 (http)
2023-07-01 23:32:55.924 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Initializing ProtocolHandler ["http-nio-10010"]
2023-07-01 23:32:55.936 INFO  [restartedMain] [org.apache.catalina.core.StandardService] - Starting service [Tomcat]
2023-07-01 23:32:55.937 INFO  [restartedMain] [org.apache.catalina.core.StandardEngine] - Starting Servlet engine: [Apache Tomcat/9.0.29]
2023-07-01 23:32:56.333 INFO  [restartedMain] [org.apache.jasper.servlet.TldScanner] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2023-07-01 23:32:56.345 INFO  [restartedMain] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring embedded WebApplicationContext
2023-07-01 23:32:56.345 INFO  [restartedMain] [o.s.web.context.ContextLoader] - Root WebApplicationContext: initialization completed in 3690 ms
2023-07-01 23:32:57.222 INFO  [restartedMain] [c.u.j.encryptor.DefaultLazyEncryptor] - Found Custom Encryptor Bean org.jasypt.encryption.pbe.PooledPBEStringEncryptor@4175a24e with name: jasyptStringEncryptor
2023-07-01 23:32:57.255 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Starting...
2023-07-01 23:32:57.341 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.executeSql(PoolBase.java:567)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 7 msec}
2023-07-01 23:32:57.346 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Start completed.
2023-07-01 23:32:58.146 INFO  [restartedMain] [com.pjy.dashboard.filter.TestFilter] - init Pjy Filter
2023-07-01 23:32:58.479 INFO  [restartedMain] [o.hibernate.jpa.internal.util.LogHelper] - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2023-07-01 23:32:58.554 INFO  [restartedMain] [org.hibernate.Version] - HHH000412: Hibernate Core {5.3.14.Final}
2023-07-01 23:32:58.556 INFO  [restartedMain] [org.hibernate.cfg.Environment] - HHH000206: hibernate.properties not found
2023-07-01 23:32:58.710 INFO  [restartedMain] [org.hibernate.annotations.common.Version] - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2023-07-01 23:32:59.002 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 23:32:59.024 INFO  [restartedMain] [org.hibernate.dialect.Dialect] - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2023-07-01 23:32:59.732 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 23:32:59.734 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select SEQUENCE_CATALOG, SEQUENCE_SCHEMA, SEQUENCE_NAME, INCREMENT from information_schema.sequences
 {executed in 1 msec}
2023-07-01 23:32:59.781 INFO  [restartedMain] [o.s.o.j.LocalContainerEntityManagerFactoryBean] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-07-01 23:33:00.048 INFO  [restartedMain] [o.h.h.i.QueryTranslatorFactoryInitiator] - HHH000397: Using ASTQueryTranslatorFactory
2023-07-01 23:33:01.137 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService
2023-07-01 23:33:01.148 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'asyncThreadPool'
2023-07-01 23:33:01.329 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/h2-console/**'], []
2023-07-01 23:33:01.329 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/css/**'], []
2023-07-01 23:33:01.330 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/js/**'], []
2023-07-01 23:33:01.330 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/monitor/**'], []
2023-07-01 23:33:01.330 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/img/**'], []
2023-07-01 23:33:01.330 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/lib/**'], []
2023-07-01 23:33:01.330 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/main.css'], []
2023-07-01 23:33:01.330 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/common.js'], []
2023-07-01 23:33:01.330 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/resources/**'], []
2023-07-01 23:33:01.496 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@402da3f3, org.springframework.security.web.context.SecurityContextPersistenceFilter@11db940d, org.springframework.security.web.header.HeaderWriterFilter@70e1071a, org.springframework.web.filter.CorsFilter@7d4e1ea5, org.springframework.security.web.authentication.logout.LogoutFilter@725b1ea9, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@f150f7a, org.springframework.security.web.session.ConcurrentSessionFilter@4c836fa7, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@319a4f56, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7eddd6d1, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2973c4cb, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7452eb74, org.springframework.security.web.session.SessionManagementFilter@267c73cb, org.springframework.security.web.access.ExceptionTranslationFilter@71aff158, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@313e8f22]
2023-07-01 23:33:01.517 INFO  [restartedMain] [o.s.aop.framework.CglibAopProxy] - Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(javax.servlet.FilterConfig) throws javax.servlet.ServletException] because it is marked as final: Consider using interface-based JDK proxies instead!
2023-07-01 23:33:01.880 WARN  [restartedMain] [o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-07-01 23:33:01.956 INFO  [restartedMain] [o.s.b.a.w.s.WelcomePageHandlerMapping] - Adding welcome page: ServletContext resource [/index.html]
2023-07-01 23:33:02.395 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 23:33:03.242 INFO  [restartedMain] [o.s.b.d.a.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2023-07-01 23:33:03.273 INFO  [restartedMain] [o.s.b.a.e.web.EndpointLinksResolver] - Exposing 16 endpoint(s) beneath base path '/actuator'
2023-07-01 23:33:03.419 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskScheduler] - Initializing ExecutorService
2023-07-01 23:33:03.423 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Starting ProtocolHandler ["http-nio-10010"]
2023-07-01 23:33:03.488 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 10010 (http) with context path ''
2023-07-01 23:33:03.493 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Started PjyApplication in 11.366 seconds (JVM running for 12.751)
2023-07-01 23:33:03.494 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-07-01 23:33:03.495 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - Application started
2023-07-01 23:33:03.495 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-07-01 23:33:04.387 INFO  [RMI TCP Connection(8)-127.0.0.1] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-07-01 23:33:04.388 INFO  [RMI TCP Connection(8)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Initializing Servlet 'dispatcherServlet'
2023-07-01 23:33:04.417 INFO  [RMI TCP Connection(8)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Completed initialization in 29 ms
2023-07-01 23:33:16.649 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 23:33:16.717 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
2. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 23:33:16.724 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
2. SELECT	/* select_accident_option : 교통사고 칼럼별 option값 */ 	
			listagg( DISTINCT(GAPI_GB ),'/')  	AS gapi_gb
		,	listagg( DISTINCT(acc_gb ),'/') 	AS acc_gb
		,	listagg( DISTINCT(acc_kind ),'/') 	AS acc_kind
		,	listagg( DISTINCT(proc_result ),'/') 	AS proc_result
		,	(SELECT listagg(DISTINCT(car_no),'/') FROM TBL_CARINFO where 	a.company_no = '100' ) AS car_no
		,	(SELECT listagg(ROUTE_NM,'/')  FROM TBL_ROUTEINFO a where 	a.company_no = '100'  ORDER BY 1) AS route_nm
		,	(SELECT listagg(EMP_NM,'/')  FROM TBL_EMPLOYEEINFO a where 	a.company_no = '100'  ORDER BY 1) AS emp_nm
	FROM TBM_ACCIDENT_INFO a
 {executed in 1 msec}
2023-07-01 23:33:16.787 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
2. SELECT ROUTE_NM  FROM TBL_ROUTEINFO a where 	a.company_no = '100' ORDER BY 1
 {executed in 1 msec}
2023-07-01 23:33:16.789 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
2. SELECT DISTINCT(car_no) FROM TBL_CARINFO a where 	a.company_no = '100' order by 1
 {executed in 1 msec}
2023-07-01 23:36:55.314 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
2. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 23:36:55.317 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
3. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 23:36:55.319 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
3. SELECT	/* select_accident_option : 교통사고 칼럼별 option값 */ 	
			listagg( DISTINCT(GAPI_GB ),'/')  	AS gapi_gb
		,	listagg( DISTINCT(acc_gb ),'/') 	AS acc_gb
		,	listagg( DISTINCT(acc_kind ),'/') 	AS acc_kind
		,	listagg( DISTINCT(proc_result ),'/') 	AS proc_result
		,	(SELECT listagg(DISTINCT(car_no),'/') FROM TBL_CARINFO where 	a.company_no = '100' ) AS car_no
		,	(SELECT listagg(ROUTE_NM,'/')  FROM TBL_ROUTEINFO a where 	a.company_no = '100'  ORDER BY 1) AS route_nm
		,	(SELECT listagg(EMP_NM,'/')  FROM TBL_EMPLOYEEINFO a where 	a.company_no = '100'  ORDER BY 1) AS emp_nm
	FROM TBM_ACCIDENT_INFO a
 {executed in 1 msec}
2023-07-01 23:36:55.322 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
3. SELECT ROUTE_NM  FROM TBL_ROUTEINFO a where 	a.company_no = '100' ORDER BY 1
 {executed in 0 msec}
2023-07-01 23:36:55.324 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
3. SELECT DISTINCT(car_no) FROM TBL_CARINFO a where 	a.company_no = '100' order by 1
 {executed in 1 msec}
2023-07-01 23:37:22.239 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1188376b
2023-07-01 23:37:22.240 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-07-01 23:37:22.241 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
2023-07-01 23:37:22.243 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
3. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 23:37:22.248 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
3. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 4 msec}
2023-07-01 23:37:22.252 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
3. select   ROWNUM AS no,'N' as bit,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.acc_date between '2023-01-01' and '2023-12-31' order by a.acc_date,acc_time
 {executed in 4 msec}
2023-07-01 23:37:25.286 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
3. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 23:37:25.289 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
4. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 23:37:25.291 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
4. SELECT	/* select_accident_option : 교통사고 칼럼별 option값 */ 	
			listagg( DISTINCT(GAPI_GB ),'/')  	AS gapi_gb
		,	listagg( DISTINCT(acc_gb ),'/') 	AS acc_gb
		,	listagg( DISTINCT(acc_kind ),'/') 	AS acc_kind
		,	listagg( DISTINCT(proc_result ),'/') 	AS proc_result
		,	(SELECT listagg(DISTINCT(car_no),'/') FROM TBL_CARINFO where 	a.company_no = '100' ) AS car_no
		,	(SELECT listagg(ROUTE_NM,'/')  FROM TBL_ROUTEINFO a where 	a.company_no = '100'  ORDER BY 1) AS route_nm
		,	(SELECT listagg(EMP_NM,'/')  FROM TBL_EMPLOYEEINFO a where 	a.company_no = '100'  ORDER BY 1) AS emp_nm
	FROM TBM_ACCIDENT_INFO a
 {executed in 1 msec}
2023-07-01 23:37:25.293 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
4. SELECT ROUTE_NM  FROM TBL_ROUTEINFO a where 	a.company_no = '100' ORDER BY 1
 {executed in 0 msec}
2023-07-01 23:37:25.294 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
4. SELECT DISTINCT(car_no) FROM TBL_CARINFO a where 	a.company_no = '100' order by 1
 {executed in 1 msec}
2023-07-01 23:38:21.200 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
4. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 23:38:21.203 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
5. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 23:38:21.205 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
5. SELECT	/* select_accident_option : 교통사고 칼럼별 option값 */ 	
			listagg( DISTINCT(GAPI_GB ),'/')  	AS gapi_gb
		,	listagg( DISTINCT(acc_gb ),'/') 	AS acc_gb
		,	listagg( DISTINCT(acc_kind ),'/') 	AS acc_kind
		,	listagg( DISTINCT(proc_result ),'/') 	AS proc_result
		,	(SELECT listagg(DISTINCT(car_no),'/') FROM TBL_CARINFO where 	a.company_no = '100' ) AS car_no
		,	(SELECT listagg(ROUTE_NM,'/')  FROM TBL_ROUTEINFO a where 	a.company_no = '100'  ORDER BY 1) AS route_nm
		,	(SELECT listagg(EMP_NM,'/')  FROM TBL_EMPLOYEEINFO a where 	a.company_no = '100'  ORDER BY 1) AS emp_nm
	FROM TBM_ACCIDENT_INFO a
 {executed in 0 msec}
2023-07-01 23:38:21.207 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
5. SELECT ROUTE_NM  FROM TBL_ROUTEINFO a where 	a.company_no = '100' ORDER BY 1
 {executed in 1 msec}
2023-07-01 23:38:21.209 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
5. SELECT DISTINCT(car_no) FROM TBL_CARINFO a where 	a.company_no = '100' order by 1
 {executed in 0 msec}
2023-07-01 23:39:12.194 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
5. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 23:39:12.196 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
6. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 23:39:12.199 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
6. SELECT	/* select_accident_option : 교통사고 칼럼별 option값 */ 	
			listagg( DISTINCT(GAPI_GB ),'/')  	AS gapi_gb
		,	listagg( DISTINCT(acc_gb ),'/') 	AS acc_gb
		,	listagg( DISTINCT(acc_kind ),'/') 	AS acc_kind
		,	listagg( DISTINCT(proc_result ),'/') 	AS proc_result
		,	(SELECT listagg(DISTINCT(car_no),'/') FROM TBL_CARINFO where 	a.company_no = '100' ) AS car_no
		,	(SELECT listagg(ROUTE_NM,'/')  FROM TBL_ROUTEINFO a where 	a.company_no = '100'  ORDER BY 1) AS route_nm
		,	(SELECT listagg(EMP_NM,'/')  FROM TBL_EMPLOYEEINFO a where 	a.company_no = '100'  ORDER BY 1) AS emp_nm
	FROM TBM_ACCIDENT_INFO a
 {executed in 2 msec}
2023-07-01 23:39:12.201 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
6. SELECT ROUTE_NM  FROM TBL_ROUTEINFO a where 	a.company_no = '100' ORDER BY 1
 {executed in 0 msec}
2023-07-01 23:39:12.203 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
6. SELECT DISTINCT(car_no) FROM TBL_CARINFO a where 	a.company_no = '100' order by 1
 {executed in 1 msec}
2023-07-01 23:40:51.747 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
6. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 23:40:51.751 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
7. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 23:40:51.753 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
7. SELECT	/* select_accident_option : 교통사고 칼럼별 option값 */ 	
			listagg( DISTINCT(GAPI_GB ),'/')  	AS gapi_gb
		,	listagg( DISTINCT(acc_gb ),'/') 	AS acc_gb
		,	listagg( DISTINCT(acc_kind ),'/') 	AS acc_kind
		,	listagg( DISTINCT(proc_result ),'/') 	AS proc_result
		,	(SELECT listagg(DISTINCT(car_no),'/') FROM TBL_CARINFO where 	a.company_no = '100' ) AS car_no
		,	(SELECT listagg(ROUTE_NM,'/')  FROM TBL_ROUTEINFO a where 	a.company_no = '100'  ORDER BY 1) AS route_nm
		,	(SELECT listagg(EMP_NM,'/')  FROM TBL_EMPLOYEEINFO a where 	a.company_no = '100'  ORDER BY 1) AS emp_nm
	FROM TBM_ACCIDENT_INFO a
 {executed in 0 msec}
2023-07-01 23:40:51.755 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
7. SELECT ROUTE_NM  FROM TBL_ROUTEINFO a where 	a.company_no = '100' ORDER BY 1
 {executed in 1 msec}
2023-07-01 23:40:51.757 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
7. SELECT DISTINCT(car_no) FROM TBL_CARINFO a where 	a.company_no = '100' order by 1
 {executed in 0 msec}
2023-07-01 23:42:55.691 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
7. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 23:42:55.693 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
8. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 23:42:55.696 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
8. SELECT	/* select_accident_option : 교통사고 칼럼별 option값 */ 	
			listagg( DISTINCT(GAPI_GB ),'/')  	AS gapi_gb
		,	listagg( DISTINCT(acc_gb ),'/') 	AS acc_gb
		,	listagg( DISTINCT(acc_kind ),'/') 	AS acc_kind
		,	listagg( DISTINCT(proc_result ),'/') 	AS proc_result
		,	(SELECT listagg(DISTINCT(car_no),'/') FROM TBL_CARINFO where 	a.company_no = '100' ) AS car_no
		,	(SELECT listagg(ROUTE_NM,'/')  FROM TBL_ROUTEINFO a where 	a.company_no = '100'  ORDER BY 1) AS route_nm
		,	(SELECT listagg(EMP_NM,'/')  FROM TBL_EMPLOYEEINFO a where 	a.company_no = '100'  ORDER BY 1) AS emp_nm
	FROM TBM_ACCIDENT_INFO a
 {executed in 1 msec}
2023-07-01 23:42:55.698 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
8. SELECT ROUTE_NM  FROM TBL_ROUTEINFO a where 	a.company_no = '100' ORDER BY 1
 {executed in 1 msec}
2023-07-01 23:42:55.700 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
8. SELECT DISTINCT(car_no) FROM TBL_CARINFO a where 	a.company_no = '100' order by 1
 {executed in 1 msec}
2023-07-01 23:43:31.522 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
8. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 23:43:31.524 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
9. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 23:43:31.526 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
9. SELECT	/* select_accident_option : 교통사고 칼럼별 option값 */ 	
			listagg( DISTINCT(GAPI_GB ),'/')  	AS gapi_gb
		,	listagg( DISTINCT(acc_gb ),'/') 	AS acc_gb
		,	listagg( DISTINCT(acc_kind ),'/') 	AS acc_kind
		,	listagg( DISTINCT(proc_result ),'/') 	AS proc_result
		,	(SELECT listagg(DISTINCT(car_no),'/') FROM TBL_CARINFO where 	a.company_no = '100' ) AS car_no
		,	(SELECT listagg(ROUTE_NM,'/')  FROM TBL_ROUTEINFO a where 	a.company_no = '100'  ORDER BY 1) AS route_nm
		,	(SELECT listagg(EMP_NM,'/')  FROM TBL_EMPLOYEEINFO a where 	a.company_no = '100'  ORDER BY 1) AS emp_nm
	FROM TBM_ACCIDENT_INFO a
 {executed in 1 msec}
2023-07-01 23:43:31.528 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
9. SELECT ROUTE_NM  FROM TBL_ROUTEINFO a where 	a.company_no = '100' ORDER BY 1
 {executed in 0 msec}
2023-07-01 23:43:31.530 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
9. SELECT DISTINCT(car_no) FROM TBL_CARINFO a where 	a.company_no = '100' order by 1
 {executed in 0 msec}
2023-07-01 23:44:18.841 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
9. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 23:44:18.853 INFO  [http-nio-10010-exec-9] [com.pjy.dashboard.dao.DynamicSqlDao] - merge sql : MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , :acc_date , :acc_time , :emp_nm , :route_nm , :car_no , :acc_gb , :gapi_gb , :acc_kind , :jacha_rate , :sangdae_rate , :proc_result , :proc_memo , :acc_place , :daein_in_amt , :daemul_in_amt , :in_tot_amt , :daein_out_amt , :daemul_out_amt , :jacha_amt , :out_tot_amt , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
2023-07-01 23:44:18.860 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
10. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 23:44:18.870 ERROR [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeBatch(ProxyStatement.java:128)
10. batching 1 statements:
1:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , ' ' , ' ' , ' ' , ' ' , ' ' , ' ' , ' ' , ' ' , ' ' , ' ' , ' ' , ' ' , ' ' , ' ' , ' ' , ' ' , ' ' , ' ' , ' ' , ' ' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
 {FAILED after 4 msec}
org.h2.jdbc.JdbcBatchUpdateException: Data conversion error converting "' ' (TBM_ACCIDENT_INFO: ""CAR_NO"" INTEGER)"; SQL statement:
MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss') [22018-200]
	at org.h2.jdbc.JdbcPreparedStatement.executeBatch(JdbcPreparedStatement.java:1235)
	at net.sf.log4jdbc.sql.jdbcapi.StatementSpy.executeBatch(StatementSpy.java:571)
	at com.zaxxer.hikari.pool.ProxyStatement.executeBatch(ProxyStatement.java:128)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeBatch(HikariProxyPreparedStatement.java)
	at org.springframework.jdbc.core.JdbcTemplate.lambda$batchUpdate$2(JdbcTemplate.java:950)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:617)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:647)
	at org.springframework.jdbc.core.JdbcTemplate.batchUpdate(JdbcTemplate.java:936)
	at org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.batchUpdate(NamedParameterJdbcTemplate.java:366)
	at com.pjy.dashboard.dao.DynamicSqlDao.batchInsert(DynamicSqlDao.java:737)
	at com.pjy.dashboard.dao.DynamicSqlDao$$FastClassBySpringCGLIB$$8af24191.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at com.pjy.dashboard.dao.DynamicSqlH2Dao$$EnhancerBySpringCGLIB$$805b005c.batchInsert(<generated>)
	at com.pjy.dashboard.service.DynamicSqlService.mergeInfo(DynamicSqlService.java:662)
	at com.pjy.dashboard.controller.TestController.BUS_mergeInfo(TestController.java:432)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:893)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:798)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:97)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at jdk.internal.reflect.GeneratedMethodAccessor149.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$45588dab.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:114)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:104)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-07-01 23:44:18.922 ERROR [http-nio-10010-exec-9] [c.p.d.core.error.GlobalExceptionHandler] - handleEntityNotFoundException
org.springframework.dao.DataIntegrityViolationException: PreparedStatementCallback; SQL [MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')]; Data conversion error converting "' ' (TBM_ACCIDENT_INFO: ""CAR_NO"" INTEGER)"; SQL statement:
MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss') [22018-200]; nested exception is org.h2.jdbc.JdbcSQLDataException: Data conversion error converting "' ' (TBM_ACCIDENT_INFO: ""CAR_NO"" INTEGER)"; SQL statement:
MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss') [22018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:457)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.table.Column.getDataConversionError(Column.java:409)
	at org.h2.table.Column.validateConvertUpdateSequence(Column.java:381)
	at org.h2.table.Table.validateConvertUpdateSequence(Table.java:845)
	at org.h2.command.dml.Merge.merge(Merge.java:175)
	at org.h2.command.dml.Merge.update(Merge.java:132)
	at org.h2.command.CommandContainer.update(CommandContainer.java:198)
	at org.h2.command.Command.executeUpdate(Command.java:251)
	at org.h2.server.TcpServerThread.process(TcpServerThread.java:406)
	at org.h2.server.TcpServerThread.run(TcpServerThread.java:183)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.h2.message.DbException: Data conversion error converting " " [22018-200]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.value.Value.convertTo(Value.java:875)
	at org.h2.value.Value.convertTo(Value.java:772)
	at org.h2.value.TypeInfo.cast(TypeInfo.java:515)
	at org.h2.table.Column.validateConvertUpdateSequence(Column.java:378)
	... 8 more
Caused by: org.h2.jdbc.JdbcSQLDataException: Data conversion error converting " " [22018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:457)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 13 more
Caused by: java.lang.NumberFormatException: For input string: ""
	at java.lang.NumberFormatException.forInputString(Unknown Source)
	at java.lang.Integer.parseInt(Unknown Source)
	at java.lang.Integer.parseInt(Unknown Source)
	at org.h2.value.Value.convertToInt(Value.java:982)
	at org.h2.value.Value.convertTo(Value.java:806)
	... 11 more

	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:247)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1443)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:633)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:647)
	at org.springframework.jdbc.core.JdbcTemplate.batchUpdate(JdbcTemplate.java:936)
	at org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.batchUpdate(NamedParameterJdbcTemplate.java:366)
	at com.pjy.dashboard.dao.DynamicSqlDao.batchInsert(DynamicSqlDao.java:737)
	at com.pjy.dashboard.dao.DynamicSqlDao$$FastClassBySpringCGLIB$$8af24191.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at com.pjy.dashboard.dao.DynamicSqlH2Dao$$EnhancerBySpringCGLIB$$805b005c.batchInsert(<generated>)
	at com.pjy.dashboard.service.DynamicSqlService.mergeInfo(DynamicSqlService.java:662)
	at com.pjy.dashboard.controller.TestController.BUS_mergeInfo(TestController.java:432)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:893)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:798)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:97)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at jdk.internal.reflect.GeneratedMethodAccessor149.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$45588dab.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:114)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:104)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.h2.jdbc.JdbcSQLDataException: Data conversion error converting "' ' (TBM_ACCIDENT_INFO: ""CAR_NO"" INTEGER)"; SQL statement:
MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss') [22018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:457)
	at org.h2.engine.SessionRemote.done(SessionRemote.java:611)
	at org.h2.command.CommandRemote.executeUpdate(CommandRemote.java:237)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdateInternal(JdbcPreparedStatement.java:191)
	at org.h2.jdbc.JdbcPreparedStatement.executeBatch(JdbcPreparedStatement.java:1219)
	at net.sf.log4jdbc.sql.jdbcapi.StatementSpy.executeBatch(StatementSpy.java:571)
	at com.zaxxer.hikari.pool.ProxyStatement.executeBatch(ProxyStatement.java:128)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeBatch(HikariProxyPreparedStatement.java)
	at org.springframework.jdbc.core.JdbcTemplate.lambda$batchUpdate$2(JdbcTemplate.java:950)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:617)
	... 133 common frames omitted
2023-07-01 23:44:18.939 WARN  [http-nio-10010-exec-9] [o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver] - Resolved [org.springframework.dao.DataIntegrityViolationException: PreparedStatementCallback; SQL [MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')]; Data conversion error converting "' ' (TBM_ACCIDENT_INFO: ""CAR_NO"" INTEGER)"; SQL statement:
MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss') [22018-200]; nested exception is org.h2.jdbc.JdbcSQLDataException: Data conversion error converting "' ' (TBM_ACCIDENT_INFO: ""CAR_NO"" INTEGER)"; SQL statement:
MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss') [22018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:457)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.table.Column.getDataConversionError(Column.java:409)
	at org.h2.table.Column.validateConvertUpdateSequence(Column.java:381)
	at org.h2.table.Table.validateConvertUpdateSequence(Table.java:845)
	at org.h2.command.dml.Merge.merge(Merge.java:175)
	at org.h2.command.dml.Merge.update(Merge.java:132)
	at org.h2.command.CommandContainer.update(CommandContainer.java:198)
	at org.h2.command.Command.executeUpdate(Command.java:251)
	at org.h2.server.TcpServerThread.process(TcpServerThread.java:406)
	at org.h2.server.TcpServerThread.run(TcpServerThread.java:183)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.h2.message.DbException: Data conversion error converting " " [22018-200]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.value.Value.convertTo(Value.java:875)
	at org.h2.value.Value.convertTo(Value.java:772)
	at org.h2.value.TypeInfo.cast(TypeInfo.java:515)
	at org.h2.table.Column.validateConvertUpdateSequence(Column.java:378)
	... 8 more
Caused by: org.h2.jdbc.JdbcSQLDataException: Data conversion error converting " " [22018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:457)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 13 more
Caused by: java.lang.NumberFormatException: For input string: ""
	at java.lang.NumberFormatException.forInputString(Unknown Source)
	at java.lang.Integer.parseInt(Unknown Source)
	at java.lang.Integer.parseInt(Unknown Source)
	at org.h2.value.Value.convertToInt(Value.java:982)
	at org.h2.value.Value.convertTo(Value.java:806)
	... 11 more
]
2023-07-01 23:49:02.814 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
10. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 23:49:02.822 INFO  [http-nio-10010-exec-1] [com.pjy.dashboard.dao.DynamicSqlDao] - merge sql : MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , :acc_date , :acc_time , :emp_nm , :route_nm , :car_no , :acc_gb , :gapi_gb , :acc_kind , :jacha_rate , :sangdae_rate , :proc_result , :proc_memo , :acc_place , :daein_in_amt , :daemul_in_amt , :in_tot_amt , :daein_out_amt , :daemul_out_amt , :jacha_amt , :out_tot_amt , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
2023-07-01 23:49:02.823 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
11. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 23:49:02.826 ERROR [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeBatch(ProxyStatement.java:128)
11. batching 1 statements:
1:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , ' ' , ' ' , ' ' , ' ' , ' ' , ' ' , ' ' , ' ' , ' ' , ' ' , ' ' , ' ' , ' ' , ' ' , ' ' , ' ' , ' ' , ' ' , ' ' , ' ' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
 {FAILED after 2 msec}
org.h2.jdbc.JdbcBatchUpdateException: Data conversion error converting "' ' (TBM_ACCIDENT_INFO: ""CAR_NO"" INTEGER)"; SQL statement:
MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss') [22018-200]
	at org.h2.jdbc.JdbcPreparedStatement.executeBatch(JdbcPreparedStatement.java:1235)
	at net.sf.log4jdbc.sql.jdbcapi.StatementSpy.executeBatch(StatementSpy.java:571)
	at com.zaxxer.hikari.pool.ProxyStatement.executeBatch(ProxyStatement.java:128)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeBatch(HikariProxyPreparedStatement.java)
	at org.springframework.jdbc.core.JdbcTemplate.lambda$batchUpdate$2(JdbcTemplate.java:950)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:617)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:647)
	at org.springframework.jdbc.core.JdbcTemplate.batchUpdate(JdbcTemplate.java:936)
	at org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.batchUpdate(NamedParameterJdbcTemplate.java:366)
	at com.pjy.dashboard.dao.DynamicSqlDao.batchInsert(DynamicSqlDao.java:737)
	at com.pjy.dashboard.dao.DynamicSqlDao$$FastClassBySpringCGLIB$$8af24191.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at com.pjy.dashboard.dao.DynamicSqlH2Dao$$EnhancerBySpringCGLIB$$805b005c.batchInsert(<generated>)
	at com.pjy.dashboard.service.DynamicSqlService.mergeInfo(DynamicSqlService.java:662)
	at com.pjy.dashboard.controller.TestController.BUS_mergeInfo(TestController.java:432)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:893)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:798)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:97)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at jdk.internal.reflect.GeneratedMethodAccessor149.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$45588dab.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:114)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:104)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-07-01 23:49:02.828 ERROR [http-nio-10010-exec-1] [c.p.d.core.error.GlobalExceptionHandler] - handleEntityNotFoundException
org.springframework.dao.DataIntegrityViolationException: PreparedStatementCallback; SQL [MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')]; Data conversion error converting "' ' (TBM_ACCIDENT_INFO: ""CAR_NO"" INTEGER)"; SQL statement:
MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss') [22018-200]; nested exception is org.h2.jdbc.JdbcSQLDataException: Data conversion error converting "' ' (TBM_ACCIDENT_INFO: ""CAR_NO"" INTEGER)"; SQL statement:
MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss') [22018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:457)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.table.Column.getDataConversionError(Column.java:409)
	at org.h2.table.Column.validateConvertUpdateSequence(Column.java:381)
	at org.h2.table.Table.validateConvertUpdateSequence(Table.java:845)
	at org.h2.command.dml.Merge.merge(Merge.java:175)
	at org.h2.command.dml.Merge.update(Merge.java:132)
	at org.h2.command.CommandContainer.update(CommandContainer.java:198)
	at org.h2.command.Command.executeUpdate(Command.java:251)
	at org.h2.server.TcpServerThread.process(TcpServerThread.java:406)
	at org.h2.server.TcpServerThread.run(TcpServerThread.java:183)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.h2.message.DbException: Data conversion error converting " " [22018-200]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.value.Value.convertTo(Value.java:875)
	at org.h2.value.Value.convertTo(Value.java:772)
	at org.h2.value.TypeInfo.cast(TypeInfo.java:515)
	at org.h2.table.Column.validateConvertUpdateSequence(Column.java:378)
	... 8 more
Caused by: org.h2.jdbc.JdbcSQLDataException: Data conversion error converting " " [22018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:457)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 13 more
Caused by: java.lang.NumberFormatException: For input string: ""
	at java.lang.NumberFormatException.forInputString(Unknown Source)
	at java.lang.Integer.parseInt(Unknown Source)
	at java.lang.Integer.parseInt(Unknown Source)
	at org.h2.value.Value.convertToInt(Value.java:982)
	at org.h2.value.Value.convertTo(Value.java:806)
	... 11 more

	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:247)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1443)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:633)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:647)
	at org.springframework.jdbc.core.JdbcTemplate.batchUpdate(JdbcTemplate.java:936)
	at org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.batchUpdate(NamedParameterJdbcTemplate.java:366)
	at com.pjy.dashboard.dao.DynamicSqlDao.batchInsert(DynamicSqlDao.java:737)
	at com.pjy.dashboard.dao.DynamicSqlDao$$FastClassBySpringCGLIB$$8af24191.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at com.pjy.dashboard.dao.DynamicSqlH2Dao$$EnhancerBySpringCGLIB$$805b005c.batchInsert(<generated>)
	at com.pjy.dashboard.service.DynamicSqlService.mergeInfo(DynamicSqlService.java:662)
	at com.pjy.dashboard.controller.TestController.BUS_mergeInfo(TestController.java:432)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:893)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:798)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:97)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at jdk.internal.reflect.GeneratedMethodAccessor149.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$45588dab.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:114)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:104)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.h2.jdbc.JdbcSQLDataException: Data conversion error converting "' ' (TBM_ACCIDENT_INFO: ""CAR_NO"" INTEGER)"; SQL statement:
MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss') [22018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:457)
	at org.h2.engine.SessionRemote.done(SessionRemote.java:611)
	at org.h2.command.CommandRemote.executeUpdate(CommandRemote.java:237)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdateInternal(JdbcPreparedStatement.java:191)
	at org.h2.jdbc.JdbcPreparedStatement.executeBatch(JdbcPreparedStatement.java:1219)
	at net.sf.log4jdbc.sql.jdbcapi.StatementSpy.executeBatch(StatementSpy.java:571)
	at com.zaxxer.hikari.pool.ProxyStatement.executeBatch(ProxyStatement.java:128)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeBatch(HikariProxyPreparedStatement.java)
	at org.springframework.jdbc.core.JdbcTemplate.lambda$batchUpdate$2(JdbcTemplate.java:950)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:617)
	... 133 common frames omitted
2023-07-01 23:49:02.830 WARN  [http-nio-10010-exec-1] [o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver] - Resolved [org.springframework.dao.DataIntegrityViolationException: PreparedStatementCallback; SQL [MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')]; Data conversion error converting "' ' (TBM_ACCIDENT_INFO: ""CAR_NO"" INTEGER)"; SQL statement:
MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss') [22018-200]; nested exception is org.h2.jdbc.JdbcSQLDataException: Data conversion error converting "' ' (TBM_ACCIDENT_INFO: ""CAR_NO"" INTEGER)"; SQL statement:
MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss') [22018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:457)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.table.Column.getDataConversionError(Column.java:409)
	at org.h2.table.Column.validateConvertUpdateSequence(Column.java:381)
	at org.h2.table.Table.validateConvertUpdateSequence(Table.java:845)
	at org.h2.command.dml.Merge.merge(Merge.java:175)
	at org.h2.command.dml.Merge.update(Merge.java:132)
	at org.h2.command.CommandContainer.update(CommandContainer.java:198)
	at org.h2.command.Command.executeUpdate(Command.java:251)
	at org.h2.server.TcpServerThread.process(TcpServerThread.java:406)
	at org.h2.server.TcpServerThread.run(TcpServerThread.java:183)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.h2.message.DbException: Data conversion error converting " " [22018-200]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.value.Value.convertTo(Value.java:875)
	at org.h2.value.Value.convertTo(Value.java:772)
	at org.h2.value.TypeInfo.cast(TypeInfo.java:515)
	at org.h2.table.Column.validateConvertUpdateSequence(Column.java:378)
	... 8 more
Caused by: org.h2.jdbc.JdbcSQLDataException: Data conversion error converting " " [22018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:457)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 13 more
Caused by: java.lang.NumberFormatException: For input string: ""
	at java.lang.NumberFormatException.forInputString(Unknown Source)
	at java.lang.Integer.parseInt(Unknown Source)
	at java.lang.Integer.parseInt(Unknown Source)
	at org.h2.value.Value.convertToInt(Value.java:982)
	at org.h2.value.Value.convertTo(Value.java:806)
	... 11 more
]
2023-07-01 23:49:28.629 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
11. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 23:49:28.639 INFO  [http-nio-10010-exec-2] [com.pjy.dashboard.dao.DynamicSqlDao] - merge sql : MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , :acc_date , :acc_time , :emp_nm , :route_nm , :car_no , :acc_gb , :gapi_gb , :acc_kind , :jacha_rate , :sangdae_rate , :proc_result , :proc_memo , :acc_place , :daein_in_amt , :daemul_in_amt , :in_tot_amt , :daein_out_amt , :daemul_out_amt , :jacha_amt , :out_tot_amt , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
2023-07-01 23:49:28.640 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
12. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 23:49:28.643 ERROR [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeBatch(ProxyStatement.java:128)
12. batching 1 statements:
1:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , ' ' , ' ' , ' ' , ' ' , ' ' , ' ' , ' ' , ' ' , ' ' , ' ' , ' ' , ' ' , ' ' , ' ' , ' ' , ' ' , ' ' , ' ' , ' ' , ' ' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
 {FAILED after 2 msec}
org.h2.jdbc.JdbcBatchUpdateException: Data conversion error converting "' ' (TBM_ACCIDENT_INFO: ""CAR_NO"" INTEGER)"; SQL statement:
MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss') [22018-200]
	at org.h2.jdbc.JdbcPreparedStatement.executeBatch(JdbcPreparedStatement.java:1235)
	at net.sf.log4jdbc.sql.jdbcapi.StatementSpy.executeBatch(StatementSpy.java:571)
	at com.zaxxer.hikari.pool.ProxyStatement.executeBatch(ProxyStatement.java:128)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeBatch(HikariProxyPreparedStatement.java)
	at org.springframework.jdbc.core.JdbcTemplate.lambda$batchUpdate$2(JdbcTemplate.java:950)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:617)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:647)
	at org.springframework.jdbc.core.JdbcTemplate.batchUpdate(JdbcTemplate.java:936)
	at org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.batchUpdate(NamedParameterJdbcTemplate.java:366)
	at com.pjy.dashboard.dao.DynamicSqlDao.batchInsert(DynamicSqlDao.java:737)
	at com.pjy.dashboard.dao.DynamicSqlDao$$FastClassBySpringCGLIB$$8af24191.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at com.pjy.dashboard.dao.DynamicSqlH2Dao$$EnhancerBySpringCGLIB$$805b005c.batchInsert(<generated>)
	at com.pjy.dashboard.service.DynamicSqlService.mergeInfo(DynamicSqlService.java:662)
	at com.pjy.dashboard.controller.TestController.BUS_mergeInfo(TestController.java:432)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:893)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:798)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:97)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at jdk.internal.reflect.GeneratedMethodAccessor149.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$45588dab.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:114)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:104)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-07-01 23:49:28.645 ERROR [http-nio-10010-exec-2] [c.p.d.core.error.GlobalExceptionHandler] - handleEntityNotFoundException
org.springframework.dao.DataIntegrityViolationException: PreparedStatementCallback; SQL [MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')]; Data conversion error converting "' ' (TBM_ACCIDENT_INFO: ""CAR_NO"" INTEGER)"; SQL statement:
MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss') [22018-200]; nested exception is org.h2.jdbc.JdbcSQLDataException: Data conversion error converting "' ' (TBM_ACCIDENT_INFO: ""CAR_NO"" INTEGER)"; SQL statement:
MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss') [22018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:457)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.table.Column.getDataConversionError(Column.java:409)
	at org.h2.table.Column.validateConvertUpdateSequence(Column.java:381)
	at org.h2.table.Table.validateConvertUpdateSequence(Table.java:845)
	at org.h2.command.dml.Merge.merge(Merge.java:175)
	at org.h2.command.dml.Merge.update(Merge.java:132)
	at org.h2.command.CommandContainer.update(CommandContainer.java:198)
	at org.h2.command.Command.executeUpdate(Command.java:251)
	at org.h2.server.TcpServerThread.process(TcpServerThread.java:406)
	at org.h2.server.TcpServerThread.run(TcpServerThread.java:183)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.h2.message.DbException: Data conversion error converting " " [22018-200]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.value.Value.convertTo(Value.java:875)
	at org.h2.value.Value.convertTo(Value.java:772)
	at org.h2.value.TypeInfo.cast(TypeInfo.java:515)
	at org.h2.table.Column.validateConvertUpdateSequence(Column.java:378)
	... 8 more
Caused by: org.h2.jdbc.JdbcSQLDataException: Data conversion error converting " " [22018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:457)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 13 more
Caused by: java.lang.NumberFormatException: For input string: ""
	at java.lang.NumberFormatException.forInputString(Unknown Source)
	at java.lang.Integer.parseInt(Unknown Source)
	at java.lang.Integer.parseInt(Unknown Source)
	at org.h2.value.Value.convertToInt(Value.java:982)
	at org.h2.value.Value.convertTo(Value.java:806)
	... 11 more

	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:247)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1443)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:633)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:647)
	at org.springframework.jdbc.core.JdbcTemplate.batchUpdate(JdbcTemplate.java:936)
	at org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.batchUpdate(NamedParameterJdbcTemplate.java:366)
	at com.pjy.dashboard.dao.DynamicSqlDao.batchInsert(DynamicSqlDao.java:737)
	at com.pjy.dashboard.dao.DynamicSqlDao$$FastClassBySpringCGLIB$$8af24191.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at com.pjy.dashboard.dao.DynamicSqlH2Dao$$EnhancerBySpringCGLIB$$805b005c.batchInsert(<generated>)
	at com.pjy.dashboard.service.DynamicSqlService.mergeInfo(DynamicSqlService.java:662)
	at com.pjy.dashboard.controller.TestController.BUS_mergeInfo(TestController.java:432)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:893)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:798)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:97)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at jdk.internal.reflect.GeneratedMethodAccessor149.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$45588dab.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:114)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:104)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.h2.jdbc.JdbcSQLDataException: Data conversion error converting "' ' (TBM_ACCIDENT_INFO: ""CAR_NO"" INTEGER)"; SQL statement:
MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss') [22018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:457)
	at org.h2.engine.SessionRemote.done(SessionRemote.java:611)
	at org.h2.command.CommandRemote.executeUpdate(CommandRemote.java:237)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdateInternal(JdbcPreparedStatement.java:191)
	at org.h2.jdbc.JdbcPreparedStatement.executeBatch(JdbcPreparedStatement.java:1219)
	at net.sf.log4jdbc.sql.jdbcapi.StatementSpy.executeBatch(StatementSpy.java:571)
	at com.zaxxer.hikari.pool.ProxyStatement.executeBatch(ProxyStatement.java:128)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeBatch(HikariProxyPreparedStatement.java)
	at org.springframework.jdbc.core.JdbcTemplate.lambda$batchUpdate$2(JdbcTemplate.java:950)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:617)
	... 133 common frames omitted
2023-07-01 23:49:28.647 WARN  [http-nio-10010-exec-2] [o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver] - Resolved [org.springframework.dao.DataIntegrityViolationException: PreparedStatementCallback; SQL [MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')]; Data conversion error converting "' ' (TBM_ACCIDENT_INFO: ""CAR_NO"" INTEGER)"; SQL statement:
MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss') [22018-200]; nested exception is org.h2.jdbc.JdbcSQLDataException: Data conversion error converting "' ' (TBM_ACCIDENT_INFO: ""CAR_NO"" INTEGER)"; SQL statement:
MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss') [22018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:457)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.table.Column.getDataConversionError(Column.java:409)
	at org.h2.table.Column.validateConvertUpdateSequence(Column.java:381)
	at org.h2.table.Table.validateConvertUpdateSequence(Table.java:845)
	at org.h2.command.dml.Merge.merge(Merge.java:175)
	at org.h2.command.dml.Merge.update(Merge.java:132)
	at org.h2.command.CommandContainer.update(CommandContainer.java:198)
	at org.h2.command.Command.executeUpdate(Command.java:251)
	at org.h2.server.TcpServerThread.process(TcpServerThread.java:406)
	at org.h2.server.TcpServerThread.run(TcpServerThread.java:183)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.h2.message.DbException: Data conversion error converting " " [22018-200]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.value.Value.convertTo(Value.java:875)
	at org.h2.value.Value.convertTo(Value.java:772)
	at org.h2.value.TypeInfo.cast(TypeInfo.java:515)
	at org.h2.table.Column.validateConvertUpdateSequence(Column.java:378)
	... 8 more
Caused by: org.h2.jdbc.JdbcSQLDataException: Data conversion error converting " " [22018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:457)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 13 more
Caused by: java.lang.NumberFormatException: For input string: ""
	at java.lang.NumberFormatException.forInputString(Unknown Source)
	at java.lang.Integer.parseInt(Unknown Source)
	at java.lang.Integer.parseInt(Unknown Source)
	at org.h2.value.Value.convertToInt(Value.java:982)
	at org.h2.value.Value.convertTo(Value.java:806)
	... 11 more
]
2023-07-01 23:50:29.956 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
12. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 23:50:29.959 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
13. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 23:50:29.960 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
13. SELECT	/* select_accident_option : 교통사고 칼럼별 option값 */ 	
			listagg( DISTINCT(GAPI_GB ),'/')  	AS gapi_gb
		,	listagg( DISTINCT(acc_gb ),'/') 	AS acc_gb
		,	listagg( DISTINCT(acc_kind ),'/') 	AS acc_kind
		,	listagg( DISTINCT(proc_result ),'/') 	AS proc_result
		,	(SELECT listagg(DISTINCT(car_no),'/') FROM TBL_CARINFO where 	a.company_no = '100' ) AS car_no
		,	(SELECT listagg(ROUTE_NM,'/')  FROM TBL_ROUTEINFO a where 	a.company_no = '100'  ORDER BY 1) AS route_nm
		,	(SELECT listagg(EMP_NM,'/')  FROM TBL_EMPLOYEEINFO a where 	a.company_no = '100'  ORDER BY 1) AS emp_nm
	FROM TBM_ACCIDENT_INFO a
 {executed in 1 msec}
2023-07-01 23:50:29.962 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
13. SELECT ROUTE_NM  FROM TBL_ROUTEINFO a where 	a.company_no = '100' ORDER BY 1
 {executed in 1 msec}
2023-07-01 23:50:29.963 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
13. SELECT DISTINCT(car_no) FROM TBL_CARINFO a where 	a.company_no = '100' order by 1
 {executed in 1 msec}
2023-07-01 23:50:31.816 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
13. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 23:50:31.823 INFO  [http-nio-10010-exec-6] [com.pjy.dashboard.dao.DynamicSqlDao] - merge sql : MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , :acc_date , :acc_time , :emp_nm , :route_nm , :car_no , :acc_gb , :gapi_gb , :acc_kind , :jacha_rate , :sangdae_rate , :proc_result , :proc_memo , :acc_place , :daein_in_amt , :daemul_in_amt , :in_tot_amt , :daein_out_amt , :daemul_out_amt , :jacha_amt , :out_tot_amt , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
2023-07-01 23:50:31.825 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
14. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 23:50:31.827 ERROR [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeBatch(ProxyStatement.java:128)
14. batching 1 statements:
1:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , ' ' , ' ' , ' ' , ' ' , ' ' , ' ' , ' ' , ' ' , ' ' , ' ' , ' ' , ' ' , ' ' , ' ' , ' ' , ' ' , ' ' , ' ' , ' ' , ' ' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
 {FAILED after 1 msec}
org.h2.jdbc.JdbcBatchUpdateException: Data conversion error converting "' ' (TBM_ACCIDENT_INFO: ""CAR_NO"" INTEGER)"; SQL statement:
MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss') [22018-200]
	at org.h2.jdbc.JdbcPreparedStatement.executeBatch(JdbcPreparedStatement.java:1235)
	at net.sf.log4jdbc.sql.jdbcapi.StatementSpy.executeBatch(StatementSpy.java:571)
	at com.zaxxer.hikari.pool.ProxyStatement.executeBatch(ProxyStatement.java:128)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeBatch(HikariProxyPreparedStatement.java)
	at org.springframework.jdbc.core.JdbcTemplate.lambda$batchUpdate$2(JdbcTemplate.java:950)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:617)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:647)
	at org.springframework.jdbc.core.JdbcTemplate.batchUpdate(JdbcTemplate.java:936)
	at org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.batchUpdate(NamedParameterJdbcTemplate.java:366)
	at com.pjy.dashboard.dao.DynamicSqlDao.batchInsert(DynamicSqlDao.java:737)
	at com.pjy.dashboard.dao.DynamicSqlDao$$FastClassBySpringCGLIB$$8af24191.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at com.pjy.dashboard.dao.DynamicSqlH2Dao$$EnhancerBySpringCGLIB$$805b005c.batchInsert(<generated>)
	at com.pjy.dashboard.service.DynamicSqlService.mergeInfo(DynamicSqlService.java:662)
	at com.pjy.dashboard.controller.TestController.BUS_mergeInfo(TestController.java:432)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:893)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:798)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:97)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at jdk.internal.reflect.GeneratedMethodAccessor149.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$45588dab.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:114)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:104)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-07-01 23:50:31.829 ERROR [http-nio-10010-exec-6] [c.p.d.core.error.GlobalExceptionHandler] - handleEntityNotFoundException
org.springframework.dao.DataIntegrityViolationException: PreparedStatementCallback; SQL [MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')]; Data conversion error converting "' ' (TBM_ACCIDENT_INFO: ""CAR_NO"" INTEGER)"; SQL statement:
MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss') [22018-200]; nested exception is org.h2.jdbc.JdbcSQLDataException: Data conversion error converting "' ' (TBM_ACCIDENT_INFO: ""CAR_NO"" INTEGER)"; SQL statement:
MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss') [22018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:457)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.table.Column.getDataConversionError(Column.java:409)
	at org.h2.table.Column.validateConvertUpdateSequence(Column.java:381)
	at org.h2.table.Table.validateConvertUpdateSequence(Table.java:845)
	at org.h2.command.dml.Merge.merge(Merge.java:175)
	at org.h2.command.dml.Merge.update(Merge.java:132)
	at org.h2.command.CommandContainer.update(CommandContainer.java:198)
	at org.h2.command.Command.executeUpdate(Command.java:251)
	at org.h2.server.TcpServerThread.process(TcpServerThread.java:406)
	at org.h2.server.TcpServerThread.run(TcpServerThread.java:183)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.h2.message.DbException: Data conversion error converting " " [22018-200]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.value.Value.convertTo(Value.java:875)
	at org.h2.value.Value.convertTo(Value.java:772)
	at org.h2.value.TypeInfo.cast(TypeInfo.java:515)
	at org.h2.table.Column.validateConvertUpdateSequence(Column.java:378)
	... 8 more
Caused by: org.h2.jdbc.JdbcSQLDataException: Data conversion error converting " " [22018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:457)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 13 more
Caused by: java.lang.NumberFormatException: For input string: ""
	at java.lang.NumberFormatException.forInputString(Unknown Source)
	at java.lang.Integer.parseInt(Unknown Source)
	at java.lang.Integer.parseInt(Unknown Source)
	at org.h2.value.Value.convertToInt(Value.java:982)
	at org.h2.value.Value.convertTo(Value.java:806)
	... 11 more

	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:247)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1443)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:633)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:647)
	at org.springframework.jdbc.core.JdbcTemplate.batchUpdate(JdbcTemplate.java:936)
	at org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.batchUpdate(NamedParameterJdbcTemplate.java:366)
	at com.pjy.dashboard.dao.DynamicSqlDao.batchInsert(DynamicSqlDao.java:737)
	at com.pjy.dashboard.dao.DynamicSqlDao$$FastClassBySpringCGLIB$$8af24191.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at com.pjy.dashboard.dao.DynamicSqlH2Dao$$EnhancerBySpringCGLIB$$805b005c.batchInsert(<generated>)
	at com.pjy.dashboard.service.DynamicSqlService.mergeInfo(DynamicSqlService.java:662)
	at com.pjy.dashboard.controller.TestController.BUS_mergeInfo(TestController.java:432)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:893)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:798)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:97)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at jdk.internal.reflect.GeneratedMethodAccessor149.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$45588dab.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:114)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:104)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.h2.jdbc.JdbcSQLDataException: Data conversion error converting "' ' (TBM_ACCIDENT_INFO: ""CAR_NO"" INTEGER)"; SQL statement:
MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss') [22018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:457)
	at org.h2.engine.SessionRemote.done(SessionRemote.java:611)
	at org.h2.command.CommandRemote.executeUpdate(CommandRemote.java:237)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdateInternal(JdbcPreparedStatement.java:191)
	at org.h2.jdbc.JdbcPreparedStatement.executeBatch(JdbcPreparedStatement.java:1219)
	at net.sf.log4jdbc.sql.jdbcapi.StatementSpy.executeBatch(StatementSpy.java:571)
	at com.zaxxer.hikari.pool.ProxyStatement.executeBatch(ProxyStatement.java:128)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeBatch(HikariProxyPreparedStatement.java)
	at org.springframework.jdbc.core.JdbcTemplate.lambda$batchUpdate$2(JdbcTemplate.java:950)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:617)
	... 133 common frames omitted
2023-07-01 23:50:31.830 WARN  [http-nio-10010-exec-6] [o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver] - Resolved [org.springframework.dao.DataIntegrityViolationException: PreparedStatementCallback; SQL [MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')]; Data conversion error converting "' ' (TBM_ACCIDENT_INFO: ""CAR_NO"" INTEGER)"; SQL statement:
MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss') [22018-200]; nested exception is org.h2.jdbc.JdbcSQLDataException: Data conversion error converting "' ' (TBM_ACCIDENT_INFO: ""CAR_NO"" INTEGER)"; SQL statement:
MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss') [22018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:457)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.table.Column.getDataConversionError(Column.java:409)
	at org.h2.table.Column.validateConvertUpdateSequence(Column.java:381)
	at org.h2.table.Table.validateConvertUpdateSequence(Table.java:845)
	at org.h2.command.dml.Merge.merge(Merge.java:175)
	at org.h2.command.dml.Merge.update(Merge.java:132)
	at org.h2.command.CommandContainer.update(CommandContainer.java:198)
	at org.h2.command.Command.executeUpdate(Command.java:251)
	at org.h2.server.TcpServerThread.process(TcpServerThread.java:406)
	at org.h2.server.TcpServerThread.run(TcpServerThread.java:183)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.h2.message.DbException: Data conversion error converting " " [22018-200]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.value.Value.convertTo(Value.java:875)
	at org.h2.value.Value.convertTo(Value.java:772)
	at org.h2.value.TypeInfo.cast(TypeInfo.java:515)
	at org.h2.table.Column.validateConvertUpdateSequence(Column.java:378)
	... 8 more
Caused by: org.h2.jdbc.JdbcSQLDataException: Data conversion error converting " " [22018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:457)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 13 more
Caused by: java.lang.NumberFormatException: For input string: ""
	at java.lang.NumberFormatException.forInputString(Unknown Source)
	at java.lang.Integer.parseInt(Unknown Source)
	at java.lang.Integer.parseInt(Unknown Source)
	at org.h2.value.Value.convertToInt(Value.java:982)
	at org.h2.value.Value.convertTo(Value.java:806)
	... 11 more
]
2023-07-01 23:50:51.192 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
14. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 23:50:51.194 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
15. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 23:50:51.196 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
15. SELECT	/* select_accident_option : 교통사고 칼럼별 option값 */ 	
			listagg( DISTINCT(GAPI_GB ),'/')  	AS gapi_gb
		,	listagg( DISTINCT(acc_gb ),'/') 	AS acc_gb
		,	listagg( DISTINCT(acc_kind ),'/') 	AS acc_kind
		,	listagg( DISTINCT(proc_result ),'/') 	AS proc_result
		,	(SELECT listagg(DISTINCT(car_no),'/') FROM TBL_CARINFO where 	a.company_no = '100' ) AS car_no
		,	(SELECT listagg(ROUTE_NM,'/')  FROM TBL_ROUTEINFO a where 	a.company_no = '100'  ORDER BY 1) AS route_nm
		,	(SELECT listagg(EMP_NM,'/')  FROM TBL_EMPLOYEEINFO a where 	a.company_no = '100'  ORDER BY 1) AS emp_nm
	FROM TBM_ACCIDENT_INFO a
 {executed in 1 msec}
2023-07-01 23:50:51.198 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
15. SELECT ROUTE_NM  FROM TBL_ROUTEINFO a where 	a.company_no = '100' ORDER BY 1
 {executed in 0 msec}
2023-07-01 23:50:51.199 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
15. SELECT DISTINCT(car_no) FROM TBL_CARINFO a where 	a.company_no = '100' order by 1
 {executed in 0 msec}
2023-07-01 23:51:17.511 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
15. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 23:51:17.513 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
16. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 23:51:17.515 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
16. SELECT	/* select_accident_option : 교통사고 칼럼별 option값 */ 	
			listagg( DISTINCT(GAPI_GB ),'/')  	AS gapi_gb
		,	listagg( DISTINCT(acc_gb ),'/') 	AS acc_gb
		,	listagg( DISTINCT(acc_kind ),'/') 	AS acc_kind
		,	listagg( DISTINCT(proc_result ),'/') 	AS proc_result
		,	(SELECT listagg(DISTINCT(car_no),'/') FROM TBL_CARINFO where 	a.company_no = '100' ) AS car_no
		,	(SELECT listagg(ROUTE_NM,'/')  FROM TBL_ROUTEINFO a where 	a.company_no = '100'  ORDER BY 1) AS route_nm
		,	(SELECT listagg(EMP_NM,'/')  FROM TBL_EMPLOYEEINFO a where 	a.company_no = '100'  ORDER BY 1) AS emp_nm
	FROM TBM_ACCIDENT_INFO a
 {executed in 0 msec}
2023-07-01 23:51:17.516 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
16. SELECT ROUTE_NM  FROM TBL_ROUTEINFO a where 	a.company_no = '100' ORDER BY 1
 {executed in 0 msec}
2023-07-01 23:51:17.517 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
16. SELECT DISTINCT(car_no) FROM TBL_CARINFO a where 	a.company_no = '100' order by 1
 {executed in 1 msec}
2023-07-01 23:51:20.211 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
16. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 23:51:20.219 INFO  [http-nio-10010-exec-1] [com.pjy.dashboard.dao.DynamicSqlDao] - merge sql : MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , :acc_date , :acc_time , :emp_nm , :route_nm , :car_no , :acc_gb , :gapi_gb , :acc_kind , :jacha_rate , :sangdae_rate , :proc_result , :proc_memo , :acc_place , :daein_in_amt , :daemul_in_amt , :in_tot_amt , :daein_out_amt , :daemul_out_amt , :jacha_amt , :out_tot_amt , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
2023-07-01 23:51:20.220 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
17. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 23:51:20.223 ERROR [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeBatch(ProxyStatement.java:128)
17. batching 1 statements:
1:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , ' ' , ' ' , ' ' , ' ' , ' ' , ' ' , ' ' , ' ' , ' ' , ' ' , ' ' , ' ' , ' ' , ' ' , ' ' , ' ' , ' ' , ' ' , ' ' , ' ' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
 {FAILED after 1 msec}
org.h2.jdbc.JdbcBatchUpdateException: Data conversion error converting "' ' (TBM_ACCIDENT_INFO: ""CAR_NO"" INTEGER)"; SQL statement:
MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss') [22018-200]
	at org.h2.jdbc.JdbcPreparedStatement.executeBatch(JdbcPreparedStatement.java:1235)
	at net.sf.log4jdbc.sql.jdbcapi.StatementSpy.executeBatch(StatementSpy.java:571)
	at com.zaxxer.hikari.pool.ProxyStatement.executeBatch(ProxyStatement.java:128)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeBatch(HikariProxyPreparedStatement.java)
	at org.springframework.jdbc.core.JdbcTemplate.lambda$batchUpdate$2(JdbcTemplate.java:950)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:617)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:647)
	at org.springframework.jdbc.core.JdbcTemplate.batchUpdate(JdbcTemplate.java:936)
	at org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.batchUpdate(NamedParameterJdbcTemplate.java:366)
	at com.pjy.dashboard.dao.DynamicSqlDao.batchInsert(DynamicSqlDao.java:737)
	at com.pjy.dashboard.dao.DynamicSqlDao$$FastClassBySpringCGLIB$$8af24191.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at com.pjy.dashboard.dao.DynamicSqlH2Dao$$EnhancerBySpringCGLIB$$805b005c.batchInsert(<generated>)
	at com.pjy.dashboard.service.DynamicSqlService.mergeInfo(DynamicSqlService.java:662)
	at com.pjy.dashboard.controller.TestController.BUS_mergeInfo(TestController.java:432)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:893)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:798)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:97)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at jdk.internal.reflect.GeneratedMethodAccessor149.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$45588dab.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:114)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:104)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-07-01 23:51:20.224 ERROR [http-nio-10010-exec-1] [c.p.d.core.error.GlobalExceptionHandler] - handleEntityNotFoundException
org.springframework.dao.DataIntegrityViolationException: PreparedStatementCallback; SQL [MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')]; Data conversion error converting "' ' (TBM_ACCIDENT_INFO: ""CAR_NO"" INTEGER)"; SQL statement:
MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss') [22018-200]; nested exception is org.h2.jdbc.JdbcSQLDataException: Data conversion error converting "' ' (TBM_ACCIDENT_INFO: ""CAR_NO"" INTEGER)"; SQL statement:
MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss') [22018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:457)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.table.Column.getDataConversionError(Column.java:409)
	at org.h2.table.Column.validateConvertUpdateSequence(Column.java:381)
	at org.h2.table.Table.validateConvertUpdateSequence(Table.java:845)
	at org.h2.command.dml.Merge.merge(Merge.java:175)
	at org.h2.command.dml.Merge.update(Merge.java:132)
	at org.h2.command.CommandContainer.update(CommandContainer.java:198)
	at org.h2.command.Command.executeUpdate(Command.java:251)
	at org.h2.server.TcpServerThread.process(TcpServerThread.java:406)
	at org.h2.server.TcpServerThread.run(TcpServerThread.java:183)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.h2.message.DbException: Data conversion error converting " " [22018-200]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.value.Value.convertTo(Value.java:875)
	at org.h2.value.Value.convertTo(Value.java:772)
	at org.h2.value.TypeInfo.cast(TypeInfo.java:515)
	at org.h2.table.Column.validateConvertUpdateSequence(Column.java:378)
	... 8 more
Caused by: org.h2.jdbc.JdbcSQLDataException: Data conversion error converting " " [22018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:457)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 13 more
Caused by: java.lang.NumberFormatException: For input string: ""
	at java.lang.NumberFormatException.forInputString(Unknown Source)
	at java.lang.Integer.parseInt(Unknown Source)
	at java.lang.Integer.parseInt(Unknown Source)
	at org.h2.value.Value.convertToInt(Value.java:982)
	at org.h2.value.Value.convertTo(Value.java:806)
	... 11 more

	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:247)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1443)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:633)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:647)
	at org.springframework.jdbc.core.JdbcTemplate.batchUpdate(JdbcTemplate.java:936)
	at org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.batchUpdate(NamedParameterJdbcTemplate.java:366)
	at com.pjy.dashboard.dao.DynamicSqlDao.batchInsert(DynamicSqlDao.java:737)
	at com.pjy.dashboard.dao.DynamicSqlDao$$FastClassBySpringCGLIB$$8af24191.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at com.pjy.dashboard.dao.DynamicSqlH2Dao$$EnhancerBySpringCGLIB$$805b005c.batchInsert(<generated>)
	at com.pjy.dashboard.service.DynamicSqlService.mergeInfo(DynamicSqlService.java:662)
	at com.pjy.dashboard.controller.TestController.BUS_mergeInfo(TestController.java:432)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:893)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:798)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:97)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at jdk.internal.reflect.GeneratedMethodAccessor149.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$45588dab.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:114)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:104)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.h2.jdbc.JdbcSQLDataException: Data conversion error converting "' ' (TBM_ACCIDENT_INFO: ""CAR_NO"" INTEGER)"; SQL statement:
MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss') [22018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:457)
	at org.h2.engine.SessionRemote.done(SessionRemote.java:611)
	at org.h2.command.CommandRemote.executeUpdate(CommandRemote.java:237)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdateInternal(JdbcPreparedStatement.java:191)
	at org.h2.jdbc.JdbcPreparedStatement.executeBatch(JdbcPreparedStatement.java:1219)
	at net.sf.log4jdbc.sql.jdbcapi.StatementSpy.executeBatch(StatementSpy.java:571)
	at com.zaxxer.hikari.pool.ProxyStatement.executeBatch(ProxyStatement.java:128)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeBatch(HikariProxyPreparedStatement.java)
	at org.springframework.jdbc.core.JdbcTemplate.lambda$batchUpdate$2(JdbcTemplate.java:950)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:617)
	... 133 common frames omitted
2023-07-01 23:51:20.225 WARN  [http-nio-10010-exec-1] [o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver] - Resolved [org.springframework.dao.DataIntegrityViolationException: PreparedStatementCallback; SQL [MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')]; Data conversion error converting "' ' (TBM_ACCIDENT_INFO: ""CAR_NO"" INTEGER)"; SQL statement:
MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss') [22018-200]; nested exception is org.h2.jdbc.JdbcSQLDataException: Data conversion error converting "' ' (TBM_ACCIDENT_INFO: ""CAR_NO"" INTEGER)"; SQL statement:
MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss') [22018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:457)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.table.Column.getDataConversionError(Column.java:409)
	at org.h2.table.Column.validateConvertUpdateSequence(Column.java:381)
	at org.h2.table.Table.validateConvertUpdateSequence(Table.java:845)
	at org.h2.command.dml.Merge.merge(Merge.java:175)
	at org.h2.command.dml.Merge.update(Merge.java:132)
	at org.h2.command.CommandContainer.update(CommandContainer.java:198)
	at org.h2.command.Command.executeUpdate(Command.java:251)
	at org.h2.server.TcpServerThread.process(TcpServerThread.java:406)
	at org.h2.server.TcpServerThread.run(TcpServerThread.java:183)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.h2.message.DbException: Data conversion error converting " " [22018-200]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.value.Value.convertTo(Value.java:875)
	at org.h2.value.Value.convertTo(Value.java:772)
	at org.h2.value.TypeInfo.cast(TypeInfo.java:515)
	at org.h2.table.Column.validateConvertUpdateSequence(Column.java:378)
	... 8 more
Caused by: org.h2.jdbc.JdbcSQLDataException: Data conversion error converting " " [22018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:457)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 13 more
Caused by: java.lang.NumberFormatException: For input string: ""
	at java.lang.NumberFormatException.forInputString(Unknown Source)
	at java.lang.Integer.parseInt(Unknown Source)
	at java.lang.Integer.parseInt(Unknown Source)
	at org.h2.value.Value.convertToInt(Value.java:982)
	at org.h2.value.Value.convertTo(Value.java:806)
	... 11 more
]
2023-07-01 23:55:51.873 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
17. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 23:55:51.876 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
18. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 23:55:51.878 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
18. SELECT	/* select_accident_option : 교통사고 칼럼별 option값 */ 	
			listagg( DISTINCT(GAPI_GB ),'/')  	AS gapi_gb
		,	listagg( DISTINCT(acc_gb ),'/') 	AS acc_gb
		,	listagg( DISTINCT(acc_kind ),'/') 	AS acc_kind
		,	listagg( DISTINCT(proc_result ),'/') 	AS proc_result
		,	(SELECT listagg(DISTINCT(car_no),'/') FROM TBL_CARINFO where 	a.company_no = '100' ) AS car_no
		,	(SELECT listagg(ROUTE_NM,'/')  FROM TBL_ROUTEINFO a where 	a.company_no = '100'  ORDER BY 1) AS route_nm
		,	(SELECT listagg(EMP_NM,'/')  FROM TBL_EMPLOYEEINFO a where 	a.company_no = '100'  ORDER BY 1) AS emp_nm
	FROM TBM_ACCIDENT_INFO a
 {executed in 0 msec}
2023-07-01 23:55:51.879 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
18. SELECT ROUTE_NM  FROM TBL_ROUTEINFO a where 	a.company_no = '100' ORDER BY 1
 {executed in 1 msec}
2023-07-01 23:55:51.880 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
18. SELECT DISTINCT(car_no) FROM TBL_CARINFO a where 	a.company_no = '100' order by 1
 {executed in 1 msec}
2023-07-01 23:56:17.470 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
18. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 23:56:17.472 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
19. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-07-01 23:56:17.474 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
19. SELECT	/* select_accident_option : 교통사고 칼럼별 option값 */ 	
			listagg( DISTINCT(GAPI_GB ),'/')  	AS gapi_gb
		,	listagg( DISTINCT(acc_gb ),'/') 	AS acc_gb
		,	listagg( DISTINCT(acc_kind ),'/') 	AS acc_kind
		,	listagg( DISTINCT(proc_result ),'/') 	AS proc_result
		,	(SELECT listagg(DISTINCT(car_no),'/') FROM TBL_CARINFO where 	a.company_no = '100' ) AS car_no
		,	(SELECT listagg(ROUTE_NM,'/')  FROM TBL_ROUTEINFO a where 	a.company_no = '100'  ORDER BY 1) AS route_nm
		,	(SELECT listagg(EMP_NM,'/')  FROM TBL_EMPLOYEEINFO a where 	a.company_no = '100'  ORDER BY 1) AS emp_nm
	FROM TBM_ACCIDENT_INFO a
 {executed in 1 msec}
2023-07-01 23:56:17.476 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
19. SELECT ROUTE_NM  FROM TBL_ROUTEINFO a where 	a.company_no = '100' ORDER BY 1
 {executed in 1 msec}
2023-07-01 23:56:17.478 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
19. SELECT DISTINCT(car_no) FROM TBL_CARINFO a where 	a.company_no = '100' order by 1
 {executed in 0 msec}
2023-07-01 23:57:12.009 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
19. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 23:57:12.018 INFO  [http-nio-10010-exec-10] [com.pjy.dashboard.dao.DynamicSqlDao] - merge sql : MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , :acc_date , :acc_time , :emp_nm , :route_nm , :car_no , :acc_gb , :gapi_gb , :acc_kind , :jacha_rate , :sangdae_rate , :proc_result , :proc_memo , :acc_place , :daein_in_amt , :daemul_in_amt , :in_tot_amt , :daein_out_amt , :daemul_out_amt , :jacha_amt , :out_tot_amt , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
2023-07-01 23:57:12.020 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
20. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-07-01 23:57:12.024 ERROR [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeBatch(ProxyStatement.java:128)
20. batching 1 statements:
1:  MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , ' ' , ' ' , ' ' , ' ' , ' ' , ' ' , ' ' , ' ' , ' ' , ' ' , ' ' , ' ' , ' ' , ' ' , ' ' , ' ' , ' ' , ' ' , ' ' , ' ' , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
 {FAILED after 2 msec}
org.h2.jdbc.JdbcBatchUpdateException: Data conversion error converting "' ' (TBM_ACCIDENT_INFO: ""CAR_NO"" INTEGER)"; SQL statement:
MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss') [22018-200]
	at org.h2.jdbc.JdbcPreparedStatement.executeBatch(JdbcPreparedStatement.java:1235)
	at net.sf.log4jdbc.sql.jdbcapi.StatementSpy.executeBatch(StatementSpy.java:571)
	at com.zaxxer.hikari.pool.ProxyStatement.executeBatch(ProxyStatement.java:128)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeBatch(HikariProxyPreparedStatement.java)
	at org.springframework.jdbc.core.JdbcTemplate.lambda$batchUpdate$2(JdbcTemplate.java:950)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:617)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:647)
	at org.springframework.jdbc.core.JdbcTemplate.batchUpdate(JdbcTemplate.java:936)
	at org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.batchUpdate(NamedParameterJdbcTemplate.java:366)
	at com.pjy.dashboard.dao.DynamicSqlDao.batchInsert(DynamicSqlDao.java:737)
	at com.pjy.dashboard.dao.DynamicSqlDao$$FastClassBySpringCGLIB$$8af24191.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at com.pjy.dashboard.dao.DynamicSqlH2Dao$$EnhancerBySpringCGLIB$$805b005c.batchInsert(<generated>)
	at com.pjy.dashboard.service.DynamicSqlService.mergeInfo(DynamicSqlService.java:662)
	at com.pjy.dashboard.controller.TestController.BUS_mergeInfo(TestController.java:432)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:893)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:798)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:97)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at jdk.internal.reflect.GeneratedMethodAccessor149.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$45588dab.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:114)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:104)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-07-01 23:57:12.026 ERROR [http-nio-10010-exec-10] [c.p.d.core.error.GlobalExceptionHandler] - handleEntityNotFoundException
org.springframework.dao.DataIntegrityViolationException: PreparedStatementCallback; SQL [MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')]; Data conversion error converting "' ' (TBM_ACCIDENT_INFO: ""CAR_NO"" INTEGER)"; SQL statement:
MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss') [22018-200]; nested exception is org.h2.jdbc.JdbcSQLDataException: Data conversion error converting "' ' (TBM_ACCIDENT_INFO: ""CAR_NO"" INTEGER)"; SQL statement:
MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss') [22018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:457)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.table.Column.getDataConversionError(Column.java:409)
	at org.h2.table.Column.validateConvertUpdateSequence(Column.java:381)
	at org.h2.table.Table.validateConvertUpdateSequence(Table.java:845)
	at org.h2.command.dml.Merge.merge(Merge.java:175)
	at org.h2.command.dml.Merge.update(Merge.java:132)
	at org.h2.command.CommandContainer.update(CommandContainer.java:198)
	at org.h2.command.Command.executeUpdate(Command.java:251)
	at org.h2.server.TcpServerThread.process(TcpServerThread.java:406)
	at org.h2.server.TcpServerThread.run(TcpServerThread.java:183)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.h2.message.DbException: Data conversion error converting " " [22018-200]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.value.Value.convertTo(Value.java:875)
	at org.h2.value.Value.convertTo(Value.java:772)
	at org.h2.value.TypeInfo.cast(TypeInfo.java:515)
	at org.h2.table.Column.validateConvertUpdateSequence(Column.java:378)
	... 8 more
Caused by: org.h2.jdbc.JdbcSQLDataException: Data conversion error converting " " [22018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:457)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 13 more
Caused by: java.lang.NumberFormatException: For input string: ""
	at java.lang.NumberFormatException.forInputString(Unknown Source)
	at java.lang.Integer.parseInt(Unknown Source)
	at java.lang.Integer.parseInt(Unknown Source)
	at org.h2.value.Value.convertToInt(Value.java:982)
	at org.h2.value.Value.convertTo(Value.java:806)
	... 11 more

	at org.springframework.jdbc.support.SQLErrorCodeSQLExceptionTranslator.doTranslate(SQLErrorCodeSQLExceptionTranslator.java:247)
	at org.springframework.jdbc.support.AbstractFallbackSQLExceptionTranslator.translate(AbstractFallbackSQLExceptionTranslator.java:72)
	at org.springframework.jdbc.core.JdbcTemplate.translateException(JdbcTemplate.java:1443)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:633)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:647)
	at org.springframework.jdbc.core.JdbcTemplate.batchUpdate(JdbcTemplate.java:936)
	at org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate.batchUpdate(NamedParameterJdbcTemplate.java:366)
	at com.pjy.dashboard.dao.DynamicSqlDao.batchInsert(DynamicSqlDao.java:737)
	at com.pjy.dashboard.dao.DynamicSqlDao$$FastClassBySpringCGLIB$$8af24191.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at com.pjy.dashboard.dao.DynamicSqlH2Dao$$EnhancerBySpringCGLIB$$805b005c.batchInsert(<generated>)
	at com.pjy.dashboard.service.DynamicSqlService.mergeInfo(DynamicSqlService.java:662)
	at com.pjy.dashboard.controller.TestController.BUS_mergeInfo(TestController.java:432)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:893)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:798)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:97)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at jdk.internal.reflect.GeneratedMethodAccessor149.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$45588dab.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:114)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:104)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: org.h2.jdbc.JdbcSQLDataException: Data conversion error converting "' ' (TBM_ACCIDENT_INFO: ""CAR_NO"" INTEGER)"; SQL statement:
MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss') [22018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:457)
	at org.h2.engine.SessionRemote.done(SessionRemote.java:611)
	at org.h2.command.CommandRemote.executeUpdate(CommandRemote.java:237)
	at org.h2.jdbc.JdbcPreparedStatement.executeUpdateInternal(JdbcPreparedStatement.java:191)
	at org.h2.jdbc.JdbcPreparedStatement.executeBatch(JdbcPreparedStatement.java:1219)
	at net.sf.log4jdbc.sql.jdbcapi.StatementSpy.executeBatch(StatementSpy.java:571)
	at com.zaxxer.hikari.pool.ProxyStatement.executeBatch(ProxyStatement.java:128)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.executeBatch(HikariProxyPreparedStatement.java)
	at org.springframework.jdbc.core.JdbcTemplate.lambda$batchUpdate$2(JdbcTemplate.java:950)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:617)
	... 133 common frames omitted
2023-07-01 23:57:12.027 WARN  [http-nio-10010-exec-10] [o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver] - Resolved [org.springframework.dao.DataIntegrityViolationException: PreparedStatementCallback; SQL [MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')]; Data conversion error converting "' ' (TBM_ACCIDENT_INFO: ""CAR_NO"" INTEGER)"; SQL statement:
MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss') [22018-200]; nested exception is org.h2.jdbc.JdbcSQLDataException: Data conversion error converting "' ' (TBM_ACCIDENT_INFO: ""CAR_NO"" INTEGER)"; SQL statement:
MERGE INTO TBM_ACCIDENT_INFO KEY (acc_date,acc_time,company_no,emp_nm) select  '100' , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , ? , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss') [22018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:457)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.table.Column.getDataConversionError(Column.java:409)
	at org.h2.table.Column.validateConvertUpdateSequence(Column.java:381)
	at org.h2.table.Table.validateConvertUpdateSequence(Table.java:845)
	at org.h2.command.dml.Merge.merge(Merge.java:175)
	at org.h2.command.dml.Merge.update(Merge.java:132)
	at org.h2.command.CommandContainer.update(CommandContainer.java:198)
	at org.h2.command.Command.executeUpdate(Command.java:251)
	at org.h2.server.TcpServerThread.process(TcpServerThread.java:406)
	at org.h2.server.TcpServerThread.run(TcpServerThread.java:183)
	at java.lang.Thread.run(Unknown Source)
Caused by: org.h2.message.DbException: Data conversion error converting " " [22018-200]
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.value.Value.convertTo(Value.java:875)
	at org.h2.value.Value.convertTo(Value.java:772)
	at org.h2.value.TypeInfo.cast(TypeInfo.java:515)
	at org.h2.table.Column.validateConvertUpdateSequence(Column.java:378)
	... 8 more
Caused by: org.h2.jdbc.JdbcSQLDataException: Data conversion error converting " " [22018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:457)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	... 13 more
Caused by: java.lang.NumberFormatException: For input string: ""
	at java.lang.NumberFormatException.forInputString(Unknown Source)
	at java.lang.Integer.parseInt(Unknown Source)
	at java.lang.Integer.parseInt(Unknown Source)
	at org.h2.value.Value.convertToInt(Value.java:982)
	at org.h2.value.Value.convertTo(Value.java:806)
	... 11 more
]
