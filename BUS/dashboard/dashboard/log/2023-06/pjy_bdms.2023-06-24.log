2023-06-24 00:10:10.916 WARN  [H2 housekeeper] [com.zaxxer.hikari.pool.HikariPool] - H2 - Thread starvation or clock leap detected (housekeeper delta=1h7m8s1ms25µs301ns).
2023-06-24 00:13:11.413 INFO  [http-nio-10010-exec-8] [c.p.d.interceptor.LoggerInterceptor] - ============================== START ==============================
2023-06-24 00:13:11.413 INFO  [http-nio-10010-exec-8] [c.p.d.interceptor.LoggerInterceptor] -  Class       	:  class org.springframework.web.method.HandlerMethod
2023-06-24 00:13:11.413 INFO  [http-nio-10010-exec-8] [c.p.d.interceptor.LoggerInterceptor] -  Request URI 	:  /error
2023-06-24 00:13:11.413 INFO  [http-nio-10010-exec-8] [c.p.d.interceptor.LoggerInterceptor] -  Request addr	:  0:0:0:0:0:0:0:1
2023-06-24 00:13:11.414 INFO  [http-nio-10010-exec-8] [c.p.d.interceptor.LoggerInterceptor] -  Servlet URI 	:  /error
2023-06-24 00:13:12.964 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
435. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 00:13:12.965 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
435. select * from MEMBER where userId = 'p00139'
 {executed in 1 msec}
2023-06-24 00:13:12.968 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.MemberServiceImpl] - ROLE_ADMIN
2023-06-24 00:13:13.060 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.MemberServiceImpl] - pass:$2a$10$MNrQAPw.4k9j2y08eTmYEeI7oKPuaWbA97HHog.8PYep5HsRwhbae,$2a$10$yc7DJUoXvqvXWmdINuZUN.oBX.Qx6icqHnrCokg2QNlDNJEpb8mp.
2023-06-24 00:13:13.154 INFO  [http-nio-10010-exec-5] [c.p.d.configuration.SecurityConfig] - authentication:: p00139
2023-06-24 00:13:16.053 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.emp_no,a.emp_nm,nvl(b.route_nm,'-') as route_nm from    TBL_employeeInfo a left outer join TBL_DRIVERINFO b on a.company_no = b.company_no and a.emp_nm = b.emp_nm where   a.company_no = '100' and	    b.sp_gb = decode('ALL','ALL',b.sp_gb,'ALL') order by a.emp_nm
2023-06-24 00:13:16.054 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
435. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 00:13:16.087 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
435. select   a.emp_no,a.emp_nm,nvl(b.route_nm,'-') as route_nm from    TBL_employeeInfo a left outer join TBL_DRIVERINFO b on a.company_no = b.company_no and a.emp_nm = b.emp_nm where   a.company_no = '100' and	    b.sp_gb = decode('ALL','ALL',b.sp_gb,'ALL') order by a.emp_nm
 {executed in 33 msec}
2023-06-24 00:13:17.823 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@e79d3d0d
2023-06-24 00:13:17.824 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
435. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 00:13:17.827 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
435. SELECT  5 AS seq
		,  '5' AS a0 
		,	'현주소' AS a1, 		nvl(b.address,'') AS a1_value 
		,	'' AS a2, '' AS a2_value 
		,	'' AS a3, '' AS a3_value 
		,	'' AS a4, '' AS a4_value 
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='강근원' 
	union 
	SELECT  4 AS seq
		,  '4' AS a0 
		,	'이메일' AS a1, 		nvl(b.email,'')  AS a1_value 
		,	'호봉' AS a2, 		nvl(b.hobong,'') AS a2_value 
		,	'구분' AS a3, 		a.JOB_KIND AS a3_value 
		,	'급여계산' AS a4, 		'' AS a4_value 
		,	'국민연금취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='강근원' 
	union 
	SELECT  3 AS seq
		,  '3' AS a0 
		,	'휴대폰' AS a1, 		a.PHONE_NO  AS a1_value 
		,	'정규직구분' AS a2, 	nvl(b.enter_gb,'')  AS a2_value 
		,	'부서' AS a3, 		a.TEAM_NM  AS a3_value  
		,	'운전면허번호' AS a4, 	nvl(b.dirver_regno,'')	  AS a4_value  
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='강근원' 
	union 
	SELECT  2 AS seq
		,  '2' AS a0 
		,	'생년월일' AS a1, 		nvl(b.BIRTH_YMD,'') AS a1_value  
		,	'근속일자' AS a2, 		nvl(to_char(datediff(DAY,'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'직종' AS a3, 		a.JOB_TYPE AS a3_value  
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'건강보험취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='강근원' 
	union 
	SELECT  1 AS seq
		,	'1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'고정/SP구분' AS a3, 	nvl(b.sp_gb,'') AS a3_value 
		,	'가입조합' AS a4, 		nvl(b.work_group,'') AS a4_value 
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='강근원' 
	union 
	SELECT  0 AS seq
		,	a.emp_nm AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-') AS a2_value 
		,	'노선' AS a3, 		nvl(b.route_nm,'')  AS a3_value 
		,	'성별' AS a4, 		a.sex AS a4_value 
		,	'고용보험취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='강근원'
	order by 1
 {executed in 1 msec}
2023-06-24 00:13:17.851 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@aeacbabd
2023-06-24 00:13:17.851 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO_empNm} 
2023-06-24 00:13:17.851 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '강근원' order by a.base_year desc,a.acc_time desc
2023-06-24 00:13:17.855 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
435. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '강근원' order by a.base_year desc,a.acc_time desc
 {executed in 2 msec}
2023-06-24 00:13:17.856 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
435. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '강근원' order by a.base_year desc,a.acc_time desc
 {executed in 0 msec}
2023-06-24 00:13:17.894 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
435. select * from TBL_FILE_INFO where company_no = '100' and file_gb = 'empImage' and file_id = '강근원'
 {executed in 1 msec}
2023-06-24 00:13:19.611 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@73cff08d
2023-06-24 00:13:19.611 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - filterType={getDrivingRecord_year} 
2023-06-24 00:13:19.611 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : WITH wholeAvgInfo AS ( SELECT 	k.base_ym ,	round(avg(k.bms_km),2) AS wholeAvg_bms_km ,	round(avg(k.tot_min),2) AS wholeAvg_tot_min FROM ( SELECT	a.base_ym,a.WORK_DATE ,a.driver_id,	sum(a.BMS_KM) bms_km ,	sum(a.TOT_MIN) tot_min FROM	TBL_DRIVING_RECORD a where 	a.company_no = '100' and 	a.BASE_YM LIKE  '2023' || '%' GROUP BY	a.base_ym,a.WORK_DATE,a.driver_id ) k	GROUP BY k.base_ym ) SELECT 	k.base_ym , 	count(k.base_ym) as tot_day ,	round(sum(k.bms_km),2) AS bms_km , 	round(sum(k.tot_min),2) AS tot_min ,	round(avg(k.bms_km),2) AS avg_bms_km ,	round(avg(k.tot_min),2) AS avg_tot_min ,	m.wholeAvg_bms_km ,	m.wholeAvg_tot_min FROM ( SELECT	a.base_ym, a.WORK_DATE ,	sum(a.BMS_KM) bms_km ,	sum(a.TOT_MIN) tot_min FROM	TBL_DRIVING_RECORD a JOIN 	TBL_ISC_DRIVER_INFO b ON	a.company_no = b.COMPANY_NO  AND b.EMP_NM = '강근원'	AND b.DRIVER_ID = a.DRIVER_ID where 	a.company_no = '100' AND     a.BASE_YM LIKE  '2023' || '%' GROUP BY	a.base_ym,a.WORK_DATE ) k JOIN wholeAvgInfo m ON m.base_ym = k.base_ym GROUP BY k.base_ym
2023-06-24 00:13:19.612 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
435. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 00:13:19.753 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
435. WITH wholeAvgInfo AS ( SELECT 	k.base_ym ,	round(avg(k.bms_km),2) AS wholeAvg_bms_km ,	round(avg(k.tot_min),2) AS wholeAvg_tot_min FROM ( SELECT	a.base_ym,a.WORK_DATE ,a.driver_id,	sum(a.BMS_KM) bms_km ,	sum(a.TOT_MIN) tot_min FROM	TBL_DRIVING_RECORD a where 	a.company_no = '100' and 	a.BASE_YM LIKE  '2023' || '%' GROUP BY	a.base_ym,a.WORK_DATE,a.driver_id ) k	GROUP BY k.base_ym ) SELECT 	k.base_ym , 	count(k.base_ym) as tot_day ,	round(sum(k.bms_km),2) AS bms_km , 	round(sum(k.tot_min),2) AS tot_min ,	round(avg(k.bms_km),2) AS avg_bms_km ,	round(avg(k.tot_min),2) AS avg_tot_min ,	m.wholeAvg_bms_km ,	m.wholeAvg_tot_min FROM ( SELECT	a.base_ym, a.WORK_DATE ,	sum(a.BMS_KM) bms_km ,	sum(a.TOT_MIN) tot_min FROM	TBL_DRIVING_RECORD a JOIN 	TBL_ISC_DRIVER_INFO b ON	a.company_no = b.COMPANY_NO  AND b.EMP_NM = '강근원'	AND b.DRIVER_ID = a.DRIVER_ID where 	a.company_no = '100' AND     a.BASE_YM LIKE  '2023' || '%' GROUP BY	a.base_ym,a.WORK_DATE ) k JOIN wholeAvgInfo m ON m.base_ym = k.base_ym GROUP BY k.base_ym
 {executed in 141 msec}
2023-06-24 00:13:19.870 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
435. WITH wholeAvgInfo AS ( SELECT 	k.base_ym ,	round(avg(k.bms_km),2) AS wholeAvg_bms_km ,	round(avg(k.tot_min),2) AS wholeAvg_tot_min FROM ( SELECT	a.base_ym,a.WORK_DATE ,a.driver_id,	sum(a.BMS_KM) bms_km ,	sum(a.TOT_MIN) tot_min FROM	TBL_DRIVING_RECORD a where 	a.company_no = '100' and 	a.BASE_YM LIKE  '2023' || '%' GROUP BY	a.base_ym,a.WORK_DATE,a.driver_id ) k	GROUP BY k.base_ym ) SELECT 	k.base_ym , 	count(k.base_ym) as tot_day ,	round(sum(k.bms_km),2) AS bms_km , 	round(sum(k.tot_min),2) AS tot_min ,	round(avg(k.bms_km),2) AS avg_bms_km ,	round(avg(k.tot_min),2) AS avg_tot_min ,	m.wholeAvg_bms_km ,	m.wholeAvg_tot_min FROM ( SELECT	a.base_ym, a.WORK_DATE ,	sum(a.BMS_KM) bms_km ,	sum(a.TOT_MIN) tot_min FROM	TBL_DRIVING_RECORD a JOIN 	TBL_ISC_DRIVER_INFO b ON	a.company_no = b.COMPANY_NO  AND b.EMP_NM = '강근원'	AND b.DRIVER_ID = a.DRIVER_ID where 	a.company_no = '100' AND     a.BASE_YM LIKE  '2023' || '%' GROUP BY	a.base_ym,a.WORK_DATE ) k JOIN wholeAvgInfo m ON m.base_ym = k.base_ym GROUP BY k.base_ym
 {executed in 116 msec}
2023-06-24 00:13:19.903 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@fcaa69a3
2023-06-24 00:13:19.903 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - filterType={getDrivingRecord_month} 
2023-06-24 00:13:19.903 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT 	WORK_DATE ,	count(WORK_DATE) AS tot_cnt ,	round(sum(a.BMS_KM),2) bms_km ,	sum(a.TOT_MIN) tot_min FROM 	TBL_DRIVING_RECORD a JOIN TBL_ISC_DRIVER_INFO b ON b.EMP_NM  = '강근원' AND b.DRIVER_ID = a.DRIVER_ID where 	a.company_no = '100' AND   	a.BASE_YM = '2023-03' GROUP BY WORK_DATE
2023-06-24 00:13:20.348 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
435. SELECT 	WORK_DATE ,	count(WORK_DATE) AS tot_cnt ,	round(sum(a.BMS_KM),2) bms_km ,	sum(a.TOT_MIN) tot_min FROM 	TBL_DRIVING_RECORD a JOIN TBL_ISC_DRIVER_INFO b ON b.EMP_NM  = '강근원' AND b.DRIVER_ID = a.DRIVER_ID where 	a.company_no = '100' AND   	a.BASE_YM = '2023-03' GROUP BY WORK_DATE
 {executed in 445 msec}
2023-06-24 00:13:20.349 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
435. SELECT 	WORK_DATE ,	count(WORK_DATE) AS tot_cnt ,	round(sum(a.BMS_KM),2) bms_km ,	sum(a.TOT_MIN) tot_min FROM 	TBL_DRIVING_RECORD a JOIN TBL_ISC_DRIVER_INFO b ON b.EMP_NM  = '강근원' AND b.DRIVER_ID = a.DRIVER_ID where 	a.company_no = '100' AND   	a.BASE_YM = '2023-03' GROUP BY WORK_DATE
 {executed in 1 msec}
2023-06-24 00:13:20.379 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@b8fc5f9
2023-06-24 00:13:20.379 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - filterType={getDrivingRecord_day} 
2023-06-24 00:13:20.379 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT 	ROWNUM as no, a.CAR_REGNO ,substring(a.START_TIME,12) as START_TIME,substring(a.END_TIME,12) as END_TIME ,round(a.BMS_KM,2) as bms_km ,a.TOT_MIN FROM 	TBL_DRIVING_RECORD a JOIN TBL_ISC_DRIVER_INFO b ON b.EMP_NM  = '강근원' AND b.DRIVER_ID = a.DRIVER_ID where 	a.company_no = '100' AND   	a.WORK_DATE = '2023-03-01' ORDER BY a.START_TIME
2023-06-24 00:13:20.402 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
435. SELECT 	ROWNUM as no, a.CAR_REGNO ,substring(a.START_TIME,12) as START_TIME,substring(a.END_TIME,12) as END_TIME ,round(a.BMS_KM,2) as bms_km ,a.TOT_MIN FROM 	TBL_DRIVING_RECORD a JOIN TBL_ISC_DRIVER_INFO b ON b.EMP_NM  = '강근원' AND b.DRIVER_ID = a.DRIVER_ID where 	a.company_no = '100' AND   	a.WORK_DATE = '2023-03-01' ORDER BY a.START_TIME
 {executed in 23 msec}
2023-06-24 00:13:20.424 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
435. SELECT 	ROWNUM as no, a.CAR_REGNO ,substring(a.START_TIME,12) as START_TIME,substring(a.END_TIME,12) as END_TIME ,round(a.BMS_KM,2) as bms_km ,a.TOT_MIN FROM 	TBL_DRIVING_RECORD a JOIN TBL_ISC_DRIVER_INFO b ON b.EMP_NM  = '강근원' AND b.DRIVER_ID = a.DRIVER_ID where 	a.company_no = '100' AND   	a.WORK_DATE = '2023-03-01' ORDER BY a.START_TIME
 {executed in 21 msec}
2023-06-24 00:16:48.932 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
435. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 00:16:48.933 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
435. SELECT ROUTE_NM  FROM TBL_ROUTEINFO ORDER BY 1
 {executed in 0 msec}
2023-06-24 00:16:52.457 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@7274ecc
2023-06-24 00:16:52.458 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
435. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 00:16:52.475 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
435. SELECT /* select_getDrivingOrder : 승무지시 화면용 */ k.route_nm,k.seq,k.CAR_REGNO
		,	listagg(k.emp_nm,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as empNm
		,	listagg(k.PHONE_NO,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as PHONE
		,	listagg(k.value,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as spGb
		,	' ' as empNm_am
		,	' ' as empNm_pm
		,	' ' as phone_am
		,	' ' as phone_pm
		,	' ' as spgb_am
		,	' ' as spgb_pm
	FROM (
	SELECT	a.route_nm,
			a.CAR_REGNO ,
			a.EMP_NM ,
			b.PHONE_NO ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,
			CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a JOIN TBL_EMPLOYEEINFO b ON a.company_no = b.COMPANY_NO AND a.emp_nm = b.EMP_NM 
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT a.route_nm,
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			nvl(c.PHONE_NO,'-') AS phone_no ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		
			CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON
			a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
			AND b.d2 <> ''
			AND a.d2 LIKE b.d2 || '%'
		LEFT OUTER JOIN TBL_EMPLOYEEINFO c ON b.company_no = c.COMPANY_NO AND b.emp_nm = c.EMP_NM
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%'	OR a.d2 LIKE '%@%')
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.route_nm,k.seq,k.CAR_REGNO
 {executed in 16 msec}
2023-06-24 00:23:22.669 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
435. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 00:23:22.670 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
435. SELECT ROUTE_NM  FROM TBL_ROUTEINFO ORDER BY 1
 {executed in 0 msec}
2023-06-24 00:23:25.604 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@7274ecc
2023-06-24 00:23:25.605 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
435. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 00:23:25.617 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
435. SELECT /* select_getDrivingOrder : 승무지시 화면용 */ k.route_nm,k.seq,k.CAR_REGNO
		,	listagg(k.emp_nm,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as empNm
		,	listagg(k.PHONE_NO,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as PHONE
		,	listagg(k.value,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as spGb
		,	' ' as empNm_am
		,	' ' as empNm_pm
		,	' ' as phone_am
		,	' ' as phone_pm
		,	' ' as spgb_am
		,	' ' as spgb_pm
	FROM (
	SELECT	a.route_nm,
			a.CAR_REGNO ,
			a.EMP_NM ,
			b.PHONE_NO ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,
			CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a JOIN TBL_EMPLOYEEINFO b ON a.company_no = b.COMPANY_NO AND a.emp_nm = b.EMP_NM 
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT a.route_nm,
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			nvl(c.PHONE_NO,'-') AS phone_no ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		
			CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON
			a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
			AND b.d2 <> ''
			AND a.d2 LIKE b.d2 || '%'
		LEFT OUTER JOIN TBL_EMPLOYEEINFO c ON b.company_no = c.COMPANY_NO AND b.emp_nm = c.EMP_NM
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%'	OR a.d2 LIKE '%@%')
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.route_nm,k.seq,k.CAR_REGNO
 {executed in 11 msec}
2023-06-24 00:27:41.886 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
435. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 00:27:41.887 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
435. SELECT ROUTE_NM  FROM TBL_ROUTEINFO ORDER BY 1
 {executed in 0 msec}
2023-06-24 00:27:45.476 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@7274ecc
2023-06-24 00:27:45.477 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
435. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 00:27:45.491 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
435. SELECT /* select_getDrivingOrder : 승무지시 화면용 */ k.route_nm,k.seq,k.CAR_REGNO
		,	listagg(k.emp_nm,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as empNm
		,	listagg(k.PHONE_NO,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as PHONE
		,	listagg(k.value,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as spGb
		,	' ' as empNm_am
		,	' ' as empNm_pm
		,	' ' as phone_am
		,	' ' as phone_pm
		,	' ' as spgb_am
		,	' ' as spgb_pm
	FROM (
	SELECT	a.route_nm,
			a.CAR_REGNO ,
			a.EMP_NM ,
			b.PHONE_NO ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,
			CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a JOIN TBL_EMPLOYEEINFO b ON a.company_no = b.COMPANY_NO AND a.emp_nm = b.EMP_NM 
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT a.route_nm,
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			nvl(c.PHONE_NO,'-') AS phone_no ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		
			CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON
			a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
			AND b.d2 <> ''
			AND a.d2 LIKE b.d2 || '%'
		LEFT OUTER JOIN TBL_EMPLOYEEINFO c ON b.company_no = c.COMPANY_NO AND b.emp_nm = c.EMP_NM
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%'	OR a.d2 LIKE '%@%')
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.route_nm,k.seq,k.CAR_REGNO
 {executed in 12 msec}
2023-06-24 00:28:16.998 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
435. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 00:28:16.998 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
435. SELECT ROUTE_NM  FROM TBL_ROUTEINFO ORDER BY 1
 {executed in 0 msec}
2023-06-24 00:28:19.837 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@7274ecc
2023-06-24 00:28:19.838 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
435. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 00:28:19.850 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
435. SELECT /* select_getDrivingOrder : 승무지시 화면용 */ k.route_nm,k.seq,k.CAR_REGNO
		,	listagg(k.emp_nm,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as empNm
		,	listagg(k.PHONE_NO,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as PHONE
		,	listagg(k.value,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as spGb
		,	' ' as empNm_am
		,	' ' as empNm_pm
		,	' ' as phone_am
		,	' ' as phone_pm
		,	' ' as spgb_am
		,	' ' as spgb_pm
	FROM (
	SELECT	a.route_nm,
			a.CAR_REGNO ,
			a.EMP_NM ,
			b.PHONE_NO ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,
			CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a JOIN TBL_EMPLOYEEINFO b ON a.company_no = b.COMPANY_NO AND a.emp_nm = b.EMP_NM 
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT a.route_nm,
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			nvl(c.PHONE_NO,'-') AS phone_no ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		
			CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON
			a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
			AND b.d2 <> ''
			AND a.d2 LIKE b.d2 || '%'
		LEFT OUTER JOIN TBL_EMPLOYEEINFO c ON b.company_no = c.COMPANY_NO AND b.emp_nm = c.EMP_NM
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%'	OR a.d2 LIKE '%@%')
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.route_nm,k.seq,k.CAR_REGNO
 {executed in 11 msec}
2023-06-24 00:28:25.924 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
435. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 00:28:25.927 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
435. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,'(' || a.route_nm || ')' || a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 1 msec}
2023-06-24 00:28:25.930 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
435. SELECT /* select_getDailyArrangeInfo : excel 승무지시서 rawdata 용 */
			SUBSTRING('2023-05-02',1,4) || '년' || SUBSTRING('2023-05-02',6,2) || '월' || SUBSTRING('2023-05-02',9,2) ||'일 '
					|| decode(DAY_OF_WEEK('2023-05-02') ,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') || '요일' as baseYmd
		,	RIGHT(k.car_regno,4) as car_regno
		,	max(decode(k.ampm,'a',k.emp_nm,'') ) AS am_nm
		,	max(decode(k.ampm,'p',k.emp_nm)) AS pm_nm
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 00:28:25.934 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
435. SELECT /* select_getDailyArrangeInfo : excel 승무지시서 rawdata 용 */
			SUBSTRING('2023-05-02',1,4) || '년' || SUBSTRING('2023-05-02',6,2) || '월' || SUBSTRING('2023-05-02',9,2) ||'일 '
					|| decode(DAY_OF_WEEK('2023-05-02') ,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') || '요일' as baseYmd
		,	RIGHT(k.car_regno,4) as car_regno
		,	max(decode(k.ampm,'a',k.emp_nm,'') ) AS am_nm
		,	max(decode(k.ampm,'p',k.emp_nm)) AS pm_nm
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 00:28:27.560 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
435. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 00:28:27.563 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
435. SELECT /* select_getDailyArrangeInfo : excel 승무지시서 rawdata 용 */
			SUBSTRING('2023-05-02',1,4) || '년' || SUBSTRING('2023-05-02',6,2) || '월' || SUBSTRING('2023-05-02',9,2) ||'일 '
					|| decode(DAY_OF_WEEK('2023-05-02') ,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') || '요일' as baseYmd
		,	RIGHT(k.car_regno,4) as car_regno
		,	max(decode(k.ampm,'a',k.emp_nm,'') ) AS am_nm
		,	max(decode(k.ampm,'p',k.emp_nm)) AS pm_nm
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-24 00:28:27.759 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
435. SELECT /* select_getDailyArrangeInfo : excel 승무지시서 rawdata 용 */
			SUBSTRING('2023-05-02',1,4) || '년' || SUBSTRING('2023-05-02',6,2) || '월' || SUBSTRING('2023-05-02',9,2) ||'일 '
					|| decode(DAY_OF_WEEK('2023-05-02') ,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') || '요일' as baseYmd
		,	RIGHT(k.car_regno,4) as car_regno
		,	max(decode(k.ampm,'a',k.emp_nm,'') ) AS am_nm
		,	max(decode(k.ampm,'p',k.emp_nm)) AS pm_nm
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 00:28:27.914 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
435. SELECT /* select_getDailyArrangeInfo : excel 승무지시서 rawdata 용 */
			SUBSTRING('2023-05-02',1,4) || '년' || SUBSTRING('2023-05-02',6,2) || '월' || SUBSTRING('2023-05-02',9,2) ||'일 '
					|| decode(DAY_OF_WEEK('2023-05-02') ,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') || '요일' as baseYmd
		,	RIGHT(k.car_regno,4) as car_regno
		,	max(decode(k.ampm,'a',k.emp_nm,'') ) AS am_nm
		,	max(decode(k.ampm,'p',k.emp_nm)) AS pm_nm
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 00:28:28.055 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
435. SELECT /* select_getDailyArrangeInfo : excel 승무지시서 rawdata 용 */
			SUBSTRING('2023-05-02',1,4) || '년' || SUBSTRING('2023-05-02',6,2) || '월' || SUBSTRING('2023-05-02',9,2) ||'일 '
					|| decode(DAY_OF_WEEK('2023-05-02') ,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') || '요일' as baseYmd
		,	RIGHT(k.car_regno,4) as car_regno
		,	max(decode(k.ampm,'a',k.emp_nm,'') ) AS am_nm
		,	max(decode(k.ampm,'p',k.emp_nm)) AS pm_nm
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 0 msec}
2023-06-24 00:28:44.173 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
435. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 00:28:44.174 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
435. SELECT ROUTE_NM  FROM TBL_ROUTEINFO ORDER BY 1
 {executed in 0 msec}
2023-06-24 00:28:47.585 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@7274ecc
2023-06-24 00:28:47.586 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
435. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 00:28:47.597 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
435. SELECT /* select_getDrivingOrder : 승무지시 화면용 */ k.route_nm,k.seq,k.CAR_REGNO
		,	listagg(k.emp_nm,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as empNm
		,	listagg(k.PHONE_NO,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as PHONE
		,	listagg(k.value,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as spGb
		,	' ' as empNm_am
		,	' ' as empNm_pm
		,	' ' as phone_am
		,	' ' as phone_pm
		,	' ' as spgb_am
		,	' ' as spgb_pm
	FROM (
	SELECT	a.route_nm,
			a.CAR_REGNO ,
			a.EMP_NM ,
			b.PHONE_NO ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,
			CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a JOIN TBL_EMPLOYEEINFO b ON a.company_no = b.COMPANY_NO AND a.emp_nm = b.EMP_NM 
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT a.route_nm,
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			nvl(c.PHONE_NO,'-') AS phone_no ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		
			CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON
			a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
			AND b.d2 <> ''
			AND a.d2 LIKE b.d2 || '%'
		LEFT OUTER JOIN TBL_EMPLOYEEINFO c ON b.company_no = c.COMPANY_NO AND b.emp_nm = c.EMP_NM
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%'	OR a.d2 LIKE '%@%')
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.route_nm,k.seq,k.CAR_REGNO
 {executed in 10 msec}
2023-06-24 00:28:52.526 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
2023-06-24 00:28:52.527 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
435. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 00:28:52.528 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
435. select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
 {executed in 1 msec}
2023-06-24 00:30:47.433 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
2023-06-24 00:30:47.434 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
445. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 00:30:47.435 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
445. select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
 {executed in 1 msec}
2023-06-24 00:35:39.627 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
2023-06-24 00:35:39.628 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
445. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 00:35:39.630 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
445. select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
 {executed in 0 msec}
2023-06-24 00:36:01.250 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
2023-06-24 00:36:01.251 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
445. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 00:36:01.252 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
445. select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
 {executed in 1 msec}
2023-06-24 00:37:08.859 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
2023-06-24 00:37:08.860 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
445. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 00:37:08.862 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
445. select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
 {executed in 1 msec}
2023-06-24 00:39:30.622 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
2023-06-24 00:39:30.623 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
445. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 00:39:30.625 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
445. select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
 {executed in 1 msec}
2023-06-24 00:43:33.455 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
445. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 00:43:33.456 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
445. SELECT ROUTE_NM  FROM TBL_ROUTEINFO ORDER BY 1
 {executed in 1 msec}
2023-06-24 00:43:36.186 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@7274ecc
2023-06-24 00:43:36.187 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
445. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 00:43:36.203 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
445. SELECT /* select_getDrivingOrder : 승무지시 화면용 */ k.route_nm,k.seq,k.CAR_REGNO
		,	listagg(k.emp_nm,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as empNm
		,	listagg(k.PHONE_NO,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as PHONE
		,	listagg(k.value,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as spGb
		,	' ' as empNm_am
		,	' ' as empNm_pm
		,	' ' as phone_am
		,	' ' as phone_pm
		,	' ' as spgb_am
		,	' ' as spgb_pm
	FROM (
	SELECT	a.route_nm,
			a.CAR_REGNO ,
			a.EMP_NM ,
			b.PHONE_NO ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,
			CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a JOIN TBL_EMPLOYEEINFO b ON a.company_no = b.COMPANY_NO AND a.emp_nm = b.EMP_NM 
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT a.route_nm,
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			nvl(c.PHONE_NO,'-') AS phone_no ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		
			CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON
			a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
			AND b.d2 <> ''
			AND a.d2 LIKE b.d2 || '%'
		LEFT OUTER JOIN TBL_EMPLOYEEINFO c ON b.company_no = c.COMPANY_NO AND b.emp_nm = c.EMP_NM
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%'	OR a.d2 LIKE '%@%')
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.route_nm,k.seq,k.CAR_REGNO
 {executed in 13 msec}
2023-06-24 00:43:49.006 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
2023-06-24 00:43:49.007 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
445. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 00:43:49.008 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
445. select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
 {executed in 1 msec}
2023-06-24 00:48:36.070 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
445. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 00:48:36.071 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
445. SELECT ROUTE_NM  FROM TBL_ROUTEINFO ORDER BY 1
 {executed in 1 msec}
2023-06-24 00:49:06.884 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
2023-06-24 00:49:06.885 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
445. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 00:49:06.886 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
445. select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
 {executed in 1 msec}
2023-06-24 00:51:41.618 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
455. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 00:51:41.619 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
455. SELECT ROUTE_NM  FROM TBL_ROUTEINFO ORDER BY 1
 {executed in 0 msec}
2023-06-24 00:51:45.005 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
455. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 00:51:45.006 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
455. SELECT ROUTE_NM  FROM TBL_ROUTEINFO ORDER BY 1
 {executed in 1 msec}
2023-06-24 00:52:09.544 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
455. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 00:52:09.545 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
455. SELECT ROUTE_NM  FROM TBL_ROUTEINFO ORDER BY 1
 {executed in 0 msec}
2023-06-24 00:54:41.739 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
455. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 00:54:41.740 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
455. SELECT ROUTE_NM  FROM TBL_ROUTEINFO ORDER BY 1
 {executed in 0 msec}
2023-06-24 00:54:44.170 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@7274ecc
2023-06-24 00:54:44.171 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
455. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 00:54:44.183 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
455. SELECT /* select_getDrivingOrder : 승무지시 화면용 */ k.route_nm,k.seq,k.CAR_REGNO
		,	listagg(k.emp_nm,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as empNm
		,	listagg(k.PHONE_NO,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as PHONE
		,	listagg(k.value,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as spGb
		,	' ' as empNm_am
		,	' ' as empNm_pm
		,	' ' as phone_am
		,	' ' as phone_pm
		,	' ' as spgb_am
		,	' ' as spgb_pm
	FROM (
	SELECT	a.route_nm,
			a.CAR_REGNO ,
			a.EMP_NM ,
			b.PHONE_NO ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,
			CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a JOIN TBL_EMPLOYEEINFO b ON a.company_no = b.COMPANY_NO AND a.emp_nm = b.EMP_NM 
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT a.route_nm,
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			nvl(c.PHONE_NO,'-') AS phone_no ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		
			CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON
			a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
			AND b.d2 <> ''
			AND a.d2 LIKE b.d2 || '%'
		LEFT OUTER JOIN TBL_EMPLOYEEINFO c ON b.company_no = c.COMPANY_NO AND b.emp_nm = c.EMP_NM
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%'	OR a.d2 LIKE '%@%')
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.route_nm,k.seq,k.CAR_REGNO
 {executed in 11 msec}
2023-06-24 00:58:32.337 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
455. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 00:58:32.338 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
455. SELECT ROUTE_NM  FROM TBL_ROUTEINFO ORDER BY 1
 {executed in 1 msec}
2023-06-24 00:58:37.562 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
455. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 00:58:37.563 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
455. SELECT ROUTE_NM  FROM TBL_ROUTEINFO ORDER BY 1
 {executed in 1 msec}
2023-06-24 00:58:40.418 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
2023-06-24 00:58:40.418 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
455. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 00:58:40.419 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
455. select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
 {executed in 1 msec}
2023-06-24 00:59:44.036 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
2023-06-24 00:59:44.036 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
455. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 00:59:44.037 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
455. select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
 {executed in 0 msec}
2023-06-24 01:00:23.285 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
2023-06-24 01:00:23.286 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
455. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 01:00:23.287 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
455. select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
 {executed in 1 msec}
2023-06-24 01:02:31.040 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
2023-06-24 01:02:31.041 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
455. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 01:02:31.042 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
455. select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
 {executed in 1 msec}
2023-06-24 01:02:49.772 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
455. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 01:02:49.773 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
455. SELECT ROUTE_NM  FROM TBL_ROUTEINFO ORDER BY 1
 {executed in 0 msec}
2023-06-24 01:02:53.923 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@7274ecc
2023-06-24 01:02:53.924 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
455. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 01:02:53.941 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
455. SELECT /* select_getDrivingOrder : 승무지시 화면용 */ k.route_nm,k.seq,k.CAR_REGNO
		,	listagg(k.emp_nm,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as empNm
		,	listagg(k.PHONE_NO,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as PHONE
		,	listagg(k.value,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as spGb
		,	' ' as empNm_am
		,	' ' as empNm_pm
		,	' ' as phone_am
		,	' ' as phone_pm
		,	' ' as spgb_am
		,	' ' as spgb_pm
	FROM (
	SELECT	a.route_nm,
			a.CAR_REGNO ,
			a.EMP_NM ,
			b.PHONE_NO ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,
			CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a JOIN TBL_EMPLOYEEINFO b ON a.company_no = b.COMPANY_NO AND a.emp_nm = b.EMP_NM 
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT a.route_nm,
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			nvl(c.PHONE_NO,'-') AS phone_no ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		
			CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON
			a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
			AND b.d2 <> ''
			AND a.d2 LIKE b.d2 || '%'
		LEFT OUTER JOIN TBL_EMPLOYEEINFO c ON b.company_no = c.COMPANY_NO AND b.emp_nm = c.EMP_NM
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%'	OR a.d2 LIKE '%@%')
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.route_nm,k.seq,k.CAR_REGNO
 {executed in 16 msec}
2023-06-24 01:02:55.968 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
2023-06-24 01:02:55.969 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
455. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 01:02:55.970 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
455. select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
 {executed in 0 msec}
2023-06-24 01:04:26.499 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
455. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 01:04:26.500 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
455. SELECT ROUTE_NM  FROM TBL_ROUTEINFO ORDER BY 1
 {executed in 1 msec}
2023-06-24 01:04:31.213 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
2023-06-24 01:04:31.214 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
455. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 01:04:31.215 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
455. select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
 {executed in 0 msec}
2023-06-24 01:04:51.804 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
2023-06-24 01:04:51.805 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
455. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 01:04:51.806 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
455. select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
 {executed in 0 msec}
2023-06-24 01:05:09.054 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
2023-06-24 01:05:09.055 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
455. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 01:05:09.056 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
455. select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
 {executed in 1 msec}
2023-06-24 01:05:29.426 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
2023-06-24 01:05:29.426 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
455. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 01:05:29.427 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
455. select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
 {executed in 1 msec}
2023-06-24 01:06:38.472 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
455. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 01:06:38.473 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
455. SELECT ROUTE_NM  FROM TBL_ROUTEINFO ORDER BY 1
 {executed in 1 msec}
2023-06-24 01:06:59.803 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
2023-06-24 01:06:59.804 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
455. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 01:06:59.805 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
455. select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
 {executed in 0 msec}
2023-06-24 01:07:29.291 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
2023-06-24 01:07:29.292 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
455. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 01:07:29.294 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
455. select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
 {executed in 0 msec}
2023-06-24 01:13:15.645 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
2023-06-24 01:13:15.646 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
465. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 01:13:15.648 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
465. select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
 {executed in 0 msec}
2023-06-24 01:16:45.187 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
465. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 01:16:45.188 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
465. SELECT ROUTE_NM  FROM TBL_ROUTEINFO ORDER BY 1
 {executed in 1 msec}
2023-06-24 01:18:07.224 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
465. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 01:18:07.225 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
465. SELECT ROUTE_NM  FROM TBL_ROUTEINFO ORDER BY 1
 {executed in 0 msec}
2023-06-24 01:18:42.555 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
465. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 01:18:42.556 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
465. SELECT ROUTE_NM  FROM TBL_ROUTEINFO ORDER BY 1
 {executed in 0 msec}
2023-06-24 01:19:05.908 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
2023-06-24 01:19:05.909 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
465. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 01:19:05.910 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
465. select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
 {executed in 1 msec}
2023-06-24 01:19:20.759 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
2023-06-24 01:19:20.760 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
465. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 01:19:20.761 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
465. select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
 {executed in 0 msec}
2023-06-24 01:19:54.655 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
465. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 01:19:54.656 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
465. SELECT ROUTE_NM  FROM TBL_ROUTEINFO ORDER BY 1
 {executed in 0 msec}
2023-06-24 01:19:55.533 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
2023-06-24 01:19:55.534 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
465. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 01:19:55.535 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
465. select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
 {executed in 1 msec}
2023-06-24 01:20:38.049 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
465. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 01:20:38.050 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
465. SELECT ROUTE_NM  FROM TBL_ROUTEINFO ORDER BY 1
 {executed in 1 msec}
2023-06-24 01:20:42.196 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
2023-06-24 01:20:42.197 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
465. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 01:20:42.199 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
465. select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
 {executed in 1 msec}
2023-06-24 01:20:58.570 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
465. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 01:20:58.571 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
465. SELECT ROUTE_NM  FROM TBL_ROUTEINFO ORDER BY 1
 {executed in 0 msec}
2023-06-24 01:20:59.700 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
2023-06-24 01:20:59.701 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
465. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 01:20:59.703 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
465. select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
 {executed in 1 msec}
2023-06-24 01:22:54.621 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
465. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 01:22:54.622 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
465. SELECT ROUTE_NM  FROM TBL_ROUTEINFO ORDER BY 1
 {executed in 0 msec}
2023-06-24 01:22:56.222 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
2023-06-24 01:22:56.223 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
465. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 01:22:56.224 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
465. select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
 {executed in 0 msec}
2023-06-24 01:25:34.502 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
465. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 01:25:34.503 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
465. SELECT ROUTE_NM  FROM TBL_ROUTEINFO ORDER BY 1
 {executed in 1 msec}
2023-06-24 01:25:36.777 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
2023-06-24 01:25:36.778 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
465. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 01:25:36.779 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
465. select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
 {executed in 1 msec}
2023-06-24 01:25:58.357 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
465. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 01:25:58.357 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
465. SELECT ROUTE_NM  FROM TBL_ROUTEINFO ORDER BY 1
 {executed in 0 msec}
2023-06-24 01:25:59.651 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
2023-06-24 01:25:59.652 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
465. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 01:25:59.653 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
465. select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
 {executed in 1 msec}
2023-06-24 01:26:16.783 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
465. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 01:26:16.783 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
465. SELECT ROUTE_NM  FROM TBL_ROUTEINFO ORDER BY 1
 {executed in 0 msec}
2023-06-24 01:26:18.011 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
2023-06-24 01:26:18.012 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
465. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 01:26:18.013 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
465. select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
 {executed in 0 msec}
2023-06-24 01:30:33.266 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
475. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 01:30:33.269 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
475. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,'(' || a.route_nm || ')' || a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 1 msec}
2023-06-24 01:30:33.274 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
475. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 01:30:33.277 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
475. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 01:30:33.279 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
475. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 01:30:33.284 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
475. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 01:30:33.287 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
475. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-24 01:30:33.291 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
475. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 01:30:33.293 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
475. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d2 LIKE '%*%' or a.d2 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 0 msec}
2023-06-24 01:30:33.294 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
475. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d2 <> '')
		AND (a.d2 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 01:30:42.499 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
475. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 01:30:42.502 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
475. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,'(' || a.route_nm || ')' || a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 2 msec}
2023-06-24 01:30:42.505 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
475. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 0 msec}
2023-06-24 01:30:42.507 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
475. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 01:30:42.510 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
475. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 01:30:42.513 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
475. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 01:30:42.517 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
475. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 01:30:42.520 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
475. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 01:30:42.522 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
475. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d2 LIKE '%*%' or a.d2 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 01:30:42.523 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
475. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d2 <> '')
		AND (a.d2 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 01:30:49.338 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   'N' as bit, a.* from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' and		a.code = '휴가종류' order by a.route_nm
2023-06-24 01:30:49.339 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
475. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 01:30:49.339 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
476. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 01:30:49.340 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
475. select   'N' as bit, a.* from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' and		a.code = '휴가종류' order by a.route_nm
 {executed in 0 msec}
2023-06-24 01:30:49.340 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
476. SELECT ROUTE_NM  FROM TBL_ROUTEINFO ORDER BY 1
 {executed in 0 msec}
2023-06-24 01:30:57.666 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT 	DISTINCT INIT_SEQ  FROM 	TBL_MONTH_ARRANGE_BASIC a WHERE	a.COMPANY_NO = '100' AND 	a.BASE_YM = '2022-05' AND 	a.route_nm = '38번' AND 	a.INIT_SEQ > 0
2023-06-24 01:30:57.666 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - WITH carInfo AS ( SELECT '감차후 총 차량댓수' as CAR_REGNO,'' AS AMPM_GUBUN ,b.emp_nm,0 AS tot_work_date , b.D1    , b.D2    , b.D3    , b.D4    , b.D5    , b.D6    , b.D7    , b.D8    , b.D9    , b.D10 , b.D11    , b.D12    , b.D13    , b.D14    , b.D15    , b.D16    , b.D17    , b.D18    , b.D19    , b.D20 , b.D21    , b.D22    , b.D23    , b.D24    , b.D25    , b.D26    , b.D27    , b.D28    , b.D29    , b.D30 , b.D31 FROM 	TBL_MONTH_ARRANGE_BASIC b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2022-05' AND    b.DISPATCH_SEQ = 2  AND	b.CAR_REGNO  = '-' ), allocateInfo AS ( SELECT  decode(AMPM_GUBUN,'p','오전','오후') || ' 배정 건수' AS CAR_REGNO,ampm_gubun,'-' emp_nm,0 AS tot_work_date ,0 D1 ,0 D2 ,0 D3 ,0 D4 ,0 D5 ,0 D6 ,0 D7 ,0 D8 ,0 D9 ,0 D10 ,0 D11 ,0 D12 ,0 D13 ,0 D14 ,0 D15 ,0 D16 ,0 D17 ,0 D18 ,0 D19 ,0 D20 ,0 D21 ,0 D22 ,0 D23 ,0 D24 ,0 D25 ,0 D26 ,0 D27 ,0 D28 ,0 d29 ,0 d30 ,0 d31 FROM 	TBL_MONTH_ARRANGE_DETAIL b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2022-05' AND    b.DISPATCH_SEQ = 6  AND    b.PREV_DAILY_SEQ = 1 AND    b.AMPM_GUBUN IN ('a','p') ) SELECT * FROM carInfo union all SELECT '감차후 총 운행횟수' as CAR_REGNO,' ' AMPM_GUBUN ,b.emp_nm,0 AS tot_work_date , b.D1 *2   , b.D2 *2    , b.D3  *2   , b.D4 *2    , b.D5 *2    , b.D6 *2    , b.D7 *2    , b.D8 *2    , b.D9 *2    , b.D10 *2 , b.D11 *2    , b.D12 *2    , b.D13 *2    , b.D14 *2    , b.D15 *2    , b.D16 *2    , b.D17 *2    , b.D18 *2    , b.D19 *2    , b.D20 *2 , b.D21 *2    , b.D22 *2    , b.D23 *2    , b.D24 *2    , b.D25 *2    , b.D26 *2    , b.D27 *2    , b.D28 *2    , b.D29 *2    , b.D30 *2 , b.D31 *2 FROM 	carInfo b union all SELECT  * FROM 	allocateInfo b union all SELECT  decode(b.AMPM_GUBUN,'p','오전','오후') || ' 미배정 건수' AS CAR_REGNO,b.AMPM_GUBUN ,'-' emp_nm,0 AS tot_work_date ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  FROM 	allocateInfo b,carInfo a
2023-06-24 01:30:57.667 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
475. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 01:30:57.667 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
476. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 01:30:57.670 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
475. SELECT 	DISTINCT INIT_SEQ  FROM 	TBL_MONTH_ARRANGE_BASIC a WHERE	a.COMPANY_NO = '100' AND 	a.BASE_YM = '2022-05' AND 	a.route_nm = '38번' AND 	a.INIT_SEQ > 0
 {executed in 3 msec}
2023-06-24 01:30:57.674 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
476. WITH carInfo AS ( SELECT '감차후 총 차량댓수' as CAR_REGNO,'' AS AMPM_GUBUN ,b.emp_nm,0 AS tot_work_date , b.D1    , b.D2    , b.D3    , b.D4    , b.D5    , b.D6    , b.D7    , b.D8    , b.D9    , b.D10 , b.D11    , b.D12    , b.D13    , b.D14    , b.D15    , b.D16    , b.D17    , b.D18    , b.D19    , b.D20 , b.D21    , b.D22    , b.D23    , b.D24    , b.D25    , b.D26    , b.D27    , b.D28    , b.D29    , b.D30 , b.D31 FROM 	TBL_MONTH_ARRANGE_BASIC b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2022-05' AND    b.DISPATCH_SEQ = 2  AND	b.CAR_REGNO  = '-' ), allocateInfo AS ( SELECT  decode(AMPM_GUBUN,'p','오전','오후') || ' 배정 건수' AS CAR_REGNO,ampm_gubun,'-' emp_nm,0 AS tot_work_date ,0 D1 ,0 D2 ,0 D3 ,0 D4 ,0 D5 ,0 D6 ,0 D7 ,0 D8 ,0 D9 ,0 D10 ,0 D11 ,0 D12 ,0 D13 ,0 D14 ,0 D15 ,0 D16 ,0 D17 ,0 D18 ,0 D19 ,0 D20 ,0 D21 ,0 D22 ,0 D23 ,0 D24 ,0 D25 ,0 D26 ,0 D27 ,0 D28 ,0 d29 ,0 d30 ,0 d31 FROM 	TBL_MONTH_ARRANGE_DETAIL b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2022-05' AND    b.DISPATCH_SEQ = 6  AND    b.PREV_DAILY_SEQ = 1 AND    b.AMPM_GUBUN IN ('a','p') ) SELECT * FROM carInfo union all SELECT '감차후 총 운행횟수' as CAR_REGNO,' ' AMPM_GUBUN ,b.emp_nm,0 AS tot_work_date , b.D1 *2   , b.D2 *2    , b.D3  *2   , b.D4 *2    , b.D5 *2    , b.D6 *2    , b.D7 *2    , b.D8 *2    , b.D9 *2    , b.D10 *2 , b.D11 *2    , b.D12 *2    , b.D13 *2    , b.D14 *2    , b.D15 *2    , b.D16 *2    , b.D17 *2    , b.D18 *2    , b.D19 *2    , b.D20 *2 , b.D21 *2    , b.D22 *2    , b.D23 *2    , b.D24 *2    , b.D25 *2    , b.D26 *2    , b.D27 *2    , b.D28 *2    , b.D29 *2    , b.D30 *2 , b.D31 *2 FROM 	carInfo b union all SELECT  * FROM 	allocateInfo b union all SELECT  decode(b.AMPM_GUBUN,'p','오전','오후') || ' 미배정 건수' AS CAR_REGNO,b.AMPM_GUBUN ,'-' emp_nm,0 AS tot_work_date ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  FROM 	allocateInfo b,carInfo a
 {executed in 7 msec}
2023-06-24 01:30:57.674 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - SELECT '[38번] 2022-05월' as CAR_REGNO,b.emp_nm,0 AS tot_work_date , b.D1    , b.D2    , b.D3    , b.D4    , b.D5    , b.D6    , b.D7    , b.D8    , b.D9    , b.D10 , b.D11    , b.D12    , b.D13    , b.D14    , b.D15    , b.D16    , b.D17    , b.D18    , b.D19    , b.D20 , b.D21    , b.D22    , b.D23    , b.D24    , b.D25    , b.D26    , b.D27    , b.D28    , b.D29    , b.D30 , b.D31 ,'N' as bit FROM 	TBL_MONTH_ARRANGE_DETAIL b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2022-05' AND    b.DISPATCH_SEQ = 1
2023-06-24 01:30:57.675 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
476. SELECT '[38번] 2022-05월' as CAR_REGNO,b.emp_nm,0 AS tot_work_date , b.D1    , b.D2    , b.D3    , b.D4    , b.D5    , b.D6    , b.D7    , b.D8    , b.D9    , b.D10 , b.D11    , b.D12    , b.D13    , b.D14    , b.D15    , b.D16    , b.D17    , b.D18    , b.D19    , b.D20 , b.D21    , b.D22    , b.D23    , b.D24    , b.D25    , b.D26    , b.D27    , b.D28    , b.D29    , b.D30 , b.D31 ,'N' as bit FROM 	TBL_MONTH_ARRANGE_DETAIL b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2022-05' AND    b.DISPATCH_SEQ = 1
 {executed in 1 msec}
2023-06-24 01:30:57.675 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - SELECT b.CAR_REGNO,b.emp_nm , 0 AS tot_work_date ,b.D1  ,b.D2  ,b.D3  ,b.D4  ,b.D5  ,b.D6  ,b.D7  ,b.D8  ,b.D9  ,b.D10 ,b.D11 ,b.D12 ,b.D13 ,b.D14 ,b.D15 ,b.D16 ,b.D17 ,b.D18 ,b.D19 ,b.D20 ,b.D21 ,b.D22 ,b.D23 ,b.D24 ,b.D25 ,b.D26 ,b.D27 ,b.D28 ,b.D29 ,b.D30 ,b.D31 ,'N' AS bit FROM 	TBL_MONTH_ARRANGE_DETAIL b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2022-05' AND    b.DISPATCH_SEQ = 6 AND    b.CAR_REGNO not like 'SP%' order by b.dispatch_seq,b.CAR_REGNO ,b.ampm_gubun,b.prev_daily_seq
2023-06-24 01:30:57.676 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
476. SELECT b.CAR_REGNO,b.emp_nm , 0 AS tot_work_date ,b.D1  ,b.D2  ,b.D3  ,b.D4  ,b.D5  ,b.D6  ,b.D7  ,b.D8  ,b.D9  ,b.D10 ,b.D11 ,b.D12 ,b.D13 ,b.D14 ,b.D15 ,b.D16 ,b.D17 ,b.D18 ,b.D19 ,b.D20 ,b.D21 ,b.D22 ,b.D23 ,b.D24 ,b.D25 ,b.D26 ,b.D27 ,b.D28 ,b.D29 ,b.D30 ,b.D31 ,'N' AS bit FROM 	TBL_MONTH_ARRANGE_DETAIL b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2022-05' AND    b.DISPATCH_SEQ = 6 AND    b.CAR_REGNO not like 'SP%' order by b.dispatch_seq,b.CAR_REGNO ,b.ampm_gubun,b.prev_daily_seq
 {executed in 1 msec}
2023-06-24 01:30:57.677 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - WITH sp_maxinfo AS ( SELECT  b.CAR_REGNO,b.EMP_NM ,nvl(max(CASE WHEN nvl(b.D1 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D1   ELSE '#' || b.D1  end),' ') as D1 ,nvl(max(CASE WHEN nvl(b.D2 ,'') = '' THEN '' WHEN b.route_nm = '38번' tHEN b.D2   ELSE '#' || b.D2  end),' ') as D2 ,nvl(max(CASE WHEN nvl(b.D3 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D3   ELSE '#' || b.D3   end),' ') as D3 ,nvl(max(CASE WHEN nvl(b.D4 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D4   ELSE '#' || b.D4   end),' ') as D4 ,nvl(max(CASE WHEN nvl(b.D5 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D5   ELSE '#' || b.D5   end),' ') as D5 ,nvl(max(CASE WHEN nvl(b.D6 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D6   ELSE '#' || b.D6   end),' ') as D6 ,nvl(max(CASE WHEN nvl(b.D7 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D7   ELSE '#' || b.D7   end),' ') as D7 ,nvl(max(CASE WHEN nvl(b.D8 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D8   ELSE '#' || b.D8   end),' ') as D8 ,nvl(max(CASE WHEN nvl(b.D9 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D9   ELSE '#' || b.D9   end),' ') as D9 ,nvl(max(CASE WHEN nvl(b.D10,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D10  ELSE '#' || b.D10  end),' ') as D10 ,nvl(max(CASE WHEN nvl(b.D11,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D11  ELSE '#' || b.D11  end),' ') as D11 ,nvl(max(CASE WHEN nvl(b.D12,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D12  ELSE '#' || b.D12  end),' ') as D12 ,nvl(max(CASE WHEN nvl(b.D13,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D13  ELSE '#' || b.D13  end),' ') as D13 ,nvl(max(CASE WHEN nvl(b.D14,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D14  ELSE '#' || b.D14  end),' ') as D14 ,nvl(max(CASE WHEN nvl(b.D15,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D15  ELSE '#' || b.D15  end),' ') as D15 ,nvl(max(CASE WHEN nvl(b.D16,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D16  ELSE '#' || b.D16  end),' ') as D16 ,nvl(max(CASE WHEN nvl(b.D17,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D17  ELSE '#' || b.D17  end),' ') as D17 ,nvl(max(CASE WHEN nvl(b.D18,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D18  ELSE '#' || b.D18  end),' ') as D18 ,nvl(max(CASE WHEN nvl(b.D19,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D19  ELSE '#' || b.D19  end),' ') as D19 ,nvl(max(CASE WHEN nvl(b.D20,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D20  ELSE '#' || b.D20  end),' ') as D20 ,nvl(max(CASE WHEN nvl(b.D21,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D21  ELSE '#' || b.D21  end),' ') as D21 ,nvl(max(CASE WHEN nvl(b.D22,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D22  ELSE '#' || b.D22  end),' ') as D22 ,nvl(max(CASE WHEN nvl(b.D23,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D23  ELSE '#' || b.D23  end),' ') as D23 ,nvl(max(CASE WHEN nvl(b.D24,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D24  ELSE '#' || b.D24  end),' ') as D24 ,nvl(max(CASE WHEN nvl(b.D25,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D25  ELSE '#' || b.D25  end),' ') as D25 ,nvl(max(CASE WHEN nvl(b.D26,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D26  ELSE '#' || b.D26  end),' ') as D26 ,nvl(max(CASE WHEN nvl(b.D27,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D27  ELSE '#' || b.D27  end),' ') as D27 ,nvl(max(CASE WHEN nvl(b.D28,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D28  ELSE '#' || b.D28  end),' ') as D28 ,nvl(max(CASE WHEN nvl(b.D29,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D29  ELSE '#' || b.D29  end),' ') as D29 ,nvl(max(CASE WHEN nvl(b.D30,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D30  ELSE '#' || b.D30  end),' ') as D30 ,nvl(max(CASE WHEN nvl(b.D31,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D31  ELSE '#' || b.D31  end),' ') as D31 FROM 	TBL_MONTH_ARRANGE_DETAIL b where 	b.company_no = '100' AND b.BASE_YM = '2022-05' and b.DISPATCH_SEQ = 6 and b.init_seq = 0 AND b.CAR_REGNO LIKE  'SP%' GROUP BY b.CAR_REGNO,b.emp_nm ) SELECT b.*,'N' as bit ,	LENGTH (REGEXP_REPLACE(b.D1||b.D2||b.D3||b.D4||b.D5||b.D6||b.D7||b.D8||b.D9||b.D10||b.D11||b.D12||b.D13||b.D14||b.D15||b.D16||b.D17||b.D18||b.D19||b.D20||b.D21||b.D22||b.D23||b.D24||b.D25||b.D26||b.D27||b.D28||b.D29||b.D30||b.D31,'[0-9# ]','') ) AS tot_work_date FROM ( SELECT  a.prev_daily_seq,b.* FROM 	TBL_MONTH_ARRANGE_DETAIL a LEFT OUTER JOIN sp_maxinfo b ON	a.emp_nm = b.EMP_NM AND  a.car_regno = b.CAR_REGNO where 	a.company_no = '100' AND a.BASE_YM = '2022-05' and a.DISPATCH_SEQ = 6 and a.init_seq = 0 AND a.CAR_REGNO LIKE  'SP%' AND a.emp_nm = decode('','',a.emp_nm,'') AND a.route_nm = '38번' ) b ORDER BY b.prev_daily_seq
2023-06-24 01:30:57.698 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
476. WITH sp_maxinfo AS ( SELECT  b.CAR_REGNO,b.EMP_NM ,nvl(max(CASE WHEN nvl(b.D1 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D1   ELSE '#' || b.D1  end),' ') as D1 ,nvl(max(CASE WHEN nvl(b.D2 ,'') = '' THEN '' WHEN b.route_nm = '38번' tHEN b.D2   ELSE '#' || b.D2  end),' ') as D2 ,nvl(max(CASE WHEN nvl(b.D3 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D3   ELSE '#' || b.D3   end),' ') as D3 ,nvl(max(CASE WHEN nvl(b.D4 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D4   ELSE '#' || b.D4   end),' ') as D4 ,nvl(max(CASE WHEN nvl(b.D5 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D5   ELSE '#' || b.D5   end),' ') as D5 ,nvl(max(CASE WHEN nvl(b.D6 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D6   ELSE '#' || b.D6   end),' ') as D6 ,nvl(max(CASE WHEN nvl(b.D7 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D7   ELSE '#' || b.D7   end),' ') as D7 ,nvl(max(CASE WHEN nvl(b.D8 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D8   ELSE '#' || b.D8   end),' ') as D8 ,nvl(max(CASE WHEN nvl(b.D9 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D9   ELSE '#' || b.D9   end),' ') as D9 ,nvl(max(CASE WHEN nvl(b.D10,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D10  ELSE '#' || b.D10  end),' ') as D10 ,nvl(max(CASE WHEN nvl(b.D11,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D11  ELSE '#' || b.D11  end),' ') as D11 ,nvl(max(CASE WHEN nvl(b.D12,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D12  ELSE '#' || b.D12  end),' ') as D12 ,nvl(max(CASE WHEN nvl(b.D13,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D13  ELSE '#' || b.D13  end),' ') as D13 ,nvl(max(CASE WHEN nvl(b.D14,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D14  ELSE '#' || b.D14  end),' ') as D14 ,nvl(max(CASE WHEN nvl(b.D15,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D15  ELSE '#' || b.D15  end),' ') as D15 ,nvl(max(CASE WHEN nvl(b.D16,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D16  ELSE '#' || b.D16  end),' ') as D16 ,nvl(max(CASE WHEN nvl(b.D17,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D17  ELSE '#' || b.D17  end),' ') as D17 ,nvl(max(CASE WHEN nvl(b.D18,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D18  ELSE '#' || b.D18  end),' ') as D18 ,nvl(max(CASE WHEN nvl(b.D19,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D19  ELSE '#' || b.D19  end),' ') as D19 ,nvl(max(CASE WHEN nvl(b.D20,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D20  ELSE '#' || b.D20  end),' ') as D20 ,nvl(max(CASE WHEN nvl(b.D21,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D21  ELSE '#' || b.D21  end),' ') as D21 ,nvl(max(CASE WHEN nvl(b.D22,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D22  ELSE '#' || b.D22  end),' ') as D22 ,nvl(max(CASE WHEN nvl(b.D23,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D23  ELSE '#' || b.D23  end),' ') as D23 ,nvl(max(CASE WHEN nvl(b.D24,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D24  ELSE '#' || b.D24  end),' ') as D24 ,nvl(max(CASE WHEN nvl(b.D25,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D25  ELSE '#' || b.D25  end),' ') as D25 ,nvl(max(CASE WHEN nvl(b.D26,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D26  ELSE '#' || b.D26  end),' ') as D26 ,nvl(max(CASE WHEN nvl(b.D27,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D27  ELSE '#' || b.D27  end),' ') as D27 ,nvl(max(CASE WHEN nvl(b.D28,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D28  ELSE '#' || b.D28  end),' ') as D28 ,nvl(max(CASE WHEN nvl(b.D29,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D29  ELSE '#' || b.D29  end),' ') as D29 ,nvl(max(CASE WHEN nvl(b.D30,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D30  ELSE '#' || b.D30  end),' ') as D30 ,nvl(max(CASE WHEN nvl(b.D31,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D31  ELSE '#' || b.D31  end),' ') as D31 FROM 	TBL_MONTH_ARRANGE_DETAIL b where 	b.company_no = '100' AND b.BASE_YM = '2022-05' and b.DISPATCH_SEQ = 6 and b.init_seq = 0 AND b.CAR_REGNO LIKE  'SP%' GROUP BY b.CAR_REGNO,b.emp_nm ) SELECT b.*,'N' as bit ,	LENGTH (REGEXP_REPLACE(b.D1||b.D2||b.D3||b.D4||b.D5||b.D6||b.D7||b.D8||b.D9||b.D10||b.D11||b.D12||b.D13||b.D14||b.D15||b.D16||b.D17||b.D18||b.D19||b.D20||b.D21||b.D22||b.D23||b.D24||b.D25||b.D26||b.D27||b.D28||b.D29||b.D30||b.D31,'[0-9# ]','') ) AS tot_work_date FROM ( SELECT  a.prev_daily_seq,b.* FROM 	TBL_MONTH_ARRANGE_DETAIL a LEFT OUTER JOIN sp_maxinfo b ON	a.emp_nm = b.EMP_NM AND  a.car_regno = b.CAR_REGNO where 	a.company_no = '100' AND a.BASE_YM = '2022-05' and a.DISPATCH_SEQ = 6 and a.init_seq = 0 AND a.CAR_REGNO LIKE  'SP%' AND a.emp_nm = decode('','',a.emp_nm,'') AND a.route_nm = '38번' ) b ORDER BY b.prev_daily_seq
 {executed in 21 msec}
2023-06-24 01:31:04.554 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT 	DISTINCT INIT_SEQ  FROM 	TBL_MONTH_ARRANGE_BASIC a WHERE	a.COMPANY_NO = '100' AND 	a.BASE_YM = '2023-05' AND 	a.route_nm = '38번' AND 	a.INIT_SEQ > 0
2023-06-24 01:31:04.554 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - WITH carInfo AS ( SELECT '감차후 총 차량댓수' as CAR_REGNO,'' AS AMPM_GUBUN ,b.emp_nm,0 AS tot_work_date , b.D1    , b.D2    , b.D3    , b.D4    , b.D5    , b.D6    , b.D7    , b.D8    , b.D9    , b.D10 , b.D11    , b.D12    , b.D13    , b.D14    , b.D15    , b.D16    , b.D17    , b.D18    , b.D19    , b.D20 , b.D21    , b.D22    , b.D23    , b.D24    , b.D25    , b.D26    , b.D27    , b.D28    , b.D29    , b.D30 , b.D31 FROM 	TBL_MONTH_ARRANGE_BASIC b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-05' AND    b.DISPATCH_SEQ = 2  AND	b.CAR_REGNO  = '-' ), allocateInfo AS ( SELECT  decode(AMPM_GUBUN,'p','오전','오후') || ' 배정 건수' AS CAR_REGNO,ampm_gubun,'-' emp_nm,0 AS tot_work_date ,0 D1 ,0 D2 ,0 D3 ,0 D4 ,0 D5 ,0 D6 ,0 D7 ,0 D8 ,0 D9 ,0 D10 ,0 D11 ,0 D12 ,0 D13 ,0 D14 ,0 D15 ,0 D16 ,0 D17 ,0 D18 ,0 D19 ,0 D20 ,0 D21 ,0 D22 ,0 D23 ,0 D24 ,0 D25 ,0 D26 ,0 D27 ,0 D28 ,0 d29 ,0 d30 ,0 d31 FROM 	TBL_MONTH_ARRANGE_DETAIL b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-05' AND    b.DISPATCH_SEQ = 6  AND    b.PREV_DAILY_SEQ = 1 AND    b.AMPM_GUBUN IN ('a','p') ) SELECT * FROM carInfo union all SELECT '감차후 총 운행횟수' as CAR_REGNO,' ' AMPM_GUBUN ,b.emp_nm,0 AS tot_work_date , b.D1 *2   , b.D2 *2    , b.D3  *2   , b.D4 *2    , b.D5 *2    , b.D6 *2    , b.D7 *2    , b.D8 *2    , b.D9 *2    , b.D10 *2 , b.D11 *2    , b.D12 *2    , b.D13 *2    , b.D14 *2    , b.D15 *2    , b.D16 *2    , b.D17 *2    , b.D18 *2    , b.D19 *2    , b.D20 *2 , b.D21 *2    , b.D22 *2    , b.D23 *2    , b.D24 *2    , b.D25 *2    , b.D26 *2    , b.D27 *2    , b.D28 *2    , b.D29 *2    , b.D30 *2 , b.D31 *2 FROM 	carInfo b union all SELECT  * FROM 	allocateInfo b union all SELECT  decode(b.AMPM_GUBUN,'p','오전','오후') || ' 미배정 건수' AS CAR_REGNO,b.AMPM_GUBUN ,'-' emp_nm,0 AS tot_work_date ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  FROM 	allocateInfo b,carInfo a
2023-06-24 01:31:04.555 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
476. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 01:31:04.555 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
475. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 01:31:04.559 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
476. WITH carInfo AS ( SELECT '감차후 총 차량댓수' as CAR_REGNO,'' AS AMPM_GUBUN ,b.emp_nm,0 AS tot_work_date , b.D1    , b.D2    , b.D3    , b.D4    , b.D5    , b.D6    , b.D7    , b.D8    , b.D9    , b.D10 , b.D11    , b.D12    , b.D13    , b.D14    , b.D15    , b.D16    , b.D17    , b.D18    , b.D19    , b.D20 , b.D21    , b.D22    , b.D23    , b.D24    , b.D25    , b.D26    , b.D27    , b.D28    , b.D29    , b.D30 , b.D31 FROM 	TBL_MONTH_ARRANGE_BASIC b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-05' AND    b.DISPATCH_SEQ = 2  AND	b.CAR_REGNO  = '-' ), allocateInfo AS ( SELECT  decode(AMPM_GUBUN,'p','오전','오후') || ' 배정 건수' AS CAR_REGNO,ampm_gubun,'-' emp_nm,0 AS tot_work_date ,0 D1 ,0 D2 ,0 D3 ,0 D4 ,0 D5 ,0 D6 ,0 D7 ,0 D8 ,0 D9 ,0 D10 ,0 D11 ,0 D12 ,0 D13 ,0 D14 ,0 D15 ,0 D16 ,0 D17 ,0 D18 ,0 D19 ,0 D20 ,0 D21 ,0 D22 ,0 D23 ,0 D24 ,0 D25 ,0 D26 ,0 D27 ,0 D28 ,0 d29 ,0 d30 ,0 d31 FROM 	TBL_MONTH_ARRANGE_DETAIL b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-05' AND    b.DISPATCH_SEQ = 6  AND    b.PREV_DAILY_SEQ = 1 AND    b.AMPM_GUBUN IN ('a','p') ) SELECT * FROM carInfo union all SELECT '감차후 총 운행횟수' as CAR_REGNO,' ' AMPM_GUBUN ,b.emp_nm,0 AS tot_work_date , b.D1 *2   , b.D2 *2    , b.D3  *2   , b.D4 *2    , b.D5 *2    , b.D6 *2    , b.D7 *2    , b.D8 *2    , b.D9 *2    , b.D10 *2 , b.D11 *2    , b.D12 *2    , b.D13 *2    , b.D14 *2    , b.D15 *2    , b.D16 *2    , b.D17 *2    , b.D18 *2    , b.D19 *2    , b.D20 *2 , b.D21 *2    , b.D22 *2    , b.D23 *2    , b.D24 *2    , b.D25 *2    , b.D26 *2    , b.D27 *2    , b.D28 *2    , b.D29 *2    , b.D30 *2 , b.D31 *2 FROM 	carInfo b union all SELECT  * FROM 	allocateInfo b union all SELECT  decode(b.AMPM_GUBUN,'p','오전','오후') || ' 미배정 건수' AS CAR_REGNO,b.AMPM_GUBUN ,'-' emp_nm,0 AS tot_work_date ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  FROM 	allocateInfo b,carInfo a
 {executed in 4 msec}
2023-06-24 01:31:04.560 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
475. SELECT 	DISTINCT INIT_SEQ  FROM 	TBL_MONTH_ARRANGE_BASIC a WHERE	a.COMPANY_NO = '100' AND 	a.BASE_YM = '2023-05' AND 	a.route_nm = '38번' AND 	a.INIT_SEQ > 0
 {executed in 4 msec}
2023-06-24 01:31:04.560 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - SELECT '[38번] 2023-05월' as CAR_REGNO,b.emp_nm,0 AS tot_work_date , b.D1    , b.D2    , b.D3    , b.D4    , b.D5    , b.D6    , b.D7    , b.D8    , b.D9    , b.D10 , b.D11    , b.D12    , b.D13    , b.D14    , b.D15    , b.D16    , b.D17    , b.D18    , b.D19    , b.D20 , b.D21    , b.D22    , b.D23    , b.D24    , b.D25    , b.D26    , b.D27    , b.D28    , b.D29    , b.D30 , b.D31 ,'N' as bit FROM 	TBL_MONTH_ARRANGE_DETAIL b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-05' AND    b.DISPATCH_SEQ = 1
2023-06-24 01:31:04.560 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
476. SELECT '[38번] 2023-05월' as CAR_REGNO,b.emp_nm,0 AS tot_work_date , b.D1    , b.D2    , b.D3    , b.D4    , b.D5    , b.D6    , b.D7    , b.D8    , b.D9    , b.D10 , b.D11    , b.D12    , b.D13    , b.D14    , b.D15    , b.D16    , b.D17    , b.D18    , b.D19    , b.D20 , b.D21    , b.D22    , b.D23    , b.D24    , b.D25    , b.D26    , b.D27    , b.D28    , b.D29    , b.D30 , b.D31 ,'N' as bit FROM 	TBL_MONTH_ARRANGE_DETAIL b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-05' AND    b.DISPATCH_SEQ = 1
 {executed in 0 msec}
2023-06-24 01:31:04.561 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - SELECT b.CAR_REGNO,b.emp_nm , 0 AS tot_work_date ,b.D1  ,b.D2  ,b.D3  ,b.D4  ,b.D5  ,b.D6  ,b.D7  ,b.D8  ,b.D9  ,b.D10 ,b.D11 ,b.D12 ,b.D13 ,b.D14 ,b.D15 ,b.D16 ,b.D17 ,b.D18 ,b.D19 ,b.D20 ,b.D21 ,b.D22 ,b.D23 ,b.D24 ,b.D25 ,b.D26 ,b.D27 ,b.D28 ,b.D29 ,b.D30 ,b.D31 ,'N' AS bit FROM 	TBL_MONTH_ARRANGE_DETAIL b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-05' AND    b.DISPATCH_SEQ = 6 AND    b.CAR_REGNO not like 'SP%' order by b.dispatch_seq,b.CAR_REGNO ,b.ampm_gubun,b.prev_daily_seq
2023-06-24 01:31:04.562 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
476. SELECT b.CAR_REGNO,b.emp_nm , 0 AS tot_work_date ,b.D1  ,b.D2  ,b.D3  ,b.D4  ,b.D5  ,b.D6  ,b.D7  ,b.D8  ,b.D9  ,b.D10 ,b.D11 ,b.D12 ,b.D13 ,b.D14 ,b.D15 ,b.D16 ,b.D17 ,b.D18 ,b.D19 ,b.D20 ,b.D21 ,b.D22 ,b.D23 ,b.D24 ,b.D25 ,b.D26 ,b.D27 ,b.D28 ,b.D29 ,b.D30 ,b.D31 ,'N' AS bit FROM 	TBL_MONTH_ARRANGE_DETAIL b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-05' AND    b.DISPATCH_SEQ = 6 AND    b.CAR_REGNO not like 'SP%' order by b.dispatch_seq,b.CAR_REGNO ,b.ampm_gubun,b.prev_daily_seq
 {executed in 1 msec}
2023-06-24 01:31:04.563 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - WITH sp_maxinfo AS ( SELECT  b.CAR_REGNO,b.EMP_NM ,nvl(max(CASE WHEN nvl(b.D1 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D1   ELSE '#' || b.D1  end),' ') as D1 ,nvl(max(CASE WHEN nvl(b.D2 ,'') = '' THEN '' WHEN b.route_nm = '38번' tHEN b.D2   ELSE '#' || b.D2  end),' ') as D2 ,nvl(max(CASE WHEN nvl(b.D3 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D3   ELSE '#' || b.D3   end),' ') as D3 ,nvl(max(CASE WHEN nvl(b.D4 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D4   ELSE '#' || b.D4   end),' ') as D4 ,nvl(max(CASE WHEN nvl(b.D5 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D5   ELSE '#' || b.D5   end),' ') as D5 ,nvl(max(CASE WHEN nvl(b.D6 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D6   ELSE '#' || b.D6   end),' ') as D6 ,nvl(max(CASE WHEN nvl(b.D7 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D7   ELSE '#' || b.D7   end),' ') as D7 ,nvl(max(CASE WHEN nvl(b.D8 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D8   ELSE '#' || b.D8   end),' ') as D8 ,nvl(max(CASE WHEN nvl(b.D9 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D9   ELSE '#' || b.D9   end),' ') as D9 ,nvl(max(CASE WHEN nvl(b.D10,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D10  ELSE '#' || b.D10  end),' ') as D10 ,nvl(max(CASE WHEN nvl(b.D11,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D11  ELSE '#' || b.D11  end),' ') as D11 ,nvl(max(CASE WHEN nvl(b.D12,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D12  ELSE '#' || b.D12  end),' ') as D12 ,nvl(max(CASE WHEN nvl(b.D13,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D13  ELSE '#' || b.D13  end),' ') as D13 ,nvl(max(CASE WHEN nvl(b.D14,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D14  ELSE '#' || b.D14  end),' ') as D14 ,nvl(max(CASE WHEN nvl(b.D15,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D15  ELSE '#' || b.D15  end),' ') as D15 ,nvl(max(CASE WHEN nvl(b.D16,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D16  ELSE '#' || b.D16  end),' ') as D16 ,nvl(max(CASE WHEN nvl(b.D17,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D17  ELSE '#' || b.D17  end),' ') as D17 ,nvl(max(CASE WHEN nvl(b.D18,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D18  ELSE '#' || b.D18  end),' ') as D18 ,nvl(max(CASE WHEN nvl(b.D19,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D19  ELSE '#' || b.D19  end),' ') as D19 ,nvl(max(CASE WHEN nvl(b.D20,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D20  ELSE '#' || b.D20  end),' ') as D20 ,nvl(max(CASE WHEN nvl(b.D21,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D21  ELSE '#' || b.D21  end),' ') as D21 ,nvl(max(CASE WHEN nvl(b.D22,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D22  ELSE '#' || b.D22  end),' ') as D22 ,nvl(max(CASE WHEN nvl(b.D23,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D23  ELSE '#' || b.D23  end),' ') as D23 ,nvl(max(CASE WHEN nvl(b.D24,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D24  ELSE '#' || b.D24  end),' ') as D24 ,nvl(max(CASE WHEN nvl(b.D25,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D25  ELSE '#' || b.D25  end),' ') as D25 ,nvl(max(CASE WHEN nvl(b.D26,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D26  ELSE '#' || b.D26  end),' ') as D26 ,nvl(max(CASE WHEN nvl(b.D27,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D27  ELSE '#' || b.D27  end),' ') as D27 ,nvl(max(CASE WHEN nvl(b.D28,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D28  ELSE '#' || b.D28  end),' ') as D28 ,nvl(max(CASE WHEN nvl(b.D29,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D29  ELSE '#' || b.D29  end),' ') as D29 ,nvl(max(CASE WHEN nvl(b.D30,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D30  ELSE '#' || b.D30  end),' ') as D30 ,nvl(max(CASE WHEN nvl(b.D31,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D31  ELSE '#' || b.D31  end),' ') as D31 FROM 	TBL_MONTH_ARRANGE_DETAIL b where 	b.company_no = '100' AND b.BASE_YM = '2023-05' and b.DISPATCH_SEQ = 6 and b.init_seq = 0 AND b.CAR_REGNO LIKE  'SP%' GROUP BY b.CAR_REGNO,b.emp_nm ) SELECT b.*,'N' as bit ,	LENGTH (REGEXP_REPLACE(b.D1||b.D2||b.D3||b.D4||b.D5||b.D6||b.D7||b.D8||b.D9||b.D10||b.D11||b.D12||b.D13||b.D14||b.D15||b.D16||b.D17||b.D18||b.D19||b.D20||b.D21||b.D22||b.D23||b.D24||b.D25||b.D26||b.D27||b.D28||b.D29||b.D30||b.D31,'[0-9# ]','') ) AS tot_work_date FROM ( SELECT  a.prev_daily_seq,b.* FROM 	TBL_MONTH_ARRANGE_DETAIL a LEFT OUTER JOIN sp_maxinfo b ON	a.emp_nm = b.EMP_NM AND  a.car_regno = b.CAR_REGNO where 	a.company_no = '100' AND a.BASE_YM = '2023-05' and a.DISPATCH_SEQ = 6 and a.init_seq = 0 AND a.CAR_REGNO LIKE  'SP%' AND a.emp_nm = decode('','',a.emp_nm,'') AND a.route_nm = '38번' ) b ORDER BY b.prev_daily_seq
2023-06-24 01:31:04.583 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
476. WITH sp_maxinfo AS ( SELECT  b.CAR_REGNO,b.EMP_NM ,nvl(max(CASE WHEN nvl(b.D1 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D1   ELSE '#' || b.D1  end),' ') as D1 ,nvl(max(CASE WHEN nvl(b.D2 ,'') = '' THEN '' WHEN b.route_nm = '38번' tHEN b.D2   ELSE '#' || b.D2  end),' ') as D2 ,nvl(max(CASE WHEN nvl(b.D3 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D3   ELSE '#' || b.D3   end),' ') as D3 ,nvl(max(CASE WHEN nvl(b.D4 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D4   ELSE '#' || b.D4   end),' ') as D4 ,nvl(max(CASE WHEN nvl(b.D5 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D5   ELSE '#' || b.D5   end),' ') as D5 ,nvl(max(CASE WHEN nvl(b.D6 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D6   ELSE '#' || b.D6   end),' ') as D6 ,nvl(max(CASE WHEN nvl(b.D7 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D7   ELSE '#' || b.D7   end),' ') as D7 ,nvl(max(CASE WHEN nvl(b.D8 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D8   ELSE '#' || b.D8   end),' ') as D8 ,nvl(max(CASE WHEN nvl(b.D9 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D9   ELSE '#' || b.D9   end),' ') as D9 ,nvl(max(CASE WHEN nvl(b.D10,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D10  ELSE '#' || b.D10  end),' ') as D10 ,nvl(max(CASE WHEN nvl(b.D11,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D11  ELSE '#' || b.D11  end),' ') as D11 ,nvl(max(CASE WHEN nvl(b.D12,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D12  ELSE '#' || b.D12  end),' ') as D12 ,nvl(max(CASE WHEN nvl(b.D13,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D13  ELSE '#' || b.D13  end),' ') as D13 ,nvl(max(CASE WHEN nvl(b.D14,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D14  ELSE '#' || b.D14  end),' ') as D14 ,nvl(max(CASE WHEN nvl(b.D15,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D15  ELSE '#' || b.D15  end),' ') as D15 ,nvl(max(CASE WHEN nvl(b.D16,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D16  ELSE '#' || b.D16  end),' ') as D16 ,nvl(max(CASE WHEN nvl(b.D17,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D17  ELSE '#' || b.D17  end),' ') as D17 ,nvl(max(CASE WHEN nvl(b.D18,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D18  ELSE '#' || b.D18  end),' ') as D18 ,nvl(max(CASE WHEN nvl(b.D19,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D19  ELSE '#' || b.D19  end),' ') as D19 ,nvl(max(CASE WHEN nvl(b.D20,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D20  ELSE '#' || b.D20  end),' ') as D20 ,nvl(max(CASE WHEN nvl(b.D21,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D21  ELSE '#' || b.D21  end),' ') as D21 ,nvl(max(CASE WHEN nvl(b.D22,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D22  ELSE '#' || b.D22  end),' ') as D22 ,nvl(max(CASE WHEN nvl(b.D23,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D23  ELSE '#' || b.D23  end),' ') as D23 ,nvl(max(CASE WHEN nvl(b.D24,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D24  ELSE '#' || b.D24  end),' ') as D24 ,nvl(max(CASE WHEN nvl(b.D25,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D25  ELSE '#' || b.D25  end),' ') as D25 ,nvl(max(CASE WHEN nvl(b.D26,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D26  ELSE '#' || b.D26  end),' ') as D26 ,nvl(max(CASE WHEN nvl(b.D27,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D27  ELSE '#' || b.D27  end),' ') as D27 ,nvl(max(CASE WHEN nvl(b.D28,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D28  ELSE '#' || b.D28  end),' ') as D28 ,nvl(max(CASE WHEN nvl(b.D29,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D29  ELSE '#' || b.D29  end),' ') as D29 ,nvl(max(CASE WHEN nvl(b.D30,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D30  ELSE '#' || b.D30  end),' ') as D30 ,nvl(max(CASE WHEN nvl(b.D31,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D31  ELSE '#' || b.D31  end),' ') as D31 FROM 	TBL_MONTH_ARRANGE_DETAIL b where 	b.company_no = '100' AND b.BASE_YM = '2023-05' and b.DISPATCH_SEQ = 6 and b.init_seq = 0 AND b.CAR_REGNO LIKE  'SP%' GROUP BY b.CAR_REGNO,b.emp_nm ) SELECT b.*,'N' as bit ,	LENGTH (REGEXP_REPLACE(b.D1||b.D2||b.D3||b.D4||b.D5||b.D6||b.D7||b.D8||b.D9||b.D10||b.D11||b.D12||b.D13||b.D14||b.D15||b.D16||b.D17||b.D18||b.D19||b.D20||b.D21||b.D22||b.D23||b.D24||b.D25||b.D26||b.D27||b.D28||b.D29||b.D30||b.D31,'[0-9# ]','') ) AS tot_work_date FROM ( SELECT  a.prev_daily_seq,b.* FROM 	TBL_MONTH_ARRANGE_DETAIL a LEFT OUTER JOIN sp_maxinfo b ON	a.emp_nm = b.EMP_NM AND  a.car_regno = b.CAR_REGNO where 	a.company_no = '100' AND a.BASE_YM = '2023-05' and a.DISPATCH_SEQ = 6 and a.init_seq = 0 AND a.CAR_REGNO LIKE  'SP%' AND a.emp_nm = decode('','',a.emp_nm,'') AND a.route_nm = '38번' ) b ORDER BY b.prev_daily_seq
 {executed in 20 msec}
2023-06-24 01:31:05.191 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@93382024
2023-06-24 01:31:05.191 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_DRIVERINFO_DETAIL} 
2023-06-24 01:31:05.191 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT  'N' as bit,CAR_REGNO ,EMP_NM ,prev_daily_seq ,PREV_WORK_PATTERN ,ampm_gubun, off_group, CAR_REGNO||EMP_NM as key FROM TBM_DRIVERINFO_DETAIL where   company_no = '100' AND 	route_nm = '38번' AND     BASE_YM = '2023-05'
2023-06-24 01:31:05.192 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
475. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 01:31:05.195 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
475. SELECT  'N' as bit,CAR_REGNO ,EMP_NM ,prev_daily_seq ,PREV_WORK_PATTERN ,ampm_gubun, off_group, CAR_REGNO||EMP_NM as key FROM TBM_DRIVERINFO_DETAIL where   company_no = '100' AND 	route_nm = '38번' AND     BASE_YM = '2023-05'
 {executed in 3 msec}
2023-06-24 01:31:05.231 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT 	a.ROUTE_NM,b.STATUS,b.LAST_CHG_USER,b.LAST_CHG_DATE FROM 	TBL_ROUTEINFO a left outer join TBM_MONTH_ARRANGE_STATUS b on	a.company_no = b.company_no and a.route_nm   = b.route_nm AND b.BASE_YM = '2023-05' AND	b.ROUTE_NM like '' || '%' WHERE 	a.company_no = '100' ORDER BY 1
2023-06-24 01:31:05.232 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
475. SELECT 	a.ROUTE_NM,b.STATUS,b.LAST_CHG_USER,b.LAST_CHG_DATE FROM 	TBL_ROUTEINFO a left outer join TBM_MONTH_ARRANGE_STATUS b on	a.company_no = b.company_no and a.route_nm   = b.route_nm AND b.BASE_YM = '2023-05' AND	b.ROUTE_NM like '' || '%' WHERE 	a.company_no = '100' ORDER BY 1
 {executed in 1 msec}
2023-06-24 01:32:03.808 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT 	DISTINCT INIT_SEQ  FROM 	TBL_MONTH_ARRANGE_BASIC a WHERE	a.COMPANY_NO = '100' AND 	a.BASE_YM = '2023-05' AND 	a.route_nm = '20번' AND 	a.INIT_SEQ > 0
2023-06-24 01:32:03.808 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - WITH carInfo AS ( SELECT '감차후 총 차량댓수' as CAR_REGNO,'' AS AMPM_GUBUN ,b.emp_nm,0 AS tot_work_date , b.D1    , b.D2    , b.D3    , b.D4    , b.D5    , b.D6    , b.D7    , b.D8    , b.D9    , b.D10 , b.D11    , b.D12    , b.D13    , b.D14    , b.D15    , b.D16    , b.D17    , b.D18    , b.D19    , b.D20 , b.D21    , b.D22    , b.D23    , b.D24    , b.D25    , b.D26    , b.D27    , b.D28    , b.D29    , b.D30 , b.D31 FROM 	TBL_MONTH_ARRANGE_BASIC b WHERE 	b.company_no = '100' AND 	b.route_nm = '20번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-05' AND    b.DISPATCH_SEQ = 2  AND	b.CAR_REGNO  = '-' ), allocateInfo AS ( SELECT  decode(AMPM_GUBUN,'p','오전','오후') || ' 배정 건수' AS CAR_REGNO,ampm_gubun,'-' emp_nm,0 AS tot_work_date ,0 D1 ,0 D2 ,0 D3 ,0 D4 ,0 D5 ,0 D6 ,0 D7 ,0 D8 ,0 D9 ,0 D10 ,0 D11 ,0 D12 ,0 D13 ,0 D14 ,0 D15 ,0 D16 ,0 D17 ,0 D18 ,0 D19 ,0 D20 ,0 D21 ,0 D22 ,0 D23 ,0 D24 ,0 D25 ,0 D26 ,0 D27 ,0 D28 ,0 d29 ,0 d30 ,0 d31 FROM 	TBL_MONTH_ARRANGE_DETAIL b WHERE 	b.company_no = '100' AND 	b.route_nm = '20번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-05' AND    b.DISPATCH_SEQ = 6  AND    b.PREV_DAILY_SEQ = 1 AND    b.AMPM_GUBUN IN ('a','p') ) SELECT * FROM carInfo union all SELECT '감차후 총 운행횟수' as CAR_REGNO,' ' AMPM_GUBUN ,b.emp_nm,0 AS tot_work_date , b.D1 *2   , b.D2 *2    , b.D3  *2   , b.D4 *2    , b.D5 *2    , b.D6 *2    , b.D7 *2    , b.D8 *2    , b.D9 *2    , b.D10 *2 , b.D11 *2    , b.D12 *2    , b.D13 *2    , b.D14 *2    , b.D15 *2    , b.D16 *2    , b.D17 *2    , b.D18 *2    , b.D19 *2    , b.D20 *2 , b.D21 *2    , b.D22 *2    , b.D23 *2    , b.D24 *2    , b.D25 *2    , b.D26 *2    , b.D27 *2    , b.D28 *2    , b.D29 *2    , b.D30 *2 , b.D31 *2 FROM 	carInfo b union all SELECT  * FROM 	allocateInfo b union all SELECT  decode(b.AMPM_GUBUN,'p','오전','오후') || ' 미배정 건수' AS CAR_REGNO,b.AMPM_GUBUN ,'-' emp_nm,0 AS tot_work_date ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  FROM 	allocateInfo b,carInfo a
2023-06-24 01:32:03.809 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
475. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 01:32:03.809 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
476. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 01:32:03.812 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
475. SELECT 	DISTINCT INIT_SEQ  FROM 	TBL_MONTH_ARRANGE_BASIC a WHERE	a.COMPANY_NO = '100' AND 	a.BASE_YM = '2023-05' AND 	a.route_nm = '20번' AND 	a.INIT_SEQ > 0
 {executed in 3 msec}
2023-06-24 01:32:03.813 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
476. WITH carInfo AS ( SELECT '감차후 총 차량댓수' as CAR_REGNO,'' AS AMPM_GUBUN ,b.emp_nm,0 AS tot_work_date , b.D1    , b.D2    , b.D3    , b.D4    , b.D5    , b.D6    , b.D7    , b.D8    , b.D9    , b.D10 , b.D11    , b.D12    , b.D13    , b.D14    , b.D15    , b.D16    , b.D17    , b.D18    , b.D19    , b.D20 , b.D21    , b.D22    , b.D23    , b.D24    , b.D25    , b.D26    , b.D27    , b.D28    , b.D29    , b.D30 , b.D31 FROM 	TBL_MONTH_ARRANGE_BASIC b WHERE 	b.company_no = '100' AND 	b.route_nm = '20번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-05' AND    b.DISPATCH_SEQ = 2  AND	b.CAR_REGNO  = '-' ), allocateInfo AS ( SELECT  decode(AMPM_GUBUN,'p','오전','오후') || ' 배정 건수' AS CAR_REGNO,ampm_gubun,'-' emp_nm,0 AS tot_work_date ,0 D1 ,0 D2 ,0 D3 ,0 D4 ,0 D5 ,0 D6 ,0 D7 ,0 D8 ,0 D9 ,0 D10 ,0 D11 ,0 D12 ,0 D13 ,0 D14 ,0 D15 ,0 D16 ,0 D17 ,0 D18 ,0 D19 ,0 D20 ,0 D21 ,0 D22 ,0 D23 ,0 D24 ,0 D25 ,0 D26 ,0 D27 ,0 D28 ,0 d29 ,0 d30 ,0 d31 FROM 	TBL_MONTH_ARRANGE_DETAIL b WHERE 	b.company_no = '100' AND 	b.route_nm = '20번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-05' AND    b.DISPATCH_SEQ = 6  AND    b.PREV_DAILY_SEQ = 1 AND    b.AMPM_GUBUN IN ('a','p') ) SELECT * FROM carInfo union all SELECT '감차후 총 운행횟수' as CAR_REGNO,' ' AMPM_GUBUN ,b.emp_nm,0 AS tot_work_date , b.D1 *2   , b.D2 *2    , b.D3  *2   , b.D4 *2    , b.D5 *2    , b.D6 *2    , b.D7 *2    , b.D8 *2    , b.D9 *2    , b.D10 *2 , b.D11 *2    , b.D12 *2    , b.D13 *2    , b.D14 *2    , b.D15 *2    , b.D16 *2    , b.D17 *2    , b.D18 *2    , b.D19 *2    , b.D20 *2 , b.D21 *2    , b.D22 *2    , b.D23 *2    , b.D24 *2    , b.D25 *2    , b.D26 *2    , b.D27 *2    , b.D28 *2    , b.D29 *2    , b.D30 *2 , b.D31 *2 FROM 	carInfo b union all SELECT  * FROM 	allocateInfo b union all SELECT  decode(b.AMPM_GUBUN,'p','오전','오후') || ' 미배정 건수' AS CAR_REGNO,b.AMPM_GUBUN ,'-' emp_nm,0 AS tot_work_date ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  FROM 	allocateInfo b,carInfo a
 {executed in 3 msec}
2023-06-24 01:32:03.813 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - SELECT '[20번] 2023-05월' as CAR_REGNO,b.emp_nm,0 AS tot_work_date , b.D1    , b.D2    , b.D3    , b.D4    , b.D5    , b.D6    , b.D7    , b.D8    , b.D9    , b.D10 , b.D11    , b.D12    , b.D13    , b.D14    , b.D15    , b.D16    , b.D17    , b.D18    , b.D19    , b.D20 , b.D21    , b.D22    , b.D23    , b.D24    , b.D25    , b.D26    , b.D27    , b.D28    , b.D29    , b.D30 , b.D31 ,'N' as bit FROM 	TBL_MONTH_ARRANGE_DETAIL b WHERE 	b.company_no = '100' AND 	b.route_nm = '20번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-05' AND    b.DISPATCH_SEQ = 1
2023-06-24 01:32:03.814 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
476. SELECT '[20번] 2023-05월' as CAR_REGNO,b.emp_nm,0 AS tot_work_date , b.D1    , b.D2    , b.D3    , b.D4    , b.D5    , b.D6    , b.D7    , b.D8    , b.D9    , b.D10 , b.D11    , b.D12    , b.D13    , b.D14    , b.D15    , b.D16    , b.D17    , b.D18    , b.D19    , b.D20 , b.D21    , b.D22    , b.D23    , b.D24    , b.D25    , b.D26    , b.D27    , b.D28    , b.D29    , b.D30 , b.D31 ,'N' as bit FROM 	TBL_MONTH_ARRANGE_DETAIL b WHERE 	b.company_no = '100' AND 	b.route_nm = '20번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-05' AND    b.DISPATCH_SEQ = 1
 {executed in 1 msec}
2023-06-24 01:32:03.815 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - SELECT b.CAR_REGNO,b.emp_nm , 0 AS tot_work_date ,b.D1  ,b.D2  ,b.D3  ,b.D4  ,b.D5  ,b.D6  ,b.D7  ,b.D8  ,b.D9  ,b.D10 ,b.D11 ,b.D12 ,b.D13 ,b.D14 ,b.D15 ,b.D16 ,b.D17 ,b.D18 ,b.D19 ,b.D20 ,b.D21 ,b.D22 ,b.D23 ,b.D24 ,b.D25 ,b.D26 ,b.D27 ,b.D28 ,b.D29 ,b.D30 ,b.D31 ,'N' AS bit FROM 	TBL_MONTH_ARRANGE_DETAIL b WHERE 	b.company_no = '100' AND 	b.route_nm = '20번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-05' AND    b.DISPATCH_SEQ = 6 AND    b.CAR_REGNO not like 'SP%' order by b.dispatch_seq,b.CAR_REGNO ,b.ampm_gubun,b.prev_daily_seq
2023-06-24 01:32:03.816 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
476. SELECT b.CAR_REGNO,b.emp_nm , 0 AS tot_work_date ,b.D1  ,b.D2  ,b.D3  ,b.D4  ,b.D5  ,b.D6  ,b.D7  ,b.D8  ,b.D9  ,b.D10 ,b.D11 ,b.D12 ,b.D13 ,b.D14 ,b.D15 ,b.D16 ,b.D17 ,b.D18 ,b.D19 ,b.D20 ,b.D21 ,b.D22 ,b.D23 ,b.D24 ,b.D25 ,b.D26 ,b.D27 ,b.D28 ,b.D29 ,b.D30 ,b.D31 ,'N' AS bit FROM 	TBL_MONTH_ARRANGE_DETAIL b WHERE 	b.company_no = '100' AND 	b.route_nm = '20번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-05' AND    b.DISPATCH_SEQ = 6 AND    b.CAR_REGNO not like 'SP%' order by b.dispatch_seq,b.CAR_REGNO ,b.ampm_gubun,b.prev_daily_seq
 {executed in 1 msec}
2023-06-24 01:32:03.818 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - WITH sp_maxinfo AS ( SELECT  b.CAR_REGNO,b.EMP_NM ,nvl(max(CASE WHEN nvl(b.D1 ,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D1   ELSE '#' || b.D1  end),' ') as D1 ,nvl(max(CASE WHEN nvl(b.D2 ,'') = '' THEN '' WHEN b.route_nm = '20번' tHEN b.D2   ELSE '#' || b.D2  end),' ') as D2 ,nvl(max(CASE WHEN nvl(b.D3 ,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D3   ELSE '#' || b.D3   end),' ') as D3 ,nvl(max(CASE WHEN nvl(b.D4 ,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D4   ELSE '#' || b.D4   end),' ') as D4 ,nvl(max(CASE WHEN nvl(b.D5 ,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D5   ELSE '#' || b.D5   end),' ') as D5 ,nvl(max(CASE WHEN nvl(b.D6 ,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D6   ELSE '#' || b.D6   end),' ') as D6 ,nvl(max(CASE WHEN nvl(b.D7 ,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D7   ELSE '#' || b.D7   end),' ') as D7 ,nvl(max(CASE WHEN nvl(b.D8 ,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D8   ELSE '#' || b.D8   end),' ') as D8 ,nvl(max(CASE WHEN nvl(b.D9 ,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D9   ELSE '#' || b.D9   end),' ') as D9 ,nvl(max(CASE WHEN nvl(b.D10,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D10  ELSE '#' || b.D10  end),' ') as D10 ,nvl(max(CASE WHEN nvl(b.D11,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D11  ELSE '#' || b.D11  end),' ') as D11 ,nvl(max(CASE WHEN nvl(b.D12,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D12  ELSE '#' || b.D12  end),' ') as D12 ,nvl(max(CASE WHEN nvl(b.D13,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D13  ELSE '#' || b.D13  end),' ') as D13 ,nvl(max(CASE WHEN nvl(b.D14,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D14  ELSE '#' || b.D14  end),' ') as D14 ,nvl(max(CASE WHEN nvl(b.D15,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D15  ELSE '#' || b.D15  end),' ') as D15 ,nvl(max(CASE WHEN nvl(b.D16,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D16  ELSE '#' || b.D16  end),' ') as D16 ,nvl(max(CASE WHEN nvl(b.D17,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D17  ELSE '#' || b.D17  end),' ') as D17 ,nvl(max(CASE WHEN nvl(b.D18,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D18  ELSE '#' || b.D18  end),' ') as D18 ,nvl(max(CASE WHEN nvl(b.D19,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D19  ELSE '#' || b.D19  end),' ') as D19 ,nvl(max(CASE WHEN nvl(b.D20,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D20  ELSE '#' || b.D20  end),' ') as D20 ,nvl(max(CASE WHEN nvl(b.D21,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D21  ELSE '#' || b.D21  end),' ') as D21 ,nvl(max(CASE WHEN nvl(b.D22,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D22  ELSE '#' || b.D22  end),' ') as D22 ,nvl(max(CASE WHEN nvl(b.D23,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D23  ELSE '#' || b.D23  end),' ') as D23 ,nvl(max(CASE WHEN nvl(b.D24,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D24  ELSE '#' || b.D24  end),' ') as D24 ,nvl(max(CASE WHEN nvl(b.D25,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D25  ELSE '#' || b.D25  end),' ') as D25 ,nvl(max(CASE WHEN nvl(b.D26,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D26  ELSE '#' || b.D26  end),' ') as D26 ,nvl(max(CASE WHEN nvl(b.D27,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D27  ELSE '#' || b.D27  end),' ') as D27 ,nvl(max(CASE WHEN nvl(b.D28,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D28  ELSE '#' || b.D28  end),' ') as D28 ,nvl(max(CASE WHEN nvl(b.D29,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D29  ELSE '#' || b.D29  end),' ') as D29 ,nvl(max(CASE WHEN nvl(b.D30,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D30  ELSE '#' || b.D30  end),' ') as D30 ,nvl(max(CASE WHEN nvl(b.D31,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D31  ELSE '#' || b.D31  end),' ') as D31 FROM 	TBL_MONTH_ARRANGE_DETAIL b where 	b.company_no = '100' AND b.BASE_YM = '2023-05' and b.DISPATCH_SEQ = 6 and b.init_seq = 0 AND b.CAR_REGNO LIKE  'SP%' GROUP BY b.CAR_REGNO,b.emp_nm ) SELECT b.*,'N' as bit ,	LENGTH (REGEXP_REPLACE(b.D1||b.D2||b.D3||b.D4||b.D5||b.D6||b.D7||b.D8||b.D9||b.D10||b.D11||b.D12||b.D13||b.D14||b.D15||b.D16||b.D17||b.D18||b.D19||b.D20||b.D21||b.D22||b.D23||b.D24||b.D25||b.D26||b.D27||b.D28||b.D29||b.D30||b.D31,'[0-9# ]','') ) AS tot_work_date FROM ( SELECT  a.prev_daily_seq,b.* FROM 	TBL_MONTH_ARRANGE_DETAIL a LEFT OUTER JOIN sp_maxinfo b ON	a.emp_nm = b.EMP_NM AND  a.car_regno = b.CAR_REGNO where 	a.company_no = '100' AND a.BASE_YM = '2023-05' and a.DISPATCH_SEQ = 6 and a.init_seq = 0 AND a.CAR_REGNO LIKE  'SP%' AND a.emp_nm = decode('','',a.emp_nm,'') AND a.route_nm = '20번' ) b ORDER BY b.prev_daily_seq
2023-06-24 01:32:03.842 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
476. WITH sp_maxinfo AS ( SELECT  b.CAR_REGNO,b.EMP_NM ,nvl(max(CASE WHEN nvl(b.D1 ,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D1   ELSE '#' || b.D1  end),' ') as D1 ,nvl(max(CASE WHEN nvl(b.D2 ,'') = '' THEN '' WHEN b.route_nm = '20번' tHEN b.D2   ELSE '#' || b.D2  end),' ') as D2 ,nvl(max(CASE WHEN nvl(b.D3 ,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D3   ELSE '#' || b.D3   end),' ') as D3 ,nvl(max(CASE WHEN nvl(b.D4 ,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D4   ELSE '#' || b.D4   end),' ') as D4 ,nvl(max(CASE WHEN nvl(b.D5 ,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D5   ELSE '#' || b.D5   end),' ') as D5 ,nvl(max(CASE WHEN nvl(b.D6 ,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D6   ELSE '#' || b.D6   end),' ') as D6 ,nvl(max(CASE WHEN nvl(b.D7 ,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D7   ELSE '#' || b.D7   end),' ') as D7 ,nvl(max(CASE WHEN nvl(b.D8 ,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D8   ELSE '#' || b.D8   end),' ') as D8 ,nvl(max(CASE WHEN nvl(b.D9 ,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D9   ELSE '#' || b.D9   end),' ') as D9 ,nvl(max(CASE WHEN nvl(b.D10,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D10  ELSE '#' || b.D10  end),' ') as D10 ,nvl(max(CASE WHEN nvl(b.D11,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D11  ELSE '#' || b.D11  end),' ') as D11 ,nvl(max(CASE WHEN nvl(b.D12,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D12  ELSE '#' || b.D12  end),' ') as D12 ,nvl(max(CASE WHEN nvl(b.D13,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D13  ELSE '#' || b.D13  end),' ') as D13 ,nvl(max(CASE WHEN nvl(b.D14,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D14  ELSE '#' || b.D14  end),' ') as D14 ,nvl(max(CASE WHEN nvl(b.D15,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D15  ELSE '#' || b.D15  end),' ') as D15 ,nvl(max(CASE WHEN nvl(b.D16,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D16  ELSE '#' || b.D16  end),' ') as D16 ,nvl(max(CASE WHEN nvl(b.D17,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D17  ELSE '#' || b.D17  end),' ') as D17 ,nvl(max(CASE WHEN nvl(b.D18,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D18  ELSE '#' || b.D18  end),' ') as D18 ,nvl(max(CASE WHEN nvl(b.D19,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D19  ELSE '#' || b.D19  end),' ') as D19 ,nvl(max(CASE WHEN nvl(b.D20,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D20  ELSE '#' || b.D20  end),' ') as D20 ,nvl(max(CASE WHEN nvl(b.D21,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D21  ELSE '#' || b.D21  end),' ') as D21 ,nvl(max(CASE WHEN nvl(b.D22,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D22  ELSE '#' || b.D22  end),' ') as D22 ,nvl(max(CASE WHEN nvl(b.D23,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D23  ELSE '#' || b.D23  end),' ') as D23 ,nvl(max(CASE WHEN nvl(b.D24,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D24  ELSE '#' || b.D24  end),' ') as D24 ,nvl(max(CASE WHEN nvl(b.D25,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D25  ELSE '#' || b.D25  end),' ') as D25 ,nvl(max(CASE WHEN nvl(b.D26,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D26  ELSE '#' || b.D26  end),' ') as D26 ,nvl(max(CASE WHEN nvl(b.D27,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D27  ELSE '#' || b.D27  end),' ') as D27 ,nvl(max(CASE WHEN nvl(b.D28,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D28  ELSE '#' || b.D28  end),' ') as D28 ,nvl(max(CASE WHEN nvl(b.D29,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D29  ELSE '#' || b.D29  end),' ') as D29 ,nvl(max(CASE WHEN nvl(b.D30,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D30  ELSE '#' || b.D30  end),' ') as D30 ,nvl(max(CASE WHEN nvl(b.D31,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D31  ELSE '#' || b.D31  end),' ') as D31 FROM 	TBL_MONTH_ARRANGE_DETAIL b where 	b.company_no = '100' AND b.BASE_YM = '2023-05' and b.DISPATCH_SEQ = 6 and b.init_seq = 0 AND b.CAR_REGNO LIKE  'SP%' GROUP BY b.CAR_REGNO,b.emp_nm ) SELECT b.*,'N' as bit ,	LENGTH (REGEXP_REPLACE(b.D1||b.D2||b.D3||b.D4||b.D5||b.D6||b.D7||b.D8||b.D9||b.D10||b.D11||b.D12||b.D13||b.D14||b.D15||b.D16||b.D17||b.D18||b.D19||b.D20||b.D21||b.D22||b.D23||b.D24||b.D25||b.D26||b.D27||b.D28||b.D29||b.D30||b.D31,'[0-9# ]','') ) AS tot_work_date FROM ( SELECT  a.prev_daily_seq,b.* FROM 	TBL_MONTH_ARRANGE_DETAIL a LEFT OUTER JOIN sp_maxinfo b ON	a.emp_nm = b.EMP_NM AND  a.car_regno = b.CAR_REGNO where 	a.company_no = '100' AND a.BASE_YM = '2023-05' and a.DISPATCH_SEQ = 6 and a.init_seq = 0 AND a.CAR_REGNO LIKE  'SP%' AND a.emp_nm = decode('','',a.emp_nm,'') AND a.route_nm = '20번' ) b ORDER BY b.prev_daily_seq
 {executed in 23 msec}
2023-06-24 01:32:04.389 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@9f5da6a1
2023-06-24 01:32:04.389 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_DRIVERINFO_DETAIL} 
2023-06-24 01:32:04.389 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT  'N' as bit,CAR_REGNO ,EMP_NM ,prev_daily_seq ,PREV_WORK_PATTERN ,ampm_gubun, off_group, CAR_REGNO||EMP_NM as key FROM TBM_DRIVERINFO_DETAIL where   company_no = '100' AND 	route_nm = '20번' AND     BASE_YM = '2023-05'
2023-06-24 01:32:04.390 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
475. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 01:32:04.392 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
475. SELECT  'N' as bit,CAR_REGNO ,EMP_NM ,prev_daily_seq ,PREV_WORK_PATTERN ,ampm_gubun, off_group, CAR_REGNO||EMP_NM as key FROM TBM_DRIVERINFO_DETAIL where   company_no = '100' AND 	route_nm = '20번' AND     BASE_YM = '2023-05'
 {executed in 2 msec}
2023-06-24 01:32:04.430 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT 	a.ROUTE_NM,b.STATUS,b.LAST_CHG_USER,b.LAST_CHG_DATE FROM 	TBL_ROUTEINFO a left outer join TBM_MONTH_ARRANGE_STATUS b on	a.company_no = b.company_no and a.route_nm   = b.route_nm AND b.BASE_YM = '2023-05' AND	b.ROUTE_NM like '' || '%' WHERE 	a.company_no = '100' ORDER BY 1
2023-06-24 01:32:04.431 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
476. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 01:32:04.432 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
476. SELECT 	a.ROUTE_NM,b.STATUS,b.LAST_CHG_USER,b.LAST_CHG_DATE FROM 	TBL_ROUTEINFO a left outer join TBM_MONTH_ARRANGE_STATUS b on	a.company_no = b.company_no and a.route_nm   = b.route_nm AND b.BASE_YM = '2023-05' AND	b.ROUTE_NM like '' || '%' WHERE 	a.company_no = '100' ORDER BY 1
 {executed in 1 msec}
2023-06-24 01:37:52.586 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.emp_no,a.emp_nm,nvl(b.route_nm,'-') as route_nm from    TBL_employeeInfo a left outer join TBL_DRIVERINFO b on a.company_no = b.company_no and a.emp_nm = b.emp_nm where   a.company_no = '100' and	    b.sp_gb = decode('ALL','ALL',b.sp_gb,'ALL') order by a.emp_nm
2023-06-24 01:37:52.587 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
475. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 01:37:52.606 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
475. select   a.emp_no,a.emp_nm,nvl(b.route_nm,'-') as route_nm from    TBL_employeeInfo a left outer join TBL_DRIVERINFO b on a.company_no = b.company_no and a.emp_nm = b.emp_nm where   a.company_no = '100' and	    b.sp_gb = decode('ALL','ALL',b.sp_gb,'ALL') order by a.emp_nm
 {executed in 19 msec}
2023-06-24 01:37:54.699 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@e79d3d0d
2023-06-24 01:37:54.700 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
476. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 01:37:54.703 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
476. SELECT  5 AS seq
		,  '5' AS a0 
		,	'현주소' AS a1, 		nvl(b.address,'') AS a1_value 
		,	'' AS a2, '' AS a2_value 
		,	'' AS a3, '' AS a3_value 
		,	'' AS a4, '' AS a4_value 
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='강근원' 
	union 
	SELECT  4 AS seq
		,  '4' AS a0 
		,	'이메일' AS a1, 		nvl(b.email,'')  AS a1_value 
		,	'호봉' AS a2, 		nvl(b.hobong,'') AS a2_value 
		,	'구분' AS a3, 		a.JOB_KIND AS a3_value 
		,	'급여계산' AS a4, 		'' AS a4_value 
		,	'국민연금취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='강근원' 
	union 
	SELECT  3 AS seq
		,  '3' AS a0 
		,	'휴대폰' AS a1, 		a.PHONE_NO  AS a1_value 
		,	'정규직구분' AS a2, 	nvl(b.enter_gb,'')  AS a2_value 
		,	'부서' AS a3, 		a.TEAM_NM  AS a3_value  
		,	'운전면허번호' AS a4, 	nvl(b.dirver_regno,'')	  AS a4_value  
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='강근원' 
	union 
	SELECT  2 AS seq
		,  '2' AS a0 
		,	'생년월일' AS a1, 		nvl(b.BIRTH_YMD,'') AS a1_value  
		,	'근속일자' AS a2, 		nvl(to_char(datediff(DAY,'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'직종' AS a3, 		a.JOB_TYPE AS a3_value  
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'건강보험취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='강근원' 
	union 
	SELECT  1 AS seq
		,	'1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'고정/SP구분' AS a3, 	nvl(b.sp_gb,'') AS a3_value 
		,	'가입조합' AS a4, 		nvl(b.work_group,'') AS a4_value 
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='강근원' 
	union 
	SELECT  0 AS seq
		,	a.emp_nm AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-') AS a2_value 
		,	'노선' AS a3, 		nvl(b.route_nm,'')  AS a3_value 
		,	'성별' AS a4, 		a.sex AS a4_value 
		,	'고용보험취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='강근원'
	order by 1
 {executed in 2 msec}
2023-06-24 01:37:54.733 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@aeacbabd
2023-06-24 01:37:54.733 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO_empNm} 
2023-06-24 01:37:54.733 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '강근원' order by a.base_year desc,a.acc_time desc
2023-06-24 01:37:54.733 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
475. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 01:37:54.734 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
475. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '강근원' order by a.base_year desc,a.acc_time desc
 {executed in 1 msec}
2023-06-24 01:37:54.735 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
475. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '강근원' order by a.base_year desc,a.acc_time desc
 {executed in 0 msec}
2023-06-24 01:37:54.780 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
475. select * from TBL_FILE_INFO where company_no = '100' and file_gb = 'empImage' and file_id = '강근원'
 {executed in 1 msec}
2023-06-24 01:37:59.980 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@73cff08d
2023-06-24 01:37:59.980 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - filterType={getDrivingRecord_year} 
2023-06-24 01:37:59.980 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : WITH wholeAvgInfo AS ( SELECT 	k.base_ym ,	round(avg(k.bms_km),2) AS wholeAvg_bms_km ,	round(avg(k.tot_min),2) AS wholeAvg_tot_min FROM ( SELECT	a.base_ym,a.WORK_DATE ,a.driver_id,	sum(a.BMS_KM) bms_km ,	sum(a.TOT_MIN) tot_min FROM	TBL_DRIVING_RECORD a where 	a.company_no = '100' and 	a.BASE_YM LIKE  '2023' || '%' GROUP BY	a.base_ym,a.WORK_DATE,a.driver_id ) k	GROUP BY k.base_ym ) SELECT 	k.base_ym , 	count(k.base_ym) as tot_day ,	round(sum(k.bms_km),2) AS bms_km , 	round(sum(k.tot_min),2) AS tot_min ,	round(avg(k.bms_km),2) AS avg_bms_km ,	round(avg(k.tot_min),2) AS avg_tot_min ,	m.wholeAvg_bms_km ,	m.wholeAvg_tot_min FROM ( SELECT	a.base_ym, a.WORK_DATE ,	sum(a.BMS_KM) bms_km ,	sum(a.TOT_MIN) tot_min FROM	TBL_DRIVING_RECORD a JOIN 	TBL_ISC_DRIVER_INFO b ON	a.company_no = b.COMPANY_NO  AND b.EMP_NM = '강근원'	AND b.DRIVER_ID = a.DRIVER_ID where 	a.company_no = '100' AND     a.BASE_YM LIKE  '2023' || '%' GROUP BY	a.base_ym,a.WORK_DATE ) k JOIN wholeAvgInfo m ON m.base_ym = k.base_ym GROUP BY k.base_ym
2023-06-24 01:37:59.981 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
475. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 01:38:00.156 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
475. WITH wholeAvgInfo AS ( SELECT 	k.base_ym ,	round(avg(k.bms_km),2) AS wholeAvg_bms_km ,	round(avg(k.tot_min),2) AS wholeAvg_tot_min FROM ( SELECT	a.base_ym,a.WORK_DATE ,a.driver_id,	sum(a.BMS_KM) bms_km ,	sum(a.TOT_MIN) tot_min FROM	TBL_DRIVING_RECORD a where 	a.company_no = '100' and 	a.BASE_YM LIKE  '2023' || '%' GROUP BY	a.base_ym,a.WORK_DATE,a.driver_id ) k	GROUP BY k.base_ym ) SELECT 	k.base_ym , 	count(k.base_ym) as tot_day ,	round(sum(k.bms_km),2) AS bms_km , 	round(sum(k.tot_min),2) AS tot_min ,	round(avg(k.bms_km),2) AS avg_bms_km ,	round(avg(k.tot_min),2) AS avg_tot_min ,	m.wholeAvg_bms_km ,	m.wholeAvg_tot_min FROM ( SELECT	a.base_ym, a.WORK_DATE ,	sum(a.BMS_KM) bms_km ,	sum(a.TOT_MIN) tot_min FROM	TBL_DRIVING_RECORD a JOIN 	TBL_ISC_DRIVER_INFO b ON	a.company_no = b.COMPANY_NO  AND b.EMP_NM = '강근원'	AND b.DRIVER_ID = a.DRIVER_ID where 	a.company_no = '100' AND     a.BASE_YM LIKE  '2023' || '%' GROUP BY	a.base_ym,a.WORK_DATE ) k JOIN wholeAvgInfo m ON m.base_ym = k.base_ym GROUP BY k.base_ym
 {executed in 175 msec}
2023-06-24 01:38:00.287 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
475. WITH wholeAvgInfo AS ( SELECT 	k.base_ym ,	round(avg(k.bms_km),2) AS wholeAvg_bms_km ,	round(avg(k.tot_min),2) AS wholeAvg_tot_min FROM ( SELECT	a.base_ym,a.WORK_DATE ,a.driver_id,	sum(a.BMS_KM) bms_km ,	sum(a.TOT_MIN) tot_min FROM	TBL_DRIVING_RECORD a where 	a.company_no = '100' and 	a.BASE_YM LIKE  '2023' || '%' GROUP BY	a.base_ym,a.WORK_DATE,a.driver_id ) k	GROUP BY k.base_ym ) SELECT 	k.base_ym , 	count(k.base_ym) as tot_day ,	round(sum(k.bms_km),2) AS bms_km , 	round(sum(k.tot_min),2) AS tot_min ,	round(avg(k.bms_km),2) AS avg_bms_km ,	round(avg(k.tot_min),2) AS avg_tot_min ,	m.wholeAvg_bms_km ,	m.wholeAvg_tot_min FROM ( SELECT	a.base_ym, a.WORK_DATE ,	sum(a.BMS_KM) bms_km ,	sum(a.TOT_MIN) tot_min FROM	TBL_DRIVING_RECORD a JOIN 	TBL_ISC_DRIVER_INFO b ON	a.company_no = b.COMPANY_NO  AND b.EMP_NM = '강근원'	AND b.DRIVER_ID = a.DRIVER_ID where 	a.company_no = '100' AND     a.BASE_YM LIKE  '2023' || '%' GROUP BY	a.base_ym,a.WORK_DATE ) k JOIN wholeAvgInfo m ON m.base_ym = k.base_ym GROUP BY k.base_ym
 {executed in 131 msec}
2023-06-24 01:38:00.320 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@fcaa69a3
2023-06-24 01:38:00.320 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - filterType={getDrivingRecord_month} 
2023-06-24 01:38:00.320 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT 	WORK_DATE ,	count(WORK_DATE) AS tot_cnt ,	round(sum(a.BMS_KM),2) bms_km ,	sum(a.TOT_MIN) tot_min FROM 	TBL_DRIVING_RECORD a JOIN TBL_ISC_DRIVER_INFO b ON b.EMP_NM  = '강근원' AND b.DRIVER_ID = a.DRIVER_ID where 	a.company_no = '100' AND   	a.BASE_YM = '2023-03' GROUP BY WORK_DATE
2023-06-24 01:38:00.774 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
475. SELECT 	WORK_DATE ,	count(WORK_DATE) AS tot_cnt ,	round(sum(a.BMS_KM),2) bms_km ,	sum(a.TOT_MIN) tot_min FROM 	TBL_DRIVING_RECORD a JOIN TBL_ISC_DRIVER_INFO b ON b.EMP_NM  = '강근원' AND b.DRIVER_ID = a.DRIVER_ID where 	a.company_no = '100' AND   	a.BASE_YM = '2023-03' GROUP BY WORK_DATE
 {executed in 454 msec}
2023-06-24 01:38:00.774 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
475. SELECT 	WORK_DATE ,	count(WORK_DATE) AS tot_cnt ,	round(sum(a.BMS_KM),2) bms_km ,	sum(a.TOT_MIN) tot_min FROM 	TBL_DRIVING_RECORD a JOIN TBL_ISC_DRIVER_INFO b ON b.EMP_NM  = '강근원' AND b.DRIVER_ID = a.DRIVER_ID where 	a.company_no = '100' AND   	a.BASE_YM = '2023-03' GROUP BY WORK_DATE
 {executed in 0 msec}
2023-06-24 01:38:00.813 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@b8fc5f9
2023-06-24 01:38:00.813 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - filterType={getDrivingRecord_day} 
2023-06-24 01:38:00.813 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT 	ROWNUM as no, a.CAR_REGNO ,substring(a.START_TIME,12) as START_TIME,substring(a.END_TIME,12) as END_TIME ,round(a.BMS_KM,2) as bms_km ,a.TOT_MIN FROM 	TBL_DRIVING_RECORD a JOIN TBL_ISC_DRIVER_INFO b ON b.EMP_NM  = '강근원' AND b.DRIVER_ID = a.DRIVER_ID where 	a.company_no = '100' AND   	a.WORK_DATE = '2023-03-01' ORDER BY a.START_TIME
2023-06-24 01:38:00.814 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
476. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 01:38:00.838 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
476. SELECT 	ROWNUM as no, a.CAR_REGNO ,substring(a.START_TIME,12) as START_TIME,substring(a.END_TIME,12) as END_TIME ,round(a.BMS_KM,2) as bms_km ,a.TOT_MIN FROM 	TBL_DRIVING_RECORD a JOIN TBL_ISC_DRIVER_INFO b ON b.EMP_NM  = '강근원' AND b.DRIVER_ID = a.DRIVER_ID where 	a.company_no = '100' AND   	a.WORK_DATE = '2023-03-01' ORDER BY a.START_TIME
 {executed in 24 msec}
2023-06-24 01:38:00.859 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
476. SELECT 	ROWNUM as no, a.CAR_REGNO ,substring(a.START_TIME,12) as START_TIME,substring(a.END_TIME,12) as END_TIME ,round(a.BMS_KM,2) as bms_km ,a.TOT_MIN FROM 	TBL_DRIVING_RECORD a JOIN TBL_ISC_DRIVER_INFO b ON b.EMP_NM  = '강근원' AND b.DRIVER_ID = a.DRIVER_ID where 	a.company_no = '100' AND   	a.WORK_DATE = '2023-03-01' ORDER BY a.START_TIME
 {executed in 20 msec}
2023-06-24 01:38:03.726 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@fef00e72
2023-06-24 01:38:03.726 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_ANALIZE_emp} 
2023-06-24 01:38:03.726 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select  a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.BASE_YMD > TO_CHAR(DATEADD(MONTH,-1,SYSDATE()),'yyyy-MM') and		a.emp_nm = '강근원' ORDER BY a.base_ymd DESC,a.col003 desc
2023-06-24 01:38:03.727 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
475. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 01:38:03.728 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
475. select  a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.BASE_YMD > TO_CHAR(DATEADD(MONTH,-1,SYSDATE()),'yyyy-MM') and		a.emp_nm = '강근원' ORDER BY a.base_ymd DESC,a.col003 desc
 {executed in 1 msec}
2023-06-24 01:38:03.729 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
475. select  a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.BASE_YMD > TO_CHAR(DATEADD(MONTH,-1,SYSDATE()),'yyyy-MM') and		a.emp_nm = '강근원' ORDER BY a.base_ymd DESC,a.col003 desc
 {executed in 1 msec}
2023-06-24 01:38:04.582 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@67d14ecf
2023-06-24 01:38:04.582 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - filterType={danagerAnal_Employee2} 
2023-06-24 01:38:04.582 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT 	b.base_ym, b.emp_nm,b.danger_km100,b.DANGER_ACT_CNT, b.DANGER_ACT,b.DANGER_LEVEL,b.DRIVING_CNT,b.DRIVING_DISTANCE,b.DRIVING_TIME FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym > TO_CHAR(DATEADD(YEAR,-3,SYSDATE()),'yyyy-MM') AND   b.emp_nm = '강근원' ORDER BY b.base_ym desc
2023-06-24 01:38:04.583 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
475. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 01:38:04.591 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
475. SELECT 	b.base_ym, b.emp_nm,b.danger_km100,b.DANGER_ACT_CNT, b.DANGER_ACT,b.DANGER_LEVEL,b.DRIVING_CNT,b.DRIVING_DISTANCE,b.DRIVING_TIME FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym > TO_CHAR(DATEADD(YEAR,-3,SYSDATE()),'yyyy-MM') AND   b.emp_nm = '강근원' ORDER BY b.base_ym desc
 {executed in 8 msec}
2023-06-24 01:38:04.593 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
475. SELECT 	b.base_ym, b.emp_nm,b.danger_km100,b.DANGER_ACT_CNT, b.DANGER_ACT,b.DANGER_LEVEL,b.DRIVING_CNT,b.DRIVING_DISTANCE,b.DRIVING_TIME FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym > TO_CHAR(DATEADD(YEAR,-3,SYSDATE()),'yyyy-MM') AND   b.emp_nm = '강근원' ORDER BY b.base_ym desc
 {executed in 2 msec}
2023-06-24 01:38:05.827 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8a0cd256
2023-06-24 01:38:05.827 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO_empNm} 
2023-06-24 01:38:05.827 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '강근원' order by a.base_year desc,a.acc_time desc
2023-06-24 01:38:05.828 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
476. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 01:38:05.828 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
476. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '강근원' order by a.base_year desc,a.acc_time desc
 {executed in 0 msec}
2023-06-24 01:38:05.829 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
476. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '강근원' order by a.base_year desc,a.acc_time desc
 {executed in 0 msec}
2023-06-24 01:58:20.823 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@7cfe2d2
2023-06-24 01:58:20.824 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - filterType={getDrivingRecord_year} 
2023-06-24 01:58:20.824 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : WITH wholeAvgInfo AS ( SELECT 	k.base_ym ,	round(avg(k.bms_km),2) AS wholeAvg_bms_km ,	round(avg(k.tot_min),2) AS wholeAvg_tot_min FROM ( SELECT	a.base_ym,a.WORK_DATE ,a.driver_id,	sum(a.BMS_KM) bms_km ,	sum(a.TOT_MIN) tot_min FROM	TBL_DRIVING_RECORD a where 	a.company_no = '100' and 	a.BASE_YM LIKE  '2023' || '%' GROUP BY	a.base_ym,a.WORK_DATE,a.driver_id ) k	GROUP BY k.base_ym ) SELECT 	k.base_ym , 	count(k.base_ym) as tot_day ,	round(sum(k.bms_km),2) AS bms_km , 	round(sum(k.tot_min),2) AS tot_min ,	round(avg(k.bms_km),2) AS avg_bms_km ,	round(avg(k.tot_min),2) AS avg_tot_min ,	m.wholeAvg_bms_km ,	m.wholeAvg_tot_min FROM ( SELECT	a.base_ym, a.WORK_DATE ,	sum(a.BMS_KM) bms_km ,	sum(a.TOT_MIN) tot_min FROM	TBL_DRIVING_RECORD a JOIN 	TBL_ISC_DRIVER_INFO b ON	a.company_no = b.COMPANY_NO  AND b.EMP_NM = '강근원'	AND b.DRIVER_ID = a.DRIVER_ID where 	a.company_no = '100' AND     a.BASE_YM LIKE  '2023' || '%' GROUP BY	a.base_ym,a.WORK_DATE ) k JOIN wholeAvgInfo m ON m.base_ym = k.base_ym GROUP BY k.base_ym
2023-06-24 01:58:20.825 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
485. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 01:58:21.001 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
485. WITH wholeAvgInfo AS ( SELECT 	k.base_ym ,	round(avg(k.bms_km),2) AS wholeAvg_bms_km ,	round(avg(k.tot_min),2) AS wholeAvg_tot_min FROM ( SELECT	a.base_ym,a.WORK_DATE ,a.driver_id,	sum(a.BMS_KM) bms_km ,	sum(a.TOT_MIN) tot_min FROM	TBL_DRIVING_RECORD a where 	a.company_no = '100' and 	a.BASE_YM LIKE  '2023' || '%' GROUP BY	a.base_ym,a.WORK_DATE,a.driver_id ) k	GROUP BY k.base_ym ) SELECT 	k.base_ym , 	count(k.base_ym) as tot_day ,	round(sum(k.bms_km),2) AS bms_km , 	round(sum(k.tot_min),2) AS tot_min ,	round(avg(k.bms_km),2) AS avg_bms_km ,	round(avg(k.tot_min),2) AS avg_tot_min ,	m.wholeAvg_bms_km ,	m.wholeAvg_tot_min FROM ( SELECT	a.base_ym, a.WORK_DATE ,	sum(a.BMS_KM) bms_km ,	sum(a.TOT_MIN) tot_min FROM	TBL_DRIVING_RECORD a JOIN 	TBL_ISC_DRIVER_INFO b ON	a.company_no = b.COMPANY_NO  AND b.EMP_NM = '강근원'	AND b.DRIVER_ID = a.DRIVER_ID where 	a.company_no = '100' AND     a.BASE_YM LIKE  '2023' || '%' GROUP BY	a.base_ym,a.WORK_DATE ) k JOIN wholeAvgInfo m ON m.base_ym = k.base_ym GROUP BY k.base_ym
 {executed in 175 msec}
2023-06-24 01:58:21.130 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
485. WITH wholeAvgInfo AS ( SELECT 	k.base_ym ,	round(avg(k.bms_km),2) AS wholeAvg_bms_km ,	round(avg(k.tot_min),2) AS wholeAvg_tot_min FROM ( SELECT	a.base_ym,a.WORK_DATE ,a.driver_id,	sum(a.BMS_KM) bms_km ,	sum(a.TOT_MIN) tot_min FROM	TBL_DRIVING_RECORD a where 	a.company_no = '100' and 	a.BASE_YM LIKE  '2023' || '%' GROUP BY	a.base_ym,a.WORK_DATE,a.driver_id ) k	GROUP BY k.base_ym ) SELECT 	k.base_ym , 	count(k.base_ym) as tot_day ,	round(sum(k.bms_km),2) AS bms_km , 	round(sum(k.tot_min),2) AS tot_min ,	round(avg(k.bms_km),2) AS avg_bms_km ,	round(avg(k.tot_min),2) AS avg_tot_min ,	m.wholeAvg_bms_km ,	m.wholeAvg_tot_min FROM ( SELECT	a.base_ym, a.WORK_DATE ,	sum(a.BMS_KM) bms_km ,	sum(a.TOT_MIN) tot_min FROM	TBL_DRIVING_RECORD a JOIN 	TBL_ISC_DRIVER_INFO b ON	a.company_no = b.COMPANY_NO  AND b.EMP_NM = '강근원'	AND b.DRIVER_ID = a.DRIVER_ID where 	a.company_no = '100' AND     a.BASE_YM LIKE  '2023' || '%' GROUP BY	a.base_ym,a.WORK_DATE ) k JOIN wholeAvgInfo m ON m.base_ym = k.base_ym GROUP BY k.base_ym
 {executed in 129 msec}
2023-06-24 01:58:21.169 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@6b7bdc45
2023-06-24 01:58:21.169 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - filterType={getDrivingRecord_month} 
2023-06-24 01:58:21.169 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT 	WORK_DATE ,	count(WORK_DATE) AS tot_cnt ,	round(sum(a.BMS_KM),2) bms_km ,	sum(a.TOT_MIN) tot_min FROM 	TBL_DRIVING_RECORD a JOIN TBL_ISC_DRIVER_INFO b ON b.EMP_NM  = '강근원' AND b.DRIVER_ID = a.DRIVER_ID where 	a.company_no = '100' AND   	a.BASE_YM = '2023-03' GROUP BY WORK_DATE
2023-06-24 01:58:21.628 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
485. SELECT 	WORK_DATE ,	count(WORK_DATE) AS tot_cnt ,	round(sum(a.BMS_KM),2) bms_km ,	sum(a.TOT_MIN) tot_min FROM 	TBL_DRIVING_RECORD a JOIN TBL_ISC_DRIVER_INFO b ON b.EMP_NM  = '강근원' AND b.DRIVER_ID = a.DRIVER_ID where 	a.company_no = '100' AND   	a.BASE_YM = '2023-03' GROUP BY WORK_DATE
 {executed in 459 msec}
2023-06-24 01:58:21.629 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
485. SELECT 	WORK_DATE ,	count(WORK_DATE) AS tot_cnt ,	round(sum(a.BMS_KM),2) bms_km ,	sum(a.TOT_MIN) tot_min FROM 	TBL_DRIVING_RECORD a JOIN TBL_ISC_DRIVER_INFO b ON b.EMP_NM  = '강근원' AND b.DRIVER_ID = a.DRIVER_ID where 	a.company_no = '100' AND   	a.BASE_YM = '2023-03' GROUP BY WORK_DATE
 {executed in 1 msec}
2023-06-24 01:58:21.681 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@b8fc5f9
2023-06-24 01:58:21.681 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - filterType={getDrivingRecord_day} 
2023-06-24 01:58:21.681 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT 	ROWNUM as no, a.CAR_REGNO ,substring(a.START_TIME,12) as START_TIME,substring(a.END_TIME,12) as END_TIME ,round(a.BMS_KM,2) as bms_km ,a.TOT_MIN FROM 	TBL_DRIVING_RECORD a JOIN TBL_ISC_DRIVER_INFO b ON b.EMP_NM  = '강근원' AND b.DRIVER_ID = a.DRIVER_ID where 	a.company_no = '100' AND   	a.WORK_DATE = '2023-03-01' ORDER BY a.START_TIME
2023-06-24 01:58:21.702 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
485. SELECT 	ROWNUM as no, a.CAR_REGNO ,substring(a.START_TIME,12) as START_TIME,substring(a.END_TIME,12) as END_TIME ,round(a.BMS_KM,2) as bms_km ,a.TOT_MIN FROM 	TBL_DRIVING_RECORD a JOIN TBL_ISC_DRIVER_INFO b ON b.EMP_NM  = '강근원' AND b.DRIVER_ID = a.DRIVER_ID where 	a.company_no = '100' AND   	a.WORK_DATE = '2023-03-01' ORDER BY a.START_TIME
 {executed in 20 msec}
2023-06-24 01:58:21.723 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
485. SELECT 	ROWNUM as no, a.CAR_REGNO ,substring(a.START_TIME,12) as START_TIME,substring(a.END_TIME,12) as END_TIME ,round(a.BMS_KM,2) as bms_km ,a.TOT_MIN FROM 	TBL_DRIVING_RECORD a JOIN TBL_ISC_DRIVER_INFO b ON b.EMP_NM  = '강근원' AND b.DRIVER_ID = a.DRIVER_ID where 	a.company_no = '100' AND   	a.WORK_DATE = '2023-03-01' ORDER BY a.START_TIME
 {executed in 21 msec}
2023-06-24 01:58:44.795 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.emp_no,a.emp_nm,nvl(b.route_nm,'-') as route_nm from    TBL_employeeInfo a left outer join TBL_DRIVERINFO b on a.company_no = b.company_no and a.emp_nm = b.emp_nm where   a.company_no = '100' and	    b.sp_gb = decode('ALL','ALL',b.sp_gb,'ALL') order by a.emp_nm
2023-06-24 01:58:44.796 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
485. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 01:58:44.813 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
485. select   a.emp_no,a.emp_nm,nvl(b.route_nm,'-') as route_nm from    TBL_employeeInfo a left outer join TBL_DRIVERINFO b on a.company_no = b.company_no and a.emp_nm = b.emp_nm where   a.company_no = '100' and	    b.sp_gb = decode('ALL','ALL',b.sp_gb,'ALL') order by a.emp_nm
 {executed in 17 msec}
2023-06-24 01:58:46.246 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@e79d3d0d
2023-06-24 01:58:46.247 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
485. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 01:58:46.250 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
485. SELECT  5 AS seq
		,  '5' AS a0 
		,	'현주소' AS a1, 		nvl(b.address,'') AS a1_value 
		,	'' AS a2, '' AS a2_value 
		,	'' AS a3, '' AS a3_value 
		,	'' AS a4, '' AS a4_value 
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='강근원' 
	union 
	SELECT  4 AS seq
		,  '4' AS a0 
		,	'이메일' AS a1, 		nvl(b.email,'')  AS a1_value 
		,	'호봉' AS a2, 		nvl(b.hobong,'') AS a2_value 
		,	'구분' AS a3, 		a.JOB_KIND AS a3_value 
		,	'급여계산' AS a4, 		'' AS a4_value 
		,	'국민연금취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='강근원' 
	union 
	SELECT  3 AS seq
		,  '3' AS a0 
		,	'휴대폰' AS a1, 		a.PHONE_NO  AS a1_value 
		,	'정규직구분' AS a2, 	nvl(b.enter_gb,'')  AS a2_value 
		,	'부서' AS a3, 		a.TEAM_NM  AS a3_value  
		,	'운전면허번호' AS a4, 	nvl(b.dirver_regno,'')	  AS a4_value  
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='강근원' 
	union 
	SELECT  2 AS seq
		,  '2' AS a0 
		,	'생년월일' AS a1, 		nvl(b.BIRTH_YMD,'') AS a1_value  
		,	'근속일자' AS a2, 		nvl(to_char(datediff(DAY,'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'직종' AS a3, 		a.JOB_TYPE AS a3_value  
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'건강보험취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='강근원' 
	union 
	SELECT  1 AS seq
		,	'1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'고정/SP구분' AS a3, 	nvl(b.sp_gb,'') AS a3_value 
		,	'가입조합' AS a4, 		nvl(b.work_group,'') AS a4_value 
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='강근원' 
	union 
	SELECT  0 AS seq
		,	a.emp_nm AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-') AS a2_value 
		,	'노선' AS a3, 		nvl(b.route_nm,'')  AS a3_value 
		,	'성별' AS a4, 		a.sex AS a4_value 
		,	'고용보험취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='강근원'
	order by 1
 {executed in 1 msec}
2023-06-24 01:58:46.260 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
485. select * from TBL_FILE_INFO where company_no = '100' and file_gb = 'empImage' and file_id = '강근원'
 {executed in 1 msec}
2023-06-24 01:58:46.280 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@aeacbabd
2023-06-24 01:58:46.280 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO_empNm} 
2023-06-24 01:58:46.280 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '강근원' order by a.base_year desc,a.acc_time desc
2023-06-24 01:58:46.281 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
485. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '강근원' order by a.base_year desc,a.acc_time desc
 {executed in 1 msec}
2023-06-24 01:58:46.282 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
485. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '강근원' order by a.base_year desc,a.acc_time desc
 {executed in 1 msec}
2023-06-24 01:58:47.569 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@73cff08d
2023-06-24 01:58:47.569 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - filterType={getDrivingRecord_year} 
2023-06-24 01:58:47.569 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : WITH wholeAvgInfo AS ( SELECT 	k.base_ym ,	round(avg(k.bms_km),2) AS wholeAvg_bms_km ,	round(avg(k.tot_min),2) AS wholeAvg_tot_min FROM ( SELECT	a.base_ym,a.WORK_DATE ,a.driver_id,	sum(a.BMS_KM) bms_km ,	sum(a.TOT_MIN) tot_min FROM	TBL_DRIVING_RECORD a where 	a.company_no = '100' and 	a.BASE_YM LIKE  '2023' || '%' GROUP BY	a.base_ym,a.WORK_DATE,a.driver_id ) k	GROUP BY k.base_ym ) SELECT 	k.base_ym , 	count(k.base_ym) as tot_day ,	round(sum(k.bms_km),2) AS bms_km , 	round(sum(k.tot_min),2) AS tot_min ,	round(avg(k.bms_km),2) AS avg_bms_km ,	round(avg(k.tot_min),2) AS avg_tot_min ,	m.wholeAvg_bms_km ,	m.wholeAvg_tot_min FROM ( SELECT	a.base_ym, a.WORK_DATE ,	sum(a.BMS_KM) bms_km ,	sum(a.TOT_MIN) tot_min FROM	TBL_DRIVING_RECORD a JOIN 	TBL_ISC_DRIVER_INFO b ON	a.company_no = b.COMPANY_NO  AND b.EMP_NM = '강근원'	AND b.DRIVER_ID = a.DRIVER_ID where 	a.company_no = '100' AND     a.BASE_YM LIKE  '2023' || '%' GROUP BY	a.base_ym,a.WORK_DATE ) k JOIN wholeAvgInfo m ON m.base_ym = k.base_ym GROUP BY k.base_ym
2023-06-24 01:58:47.569 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
485. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 01:58:47.690 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
485. WITH wholeAvgInfo AS ( SELECT 	k.base_ym ,	round(avg(k.bms_km),2) AS wholeAvg_bms_km ,	round(avg(k.tot_min),2) AS wholeAvg_tot_min FROM ( SELECT	a.base_ym,a.WORK_DATE ,a.driver_id,	sum(a.BMS_KM) bms_km ,	sum(a.TOT_MIN) tot_min FROM	TBL_DRIVING_RECORD a where 	a.company_no = '100' and 	a.BASE_YM LIKE  '2023' || '%' GROUP BY	a.base_ym,a.WORK_DATE,a.driver_id ) k	GROUP BY k.base_ym ) SELECT 	k.base_ym , 	count(k.base_ym) as tot_day ,	round(sum(k.bms_km),2) AS bms_km , 	round(sum(k.tot_min),2) AS tot_min ,	round(avg(k.bms_km),2) AS avg_bms_km ,	round(avg(k.tot_min),2) AS avg_tot_min ,	m.wholeAvg_bms_km ,	m.wholeAvg_tot_min FROM ( SELECT	a.base_ym, a.WORK_DATE ,	sum(a.BMS_KM) bms_km ,	sum(a.TOT_MIN) tot_min FROM	TBL_DRIVING_RECORD a JOIN 	TBL_ISC_DRIVER_INFO b ON	a.company_no = b.COMPANY_NO  AND b.EMP_NM = '강근원'	AND b.DRIVER_ID = a.DRIVER_ID where 	a.company_no = '100' AND     a.BASE_YM LIKE  '2023' || '%' GROUP BY	a.base_ym,a.WORK_DATE ) k JOIN wholeAvgInfo m ON m.base_ym = k.base_ym GROUP BY k.base_ym
 {executed in 120 msec}
2023-06-24 01:58:47.807 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
485. WITH wholeAvgInfo AS ( SELECT 	k.base_ym ,	round(avg(k.bms_km),2) AS wholeAvg_bms_km ,	round(avg(k.tot_min),2) AS wholeAvg_tot_min FROM ( SELECT	a.base_ym,a.WORK_DATE ,a.driver_id,	sum(a.BMS_KM) bms_km ,	sum(a.TOT_MIN) tot_min FROM	TBL_DRIVING_RECORD a where 	a.company_no = '100' and 	a.BASE_YM LIKE  '2023' || '%' GROUP BY	a.base_ym,a.WORK_DATE,a.driver_id ) k	GROUP BY k.base_ym ) SELECT 	k.base_ym , 	count(k.base_ym) as tot_day ,	round(sum(k.bms_km),2) AS bms_km , 	round(sum(k.tot_min),2) AS tot_min ,	round(avg(k.bms_km),2) AS avg_bms_km ,	round(avg(k.tot_min),2) AS avg_tot_min ,	m.wholeAvg_bms_km ,	m.wholeAvg_tot_min FROM ( SELECT	a.base_ym, a.WORK_DATE ,	sum(a.BMS_KM) bms_km ,	sum(a.TOT_MIN) tot_min FROM	TBL_DRIVING_RECORD a JOIN 	TBL_ISC_DRIVER_INFO b ON	a.company_no = b.COMPANY_NO  AND b.EMP_NM = '강근원'	AND b.DRIVER_ID = a.DRIVER_ID where 	a.company_no = '100' AND     a.BASE_YM LIKE  '2023' || '%' GROUP BY	a.base_ym,a.WORK_DATE ) k JOIN wholeAvgInfo m ON m.base_ym = k.base_ym GROUP BY k.base_ym
 {executed in 117 msec}
2023-06-24 01:58:47.839 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@fcaa69a3
2023-06-24 01:58:47.839 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - filterType={getDrivingRecord_month} 
2023-06-24 01:58:47.839 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT 	WORK_DATE ,	count(WORK_DATE) AS tot_cnt ,	round(sum(a.BMS_KM),2) bms_km ,	sum(a.TOT_MIN) tot_min FROM 	TBL_DRIVING_RECORD a JOIN TBL_ISC_DRIVER_INFO b ON b.EMP_NM  = '강근원' AND b.DRIVER_ID = a.DRIVER_ID where 	a.company_no = '100' AND   	a.BASE_YM = '2023-03' GROUP BY WORK_DATE
2023-06-24 01:58:48.267 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
485. SELECT 	WORK_DATE ,	count(WORK_DATE) AS tot_cnt ,	round(sum(a.BMS_KM),2) bms_km ,	sum(a.TOT_MIN) tot_min FROM 	TBL_DRIVING_RECORD a JOIN TBL_ISC_DRIVER_INFO b ON b.EMP_NM  = '강근원' AND b.DRIVER_ID = a.DRIVER_ID where 	a.company_no = '100' AND   	a.BASE_YM = '2023-03' GROUP BY WORK_DATE
 {executed in 428 msec}
2023-06-24 01:58:48.268 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
485. SELECT 	WORK_DATE ,	count(WORK_DATE) AS tot_cnt ,	round(sum(a.BMS_KM),2) bms_km ,	sum(a.TOT_MIN) tot_min FROM 	TBL_DRIVING_RECORD a JOIN TBL_ISC_DRIVER_INFO b ON b.EMP_NM  = '강근원' AND b.DRIVER_ID = a.DRIVER_ID where 	a.company_no = '100' AND   	a.BASE_YM = '2023-03' GROUP BY WORK_DATE
 {executed in 1 msec}
2023-06-24 01:58:48.301 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@b8fc5f9
2023-06-24 01:58:48.301 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - filterType={getDrivingRecord_day} 
2023-06-24 01:58:48.301 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT 	ROWNUM as no, a.CAR_REGNO ,substring(a.START_TIME,12) as START_TIME,substring(a.END_TIME,12) as END_TIME ,round(a.BMS_KM,2) as bms_km ,a.TOT_MIN FROM 	TBL_DRIVING_RECORD a JOIN TBL_ISC_DRIVER_INFO b ON b.EMP_NM  = '강근원' AND b.DRIVER_ID = a.DRIVER_ID where 	a.company_no = '100' AND   	a.WORK_DATE = '2023-03-01' ORDER BY a.START_TIME
2023-06-24 01:58:48.320 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
485. SELECT 	ROWNUM as no, a.CAR_REGNO ,substring(a.START_TIME,12) as START_TIME,substring(a.END_TIME,12) as END_TIME ,round(a.BMS_KM,2) as bms_km ,a.TOT_MIN FROM 	TBL_DRIVING_RECORD a JOIN TBL_ISC_DRIVER_INFO b ON b.EMP_NM  = '강근원' AND b.DRIVER_ID = a.DRIVER_ID where 	a.company_no = '100' AND   	a.WORK_DATE = '2023-03-01' ORDER BY a.START_TIME
 {executed in 19 msec}
2023-06-24 01:58:48.343 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
485. SELECT 	ROWNUM as no, a.CAR_REGNO ,substring(a.START_TIME,12) as START_TIME,substring(a.END_TIME,12) as END_TIME ,round(a.BMS_KM,2) as bms_km ,a.TOT_MIN FROM 	TBL_DRIVING_RECORD a JOIN TBL_ISC_DRIVER_INFO b ON b.EMP_NM  = '강근원' AND b.DRIVER_ID = a.DRIVER_ID where 	a.company_no = '100' AND   	a.WORK_DATE = '2023-03-01' ORDER BY a.START_TIME
 {executed in 21 msec}
2023-06-24 02:04:31.170 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.emp_no,a.emp_nm,nvl(b.route_nm,'-') as route_nm from    TBL_employeeInfo a left outer join TBL_DRIVERINFO b on a.company_no = b.company_no and a.emp_nm = b.emp_nm where   a.company_no = '100' and	    b.sp_gb = decode('ALL','ALL',b.sp_gb,'ALL') order by a.emp_nm
2023-06-24 02:04:31.171 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
485. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 02:04:31.202 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
485. select   a.emp_no,a.emp_nm,nvl(b.route_nm,'-') as route_nm from    TBL_employeeInfo a left outer join TBL_DRIVERINFO b on a.company_no = b.company_no and a.emp_nm = b.emp_nm where   a.company_no = '100' and	    b.sp_gb = decode('ALL','ALL',b.sp_gb,'ALL') order by a.emp_nm
 {executed in 30 msec}
2023-06-24 02:04:32.777 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@e79d3d0d
2023-06-24 02:04:32.778 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
485. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 02:04:32.781 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
485. SELECT  5 AS seq
		,  '5' AS a0 
		,	'현주소' AS a1, 		nvl(b.address,'') AS a1_value 
		,	'' AS a2, '' AS a2_value 
		,	'' AS a3, '' AS a3_value 
		,	'' AS a4, '' AS a4_value 
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='강근원' 
	union 
	SELECT  4 AS seq
		,  '4' AS a0 
		,	'이메일' AS a1, 		nvl(b.email,'')  AS a1_value 
		,	'호봉' AS a2, 		nvl(b.hobong,'') AS a2_value 
		,	'구분' AS a3, 		a.JOB_KIND AS a3_value 
		,	'급여계산' AS a4, 		'' AS a4_value 
		,	'국민연금취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='강근원' 
	union 
	SELECT  3 AS seq
		,  '3' AS a0 
		,	'휴대폰' AS a1, 		a.PHONE_NO  AS a1_value 
		,	'정규직구분' AS a2, 	nvl(b.enter_gb,'')  AS a2_value 
		,	'부서' AS a3, 		a.TEAM_NM  AS a3_value  
		,	'운전면허번호' AS a4, 	nvl(b.dirver_regno,'')	  AS a4_value  
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='강근원' 
	union 
	SELECT  2 AS seq
		,  '2' AS a0 
		,	'생년월일' AS a1, 		nvl(b.BIRTH_YMD,'') AS a1_value  
		,	'근속일자' AS a2, 		nvl(to_char(datediff(DAY,'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'직종' AS a3, 		a.JOB_TYPE AS a3_value  
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'건강보험취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='강근원' 
	union 
	SELECT  1 AS seq
		,	'1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'고정/SP구분' AS a3, 	nvl(b.sp_gb,'') AS a3_value 
		,	'가입조합' AS a4, 		nvl(b.work_group,'') AS a4_value 
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='강근원' 
	union 
	SELECT  0 AS seq
		,	a.emp_nm AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-') AS a2_value 
		,	'노선' AS a3, 		nvl(b.route_nm,'')  AS a3_value 
		,	'성별' AS a4, 		a.sex AS a4_value 
		,	'고용보험취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='강근원'
	order by 1
 {executed in 2 msec}
2023-06-24 02:04:32.790 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
485. select * from TBL_FILE_INFO where company_no = '100' and file_gb = 'empImage' and file_id = '강근원'
 {executed in 0 msec}
2023-06-24 02:04:32.810 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@aeacbabd
2023-06-24 02:04:32.810 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO_empNm} 
2023-06-24 02:04:32.810 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '강근원' order by a.base_year desc,a.acc_time desc
2023-06-24 02:04:32.811 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
485. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '강근원' order by a.base_year desc,a.acc_time desc
 {executed in 1 msec}
2023-06-24 02:04:32.812 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
485. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '강근원' order by a.base_year desc,a.acc_time desc
 {executed in 1 msec}
2023-06-24 02:04:34.558 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@73cff08d
2023-06-24 02:04:34.558 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - filterType={getDrivingRecord_year} 
2023-06-24 02:04:34.558 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : WITH wholeAvgInfo AS ( SELECT 	k.base_ym ,	round(avg(k.bms_km),2) AS wholeAvg_bms_km ,	round(avg(k.tot_min),2) AS wholeAvg_tot_min FROM ( SELECT	a.base_ym,a.WORK_DATE ,a.driver_id,	sum(a.BMS_KM) bms_km ,	sum(a.TOT_MIN) tot_min FROM	TBL_DRIVING_RECORD a where 	a.company_no = '100' and 	a.BASE_YM LIKE  '2023' || '%' GROUP BY	a.base_ym,a.WORK_DATE,a.driver_id ) k	GROUP BY k.base_ym ) SELECT 	k.base_ym , 	count(k.base_ym) as tot_day ,	round(sum(k.bms_km),2) AS bms_km , 	round(sum(k.tot_min),2) AS tot_min ,	round(avg(k.bms_km),2) AS avg_bms_km ,	round(avg(k.tot_min),2) AS avg_tot_min ,	m.wholeAvg_bms_km ,	m.wholeAvg_tot_min FROM ( SELECT	a.base_ym, a.WORK_DATE ,	sum(a.BMS_KM) bms_km ,	sum(a.TOT_MIN) tot_min FROM	TBL_DRIVING_RECORD a JOIN 	TBL_ISC_DRIVER_INFO b ON	a.company_no = b.COMPANY_NO  AND b.EMP_NM = '강근원'	AND b.DRIVER_ID = a.DRIVER_ID where 	a.company_no = '100' AND     a.BASE_YM LIKE  '2023' || '%' GROUP BY	a.base_ym,a.WORK_DATE ) k JOIN wholeAvgInfo m ON m.base_ym = k.base_ym GROUP BY k.base_ym
2023-06-24 02:04:34.559 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
485. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 02:04:34.707 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
485. WITH wholeAvgInfo AS ( SELECT 	k.base_ym ,	round(avg(k.bms_km),2) AS wholeAvg_bms_km ,	round(avg(k.tot_min),2) AS wholeAvg_tot_min FROM ( SELECT	a.base_ym,a.WORK_DATE ,a.driver_id,	sum(a.BMS_KM) bms_km ,	sum(a.TOT_MIN) tot_min FROM	TBL_DRIVING_RECORD a where 	a.company_no = '100' and 	a.BASE_YM LIKE  '2023' || '%' GROUP BY	a.base_ym,a.WORK_DATE,a.driver_id ) k	GROUP BY k.base_ym ) SELECT 	k.base_ym , 	count(k.base_ym) as tot_day ,	round(sum(k.bms_km),2) AS bms_km , 	round(sum(k.tot_min),2) AS tot_min ,	round(avg(k.bms_km),2) AS avg_bms_km ,	round(avg(k.tot_min),2) AS avg_tot_min ,	m.wholeAvg_bms_km ,	m.wholeAvg_tot_min FROM ( SELECT	a.base_ym, a.WORK_DATE ,	sum(a.BMS_KM) bms_km ,	sum(a.TOT_MIN) tot_min FROM	TBL_DRIVING_RECORD a JOIN 	TBL_ISC_DRIVER_INFO b ON	a.company_no = b.COMPANY_NO  AND b.EMP_NM = '강근원'	AND b.DRIVER_ID = a.DRIVER_ID where 	a.company_no = '100' AND     a.BASE_YM LIKE  '2023' || '%' GROUP BY	a.base_ym,a.WORK_DATE ) k JOIN wholeAvgInfo m ON m.base_ym = k.base_ym GROUP BY k.base_ym
 {executed in 148 msec}
2023-06-24 02:04:34.824 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
485. WITH wholeAvgInfo AS ( SELECT 	k.base_ym ,	round(avg(k.bms_km),2) AS wholeAvg_bms_km ,	round(avg(k.tot_min),2) AS wholeAvg_tot_min FROM ( SELECT	a.base_ym,a.WORK_DATE ,a.driver_id,	sum(a.BMS_KM) bms_km ,	sum(a.TOT_MIN) tot_min FROM	TBL_DRIVING_RECORD a where 	a.company_no = '100' and 	a.BASE_YM LIKE  '2023' || '%' GROUP BY	a.base_ym,a.WORK_DATE,a.driver_id ) k	GROUP BY k.base_ym ) SELECT 	k.base_ym , 	count(k.base_ym) as tot_day ,	round(sum(k.bms_km),2) AS bms_km , 	round(sum(k.tot_min),2) AS tot_min ,	round(avg(k.bms_km),2) AS avg_bms_km ,	round(avg(k.tot_min),2) AS avg_tot_min ,	m.wholeAvg_bms_km ,	m.wholeAvg_tot_min FROM ( SELECT	a.base_ym, a.WORK_DATE ,	sum(a.BMS_KM) bms_km ,	sum(a.TOT_MIN) tot_min FROM	TBL_DRIVING_RECORD a JOIN 	TBL_ISC_DRIVER_INFO b ON	a.company_no = b.COMPANY_NO  AND b.EMP_NM = '강근원'	AND b.DRIVER_ID = a.DRIVER_ID where 	a.company_no = '100' AND     a.BASE_YM LIKE  '2023' || '%' GROUP BY	a.base_ym,a.WORK_DATE ) k JOIN wholeAvgInfo m ON m.base_ym = k.base_ym GROUP BY k.base_ym
 {executed in 117 msec}
2023-06-24 02:04:34.862 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@fcaa69a3
2023-06-24 02:04:34.862 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - filterType={getDrivingRecord_month} 
2023-06-24 02:04:34.862 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT 	WORK_DATE ,	count(WORK_DATE) AS tot_cnt ,	round(sum(a.BMS_KM),2) bms_km ,	sum(a.TOT_MIN) tot_min FROM 	TBL_DRIVING_RECORD a JOIN TBL_ISC_DRIVER_INFO b ON b.EMP_NM  = '강근원' AND b.DRIVER_ID = a.DRIVER_ID where 	a.company_no = '100' AND   	a.BASE_YM = '2023-03' GROUP BY WORK_DATE
2023-06-24 02:04:35.334 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
485. SELECT 	WORK_DATE ,	count(WORK_DATE) AS tot_cnt ,	round(sum(a.BMS_KM),2) bms_km ,	sum(a.TOT_MIN) tot_min FROM 	TBL_DRIVING_RECORD a JOIN TBL_ISC_DRIVER_INFO b ON b.EMP_NM  = '강근원' AND b.DRIVER_ID = a.DRIVER_ID where 	a.company_no = '100' AND   	a.BASE_YM = '2023-03' GROUP BY WORK_DATE
 {executed in 471 msec}
2023-06-24 02:04:35.334 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
485. SELECT 	WORK_DATE ,	count(WORK_DATE) AS tot_cnt ,	round(sum(a.BMS_KM),2) bms_km ,	sum(a.TOT_MIN) tot_min FROM 	TBL_DRIVING_RECORD a JOIN TBL_ISC_DRIVER_INFO b ON b.EMP_NM  = '강근원' AND b.DRIVER_ID = a.DRIVER_ID where 	a.company_no = '100' AND   	a.BASE_YM = '2023-03' GROUP BY WORK_DATE
 {executed in 0 msec}
2023-06-24 02:04:35.367 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@b8fc5f9
2023-06-24 02:04:35.367 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - filterType={getDrivingRecord_day} 
2023-06-24 02:04:35.367 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT 	ROWNUM as no, a.CAR_REGNO ,substring(a.START_TIME,12) as START_TIME,substring(a.END_TIME,12) as END_TIME ,round(a.BMS_KM,2) as bms_km ,a.TOT_MIN FROM 	TBL_DRIVING_RECORD a JOIN TBL_ISC_DRIVER_INFO b ON b.EMP_NM  = '강근원' AND b.DRIVER_ID = a.DRIVER_ID where 	a.company_no = '100' AND   	a.WORK_DATE = '2023-03-01' ORDER BY a.START_TIME
2023-06-24 02:04:35.390 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
485. SELECT 	ROWNUM as no, a.CAR_REGNO ,substring(a.START_TIME,12) as START_TIME,substring(a.END_TIME,12) as END_TIME ,round(a.BMS_KM,2) as bms_km ,a.TOT_MIN FROM 	TBL_DRIVING_RECORD a JOIN TBL_ISC_DRIVER_INFO b ON b.EMP_NM  = '강근원' AND b.DRIVER_ID = a.DRIVER_ID where 	a.company_no = '100' AND   	a.WORK_DATE = '2023-03-01' ORDER BY a.START_TIME
 {executed in 23 msec}
2023-06-24 02:04:35.410 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
485. SELECT 	ROWNUM as no, a.CAR_REGNO ,substring(a.START_TIME,12) as START_TIME,substring(a.END_TIME,12) as END_TIME ,round(a.BMS_KM,2) as bms_km ,a.TOT_MIN FROM 	TBL_DRIVING_RECORD a JOIN TBL_ISC_DRIVER_INFO b ON b.EMP_NM  = '강근원' AND b.DRIVER_ID = a.DRIVER_ID where 	a.company_no = '100' AND   	a.WORK_DATE = '2023-03-01' ORDER BY a.START_TIME
 {executed in 20 msec}
2023-06-24 02:04:40.642 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.emp_no,a.emp_nm,nvl(b.route_nm,'-') as route_nm from    TBL_employeeInfo a left outer join TBL_DRIVERINFO b on a.company_no = b.company_no and a.emp_nm = b.emp_nm where   a.company_no = '100' and	    b.sp_gb = decode('ALL','ALL',b.sp_gb,'ALL') order by a.emp_nm
2023-06-24 02:04:40.643 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
485. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 02:04:40.658 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
485. select   a.emp_no,a.emp_nm,nvl(b.route_nm,'-') as route_nm from    TBL_employeeInfo a left outer join TBL_DRIVERINFO b on a.company_no = b.company_no and a.emp_nm = b.emp_nm where   a.company_no = '100' and	    b.sp_gb = decode('ALL','ALL',b.sp_gb,'ALL') order by a.emp_nm
 {executed in 15 msec}
2023-06-24 02:04:41.868 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@e79d3d0d
2023-06-24 02:04:41.869 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
485. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 02:04:41.872 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
485. SELECT  5 AS seq
		,  '5' AS a0 
		,	'현주소' AS a1, 		nvl(b.address,'') AS a1_value 
		,	'' AS a2, '' AS a2_value 
		,	'' AS a3, '' AS a3_value 
		,	'' AS a4, '' AS a4_value 
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='강근원' 
	union 
	SELECT  4 AS seq
		,  '4' AS a0 
		,	'이메일' AS a1, 		nvl(b.email,'')  AS a1_value 
		,	'호봉' AS a2, 		nvl(b.hobong,'') AS a2_value 
		,	'구분' AS a3, 		a.JOB_KIND AS a3_value 
		,	'급여계산' AS a4, 		'' AS a4_value 
		,	'국민연금취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='강근원' 
	union 
	SELECT  3 AS seq
		,  '3' AS a0 
		,	'휴대폰' AS a1, 		a.PHONE_NO  AS a1_value 
		,	'정규직구분' AS a2, 	nvl(b.enter_gb,'')  AS a2_value 
		,	'부서' AS a3, 		a.TEAM_NM  AS a3_value  
		,	'운전면허번호' AS a4, 	nvl(b.dirver_regno,'')	  AS a4_value  
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='강근원' 
	union 
	SELECT  2 AS seq
		,  '2' AS a0 
		,	'생년월일' AS a1, 		nvl(b.BIRTH_YMD,'') AS a1_value  
		,	'근속일자' AS a2, 		nvl(to_char(datediff(DAY,'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'직종' AS a3, 		a.JOB_TYPE AS a3_value  
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'건강보험취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='강근원' 
	union 
	SELECT  1 AS seq
		,	'1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'고정/SP구분' AS a3, 	nvl(b.sp_gb,'') AS a3_value 
		,	'가입조합' AS a4, 		nvl(b.work_group,'') AS a4_value 
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='강근원' 
	union 
	SELECT  0 AS seq
		,	a.emp_nm AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-') AS a2_value 
		,	'노선' AS a3, 		nvl(b.route_nm,'')  AS a3_value 
		,	'성별' AS a4, 		a.sex AS a4_value 
		,	'고용보험취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='강근원'
	order by 1
 {executed in 1 msec}
2023-06-24 02:04:41.880 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
485. select * from TBL_FILE_INFO where company_no = '100' and file_gb = 'empImage' and file_id = '강근원'
 {executed in 0 msec}
2023-06-24 02:04:41.901 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@aeacbabd
2023-06-24 02:04:41.901 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO_empNm} 
2023-06-24 02:04:41.901 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '강근원' order by a.base_year desc,a.acc_time desc
2023-06-24 02:04:41.902 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
485. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '강근원' order by a.base_year desc,a.acc_time desc
 {executed in 0 msec}
2023-06-24 02:04:41.903 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
485. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '강근원' order by a.base_year desc,a.acc_time desc
 {executed in 0 msec}
2023-06-24 02:04:42.917 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@73cff08d
2023-06-24 02:04:42.917 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - filterType={getDrivingRecord_year} 
2023-06-24 02:04:42.917 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : WITH wholeAvgInfo AS ( SELECT 	k.base_ym ,	round(avg(k.bms_km),2) AS wholeAvg_bms_km ,	round(avg(k.tot_min),2) AS wholeAvg_tot_min FROM ( SELECT	a.base_ym,a.WORK_DATE ,a.driver_id,	sum(a.BMS_KM) bms_km ,	sum(a.TOT_MIN) tot_min FROM	TBL_DRIVING_RECORD a where 	a.company_no = '100' and 	a.BASE_YM LIKE  '2023' || '%' GROUP BY	a.base_ym,a.WORK_DATE,a.driver_id ) k	GROUP BY k.base_ym ) SELECT 	k.base_ym , 	count(k.base_ym) as tot_day ,	round(sum(k.bms_km),2) AS bms_km , 	round(sum(k.tot_min),2) AS tot_min ,	round(avg(k.bms_km),2) AS avg_bms_km ,	round(avg(k.tot_min),2) AS avg_tot_min ,	m.wholeAvg_bms_km ,	m.wholeAvg_tot_min FROM ( SELECT	a.base_ym, a.WORK_DATE ,	sum(a.BMS_KM) bms_km ,	sum(a.TOT_MIN) tot_min FROM	TBL_DRIVING_RECORD a JOIN 	TBL_ISC_DRIVER_INFO b ON	a.company_no = b.COMPANY_NO  AND b.EMP_NM = '강근원'	AND b.DRIVER_ID = a.DRIVER_ID where 	a.company_no = '100' AND     a.BASE_YM LIKE  '2023' || '%' GROUP BY	a.base_ym,a.WORK_DATE ) k JOIN wholeAvgInfo m ON m.base_ym = k.base_ym GROUP BY k.base_ym
2023-06-24 02:04:42.918 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
485. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 02:04:43.048 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
485. WITH wholeAvgInfo AS ( SELECT 	k.base_ym ,	round(avg(k.bms_km),2) AS wholeAvg_bms_km ,	round(avg(k.tot_min),2) AS wholeAvg_tot_min FROM ( SELECT	a.base_ym,a.WORK_DATE ,a.driver_id,	sum(a.BMS_KM) bms_km ,	sum(a.TOT_MIN) tot_min FROM	TBL_DRIVING_RECORD a where 	a.company_no = '100' and 	a.BASE_YM LIKE  '2023' || '%' GROUP BY	a.base_ym,a.WORK_DATE,a.driver_id ) k	GROUP BY k.base_ym ) SELECT 	k.base_ym , 	count(k.base_ym) as tot_day ,	round(sum(k.bms_km),2) AS bms_km , 	round(sum(k.tot_min),2) AS tot_min ,	round(avg(k.bms_km),2) AS avg_bms_km ,	round(avg(k.tot_min),2) AS avg_tot_min ,	m.wholeAvg_bms_km ,	m.wholeAvg_tot_min FROM ( SELECT	a.base_ym, a.WORK_DATE ,	sum(a.BMS_KM) bms_km ,	sum(a.TOT_MIN) tot_min FROM	TBL_DRIVING_RECORD a JOIN 	TBL_ISC_DRIVER_INFO b ON	a.company_no = b.COMPANY_NO  AND b.EMP_NM = '강근원'	AND b.DRIVER_ID = a.DRIVER_ID where 	a.company_no = '100' AND     a.BASE_YM LIKE  '2023' || '%' GROUP BY	a.base_ym,a.WORK_DATE ) k JOIN wholeAvgInfo m ON m.base_ym = k.base_ym GROUP BY k.base_ym
 {executed in 130 msec}
2023-06-24 02:04:43.177 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
485. WITH wholeAvgInfo AS ( SELECT 	k.base_ym ,	round(avg(k.bms_km),2) AS wholeAvg_bms_km ,	round(avg(k.tot_min),2) AS wholeAvg_tot_min FROM ( SELECT	a.base_ym,a.WORK_DATE ,a.driver_id,	sum(a.BMS_KM) bms_km ,	sum(a.TOT_MIN) tot_min FROM	TBL_DRIVING_RECORD a where 	a.company_no = '100' and 	a.BASE_YM LIKE  '2023' || '%' GROUP BY	a.base_ym,a.WORK_DATE,a.driver_id ) k	GROUP BY k.base_ym ) SELECT 	k.base_ym , 	count(k.base_ym) as tot_day ,	round(sum(k.bms_km),2) AS bms_km , 	round(sum(k.tot_min),2) AS tot_min ,	round(avg(k.bms_km),2) AS avg_bms_km ,	round(avg(k.tot_min),2) AS avg_tot_min ,	m.wholeAvg_bms_km ,	m.wholeAvg_tot_min FROM ( SELECT	a.base_ym, a.WORK_DATE ,	sum(a.BMS_KM) bms_km ,	sum(a.TOT_MIN) tot_min FROM	TBL_DRIVING_RECORD a JOIN 	TBL_ISC_DRIVER_INFO b ON	a.company_no = b.COMPANY_NO  AND b.EMP_NM = '강근원'	AND b.DRIVER_ID = a.DRIVER_ID where 	a.company_no = '100' AND     a.BASE_YM LIKE  '2023' || '%' GROUP BY	a.base_ym,a.WORK_DATE ) k JOIN wholeAvgInfo m ON m.base_ym = k.base_ym GROUP BY k.base_ym
 {executed in 127 msec}
2023-06-24 02:04:43.204 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@fcaa69a3
2023-06-24 02:04:43.204 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - filterType={getDrivingRecord_month} 
2023-06-24 02:04:43.204 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT 	WORK_DATE ,	count(WORK_DATE) AS tot_cnt ,	round(sum(a.BMS_KM),2) bms_km ,	sum(a.TOT_MIN) tot_min FROM 	TBL_DRIVING_RECORD a JOIN TBL_ISC_DRIVER_INFO b ON b.EMP_NM  = '강근원' AND b.DRIVER_ID = a.DRIVER_ID where 	a.company_no = '100' AND   	a.BASE_YM = '2023-03' GROUP BY WORK_DATE
2023-06-24 02:04:43.685 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
485. SELECT 	WORK_DATE ,	count(WORK_DATE) AS tot_cnt ,	round(sum(a.BMS_KM),2) bms_km ,	sum(a.TOT_MIN) tot_min FROM 	TBL_DRIVING_RECORD a JOIN TBL_ISC_DRIVER_INFO b ON b.EMP_NM  = '강근원' AND b.DRIVER_ID = a.DRIVER_ID where 	a.company_no = '100' AND   	a.BASE_YM = '2023-03' GROUP BY WORK_DATE
 {executed in 480 msec}
2023-06-24 02:04:43.686 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
485. SELECT 	WORK_DATE ,	count(WORK_DATE) AS tot_cnt ,	round(sum(a.BMS_KM),2) bms_km ,	sum(a.TOT_MIN) tot_min FROM 	TBL_DRIVING_RECORD a JOIN TBL_ISC_DRIVER_INFO b ON b.EMP_NM  = '강근원' AND b.DRIVER_ID = a.DRIVER_ID where 	a.company_no = '100' AND   	a.BASE_YM = '2023-03' GROUP BY WORK_DATE
 {executed in 0 msec}
2023-06-24 02:04:43.720 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@b8fc5f9
2023-06-24 02:04:43.720 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - filterType={getDrivingRecord_day} 
2023-06-24 02:04:43.720 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT 	ROWNUM as no, a.CAR_REGNO ,substring(a.START_TIME,12) as START_TIME,substring(a.END_TIME,12) as END_TIME ,round(a.BMS_KM,2) as bms_km ,a.TOT_MIN FROM 	TBL_DRIVING_RECORD a JOIN TBL_ISC_DRIVER_INFO b ON b.EMP_NM  = '강근원' AND b.DRIVER_ID = a.DRIVER_ID where 	a.company_no = '100' AND   	a.WORK_DATE = '2023-03-01' ORDER BY a.START_TIME
2023-06-24 02:04:43.740 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
485. SELECT 	ROWNUM as no, a.CAR_REGNO ,substring(a.START_TIME,12) as START_TIME,substring(a.END_TIME,12) as END_TIME ,round(a.BMS_KM,2) as bms_km ,a.TOT_MIN FROM 	TBL_DRIVING_RECORD a JOIN TBL_ISC_DRIVER_INFO b ON b.EMP_NM  = '강근원' AND b.DRIVER_ID = a.DRIVER_ID where 	a.company_no = '100' AND   	a.WORK_DATE = '2023-03-01' ORDER BY a.START_TIME
 {executed in 20 msec}
2023-06-24 02:04:43.771 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
485. SELECT 	ROWNUM as no, a.CAR_REGNO ,substring(a.START_TIME,12) as START_TIME,substring(a.END_TIME,12) as END_TIME ,round(a.BMS_KM,2) as bms_km ,a.TOT_MIN FROM 	TBL_DRIVING_RECORD a JOIN TBL_ISC_DRIVER_INFO b ON b.EMP_NM  = '강근원' AND b.DRIVER_ID = a.DRIVER_ID where 	a.company_no = '100' AND   	a.WORK_DATE = '2023-03-01' ORDER BY a.START_TIME
 {executed in 30 msec}
2023-06-24 02:05:05.738 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@7274ecc
2023-06-24 02:05:05.739 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
485. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 02:05:05.756 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
485. SELECT /* select_getDrivingOrder : 승무지시 화면용 */ k.route_nm,k.seq,k.CAR_REGNO
		,	listagg(k.emp_nm,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as empNm
		,	listagg(k.PHONE_NO,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as PHONE
		,	listagg(k.value,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as spGb
		,	' ' as empNm_am
		,	' ' as empNm_pm
		,	' ' as phone_am
		,	' ' as phone_pm
		,	' ' as spgb_am
		,	' ' as spgb_pm
	FROM (
	SELECT	a.route_nm,
			a.CAR_REGNO ,
			a.EMP_NM ,
			b.PHONE_NO ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,
			CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a JOIN TBL_EMPLOYEEINFO b ON a.company_no = b.COMPANY_NO AND a.emp_nm = b.EMP_NM 
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT a.route_nm,
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			nvl(c.PHONE_NO,'-') AS phone_no ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		
			CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON
			a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
			AND b.d2 <> ''
			AND a.d2 LIKE b.d2 || '%'
		LEFT OUTER JOIN TBL_EMPLOYEEINFO c ON b.company_no = c.COMPANY_NO AND b.emp_nm = c.EMP_NM
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%'	OR a.d2 LIKE '%@%')
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.route_nm,k.seq,k.CAR_REGNO
 {executed in 16 msec}
2023-06-24 02:05:13.917 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
485. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 02:05:13.918 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
485. SELECT ROUTE_NM  FROM TBL_ROUTEINFO ORDER BY 1
 {executed in 1 msec}
2023-06-24 02:05:16.273 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@7274ecc
2023-06-24 02:05:16.274 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
485. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 02:05:16.284 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
485. SELECT /* select_getDrivingOrder : 승무지시 화면용 */ k.route_nm,k.seq,k.CAR_REGNO
		,	listagg(k.emp_nm,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as empNm
		,	listagg(k.PHONE_NO,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as PHONE
		,	listagg(k.value,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as spGb
		,	' ' as empNm_am
		,	' ' as empNm_pm
		,	' ' as phone_am
		,	' ' as phone_pm
		,	' ' as spgb_am
		,	' ' as spgb_pm
	FROM (
	SELECT	a.route_nm,
			a.CAR_REGNO ,
			a.EMP_NM ,
			b.PHONE_NO ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,
			CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a JOIN TBL_EMPLOYEEINFO b ON a.company_no = b.COMPANY_NO AND a.emp_nm = b.EMP_NM 
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT a.route_nm,
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			nvl(c.PHONE_NO,'-') AS phone_no ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		
			CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON
			a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
			AND b.d2 <> ''
			AND a.d2 LIKE b.d2 || '%'
		LEFT OUTER JOIN TBL_EMPLOYEEINFO c ON b.company_no = c.COMPANY_NO AND b.emp_nm = c.EMP_NM
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%'	OR a.d2 LIKE '%@%')
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.route_nm,k.seq,k.CAR_REGNO
 {executed in 9 msec}
2023-06-24 02:05:22.459 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
485. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 02:05:22.460 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
485. SELECT ROUTE_NM  FROM TBL_ROUTEINFO ORDER BY 1
 {executed in 1 msec}
2023-06-24 02:05:25.505 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@7274ecc
2023-06-24 02:05:25.506 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
485. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 02:05:25.518 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
485. SELECT /* select_getDrivingOrder : 승무지시 화면용 */ k.route_nm,k.seq,k.CAR_REGNO
		,	listagg(k.emp_nm,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as empNm
		,	listagg(k.PHONE_NO,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as PHONE
		,	listagg(k.value,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as spGb
		,	' ' as empNm_am
		,	' ' as empNm_pm
		,	' ' as phone_am
		,	' ' as phone_pm
		,	' ' as spgb_am
		,	' ' as spgb_pm
	FROM (
	SELECT	a.route_nm,
			a.CAR_REGNO ,
			a.EMP_NM ,
			b.PHONE_NO ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,
			CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a JOIN TBL_EMPLOYEEINFO b ON a.company_no = b.COMPANY_NO AND a.emp_nm = b.EMP_NM 
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT a.route_nm,
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			nvl(c.PHONE_NO,'-') AS phone_no ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		
			CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON
			a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
			AND b.d2 <> ''
			AND a.d2 LIKE b.d2 || '%'
		LEFT OUTER JOIN TBL_EMPLOYEEINFO c ON b.company_no = c.COMPANY_NO AND b.emp_nm = c.EMP_NM
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%'	OR a.d2 LIKE '%@%')
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.route_nm,k.seq,k.CAR_REGNO
 {executed in 11 msec}
2023-06-24 02:05:33.182 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
485. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 02:05:33.183 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
485. SELECT ROUTE_NM  FROM TBL_ROUTEINFO ORDER BY 1
 {executed in 0 msec}
2023-06-24 02:05:36.434 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@7274ecc
2023-06-24 02:05:36.435 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
485. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 02:05:36.446 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
485. SELECT /* select_getDrivingOrder : 승무지시 화면용 */ k.route_nm,k.seq,k.CAR_REGNO
		,	listagg(k.emp_nm,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as empNm
		,	listagg(k.PHONE_NO,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as PHONE
		,	listagg(k.value,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as spGb
		,	' ' as empNm_am
		,	' ' as empNm_pm
		,	' ' as phone_am
		,	' ' as phone_pm
		,	' ' as spgb_am
		,	' ' as spgb_pm
	FROM (
	SELECT	a.route_nm,
			a.CAR_REGNO ,
			a.EMP_NM ,
			b.PHONE_NO ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,
			CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a JOIN TBL_EMPLOYEEINFO b ON a.company_no = b.COMPANY_NO AND a.emp_nm = b.EMP_NM 
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT a.route_nm,
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			nvl(c.PHONE_NO,'-') AS phone_no ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		
			CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON
			a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
			AND b.d2 <> ''
			AND a.d2 LIKE b.d2 || '%'
		LEFT OUTER JOIN TBL_EMPLOYEEINFO c ON b.company_no = c.COMPANY_NO AND b.emp_nm = c.EMP_NM
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%'	OR a.d2 LIKE '%@%')
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.route_nm,k.seq,k.CAR_REGNO
 {executed in 10 msec}
2023-06-24 02:08:14.134 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   'N' as bit, a.* from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' and		a.code = '휴가종류' order by a.route_nm
2023-06-24 02:08:14.134 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
487. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 02:08:14.135 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
488. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 02:08:14.135 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
487. SELECT ROUTE_NM  FROM TBL_ROUTEINFO ORDER BY 1
 {executed in 1 msec}
2023-06-24 02:08:14.135 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
488. select   'N' as bit, a.* from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' and		a.code = '휴가종류' order by a.route_nm
 {executed in 0 msec}
2023-06-24 02:08:19.623 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT 	DISTINCT INIT_SEQ  FROM 	TBL_MONTH_ARRANGE_BASIC a WHERE	a.COMPANY_NO = '100' AND 	a.BASE_YM = '2023-05' AND 	a.route_nm = '38번' AND 	a.INIT_SEQ > 0
2023-06-24 02:08:19.623 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - WITH carInfo AS ( SELECT '감차후 총 차량댓수' as CAR_REGNO,'' AS AMPM_GUBUN ,b.emp_nm,0 AS tot_work_date , b.D1    , b.D2    , b.D3    , b.D4    , b.D5    , b.D6    , b.D7    , b.D8    , b.D9    , b.D10 , b.D11    , b.D12    , b.D13    , b.D14    , b.D15    , b.D16    , b.D17    , b.D18    , b.D19    , b.D20 , b.D21    , b.D22    , b.D23    , b.D24    , b.D25    , b.D26    , b.D27    , b.D28    , b.D29    , b.D30 , b.D31 FROM 	TBL_MONTH_ARRANGE_BASIC b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-05' AND    b.DISPATCH_SEQ = 2  AND	b.CAR_REGNO  = '-' ), allocateInfo AS ( SELECT  decode(AMPM_GUBUN,'p','오전','오후') || ' 배정 건수' AS CAR_REGNO,ampm_gubun,'-' emp_nm,0 AS tot_work_date ,0 D1 ,0 D2 ,0 D3 ,0 D4 ,0 D5 ,0 D6 ,0 D7 ,0 D8 ,0 D9 ,0 D10 ,0 D11 ,0 D12 ,0 D13 ,0 D14 ,0 D15 ,0 D16 ,0 D17 ,0 D18 ,0 D19 ,0 D20 ,0 D21 ,0 D22 ,0 D23 ,0 D24 ,0 D25 ,0 D26 ,0 D27 ,0 D28 ,0 d29 ,0 d30 ,0 d31 FROM 	TBL_MONTH_ARRANGE_DETAIL b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-05' AND    b.DISPATCH_SEQ = 6  AND    b.PREV_DAILY_SEQ = 1 AND    b.AMPM_GUBUN IN ('a','p') ) SELECT * FROM carInfo union all SELECT '감차후 총 운행횟수' as CAR_REGNO,' ' AMPM_GUBUN ,b.emp_nm,0 AS tot_work_date , b.D1 *2   , b.D2 *2    , b.D3  *2   , b.D4 *2    , b.D5 *2    , b.D6 *2    , b.D7 *2    , b.D8 *2    , b.D9 *2    , b.D10 *2 , b.D11 *2    , b.D12 *2    , b.D13 *2    , b.D14 *2    , b.D15 *2    , b.D16 *2    , b.D17 *2    , b.D18 *2    , b.D19 *2    , b.D20 *2 , b.D21 *2    , b.D22 *2    , b.D23 *2    , b.D24 *2    , b.D25 *2    , b.D26 *2    , b.D27 *2    , b.D28 *2    , b.D29 *2    , b.D30 *2 , b.D31 *2 FROM 	carInfo b union all SELECT  * FROM 	allocateInfo b union all SELECT  decode(b.AMPM_GUBUN,'p','오전','오후') || ' 미배정 건수' AS CAR_REGNO,b.AMPM_GUBUN ,'-' emp_nm,0 AS tot_work_date ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  FROM 	allocateInfo b,carInfo a
2023-06-24 02:08:19.624 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
487. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 02:08:19.624 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
488. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 02:08:19.625 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
487. SELECT 	DISTINCT INIT_SEQ  FROM 	TBL_MONTH_ARRANGE_BASIC a WHERE	a.COMPANY_NO = '100' AND 	a.BASE_YM = '2023-05' AND 	a.route_nm = '38번' AND 	a.INIT_SEQ > 0
 {executed in 1 msec}
2023-06-24 02:08:19.627 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
488. WITH carInfo AS ( SELECT '감차후 총 차량댓수' as CAR_REGNO,'' AS AMPM_GUBUN ,b.emp_nm,0 AS tot_work_date , b.D1    , b.D2    , b.D3    , b.D4    , b.D5    , b.D6    , b.D7    , b.D8    , b.D9    , b.D10 , b.D11    , b.D12    , b.D13    , b.D14    , b.D15    , b.D16    , b.D17    , b.D18    , b.D19    , b.D20 , b.D21    , b.D22    , b.D23    , b.D24    , b.D25    , b.D26    , b.D27    , b.D28    , b.D29    , b.D30 , b.D31 FROM 	TBL_MONTH_ARRANGE_BASIC b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-05' AND    b.DISPATCH_SEQ = 2  AND	b.CAR_REGNO  = '-' ), allocateInfo AS ( SELECT  decode(AMPM_GUBUN,'p','오전','오후') || ' 배정 건수' AS CAR_REGNO,ampm_gubun,'-' emp_nm,0 AS tot_work_date ,0 D1 ,0 D2 ,0 D3 ,0 D4 ,0 D5 ,0 D6 ,0 D7 ,0 D8 ,0 D9 ,0 D10 ,0 D11 ,0 D12 ,0 D13 ,0 D14 ,0 D15 ,0 D16 ,0 D17 ,0 D18 ,0 D19 ,0 D20 ,0 D21 ,0 D22 ,0 D23 ,0 D24 ,0 D25 ,0 D26 ,0 D27 ,0 D28 ,0 d29 ,0 d30 ,0 d31 FROM 	TBL_MONTH_ARRANGE_DETAIL b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-05' AND    b.DISPATCH_SEQ = 6  AND    b.PREV_DAILY_SEQ = 1 AND    b.AMPM_GUBUN IN ('a','p') ) SELECT * FROM carInfo union all SELECT '감차후 총 운행횟수' as CAR_REGNO,' ' AMPM_GUBUN ,b.emp_nm,0 AS tot_work_date , b.D1 *2   , b.D2 *2    , b.D3  *2   , b.D4 *2    , b.D5 *2    , b.D6 *2    , b.D7 *2    , b.D8 *2    , b.D9 *2    , b.D10 *2 , b.D11 *2    , b.D12 *2    , b.D13 *2    , b.D14 *2    , b.D15 *2    , b.D16 *2    , b.D17 *2    , b.D18 *2    , b.D19 *2    , b.D20 *2 , b.D21 *2    , b.D22 *2    , b.D23 *2    , b.D24 *2    , b.D25 *2    , b.D26 *2    , b.D27 *2    , b.D28 *2    , b.D29 *2    , b.D30 *2 , b.D31 *2 FROM 	carInfo b union all SELECT  * FROM 	allocateInfo b union all SELECT  decode(b.AMPM_GUBUN,'p','오전','오후') || ' 미배정 건수' AS CAR_REGNO,b.AMPM_GUBUN ,'-' emp_nm,0 AS tot_work_date ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  FROM 	allocateInfo b,carInfo a
 {executed in 3 msec}
2023-06-24 02:08:19.627 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - SELECT '[38번] 2023-05월' as CAR_REGNO,b.emp_nm,0 AS tot_work_date , b.D1    , b.D2    , b.D3    , b.D4    , b.D5    , b.D6    , b.D7    , b.D8    , b.D9    , b.D10 , b.D11    , b.D12    , b.D13    , b.D14    , b.D15    , b.D16    , b.D17    , b.D18    , b.D19    , b.D20 , b.D21    , b.D22    , b.D23    , b.D24    , b.D25    , b.D26    , b.D27    , b.D28    , b.D29    , b.D30 , b.D31 ,'N' as bit FROM 	TBL_MONTH_ARRANGE_DETAIL b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-05' AND    b.DISPATCH_SEQ = 1
2023-06-24 02:08:19.628 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
488. SELECT '[38번] 2023-05월' as CAR_REGNO,b.emp_nm,0 AS tot_work_date , b.D1    , b.D2    , b.D3    , b.D4    , b.D5    , b.D6    , b.D7    , b.D8    , b.D9    , b.D10 , b.D11    , b.D12    , b.D13    , b.D14    , b.D15    , b.D16    , b.D17    , b.D18    , b.D19    , b.D20 , b.D21    , b.D22    , b.D23    , b.D24    , b.D25    , b.D26    , b.D27    , b.D28    , b.D29    , b.D30 , b.D31 ,'N' as bit FROM 	TBL_MONTH_ARRANGE_DETAIL b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-05' AND    b.DISPATCH_SEQ = 1
 {executed in 1 msec}
2023-06-24 02:08:19.628 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - SELECT b.CAR_REGNO,b.emp_nm , 0 AS tot_work_date ,b.D1  ,b.D2  ,b.D3  ,b.D4  ,b.D5  ,b.D6  ,b.D7  ,b.D8  ,b.D9  ,b.D10 ,b.D11 ,b.D12 ,b.D13 ,b.D14 ,b.D15 ,b.D16 ,b.D17 ,b.D18 ,b.D19 ,b.D20 ,b.D21 ,b.D22 ,b.D23 ,b.D24 ,b.D25 ,b.D26 ,b.D27 ,b.D28 ,b.D29 ,b.D30 ,b.D31 ,'N' AS bit FROM 	TBL_MONTH_ARRANGE_DETAIL b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-05' AND    b.DISPATCH_SEQ = 6 AND    b.CAR_REGNO not like 'SP%' order by b.dispatch_seq,b.CAR_REGNO ,b.ampm_gubun,b.prev_daily_seq
2023-06-24 02:08:19.630 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
488. SELECT b.CAR_REGNO,b.emp_nm , 0 AS tot_work_date ,b.D1  ,b.D2  ,b.D3  ,b.D4  ,b.D5  ,b.D6  ,b.D7  ,b.D8  ,b.D9  ,b.D10 ,b.D11 ,b.D12 ,b.D13 ,b.D14 ,b.D15 ,b.D16 ,b.D17 ,b.D18 ,b.D19 ,b.D20 ,b.D21 ,b.D22 ,b.D23 ,b.D24 ,b.D25 ,b.D26 ,b.D27 ,b.D28 ,b.D29 ,b.D30 ,b.D31 ,'N' AS bit FROM 	TBL_MONTH_ARRANGE_DETAIL b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-05' AND    b.DISPATCH_SEQ = 6 AND    b.CAR_REGNO not like 'SP%' order by b.dispatch_seq,b.CAR_REGNO ,b.ampm_gubun,b.prev_daily_seq
 {executed in 2 msec}
2023-06-24 02:08:19.632 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - WITH sp_maxinfo AS ( SELECT  b.CAR_REGNO,b.EMP_NM ,nvl(max(CASE WHEN nvl(b.D1 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D1   ELSE '#' || b.D1  end),' ') as D1 ,nvl(max(CASE WHEN nvl(b.D2 ,'') = '' THEN '' WHEN b.route_nm = '38번' tHEN b.D2   ELSE '#' || b.D2  end),' ') as D2 ,nvl(max(CASE WHEN nvl(b.D3 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D3   ELSE '#' || b.D3   end),' ') as D3 ,nvl(max(CASE WHEN nvl(b.D4 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D4   ELSE '#' || b.D4   end),' ') as D4 ,nvl(max(CASE WHEN nvl(b.D5 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D5   ELSE '#' || b.D5   end),' ') as D5 ,nvl(max(CASE WHEN nvl(b.D6 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D6   ELSE '#' || b.D6   end),' ') as D6 ,nvl(max(CASE WHEN nvl(b.D7 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D7   ELSE '#' || b.D7   end),' ') as D7 ,nvl(max(CASE WHEN nvl(b.D8 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D8   ELSE '#' || b.D8   end),' ') as D8 ,nvl(max(CASE WHEN nvl(b.D9 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D9   ELSE '#' || b.D9   end),' ') as D9 ,nvl(max(CASE WHEN nvl(b.D10,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D10  ELSE '#' || b.D10  end),' ') as D10 ,nvl(max(CASE WHEN nvl(b.D11,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D11  ELSE '#' || b.D11  end),' ') as D11 ,nvl(max(CASE WHEN nvl(b.D12,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D12  ELSE '#' || b.D12  end),' ') as D12 ,nvl(max(CASE WHEN nvl(b.D13,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D13  ELSE '#' || b.D13  end),' ') as D13 ,nvl(max(CASE WHEN nvl(b.D14,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D14  ELSE '#' || b.D14  end),' ') as D14 ,nvl(max(CASE WHEN nvl(b.D15,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D15  ELSE '#' || b.D15  end),' ') as D15 ,nvl(max(CASE WHEN nvl(b.D16,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D16  ELSE '#' || b.D16  end),' ') as D16 ,nvl(max(CASE WHEN nvl(b.D17,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D17  ELSE '#' || b.D17  end),' ') as D17 ,nvl(max(CASE WHEN nvl(b.D18,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D18  ELSE '#' || b.D18  end),' ') as D18 ,nvl(max(CASE WHEN nvl(b.D19,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D19  ELSE '#' || b.D19  end),' ') as D19 ,nvl(max(CASE WHEN nvl(b.D20,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D20  ELSE '#' || b.D20  end),' ') as D20 ,nvl(max(CASE WHEN nvl(b.D21,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D21  ELSE '#' || b.D21  end),' ') as D21 ,nvl(max(CASE WHEN nvl(b.D22,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D22  ELSE '#' || b.D22  end),' ') as D22 ,nvl(max(CASE WHEN nvl(b.D23,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D23  ELSE '#' || b.D23  end),' ') as D23 ,nvl(max(CASE WHEN nvl(b.D24,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D24  ELSE '#' || b.D24  end),' ') as D24 ,nvl(max(CASE WHEN nvl(b.D25,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D25  ELSE '#' || b.D25  end),' ') as D25 ,nvl(max(CASE WHEN nvl(b.D26,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D26  ELSE '#' || b.D26  end),' ') as D26 ,nvl(max(CASE WHEN nvl(b.D27,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D27  ELSE '#' || b.D27  end),' ') as D27 ,nvl(max(CASE WHEN nvl(b.D28,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D28  ELSE '#' || b.D28  end),' ') as D28 ,nvl(max(CASE WHEN nvl(b.D29,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D29  ELSE '#' || b.D29  end),' ') as D29 ,nvl(max(CASE WHEN nvl(b.D30,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D30  ELSE '#' || b.D30  end),' ') as D30 ,nvl(max(CASE WHEN nvl(b.D31,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D31  ELSE '#' || b.D31  end),' ') as D31 FROM 	TBL_MONTH_ARRANGE_DETAIL b where 	b.company_no = '100' AND b.BASE_YM = '2023-05' and b.DISPATCH_SEQ = 6 and b.init_seq = 0 AND b.CAR_REGNO LIKE  'SP%' GROUP BY b.CAR_REGNO,b.emp_nm ) SELECT b.*,'N' as bit ,	LENGTH (REGEXP_REPLACE(b.D1||b.D2||b.D3||b.D4||b.D5||b.D6||b.D7||b.D8||b.D9||b.D10||b.D11||b.D12||b.D13||b.D14||b.D15||b.D16||b.D17||b.D18||b.D19||b.D20||b.D21||b.D22||b.D23||b.D24||b.D25||b.D26||b.D27||b.D28||b.D29||b.D30||b.D31,'[0-9# ]','') ) AS tot_work_date FROM ( SELECT  a.prev_daily_seq,b.* FROM 	TBL_MONTH_ARRANGE_DETAIL a LEFT OUTER JOIN sp_maxinfo b ON	a.emp_nm = b.EMP_NM AND  a.car_regno = b.CAR_REGNO where 	a.company_no = '100' AND a.BASE_YM = '2023-05' and a.DISPATCH_SEQ = 6 and a.init_seq = 0 AND a.CAR_REGNO LIKE  'SP%' AND a.emp_nm = decode('','',a.emp_nm,'') AND a.route_nm = '38번' ) b ORDER BY b.prev_daily_seq
2023-06-24 02:08:19.646 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
488. WITH sp_maxinfo AS ( SELECT  b.CAR_REGNO,b.EMP_NM ,nvl(max(CASE WHEN nvl(b.D1 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D1   ELSE '#' || b.D1  end),' ') as D1 ,nvl(max(CASE WHEN nvl(b.D2 ,'') = '' THEN '' WHEN b.route_nm = '38번' tHEN b.D2   ELSE '#' || b.D2  end),' ') as D2 ,nvl(max(CASE WHEN nvl(b.D3 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D3   ELSE '#' || b.D3   end),' ') as D3 ,nvl(max(CASE WHEN nvl(b.D4 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D4   ELSE '#' || b.D4   end),' ') as D4 ,nvl(max(CASE WHEN nvl(b.D5 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D5   ELSE '#' || b.D5   end),' ') as D5 ,nvl(max(CASE WHEN nvl(b.D6 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D6   ELSE '#' || b.D6   end),' ') as D6 ,nvl(max(CASE WHEN nvl(b.D7 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D7   ELSE '#' || b.D7   end),' ') as D7 ,nvl(max(CASE WHEN nvl(b.D8 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D8   ELSE '#' || b.D8   end),' ') as D8 ,nvl(max(CASE WHEN nvl(b.D9 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D9   ELSE '#' || b.D9   end),' ') as D9 ,nvl(max(CASE WHEN nvl(b.D10,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D10  ELSE '#' || b.D10  end),' ') as D10 ,nvl(max(CASE WHEN nvl(b.D11,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D11  ELSE '#' || b.D11  end),' ') as D11 ,nvl(max(CASE WHEN nvl(b.D12,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D12  ELSE '#' || b.D12  end),' ') as D12 ,nvl(max(CASE WHEN nvl(b.D13,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D13  ELSE '#' || b.D13  end),' ') as D13 ,nvl(max(CASE WHEN nvl(b.D14,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D14  ELSE '#' || b.D14  end),' ') as D14 ,nvl(max(CASE WHEN nvl(b.D15,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D15  ELSE '#' || b.D15  end),' ') as D15 ,nvl(max(CASE WHEN nvl(b.D16,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D16  ELSE '#' || b.D16  end),' ') as D16 ,nvl(max(CASE WHEN nvl(b.D17,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D17  ELSE '#' || b.D17  end),' ') as D17 ,nvl(max(CASE WHEN nvl(b.D18,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D18  ELSE '#' || b.D18  end),' ') as D18 ,nvl(max(CASE WHEN nvl(b.D19,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D19  ELSE '#' || b.D19  end),' ') as D19 ,nvl(max(CASE WHEN nvl(b.D20,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D20  ELSE '#' || b.D20  end),' ') as D20 ,nvl(max(CASE WHEN nvl(b.D21,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D21  ELSE '#' || b.D21  end),' ') as D21 ,nvl(max(CASE WHEN nvl(b.D22,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D22  ELSE '#' || b.D22  end),' ') as D22 ,nvl(max(CASE WHEN nvl(b.D23,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D23  ELSE '#' || b.D23  end),' ') as D23 ,nvl(max(CASE WHEN nvl(b.D24,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D24  ELSE '#' || b.D24  end),' ') as D24 ,nvl(max(CASE WHEN nvl(b.D25,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D25  ELSE '#' || b.D25  end),' ') as D25 ,nvl(max(CASE WHEN nvl(b.D26,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D26  ELSE '#' || b.D26  end),' ') as D26 ,nvl(max(CASE WHEN nvl(b.D27,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D27  ELSE '#' || b.D27  end),' ') as D27 ,nvl(max(CASE WHEN nvl(b.D28,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D28  ELSE '#' || b.D28  end),' ') as D28 ,nvl(max(CASE WHEN nvl(b.D29,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D29  ELSE '#' || b.D29  end),' ') as D29 ,nvl(max(CASE WHEN nvl(b.D30,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D30  ELSE '#' || b.D30  end),' ') as D30 ,nvl(max(CASE WHEN nvl(b.D31,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D31  ELSE '#' || b.D31  end),' ') as D31 FROM 	TBL_MONTH_ARRANGE_DETAIL b where 	b.company_no = '100' AND b.BASE_YM = '2023-05' and b.DISPATCH_SEQ = 6 and b.init_seq = 0 AND b.CAR_REGNO LIKE  'SP%' GROUP BY b.CAR_REGNO,b.emp_nm ) SELECT b.*,'N' as bit ,	LENGTH (REGEXP_REPLACE(b.D1||b.D2||b.D3||b.D4||b.D5||b.D6||b.D7||b.D8||b.D9||b.D10||b.D11||b.D12||b.D13||b.D14||b.D15||b.D16||b.D17||b.D18||b.D19||b.D20||b.D21||b.D22||b.D23||b.D24||b.D25||b.D26||b.D27||b.D28||b.D29||b.D30||b.D31,'[0-9# ]','') ) AS tot_work_date FROM ( SELECT  a.prev_daily_seq,b.* FROM 	TBL_MONTH_ARRANGE_DETAIL a LEFT OUTER JOIN sp_maxinfo b ON	a.emp_nm = b.EMP_NM AND  a.car_regno = b.CAR_REGNO where 	a.company_no = '100' AND a.BASE_YM = '2023-05' and a.DISPATCH_SEQ = 6 and a.init_seq = 0 AND a.CAR_REGNO LIKE  'SP%' AND a.emp_nm = decode('','',a.emp_nm,'') AND a.route_nm = '38번' ) b ORDER BY b.prev_daily_seq
 {executed in 13 msec}
2023-06-24 02:08:20.201 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@93382024
2023-06-24 02:08:20.201 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_DRIVERINFO_DETAIL} 
2023-06-24 02:08:20.201 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT  'N' as bit,CAR_REGNO ,EMP_NM ,prev_daily_seq ,PREV_WORK_PATTERN ,ampm_gubun, off_group, CAR_REGNO||EMP_NM as key FROM TBM_DRIVERINFO_DETAIL where   company_no = '100' AND 	route_nm = '38번' AND     BASE_YM = '2023-05'
2023-06-24 02:08:20.202 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
487. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 02:08:20.203 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
487. SELECT  'N' as bit,CAR_REGNO ,EMP_NM ,prev_daily_seq ,PREV_WORK_PATTERN ,ampm_gubun, off_group, CAR_REGNO||EMP_NM as key FROM TBM_DRIVERINFO_DETAIL where   company_no = '100' AND 	route_nm = '38번' AND     BASE_YM = '2023-05'
 {executed in 1 msec}
2023-06-24 02:08:20.239 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT 	a.ROUTE_NM,b.STATUS,b.LAST_CHG_USER,b.LAST_CHG_DATE FROM 	TBL_ROUTEINFO a left outer join TBM_MONTH_ARRANGE_STATUS b on	a.company_no = b.company_no and a.route_nm   = b.route_nm AND b.BASE_YM = '2023-05' AND	b.ROUTE_NM like '' || '%' WHERE 	a.company_no = '100' ORDER BY 1
2023-06-24 02:08:20.240 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
487. SELECT 	a.ROUTE_NM,b.STATUS,b.LAST_CHG_USER,b.LAST_CHG_DATE FROM 	TBL_ROUTEINFO a left outer join TBM_MONTH_ARRANGE_STATUS b on	a.company_no = b.company_no and a.route_nm   = b.route_nm AND b.BASE_YM = '2023-05' AND	b.ROUTE_NM like '' || '%' WHERE 	a.company_no = '100' ORDER BY 1
 {executed in 0 msec}
2023-06-24 02:08:27.378 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@97e27e68
2023-06-24 02:08:27.378 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_DRIVERINFO_SP} 
2023-06-24 02:08:27.378 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT decode(ROUTE_NM,'38번','0'||ROUTE_NM,'1'||ROUTE_NM)   AS ord,ROUTE_NM ,EMP_NM ,BIRTH_YMD ,ENTER_DATE, HOBONG FROM TBL_DRIVERINFO td WHERE COMPANY_NO ='100' AND SP_GB  = 'SP' AND ACTIVE_STATUS ='재직' ORDER BY 1,BIRTH_YMD
2023-06-24 02:08:27.379 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
487. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 02:08:27.380 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
487. SELECT decode(ROUTE_NM,'38번','0'||ROUTE_NM,'1'||ROUTE_NM)   AS ord,ROUTE_NM ,EMP_NM ,BIRTH_YMD ,ENTER_DATE, HOBONG FROM TBL_DRIVERINFO td WHERE COMPANY_NO ='100' AND SP_GB  = 'SP' AND ACTIVE_STATUS ='재직' ORDER BY 1,BIRTH_YMD
 {executed in 1 msec}
2023-06-24 02:08:28.253 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f1605ce
2023-06-24 02:08:28.253 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ROUTE_WEEKSEQ_INFO} 
2023-06-24 02:08:28.253 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT 	WEEK_GB ,	decode(SUBSTR(WEEK_GB,1,1),'공','공휴일','토','토요일','평','평일') as WEEK_GB1 ,	decode(SUBSTR(WEEK_GB,2,1),'공','공휴일','토','토요일','평','평일') as WEEK_GB2 , 	NEXT_WORK_INTERVAL , 	'N' as bit ,	route_nm FROM 	TBM_ROUTE_WEEKSEQ_INFO  WHERE 	COMPANY_NO ='100' AND 	route_nm = '38번' ORDER BY 1
2023-06-24 02:08:28.254 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
487. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 02:08:28.255 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
487. SELECT 	WEEK_GB ,	decode(SUBSTR(WEEK_GB,1,1),'공','공휴일','토','토요일','평','평일') as WEEK_GB1 ,	decode(SUBSTR(WEEK_GB,2,1),'공','공휴일','토','토요일','평','평일') as WEEK_GB2 , 	NEXT_WORK_INTERVAL , 	'N' as bit ,	route_nm FROM 	TBM_ROUTE_WEEKSEQ_INFO  WHERE 	COMPANY_NO ='100' AND 	route_nm = '38번' ORDER BY 1
 {executed in 0 msec}
2023-06-24 02:08:30.050 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@62466705
2023-06-24 02:08:30.050 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_DRIVER_ATTENDANCE_INFO} 
2023-06-24 02:08:30.050 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT  substr(b.start_date,6) as start_date ,	b.emp_nm ,	b.attendance_type , 	b.memo FROM TBL_DRIVERINFO a,TBM_DRIVER_ATTENDANCE_INFO b WHERE 	a.COMPANY_NO ='100' AND 	a.route_nm = '38번' AND 	a.COMPANY_NO  = b.COMPANY_NO AND 	a.EMP_NM = b.EMP_NM AND     b.delete_yn = 'N' AND 	b.START_DATE LIKE '2023-05' || '%' ORDER BY 1,2
2023-06-24 02:08:30.051 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
487. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 02:08:30.053 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
487. SELECT  substr(b.start_date,6) as start_date ,	b.emp_nm ,	b.attendance_type , 	b.memo FROM TBL_DRIVERINFO a,TBM_DRIVER_ATTENDANCE_INFO b WHERE 	a.COMPANY_NO ='100' AND 	a.route_nm = '38번' AND 	a.COMPANY_NO  = b.COMPANY_NO AND 	a.EMP_NM = b.EMP_NM AND     b.delete_yn = 'N' AND 	b.START_DATE LIKE '2023-05' || '%' ORDER BY 1,2
 {executed in 2 msec}
2023-06-24 02:08:32.136 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT 	a.ROUTE_NM ,	a.auto_cnt as tot_count ,	max(CASE WHEN REDUCT_WEEK = 7 THEN REDUCT_COUNT ELSE 0 END) sat_count ,	max(CASE WHEN REDUCT_WEEK = 1 THEN REDUCT_COUNT ELSE 0 END) sun_count ,   'N' as bit FROM TBL_ROUTEINFO a LEFT OUTER JOIN TBM_ROUTE_REDUCTION_INFO b ON  	a.COMPANY_NO = b.COMPANY_NO  AND 	a.ROUTE_NM = b.ROUTE_NM  GROUP BY a.ROUTE_NM ,a.auto_cnt		ORDER BY 1
2023-06-24 02:08:32.137 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
488. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 02:08:32.138 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
488. SELECT 	a.ROUTE_NM ,	a.auto_cnt as tot_count ,	max(CASE WHEN REDUCT_WEEK = 7 THEN REDUCT_COUNT ELSE 0 END) sat_count ,	max(CASE WHEN REDUCT_WEEK = 1 THEN REDUCT_COUNT ELSE 0 END) sun_count ,   'N' as bit FROM TBL_ROUTEINFO a LEFT OUTER JOIN TBM_ROUTE_REDUCTION_INFO b ON  	a.COMPANY_NO = b.COMPANY_NO  AND 	a.ROUTE_NM = b.ROUTE_NM  GROUP BY a.ROUTE_NM ,a.auto_cnt		ORDER BY 1
 {executed in 1 msec}
2023-06-24 02:09:47.716 INFO  [http-nio-10010-exec-1] [com.pjy.dashboard.dao.DynamicSqlDao] - getupdateSql_arrangeDetail sql : update  TBL_MONTH_ARRANGE_DETAIL   set    d1  = :d1          ,d2  = :d2          ,d3  = :d3          ,d4  = :d4          ,d5  = :d5          ,d6  = :d6          ,d7  = :d7          ,d8  = :d8          ,d9  = :d9          ,d10 = :d10         ,d11 = :d11         ,d12 = :d12         ,d13 = :d13         ,d14 = :d14         ,d15 = :d15         ,d16 = :d16         ,d17 = :d17         ,d18 = :d18         ,d19 = :d19         ,d20 = :d20         ,d21 = :d21         ,d22 = :d22         ,d23 = :d23         ,d24 = :d24         ,d25 = :d25         ,d26 = :d26         ,d27 = :d27         ,d28 = :d28         ,d29 = :d29         ,d30 = :d30         ,d31 = :d31 	where company_no = '100' and BASE_YM = '2023-05' and route_nm = '38번' and init_seq = 0 and car_regno = :car_regno and emp_nm = :emp_nm and dispatch_seq = 6 
2023-06-24 02:09:47.717 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
495. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 02:09:47.721 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeBatch(ProxyStatement.java:128)
495. batching 10 statements:
 1:  update  TBL_MONTH_ARRANGE_DETAIL   set    d1  = '5p*-'          ,d2  = '6a'          ,d3  = '7a'          ,d4  = '8a'          ,d5  = '11a*'          ,d6  = '4a'          ,d7  = '8a'          ,d8  = '13a'          ,d9  = '1a*'          ,d10 = '2p'         ,d11 = '3p'         ,d12 = '4p@'         ,d13 = '6p*'         ,d14 = '10p'         ,d15 = '2p'         ,d16 = '3p'         ,d17 = '4p*'         ,d18 = '5a'         ,d19 = '6a'         ,d20 = '8a'         ,d21 = '12a*'         ,d22 = '4a'         ,d23 = '5a'         ,d24 = '6a'         ,d25 = '7a*'         ,d26 = '8p'         ,d27 = '11p'         ,d28 = '6p'         ,d29 = '1p*'         ,d30 = '6p'         ,d31 = '7p' 	where company_no = '100' and BASE_YM = '2023-05' and route_nm = '38번' and init_seq = 0 and car_regno = '인천70바3545' and emp_nm = '이춘복' and dispatch_seq = 6 
 2:  update  TBL_MONTH_ARRANGE_DETAIL   set    d1  = '9a*-'          ,d2  = '10p'          ,d3  = '11p'          ,d4  = '12p'          ,d5  = '2p*-'          ,d6  = '8p'          ,d7  = '12p'          ,d8  = '4p'          ,d9  = '5p*'          ,d10 = '6a@'         ,d11 = '7a@'         ,d12 = '8a'         ,d13 = '10a*'         ,d14 = '1a'         ,d15 = '6a'         ,d16 = '7a'         ,d17 = '8a*'         ,d18 = '9p'         ,d19 = '10p'         ,d20 = '12p'         ,d21 = '3p*'         ,d22 = '8p'         ,d23 = '9p'         ,d24 = '10p'         ,d25 = '11p*'         ,d26 = '12a'         ,d27 = '2a'         ,d28 = '10a'         ,d29 = '5a*'         ,d30 = '10a'         ,d31 = '11a' 	where company_no = '100' and BASE_YM = '2023-05' and route_nm = '38번' and init_seq = 0 and car_regno = '인천70바3549' and emp_nm = '고상욱' and dispatch_seq = 6 
 3:  update  TBL_MONTH_ARRANGE_DETAIL   set    d1  = '12a@-'          ,d2  = '13a@'          ,d3  = '1a@'          ,d4  = '2a*'          ,d5  = '5a'          ,d6  = '11a'          ,d7  = '2a'          ,d8  = '7a*'          ,d9  = '8p'          ,d10 = '9p'         ,d11 = '10p'         ,d12 = '11p*'         ,d13 = '13p'         ,d14 = '4p'         ,d15 = '9p'         ,d16 = '10p*'         ,d17 = '11a'         ,d18 = '12a'         ,d19 = '13a'         ,d20 = '2a*'         ,d21 = '6a'         ,d22 = '11a'         ,d23 = '12a'         ,d24 = '13a*'         ,d25 = '1p'         ,d26 = '2p'         ,d27 = '5p'         ,d28 = '13p*'         ,d29 = '8p'         ,d30 = '13p'         ,d31 = '1p' 	where company_no = '100' and BASE_YM = '2023-05' and route_nm = '38번' and init_seq = 0 and car_regno = '인천70바3552' and emp_nm = '박병승' and dispatch_seq = 6 
 4:  update  TBL_MONTH_ARRANGE_DETAIL   set    d1  = '13a*-'          ,d2  = '1p'          ,d3  = '2p'          ,d4  = '3p'          ,d5  = '6p*-'          ,d6  = '12p@'          ,d7  = '3p'          ,d8  = '8p'          ,d9  = '9p*'          ,d10 = '10a'         ,d11 = '11a'         ,d12 = '12a'         ,d13 = '1a*'         ,d14 = '5a'         ,d15 = '10a'         ,d16 = '11a'         ,d17 = '12a*'         ,d18 = '13p'         ,d19 = '1p'         ,d20 = '3p'         ,d21 = '7p*'         ,d22 = '12p'         ,d23 = '13p'         ,d24 = '1p'         ,d25 = '2p*'         ,d26 = '3a'         ,d27 = '6a'         ,d28 = '1a'         ,d29 = '9a*'         ,d30 = '1a'         ,d31 = '2a' 	where company_no = '100' and BASE_YM = '2023-05' and route_nm = '38번' and init_seq = 0 and car_regno = '인천70바3553' and emp_nm = '이종흔' and dispatch_seq = 6 
 5:  update  TBL_MONTH_ARRANGE_DETAIL   set    d1  = '13p*-'          ,d2  = '1a'          ,d3  = '2a'          ,d4  = '3a'          ,d5  = '6a*-'          ,d6  = '12a'          ,d7  = '3a'          ,d8  = '8a'          ,d9  = '9a*'          ,d10 = '10p'         ,d11 = '11p'         ,d12 = '12p'         ,d13 = '1p*'         ,d14 = '5p'         ,d15 = '10p@'         ,d16 = '11p@'         ,d17 = '12p*'         ,d18 = '13a@'         ,d19 = '1a'         ,d20 = '3a'         ,d21 = '7a*'         ,d22 = '12a'         ,d23 = '13a'         ,d24 = '1a'         ,d25 = '2a*'         ,d26 = '3p'         ,d27 = '6p'         ,d28 = '1p'         ,d29 = '9p*'         ,d30 = '1p'         ,d31 = '2p' 	where company_no = '100' and BASE_YM = '2023-05' and route_nm = '38번' and init_seq = 0 and car_regno = '인천70바3553' and emp_nm = '장명근' and dispatch_seq = 6 
 6:  update  TBL_MONTH_ARRANGE_DETAIL   set    d1  = '9a*'          ,d2  = ''          ,d3  = ''          ,d4  = ''          ,d5  = '6p*'          ,d6  = ''          ,d7  = ''          ,d8  = ''          ,d9  = ''          ,d10 = ''         ,d11 = ''         ,d12 = ''         ,d13 = ''         ,d14 = ''         ,d15 = ''         ,d16 = ''         ,d17 = ''         ,d18 = ''         ,d19 = ''         ,d20 = ''         ,d21 = ''         ,d22 = ''         ,d23 = ''         ,d24 = ''         ,d25 = ''         ,d26 = ''         ,d27 = ''         ,d28 = ''         ,d29 = ''         ,d30 = ''         ,d31 = '' 	where company_no = '100' and BASE_YM = '2023-05' and route_nm = '38번' and init_seq = 0 and car_regno = 'SP(38번)' and emp_nm = '장길영' and dispatch_seq = 6 
 7:  update  TBL_MONTH_ARRANGE_DETAIL   set    d1  = '13a*'          ,d2  = ''          ,d3  = ''          ,d4  = ''          ,d5  = '2p*'          ,d6  = ''          ,d7  = ''          ,d8  = ''          ,d9  = ''          ,d10 = ''         ,d11 = ''         ,d12 = ''         ,d13 = ''         ,d14 = ''         ,d15 = ''         ,d16 = ''         ,d17 = ''         ,d18 = ''         ,d19 = ''         ,d20 = ''         ,d21 = ''         ,d22 = ''         ,d23 = ''         ,d24 = ''         ,d25 = ''         ,d26 = ''         ,d27 = ''         ,d28 = ''         ,d29 = ''         ,d30 = ''         ,d31 = '' 	where company_no = '100' and BASE_YM = '2023-05' and route_nm = '38번' and init_seq = 0 and car_regno = 'SP(38번)' and emp_nm = '송용재' and dispatch_seq = 6 
 8:  update  TBL_MONTH_ARRANGE_DETAIL   set    d1  = '5p*'          ,d2  = ''          ,d3  = ''          ,d4  = ''          ,d5  = '2a*'          ,d6  = ''          ,d7  = ''          ,d8  = ''          ,d9  = ''          ,d10 = ''         ,d11 = ''         ,d12 = ''         ,d13 = ''         ,d14 = ''         ,d15 = ''         ,d16 = ''         ,d17 = ''         ,d18 = ''         ,d19 = ''         ,d20 = ''         ,d21 = ''         ,d22 = ''         ,d23 = ''         ,d24 = ''         ,d25 = ''         ,d26 = ''         ,d27 = ''         ,d28 = ''         ,d29 = ''         ,d30 = ''         ,d31 = '' 	where company_no = '100' and BASE_YM = '2023-05' and route_nm = '38번' and init_seq = 0 and car_regno = 'SP(38번)' and emp_nm = '이호용' and dispatch_seq = 6 
 9:  update  TBL_MONTH_ARRANGE_DETAIL   set    d1  = '12a@'          ,d2  = ''          ,d3  = ''          ,d4  = ''          ,d5  = ''          ,d6  = ''          ,d7  = ''          ,d8  = ''          ,d9  = ''          ,d10 = ''         ,d11 = ''         ,d12 = ''         ,d13 = ''         ,d14 = ''         ,d15 = ''         ,d16 = ''         ,d17 = ''         ,d18 = ''         ,d19 = ''         ,d20 = ''         ,d21 = ''         ,d22 = ''         ,d23 = ''         ,d24 = ''         ,d25 = ''         ,d26 = ''         ,d27 = ''         ,d28 = ''         ,d29 = ''         ,d30 = ''         ,d31 = '' 	where company_no = '100' and BASE_YM = '2023-05' and route_nm = '38번' and init_seq = 0 and car_regno = 'SP(38번)' and emp_nm = '편정범' and dispatch_seq = 6 
10:  update  TBL_MONTH_ARRANGE_DETAIL   set    d1  = '13p*'          ,d2  = ''          ,d3  = ''          ,d4  = ''          ,d5  = ''          ,d6  = ''          ,d7  = ''          ,d8  = ''          ,d9  = ''          ,d10 = ''         ,d11 = ''         ,d12 = ''         ,d13 = ''         ,d14 = ''         ,d15 = ''         ,d16 = ''         ,d17 = ''         ,d18 = ''         ,d19 = ''         ,d20 = ''         ,d21 = ''         ,d22 = ''         ,d23 = ''         ,d24 = ''         ,d25 = ''         ,d26 = ''         ,d27 = ''         ,d28 = ''         ,d29 = ''         ,d30 = ''         ,d31 = '' 	where company_no = '100' and BASE_YM = '2023-05' and route_nm = '38번' and init_seq = 0 and car_regno = 'SP(38번)' and emp_nm = '배오성' and dispatch_seq = 6
 {executed in 3 msec}
2023-06-24 02:09:47.736 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT 	DISTINCT INIT_SEQ  FROM 	TBL_MONTH_ARRANGE_BASIC a WHERE	a.COMPANY_NO = '100' AND 	a.BASE_YM = '2023-05' AND 	a.route_nm = '38번' AND 	a.INIT_SEQ > 0
2023-06-24 02:09:47.736 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - WITH carInfo AS ( SELECT '감차후 총 차량댓수' as CAR_REGNO,'' AS AMPM_GUBUN ,b.emp_nm,0 AS tot_work_date , b.D1    , b.D2    , b.D3    , b.D4    , b.D5    , b.D6    , b.D7    , b.D8    , b.D9    , b.D10 , b.D11    , b.D12    , b.D13    , b.D14    , b.D15    , b.D16    , b.D17    , b.D18    , b.D19    , b.D20 , b.D21    , b.D22    , b.D23    , b.D24    , b.D25    , b.D26    , b.D27    , b.D28    , b.D29    , b.D30 , b.D31 FROM 	TBL_MONTH_ARRANGE_BASIC b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-05' AND    b.DISPATCH_SEQ = 2  AND	b.CAR_REGNO  = '-' ), allocateInfo AS ( SELECT  decode(AMPM_GUBUN,'p','오전','오후') || ' 배정 건수' AS CAR_REGNO,ampm_gubun,'-' emp_nm,0 AS tot_work_date ,0 D1 ,0 D2 ,0 D3 ,0 D4 ,0 D5 ,0 D6 ,0 D7 ,0 D8 ,0 D9 ,0 D10 ,0 D11 ,0 D12 ,0 D13 ,0 D14 ,0 D15 ,0 D16 ,0 D17 ,0 D18 ,0 D19 ,0 D20 ,0 D21 ,0 D22 ,0 D23 ,0 D24 ,0 D25 ,0 D26 ,0 D27 ,0 D28 ,0 d29 ,0 d30 ,0 d31 FROM 	TBL_MONTH_ARRANGE_DETAIL b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-05' AND    b.DISPATCH_SEQ = 6  AND    b.PREV_DAILY_SEQ = 1 AND    b.AMPM_GUBUN IN ('a','p') ) SELECT * FROM carInfo union all SELECT '감차후 총 운행횟수' as CAR_REGNO,' ' AMPM_GUBUN ,b.emp_nm,0 AS tot_work_date , b.D1 *2   , b.D2 *2    , b.D3  *2   , b.D4 *2    , b.D5 *2    , b.D6 *2    , b.D7 *2    , b.D8 *2    , b.D9 *2    , b.D10 *2 , b.D11 *2    , b.D12 *2    , b.D13 *2    , b.D14 *2    , b.D15 *2    , b.D16 *2    , b.D17 *2    , b.D18 *2    , b.D19 *2    , b.D20 *2 , b.D21 *2    , b.D22 *2    , b.D23 *2    , b.D24 *2    , b.D25 *2    , b.D26 *2    , b.D27 *2    , b.D28 *2    , b.D29 *2    , b.D30 *2 , b.D31 *2 FROM 	carInfo b union all SELECT  * FROM 	allocateInfo b union all SELECT  decode(b.AMPM_GUBUN,'p','오전','오후') || ' 미배정 건수' AS CAR_REGNO,b.AMPM_GUBUN ,'-' emp_nm,0 AS tot_work_date ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  FROM 	allocateInfo b,carInfo a
2023-06-24 02:09:47.737 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
496. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 02:09:47.737 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
495. SELECT 	DISTINCT INIT_SEQ  FROM 	TBL_MONTH_ARRANGE_BASIC a WHERE	a.COMPANY_NO = '100' AND 	a.BASE_YM = '2023-05' AND 	a.route_nm = '38번' AND 	a.INIT_SEQ > 0
 {executed in 1 msec}
2023-06-24 02:09:47.743 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
496. WITH carInfo AS ( SELECT '감차후 총 차량댓수' as CAR_REGNO,'' AS AMPM_GUBUN ,b.emp_nm,0 AS tot_work_date , b.D1    , b.D2    , b.D3    , b.D4    , b.D5    , b.D6    , b.D7    , b.D8    , b.D9    , b.D10 , b.D11    , b.D12    , b.D13    , b.D14    , b.D15    , b.D16    , b.D17    , b.D18    , b.D19    , b.D20 , b.D21    , b.D22    , b.D23    , b.D24    , b.D25    , b.D26    , b.D27    , b.D28    , b.D29    , b.D30 , b.D31 FROM 	TBL_MONTH_ARRANGE_BASIC b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-05' AND    b.DISPATCH_SEQ = 2  AND	b.CAR_REGNO  = '-' ), allocateInfo AS ( SELECT  decode(AMPM_GUBUN,'p','오전','오후') || ' 배정 건수' AS CAR_REGNO,ampm_gubun,'-' emp_nm,0 AS tot_work_date ,0 D1 ,0 D2 ,0 D3 ,0 D4 ,0 D5 ,0 D6 ,0 D7 ,0 D8 ,0 D9 ,0 D10 ,0 D11 ,0 D12 ,0 D13 ,0 D14 ,0 D15 ,0 D16 ,0 D17 ,0 D18 ,0 D19 ,0 D20 ,0 D21 ,0 D22 ,0 D23 ,0 D24 ,0 D25 ,0 D26 ,0 D27 ,0 D28 ,0 d29 ,0 d30 ,0 d31 FROM 	TBL_MONTH_ARRANGE_DETAIL b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-05' AND    b.DISPATCH_SEQ = 6  AND    b.PREV_DAILY_SEQ = 1 AND    b.AMPM_GUBUN IN ('a','p') ) SELECT * FROM carInfo union all SELECT '감차후 총 운행횟수' as CAR_REGNO,' ' AMPM_GUBUN ,b.emp_nm,0 AS tot_work_date , b.D1 *2   , b.D2 *2    , b.D3  *2   , b.D4 *2    , b.D5 *2    , b.D6 *2    , b.D7 *2    , b.D8 *2    , b.D9 *2    , b.D10 *2 , b.D11 *2    , b.D12 *2    , b.D13 *2    , b.D14 *2    , b.D15 *2    , b.D16 *2    , b.D17 *2    , b.D18 *2    , b.D19 *2    , b.D20 *2 , b.D21 *2    , b.D22 *2    , b.D23 *2    , b.D24 *2    , b.D25 *2    , b.D26 *2    , b.D27 *2    , b.D28 *2    , b.D29 *2    , b.D30 *2 , b.D31 *2 FROM 	carInfo b union all SELECT  * FROM 	allocateInfo b union all SELECT  decode(b.AMPM_GUBUN,'p','오전','오후') || ' 미배정 건수' AS CAR_REGNO,b.AMPM_GUBUN ,'-' emp_nm,0 AS tot_work_date ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  FROM 	allocateInfo b,carInfo a
 {executed in 6 msec}
2023-06-24 02:09:47.744 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - SELECT '[38번] 2023-05월' as CAR_REGNO,b.emp_nm,0 AS tot_work_date , b.D1    , b.D2    , b.D3    , b.D4    , b.D5    , b.D6    , b.D7    , b.D8    , b.D9    , b.D10 , b.D11    , b.D12    , b.D13    , b.D14    , b.D15    , b.D16    , b.D17    , b.D18    , b.D19    , b.D20 , b.D21    , b.D22    , b.D23    , b.D24    , b.D25    , b.D26    , b.D27    , b.D28    , b.D29    , b.D30 , b.D31 ,'N' as bit FROM 	TBL_MONTH_ARRANGE_DETAIL b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-05' AND    b.DISPATCH_SEQ = 1
2023-06-24 02:09:47.745 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
496. SELECT '[38번] 2023-05월' as CAR_REGNO,b.emp_nm,0 AS tot_work_date , b.D1    , b.D2    , b.D3    , b.D4    , b.D5    , b.D6    , b.D7    , b.D8    , b.D9    , b.D10 , b.D11    , b.D12    , b.D13    , b.D14    , b.D15    , b.D16    , b.D17    , b.D18    , b.D19    , b.D20 , b.D21    , b.D22    , b.D23    , b.D24    , b.D25    , b.D26    , b.D27    , b.D28    , b.D29    , b.D30 , b.D31 ,'N' as bit FROM 	TBL_MONTH_ARRANGE_DETAIL b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-05' AND    b.DISPATCH_SEQ = 1
 {executed in 1 msec}
2023-06-24 02:09:47.745 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - SELECT b.CAR_REGNO,b.emp_nm , 0 AS tot_work_date ,b.D1  ,b.D2  ,b.D3  ,b.D4  ,b.D5  ,b.D6  ,b.D7  ,b.D8  ,b.D9  ,b.D10 ,b.D11 ,b.D12 ,b.D13 ,b.D14 ,b.D15 ,b.D16 ,b.D17 ,b.D18 ,b.D19 ,b.D20 ,b.D21 ,b.D22 ,b.D23 ,b.D24 ,b.D25 ,b.D26 ,b.D27 ,b.D28 ,b.D29 ,b.D30 ,b.D31 ,'N' AS bit FROM 	TBL_MONTH_ARRANGE_DETAIL b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-05' AND    b.DISPATCH_SEQ = 6 AND    b.CAR_REGNO not like 'SP%' order by b.dispatch_seq,b.CAR_REGNO ,b.ampm_gubun,b.prev_daily_seq
2023-06-24 02:09:47.747 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
496. SELECT b.CAR_REGNO,b.emp_nm , 0 AS tot_work_date ,b.D1  ,b.D2  ,b.D3  ,b.D4  ,b.D5  ,b.D6  ,b.D7  ,b.D8  ,b.D9  ,b.D10 ,b.D11 ,b.D12 ,b.D13 ,b.D14 ,b.D15 ,b.D16 ,b.D17 ,b.D18 ,b.D19 ,b.D20 ,b.D21 ,b.D22 ,b.D23 ,b.D24 ,b.D25 ,b.D26 ,b.D27 ,b.D28 ,b.D29 ,b.D30 ,b.D31 ,'N' AS bit FROM 	TBL_MONTH_ARRANGE_DETAIL b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-05' AND    b.DISPATCH_SEQ = 6 AND    b.CAR_REGNO not like 'SP%' order by b.dispatch_seq,b.CAR_REGNO ,b.ampm_gubun,b.prev_daily_seq
 {executed in 1 msec}
2023-06-24 02:09:47.748 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - WITH sp_maxinfo AS ( SELECT  b.CAR_REGNO,b.EMP_NM ,nvl(max(CASE WHEN nvl(b.D1 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D1   ELSE '#' || b.D1  end),' ') as D1 ,nvl(max(CASE WHEN nvl(b.D2 ,'') = '' THEN '' WHEN b.route_nm = '38번' tHEN b.D2   ELSE '#' || b.D2  end),' ') as D2 ,nvl(max(CASE WHEN nvl(b.D3 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D3   ELSE '#' || b.D3   end),' ') as D3 ,nvl(max(CASE WHEN nvl(b.D4 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D4   ELSE '#' || b.D4   end),' ') as D4 ,nvl(max(CASE WHEN nvl(b.D5 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D5   ELSE '#' || b.D5   end),' ') as D5 ,nvl(max(CASE WHEN nvl(b.D6 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D6   ELSE '#' || b.D6   end),' ') as D6 ,nvl(max(CASE WHEN nvl(b.D7 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D7   ELSE '#' || b.D7   end),' ') as D7 ,nvl(max(CASE WHEN nvl(b.D8 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D8   ELSE '#' || b.D8   end),' ') as D8 ,nvl(max(CASE WHEN nvl(b.D9 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D9   ELSE '#' || b.D9   end),' ') as D9 ,nvl(max(CASE WHEN nvl(b.D10,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D10  ELSE '#' || b.D10  end),' ') as D10 ,nvl(max(CASE WHEN nvl(b.D11,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D11  ELSE '#' || b.D11  end),' ') as D11 ,nvl(max(CASE WHEN nvl(b.D12,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D12  ELSE '#' || b.D12  end),' ') as D12 ,nvl(max(CASE WHEN nvl(b.D13,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D13  ELSE '#' || b.D13  end),' ') as D13 ,nvl(max(CASE WHEN nvl(b.D14,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D14  ELSE '#' || b.D14  end),' ') as D14 ,nvl(max(CASE WHEN nvl(b.D15,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D15  ELSE '#' || b.D15  end),' ') as D15 ,nvl(max(CASE WHEN nvl(b.D16,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D16  ELSE '#' || b.D16  end),' ') as D16 ,nvl(max(CASE WHEN nvl(b.D17,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D17  ELSE '#' || b.D17  end),' ') as D17 ,nvl(max(CASE WHEN nvl(b.D18,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D18  ELSE '#' || b.D18  end),' ') as D18 ,nvl(max(CASE WHEN nvl(b.D19,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D19  ELSE '#' || b.D19  end),' ') as D19 ,nvl(max(CASE WHEN nvl(b.D20,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D20  ELSE '#' || b.D20  end),' ') as D20 ,nvl(max(CASE WHEN nvl(b.D21,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D21  ELSE '#' || b.D21  end),' ') as D21 ,nvl(max(CASE WHEN nvl(b.D22,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D22  ELSE '#' || b.D22  end),' ') as D22 ,nvl(max(CASE WHEN nvl(b.D23,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D23  ELSE '#' || b.D23  end),' ') as D23 ,nvl(max(CASE WHEN nvl(b.D24,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D24  ELSE '#' || b.D24  end),' ') as D24 ,nvl(max(CASE WHEN nvl(b.D25,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D25  ELSE '#' || b.D25  end),' ') as D25 ,nvl(max(CASE WHEN nvl(b.D26,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D26  ELSE '#' || b.D26  end),' ') as D26 ,nvl(max(CASE WHEN nvl(b.D27,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D27  ELSE '#' || b.D27  end),' ') as D27 ,nvl(max(CASE WHEN nvl(b.D28,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D28  ELSE '#' || b.D28  end),' ') as D28 ,nvl(max(CASE WHEN nvl(b.D29,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D29  ELSE '#' || b.D29  end),' ') as D29 ,nvl(max(CASE WHEN nvl(b.D30,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D30  ELSE '#' || b.D30  end),' ') as D30 ,nvl(max(CASE WHEN nvl(b.D31,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D31  ELSE '#' || b.D31  end),' ') as D31 FROM 	TBL_MONTH_ARRANGE_DETAIL b where 	b.company_no = '100' AND b.BASE_YM = '2023-05' and b.DISPATCH_SEQ = 6 and b.init_seq = 0 AND b.CAR_REGNO LIKE  'SP%' GROUP BY b.CAR_REGNO,b.emp_nm ) SELECT b.*,'N' as bit ,	LENGTH (REGEXP_REPLACE(b.D1||b.D2||b.D3||b.D4||b.D5||b.D6||b.D7||b.D8||b.D9||b.D10||b.D11||b.D12||b.D13||b.D14||b.D15||b.D16||b.D17||b.D18||b.D19||b.D20||b.D21||b.D22||b.D23||b.D24||b.D25||b.D26||b.D27||b.D28||b.D29||b.D30||b.D31,'[0-9# ]','') ) AS tot_work_date FROM ( SELECT  a.prev_daily_seq,b.* FROM 	TBL_MONTH_ARRANGE_DETAIL a LEFT OUTER JOIN sp_maxinfo b ON	a.emp_nm = b.EMP_NM AND  a.car_regno = b.CAR_REGNO where 	a.company_no = '100' AND a.BASE_YM = '2023-05' and a.DISPATCH_SEQ = 6 and a.init_seq = 0 AND a.CAR_REGNO LIKE  'SP%' AND a.emp_nm = decode('','',a.emp_nm,'') AND a.route_nm = '38번' ) b ORDER BY b.prev_daily_seq
2023-06-24 02:09:47.763 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
496. WITH sp_maxinfo AS ( SELECT  b.CAR_REGNO,b.EMP_NM ,nvl(max(CASE WHEN nvl(b.D1 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D1   ELSE '#' || b.D1  end),' ') as D1 ,nvl(max(CASE WHEN nvl(b.D2 ,'') = '' THEN '' WHEN b.route_nm = '38번' tHEN b.D2   ELSE '#' || b.D2  end),' ') as D2 ,nvl(max(CASE WHEN nvl(b.D3 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D3   ELSE '#' || b.D3   end),' ') as D3 ,nvl(max(CASE WHEN nvl(b.D4 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D4   ELSE '#' || b.D4   end),' ') as D4 ,nvl(max(CASE WHEN nvl(b.D5 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D5   ELSE '#' || b.D5   end),' ') as D5 ,nvl(max(CASE WHEN nvl(b.D6 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D6   ELSE '#' || b.D6   end),' ') as D6 ,nvl(max(CASE WHEN nvl(b.D7 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D7   ELSE '#' || b.D7   end),' ') as D7 ,nvl(max(CASE WHEN nvl(b.D8 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D8   ELSE '#' || b.D8   end),' ') as D8 ,nvl(max(CASE WHEN nvl(b.D9 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D9   ELSE '#' || b.D9   end),' ') as D9 ,nvl(max(CASE WHEN nvl(b.D10,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D10  ELSE '#' || b.D10  end),' ') as D10 ,nvl(max(CASE WHEN nvl(b.D11,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D11  ELSE '#' || b.D11  end),' ') as D11 ,nvl(max(CASE WHEN nvl(b.D12,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D12  ELSE '#' || b.D12  end),' ') as D12 ,nvl(max(CASE WHEN nvl(b.D13,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D13  ELSE '#' || b.D13  end),' ') as D13 ,nvl(max(CASE WHEN nvl(b.D14,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D14  ELSE '#' || b.D14  end),' ') as D14 ,nvl(max(CASE WHEN nvl(b.D15,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D15  ELSE '#' || b.D15  end),' ') as D15 ,nvl(max(CASE WHEN nvl(b.D16,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D16  ELSE '#' || b.D16  end),' ') as D16 ,nvl(max(CASE WHEN nvl(b.D17,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D17  ELSE '#' || b.D17  end),' ') as D17 ,nvl(max(CASE WHEN nvl(b.D18,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D18  ELSE '#' || b.D18  end),' ') as D18 ,nvl(max(CASE WHEN nvl(b.D19,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D19  ELSE '#' || b.D19  end),' ') as D19 ,nvl(max(CASE WHEN nvl(b.D20,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D20  ELSE '#' || b.D20  end),' ') as D20 ,nvl(max(CASE WHEN nvl(b.D21,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D21  ELSE '#' || b.D21  end),' ') as D21 ,nvl(max(CASE WHEN nvl(b.D22,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D22  ELSE '#' || b.D22  end),' ') as D22 ,nvl(max(CASE WHEN nvl(b.D23,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D23  ELSE '#' || b.D23  end),' ') as D23 ,nvl(max(CASE WHEN nvl(b.D24,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D24  ELSE '#' || b.D24  end),' ') as D24 ,nvl(max(CASE WHEN nvl(b.D25,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D25  ELSE '#' || b.D25  end),' ') as D25 ,nvl(max(CASE WHEN nvl(b.D26,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D26  ELSE '#' || b.D26  end),' ') as D26 ,nvl(max(CASE WHEN nvl(b.D27,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D27  ELSE '#' || b.D27  end),' ') as D27 ,nvl(max(CASE WHEN nvl(b.D28,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D28  ELSE '#' || b.D28  end),' ') as D28 ,nvl(max(CASE WHEN nvl(b.D29,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D29  ELSE '#' || b.D29  end),' ') as D29 ,nvl(max(CASE WHEN nvl(b.D30,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D30  ELSE '#' || b.D30  end),' ') as D30 ,nvl(max(CASE WHEN nvl(b.D31,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D31  ELSE '#' || b.D31  end),' ') as D31 FROM 	TBL_MONTH_ARRANGE_DETAIL b where 	b.company_no = '100' AND b.BASE_YM = '2023-05' and b.DISPATCH_SEQ = 6 and b.init_seq = 0 AND b.CAR_REGNO LIKE  'SP%' GROUP BY b.CAR_REGNO,b.emp_nm ) SELECT b.*,'N' as bit ,	LENGTH (REGEXP_REPLACE(b.D1||b.D2||b.D3||b.D4||b.D5||b.D6||b.D7||b.D8||b.D9||b.D10||b.D11||b.D12||b.D13||b.D14||b.D15||b.D16||b.D17||b.D18||b.D19||b.D20||b.D21||b.D22||b.D23||b.D24||b.D25||b.D26||b.D27||b.D28||b.D29||b.D30||b.D31,'[0-9# ]','') ) AS tot_work_date FROM ( SELECT  a.prev_daily_seq,b.* FROM 	TBL_MONTH_ARRANGE_DETAIL a LEFT OUTER JOIN sp_maxinfo b ON	a.emp_nm = b.EMP_NM AND  a.car_regno = b.CAR_REGNO where 	a.company_no = '100' AND a.BASE_YM = '2023-05' and a.DISPATCH_SEQ = 6 and a.init_seq = 0 AND a.CAR_REGNO LIKE  'SP%' AND a.emp_nm = decode('','',a.emp_nm,'') AND a.route_nm = '38번' ) b ORDER BY b.prev_daily_seq
 {executed in 15 msec}
2023-06-24 02:09:48.449 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT 	a.ROUTE_NM,b.STATUS,b.LAST_CHG_USER,b.LAST_CHG_DATE FROM 	TBL_ROUTEINFO a left outer join TBM_MONTH_ARRANGE_STATUS b on	a.company_no = b.company_no and a.route_nm   = b.route_nm AND b.BASE_YM = '2023-05' AND	b.ROUTE_NM like '' || '%' WHERE 	a.company_no = '100' ORDER BY 1
2023-06-24 02:09:48.450 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
495. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 02:09:48.451 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
495. SELECT 	a.ROUTE_NM,b.STATUS,b.LAST_CHG_USER,b.LAST_CHG_DATE FROM 	TBL_ROUTEINFO a left outer join TBM_MONTH_ARRANGE_STATUS b on	a.company_no = b.company_no and a.route_nm   = b.route_nm AND b.BASE_YM = '2023-05' AND	b.ROUTE_NM like '' || '%' WHERE 	a.company_no = '100' ORDER BY 1
 {executed in 1 msec}
2023-06-24 02:12:45.959 INFO  [http-nio-10010-exec-6] [com.pjy.dashboard.dao.DynamicSqlDao] - getupdateSql_arrangeDetail sql : update  TBL_MONTH_ARRANGE_DETAIL   set    d1  = :d1          ,d2  = :d2          ,d3  = :d3          ,d4  = :d4          ,d5  = :d5          ,d6  = :d6          ,d7  = :d7          ,d8  = :d8          ,d9  = :d9          ,d10 = :d10         ,d11 = :d11         ,d12 = :d12         ,d13 = :d13         ,d14 = :d14         ,d15 = :d15         ,d16 = :d16         ,d17 = :d17         ,d18 = :d18         ,d19 = :d19         ,d20 = :d20         ,d21 = :d21         ,d22 = :d22         ,d23 = :d23         ,d24 = :d24         ,d25 = :d25         ,d26 = :d26         ,d27 = :d27         ,d28 = :d28         ,d29 = :d29         ,d30 = :d30         ,d31 = :d31 	where company_no = '100' and BASE_YM = '2023-05' and route_nm = '38번' and init_seq = 0 and car_regno = :car_regno and emp_nm = :emp_nm and dispatch_seq = 6 
2023-06-24 02:12:45.959 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
495. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 02:12:45.961 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeBatch(ProxyStatement.java:128)
495. batching 2 statements:
1:  update  TBL_MONTH_ARRANGE_DETAIL   set    d1  = '9p*-'          ,d2  = '10a'          ,d3  = '11a'          ,d4  = '12a'          ,d5  = '2a*-'          ,d6  = '8a'          ,d7  = '12a'          ,d8  = '4a'          ,d9  = '5a*'          ,d10 = '6p'         ,d11 = '7p'         ,d12 = '8p'         ,d13 = '10p*'         ,d14 = '1p'         ,d15 = '6p'         ,d16 = '7p'         ,d17 = '8p*'         ,d18 = '9a'         ,d19 = '10a'         ,d20 = '12a'         ,d21 = '3a*'         ,d22 = '8a'         ,d23 = '9a'         ,d24 = '10a'         ,d25 = '11a*'         ,d26 = '12p'         ,d27 = '2p'         ,d28 = '10p'         ,d29 = '5p*'         ,d30 = '10p'         ,d31 = '11p' 	where company_no = '100' and BASE_YM = '2023-05' and route_nm = '38번' and init_seq = 0 and car_regno = '인천70바3549' and emp_nm = '이강일' and dispatch_seq = 6 
2:  update  TBL_MONTH_ARRANGE_DETAIL   set    d1  = '9p*'          ,d2  = ''          ,d3  = ''          ,d4  = ''          ,d5  = '6a*'          ,d6  = ''          ,d7  = ''          ,d8  = ''          ,d9  = ''          ,d10 = ''         ,d11 = ''         ,d12 = ''         ,d13 = ''         ,d14 = ''         ,d15 = ''         ,d16 = ''         ,d17 = ''         ,d18 = ''         ,d19 = ''         ,d20 = ''         ,d21 = ''         ,d22 = ''         ,d23 = ''         ,d24 = ''         ,d25 = ''         ,d26 = ''         ,d27 = ''         ,d28 = ''         ,d29 = ''         ,d30 = ''         ,d31 = '' 	where company_no = '100' and BASE_YM = '2023-05' and route_nm = '38번' and init_seq = 0 and car_regno = 'SP(38번)' and emp_nm = '김승배' and dispatch_seq = 6
 {executed in 1 msec}
2023-06-24 02:12:45.973 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT 	DISTINCT INIT_SEQ  FROM 	TBL_MONTH_ARRANGE_BASIC a WHERE	a.COMPANY_NO = '100' AND 	a.BASE_YM = '2023-05' AND 	a.route_nm = '38번' AND 	a.INIT_SEQ > 0
2023-06-24 02:12:45.975 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
495. SELECT 	DISTINCT INIT_SEQ  FROM 	TBL_MONTH_ARRANGE_BASIC a WHERE	a.COMPANY_NO = '100' AND 	a.BASE_YM = '2023-05' AND 	a.route_nm = '38번' AND 	a.INIT_SEQ > 0
 {executed in 1 msec}
2023-06-24 02:12:45.975 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - WITH carInfo AS ( SELECT '감차후 총 차량댓수' as CAR_REGNO,'' AS AMPM_GUBUN ,b.emp_nm,0 AS tot_work_date , b.D1    , b.D2    , b.D3    , b.D4    , b.D5    , b.D6    , b.D7    , b.D8    , b.D9    , b.D10 , b.D11    , b.D12    , b.D13    , b.D14    , b.D15    , b.D16    , b.D17    , b.D18    , b.D19    , b.D20 , b.D21    , b.D22    , b.D23    , b.D24    , b.D25    , b.D26    , b.D27    , b.D28    , b.D29    , b.D30 , b.D31 FROM 	TBL_MONTH_ARRANGE_BASIC b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-05' AND    b.DISPATCH_SEQ = 2  AND	b.CAR_REGNO  = '-' ), allocateInfo AS ( SELECT  decode(AMPM_GUBUN,'p','오전','오후') || ' 배정 건수' AS CAR_REGNO,ampm_gubun,'-' emp_nm,0 AS tot_work_date ,0 D1 ,0 D2 ,0 D3 ,0 D4 ,0 D5 ,0 D6 ,0 D7 ,0 D8 ,0 D9 ,0 D10 ,0 D11 ,0 D12 ,0 D13 ,0 D14 ,0 D15 ,0 D16 ,0 D17 ,0 D18 ,0 D19 ,0 D20 ,0 D21 ,0 D22 ,0 D23 ,0 D24 ,0 D25 ,0 D26 ,0 D27 ,0 D28 ,0 d29 ,0 d30 ,0 d31 FROM 	TBL_MONTH_ARRANGE_DETAIL b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-05' AND    b.DISPATCH_SEQ = 6  AND    b.PREV_DAILY_SEQ = 1 AND    b.AMPM_GUBUN IN ('a','p') ) SELECT * FROM carInfo union all SELECT '감차후 총 운행횟수' as CAR_REGNO,' ' AMPM_GUBUN ,b.emp_nm,0 AS tot_work_date , b.D1 *2   , b.D2 *2    , b.D3  *2   , b.D4 *2    , b.D5 *2    , b.D6 *2    , b.D7 *2    , b.D8 *2    , b.D9 *2    , b.D10 *2 , b.D11 *2    , b.D12 *2    , b.D13 *2    , b.D14 *2    , b.D15 *2    , b.D16 *2    , b.D17 *2    , b.D18 *2    , b.D19 *2    , b.D20 *2 , b.D21 *2    , b.D22 *2    , b.D23 *2    , b.D24 *2    , b.D25 *2    , b.D26 *2    , b.D27 *2    , b.D28 *2    , b.D29 *2    , b.D30 *2 , b.D31 *2 FROM 	carInfo b union all SELECT  * FROM 	allocateInfo b union all SELECT  decode(b.AMPM_GUBUN,'p','오전','오후') || ' 미배정 건수' AS CAR_REGNO,b.AMPM_GUBUN ,'-' emp_nm,0 AS tot_work_date ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  FROM 	allocateInfo b,carInfo a
2023-06-24 02:12:45.980 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
495. WITH carInfo AS ( SELECT '감차후 총 차량댓수' as CAR_REGNO,'' AS AMPM_GUBUN ,b.emp_nm,0 AS tot_work_date , b.D1    , b.D2    , b.D3    , b.D4    , b.D5    , b.D6    , b.D7    , b.D8    , b.D9    , b.D10 , b.D11    , b.D12    , b.D13    , b.D14    , b.D15    , b.D16    , b.D17    , b.D18    , b.D19    , b.D20 , b.D21    , b.D22    , b.D23    , b.D24    , b.D25    , b.D26    , b.D27    , b.D28    , b.D29    , b.D30 , b.D31 FROM 	TBL_MONTH_ARRANGE_BASIC b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-05' AND    b.DISPATCH_SEQ = 2  AND	b.CAR_REGNO  = '-' ), allocateInfo AS ( SELECT  decode(AMPM_GUBUN,'p','오전','오후') || ' 배정 건수' AS CAR_REGNO,ampm_gubun,'-' emp_nm,0 AS tot_work_date ,0 D1 ,0 D2 ,0 D3 ,0 D4 ,0 D5 ,0 D6 ,0 D7 ,0 D8 ,0 D9 ,0 D10 ,0 D11 ,0 D12 ,0 D13 ,0 D14 ,0 D15 ,0 D16 ,0 D17 ,0 D18 ,0 D19 ,0 D20 ,0 D21 ,0 D22 ,0 D23 ,0 D24 ,0 D25 ,0 D26 ,0 D27 ,0 D28 ,0 d29 ,0 d30 ,0 d31 FROM 	TBL_MONTH_ARRANGE_DETAIL b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-05' AND    b.DISPATCH_SEQ = 6  AND    b.PREV_DAILY_SEQ = 1 AND    b.AMPM_GUBUN IN ('a','p') ) SELECT * FROM carInfo union all SELECT '감차후 총 운행횟수' as CAR_REGNO,' ' AMPM_GUBUN ,b.emp_nm,0 AS tot_work_date , b.D1 *2   , b.D2 *2    , b.D3  *2   , b.D4 *2    , b.D5 *2    , b.D6 *2    , b.D7 *2    , b.D8 *2    , b.D9 *2    , b.D10 *2 , b.D11 *2    , b.D12 *2    , b.D13 *2    , b.D14 *2    , b.D15 *2    , b.D16 *2    , b.D17 *2    , b.D18 *2    , b.D19 *2    , b.D20 *2 , b.D21 *2    , b.D22 *2    , b.D23 *2    , b.D24 *2    , b.D25 *2    , b.D26 *2    , b.D27 *2    , b.D28 *2    , b.D29 *2    , b.D30 *2 , b.D31 *2 FROM 	carInfo b union all SELECT  * FROM 	allocateInfo b union all SELECT  decode(b.AMPM_GUBUN,'p','오전','오후') || ' 미배정 건수' AS CAR_REGNO,b.AMPM_GUBUN ,'-' emp_nm,0 AS tot_work_date ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  FROM 	allocateInfo b,carInfo a
 {executed in 4 msec}
2023-06-24 02:12:45.981 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - SELECT '[38번] 2023-05월' as CAR_REGNO,b.emp_nm,0 AS tot_work_date , b.D1    , b.D2    , b.D3    , b.D4    , b.D5    , b.D6    , b.D7    , b.D8    , b.D9    , b.D10 , b.D11    , b.D12    , b.D13    , b.D14    , b.D15    , b.D16    , b.D17    , b.D18    , b.D19    , b.D20 , b.D21    , b.D22    , b.D23    , b.D24    , b.D25    , b.D26    , b.D27    , b.D28    , b.D29    , b.D30 , b.D31 ,'N' as bit FROM 	TBL_MONTH_ARRANGE_DETAIL b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-05' AND    b.DISPATCH_SEQ = 1
2023-06-24 02:12:45.982 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
495. SELECT '[38번] 2023-05월' as CAR_REGNO,b.emp_nm,0 AS tot_work_date , b.D1    , b.D2    , b.D3    , b.D4    , b.D5    , b.D6    , b.D7    , b.D8    , b.D9    , b.D10 , b.D11    , b.D12    , b.D13    , b.D14    , b.D15    , b.D16    , b.D17    , b.D18    , b.D19    , b.D20 , b.D21    , b.D22    , b.D23    , b.D24    , b.D25    , b.D26    , b.D27    , b.D28    , b.D29    , b.D30 , b.D31 ,'N' as bit FROM 	TBL_MONTH_ARRANGE_DETAIL b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-05' AND    b.DISPATCH_SEQ = 1
 {executed in 0 msec}
2023-06-24 02:12:45.982 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - SELECT b.CAR_REGNO,b.emp_nm , 0 AS tot_work_date ,b.D1  ,b.D2  ,b.D3  ,b.D4  ,b.D5  ,b.D6  ,b.D7  ,b.D8  ,b.D9  ,b.D10 ,b.D11 ,b.D12 ,b.D13 ,b.D14 ,b.D15 ,b.D16 ,b.D17 ,b.D18 ,b.D19 ,b.D20 ,b.D21 ,b.D22 ,b.D23 ,b.D24 ,b.D25 ,b.D26 ,b.D27 ,b.D28 ,b.D29 ,b.D30 ,b.D31 ,'N' AS bit FROM 	TBL_MONTH_ARRANGE_DETAIL b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-05' AND    b.DISPATCH_SEQ = 6 AND    b.CAR_REGNO not like 'SP%' order by b.dispatch_seq,b.CAR_REGNO ,b.ampm_gubun,b.prev_daily_seq
2023-06-24 02:12:45.985 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
495. SELECT b.CAR_REGNO,b.emp_nm , 0 AS tot_work_date ,b.D1  ,b.D2  ,b.D3  ,b.D4  ,b.D5  ,b.D6  ,b.D7  ,b.D8  ,b.D9  ,b.D10 ,b.D11 ,b.D12 ,b.D13 ,b.D14 ,b.D15 ,b.D16 ,b.D17 ,b.D18 ,b.D19 ,b.D20 ,b.D21 ,b.D22 ,b.D23 ,b.D24 ,b.D25 ,b.D26 ,b.D27 ,b.D28 ,b.D29 ,b.D30 ,b.D31 ,'N' AS bit FROM 	TBL_MONTH_ARRANGE_DETAIL b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-05' AND    b.DISPATCH_SEQ = 6 AND    b.CAR_REGNO not like 'SP%' order by b.dispatch_seq,b.CAR_REGNO ,b.ampm_gubun,b.prev_daily_seq
 {executed in 2 msec}
2023-06-24 02:12:45.988 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - WITH sp_maxinfo AS ( SELECT  b.CAR_REGNO,b.EMP_NM ,nvl(max(CASE WHEN nvl(b.D1 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D1   ELSE '#' || b.D1  end),' ') as D1 ,nvl(max(CASE WHEN nvl(b.D2 ,'') = '' THEN '' WHEN b.route_nm = '38번' tHEN b.D2   ELSE '#' || b.D2  end),' ') as D2 ,nvl(max(CASE WHEN nvl(b.D3 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D3   ELSE '#' || b.D3   end),' ') as D3 ,nvl(max(CASE WHEN nvl(b.D4 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D4   ELSE '#' || b.D4   end),' ') as D4 ,nvl(max(CASE WHEN nvl(b.D5 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D5   ELSE '#' || b.D5   end),' ') as D5 ,nvl(max(CASE WHEN nvl(b.D6 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D6   ELSE '#' || b.D6   end),' ') as D6 ,nvl(max(CASE WHEN nvl(b.D7 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D7   ELSE '#' || b.D7   end),' ') as D7 ,nvl(max(CASE WHEN nvl(b.D8 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D8   ELSE '#' || b.D8   end),' ') as D8 ,nvl(max(CASE WHEN nvl(b.D9 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D9   ELSE '#' || b.D9   end),' ') as D9 ,nvl(max(CASE WHEN nvl(b.D10,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D10  ELSE '#' || b.D10  end),' ') as D10 ,nvl(max(CASE WHEN nvl(b.D11,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D11  ELSE '#' || b.D11  end),' ') as D11 ,nvl(max(CASE WHEN nvl(b.D12,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D12  ELSE '#' || b.D12  end),' ') as D12 ,nvl(max(CASE WHEN nvl(b.D13,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D13  ELSE '#' || b.D13  end),' ') as D13 ,nvl(max(CASE WHEN nvl(b.D14,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D14  ELSE '#' || b.D14  end),' ') as D14 ,nvl(max(CASE WHEN nvl(b.D15,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D15  ELSE '#' || b.D15  end),' ') as D15 ,nvl(max(CASE WHEN nvl(b.D16,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D16  ELSE '#' || b.D16  end),' ') as D16 ,nvl(max(CASE WHEN nvl(b.D17,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D17  ELSE '#' || b.D17  end),' ') as D17 ,nvl(max(CASE WHEN nvl(b.D18,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D18  ELSE '#' || b.D18  end),' ') as D18 ,nvl(max(CASE WHEN nvl(b.D19,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D19  ELSE '#' || b.D19  end),' ') as D19 ,nvl(max(CASE WHEN nvl(b.D20,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D20  ELSE '#' || b.D20  end),' ') as D20 ,nvl(max(CASE WHEN nvl(b.D21,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D21  ELSE '#' || b.D21  end),' ') as D21 ,nvl(max(CASE WHEN nvl(b.D22,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D22  ELSE '#' || b.D22  end),' ') as D22 ,nvl(max(CASE WHEN nvl(b.D23,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D23  ELSE '#' || b.D23  end),' ') as D23 ,nvl(max(CASE WHEN nvl(b.D24,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D24  ELSE '#' || b.D24  end),' ') as D24 ,nvl(max(CASE WHEN nvl(b.D25,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D25  ELSE '#' || b.D25  end),' ') as D25 ,nvl(max(CASE WHEN nvl(b.D26,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D26  ELSE '#' || b.D26  end),' ') as D26 ,nvl(max(CASE WHEN nvl(b.D27,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D27  ELSE '#' || b.D27  end),' ') as D27 ,nvl(max(CASE WHEN nvl(b.D28,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D28  ELSE '#' || b.D28  end),' ') as D28 ,nvl(max(CASE WHEN nvl(b.D29,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D29  ELSE '#' || b.D29  end),' ') as D29 ,nvl(max(CASE WHEN nvl(b.D30,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D30  ELSE '#' || b.D30  end),' ') as D30 ,nvl(max(CASE WHEN nvl(b.D31,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D31  ELSE '#' || b.D31  end),' ') as D31 FROM 	TBL_MONTH_ARRANGE_DETAIL b where 	b.company_no = '100' AND b.BASE_YM = '2023-05' and b.DISPATCH_SEQ = 6 and b.init_seq = 0 AND b.CAR_REGNO LIKE  'SP%' GROUP BY b.CAR_REGNO,b.emp_nm ) SELECT b.*,'N' as bit ,	LENGTH (REGEXP_REPLACE(b.D1||b.D2||b.D3||b.D4||b.D5||b.D6||b.D7||b.D8||b.D9||b.D10||b.D11||b.D12||b.D13||b.D14||b.D15||b.D16||b.D17||b.D18||b.D19||b.D20||b.D21||b.D22||b.D23||b.D24||b.D25||b.D26||b.D27||b.D28||b.D29||b.D30||b.D31,'[0-9# ]','') ) AS tot_work_date FROM ( SELECT  a.prev_daily_seq,b.* FROM 	TBL_MONTH_ARRANGE_DETAIL a LEFT OUTER JOIN sp_maxinfo b ON	a.emp_nm = b.EMP_NM AND  a.car_regno = b.CAR_REGNO where 	a.company_no = '100' AND a.BASE_YM = '2023-05' and a.DISPATCH_SEQ = 6 and a.init_seq = 0 AND a.CAR_REGNO LIKE  'SP%' AND a.emp_nm = decode('','',a.emp_nm,'') AND a.route_nm = '38번' ) b ORDER BY b.prev_daily_seq
2023-06-24 02:12:46.007 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
495. WITH sp_maxinfo AS ( SELECT  b.CAR_REGNO,b.EMP_NM ,nvl(max(CASE WHEN nvl(b.D1 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D1   ELSE '#' || b.D1  end),' ') as D1 ,nvl(max(CASE WHEN nvl(b.D2 ,'') = '' THEN '' WHEN b.route_nm = '38번' tHEN b.D2   ELSE '#' || b.D2  end),' ') as D2 ,nvl(max(CASE WHEN nvl(b.D3 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D3   ELSE '#' || b.D3   end),' ') as D3 ,nvl(max(CASE WHEN nvl(b.D4 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D4   ELSE '#' || b.D4   end),' ') as D4 ,nvl(max(CASE WHEN nvl(b.D5 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D5   ELSE '#' || b.D5   end),' ') as D5 ,nvl(max(CASE WHEN nvl(b.D6 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D6   ELSE '#' || b.D6   end),' ') as D6 ,nvl(max(CASE WHEN nvl(b.D7 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D7   ELSE '#' || b.D7   end),' ') as D7 ,nvl(max(CASE WHEN nvl(b.D8 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D8   ELSE '#' || b.D8   end),' ') as D8 ,nvl(max(CASE WHEN nvl(b.D9 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D9   ELSE '#' || b.D9   end),' ') as D9 ,nvl(max(CASE WHEN nvl(b.D10,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D10  ELSE '#' || b.D10  end),' ') as D10 ,nvl(max(CASE WHEN nvl(b.D11,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D11  ELSE '#' || b.D11  end),' ') as D11 ,nvl(max(CASE WHEN nvl(b.D12,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D12  ELSE '#' || b.D12  end),' ') as D12 ,nvl(max(CASE WHEN nvl(b.D13,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D13  ELSE '#' || b.D13  end),' ') as D13 ,nvl(max(CASE WHEN nvl(b.D14,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D14  ELSE '#' || b.D14  end),' ') as D14 ,nvl(max(CASE WHEN nvl(b.D15,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D15  ELSE '#' || b.D15  end),' ') as D15 ,nvl(max(CASE WHEN nvl(b.D16,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D16  ELSE '#' || b.D16  end),' ') as D16 ,nvl(max(CASE WHEN nvl(b.D17,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D17  ELSE '#' || b.D17  end),' ') as D17 ,nvl(max(CASE WHEN nvl(b.D18,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D18  ELSE '#' || b.D18  end),' ') as D18 ,nvl(max(CASE WHEN nvl(b.D19,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D19  ELSE '#' || b.D19  end),' ') as D19 ,nvl(max(CASE WHEN nvl(b.D20,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D20  ELSE '#' || b.D20  end),' ') as D20 ,nvl(max(CASE WHEN nvl(b.D21,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D21  ELSE '#' || b.D21  end),' ') as D21 ,nvl(max(CASE WHEN nvl(b.D22,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D22  ELSE '#' || b.D22  end),' ') as D22 ,nvl(max(CASE WHEN nvl(b.D23,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D23  ELSE '#' || b.D23  end),' ') as D23 ,nvl(max(CASE WHEN nvl(b.D24,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D24  ELSE '#' || b.D24  end),' ') as D24 ,nvl(max(CASE WHEN nvl(b.D25,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D25  ELSE '#' || b.D25  end),' ') as D25 ,nvl(max(CASE WHEN nvl(b.D26,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D26  ELSE '#' || b.D26  end),' ') as D26 ,nvl(max(CASE WHEN nvl(b.D27,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D27  ELSE '#' || b.D27  end),' ') as D27 ,nvl(max(CASE WHEN nvl(b.D28,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D28  ELSE '#' || b.D28  end),' ') as D28 ,nvl(max(CASE WHEN nvl(b.D29,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D29  ELSE '#' || b.D29  end),' ') as D29 ,nvl(max(CASE WHEN nvl(b.D30,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D30  ELSE '#' || b.D30  end),' ') as D30 ,nvl(max(CASE WHEN nvl(b.D31,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D31  ELSE '#' || b.D31  end),' ') as D31 FROM 	TBL_MONTH_ARRANGE_DETAIL b where 	b.company_no = '100' AND b.BASE_YM = '2023-05' and b.DISPATCH_SEQ = 6 and b.init_seq = 0 AND b.CAR_REGNO LIKE  'SP%' GROUP BY b.CAR_REGNO,b.emp_nm ) SELECT b.*,'N' as bit ,	LENGTH (REGEXP_REPLACE(b.D1||b.D2||b.D3||b.D4||b.D5||b.D6||b.D7||b.D8||b.D9||b.D10||b.D11||b.D12||b.D13||b.D14||b.D15||b.D16||b.D17||b.D18||b.D19||b.D20||b.D21||b.D22||b.D23||b.D24||b.D25||b.D26||b.D27||b.D28||b.D29||b.D30||b.D31,'[0-9# ]','') ) AS tot_work_date FROM ( SELECT  a.prev_daily_seq,b.* FROM 	TBL_MONTH_ARRANGE_DETAIL a LEFT OUTER JOIN sp_maxinfo b ON	a.emp_nm = b.EMP_NM AND  a.car_regno = b.CAR_REGNO where 	a.company_no = '100' AND a.BASE_YM = '2023-05' and a.DISPATCH_SEQ = 6 and a.init_seq = 0 AND a.CAR_REGNO LIKE  'SP%' AND a.emp_nm = decode('','',a.emp_nm,'') AND a.route_nm = '38번' ) b ORDER BY b.prev_daily_seq
 {executed in 19 msec}
2023-06-24 02:12:46.609 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT 	a.ROUTE_NM,b.STATUS,b.LAST_CHG_USER,b.LAST_CHG_DATE FROM 	TBL_ROUTEINFO a left outer join TBM_MONTH_ARRANGE_STATUS b on	a.company_no = b.company_no and a.route_nm   = b.route_nm AND b.BASE_YM = '2023-05' AND	b.ROUTE_NM like '' || '%' WHERE 	a.company_no = '100' ORDER BY 1
2023-06-24 02:12:46.609 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
495. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 02:12:46.610 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
495. SELECT 	a.ROUTE_NM,b.STATUS,b.LAST_CHG_USER,b.LAST_CHG_DATE FROM 	TBL_ROUTEINFO a left outer join TBM_MONTH_ARRANGE_STATUS b on	a.company_no = b.company_no and a.route_nm   = b.route_nm AND b.BASE_YM = '2023-05' AND	b.ROUTE_NM like '' || '%' WHERE 	a.company_no = '100' ORDER BY 1
 {executed in 1 msec}
2023-06-24 02:13:59.576 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
495. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 02:13:59.576 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   'N' as bit, a.* from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' and		a.code = '휴가종류' order by a.route_nm
2023-06-24 02:13:59.576 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
495. SELECT ROUTE_NM  FROM TBL_ROUTEINFO ORDER BY 1
 {executed in 0 msec}
2023-06-24 02:13:59.577 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
496. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 02:13:59.578 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
496. select   'N' as bit, a.* from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' and		a.code = '휴가종류' order by a.route_nm
 {executed in 1 msec}
2023-06-24 02:14:04.653 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT 	DISTINCT INIT_SEQ  FROM 	TBL_MONTH_ARRANGE_BASIC a WHERE	a.COMPANY_NO = '100' AND 	a.BASE_YM = '2023-05' AND 	a.route_nm = '38번' AND 	a.INIT_SEQ > 0
2023-06-24 02:14:04.653 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
495. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 02:14:04.654 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - WITH carInfo AS ( SELECT '감차후 총 차량댓수' as CAR_REGNO,'' AS AMPM_GUBUN ,b.emp_nm,0 AS tot_work_date , b.D1    , b.D2    , b.D3    , b.D4    , b.D5    , b.D6    , b.D7    , b.D8    , b.D9    , b.D10 , b.D11    , b.D12    , b.D13    , b.D14    , b.D15    , b.D16    , b.D17    , b.D18    , b.D19    , b.D20 , b.D21    , b.D22    , b.D23    , b.D24    , b.D25    , b.D26    , b.D27    , b.D28    , b.D29    , b.D30 , b.D31 FROM 	TBL_MONTH_ARRANGE_BASIC b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-05' AND    b.DISPATCH_SEQ = 2  AND	b.CAR_REGNO  = '-' ), allocateInfo AS ( SELECT  decode(AMPM_GUBUN,'p','오전','오후') || ' 배정 건수' AS CAR_REGNO,ampm_gubun,'-' emp_nm,0 AS tot_work_date ,0 D1 ,0 D2 ,0 D3 ,0 D4 ,0 D5 ,0 D6 ,0 D7 ,0 D8 ,0 D9 ,0 D10 ,0 D11 ,0 D12 ,0 D13 ,0 D14 ,0 D15 ,0 D16 ,0 D17 ,0 D18 ,0 D19 ,0 D20 ,0 D21 ,0 D22 ,0 D23 ,0 D24 ,0 D25 ,0 D26 ,0 D27 ,0 D28 ,0 d29 ,0 d30 ,0 d31 FROM 	TBL_MONTH_ARRANGE_DETAIL b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-05' AND    b.DISPATCH_SEQ = 6  AND    b.PREV_DAILY_SEQ = 1 AND    b.AMPM_GUBUN IN ('a','p') ) SELECT * FROM carInfo union all SELECT '감차후 총 운행횟수' as CAR_REGNO,' ' AMPM_GUBUN ,b.emp_nm,0 AS tot_work_date , b.D1 *2   , b.D2 *2    , b.D3  *2   , b.D4 *2    , b.D5 *2    , b.D6 *2    , b.D7 *2    , b.D8 *2    , b.D9 *2    , b.D10 *2 , b.D11 *2    , b.D12 *2    , b.D13 *2    , b.D14 *2    , b.D15 *2    , b.D16 *2    , b.D17 *2    , b.D18 *2    , b.D19 *2    , b.D20 *2 , b.D21 *2    , b.D22 *2    , b.D23 *2    , b.D24 *2    , b.D25 *2    , b.D26 *2    , b.D27 *2    , b.D28 *2    , b.D29 *2    , b.D30 *2 , b.D31 *2 FROM 	carInfo b union all SELECT  * FROM 	allocateInfo b union all SELECT  decode(b.AMPM_GUBUN,'p','오전','오후') || ' 미배정 건수' AS CAR_REGNO,b.AMPM_GUBUN ,'-' emp_nm,0 AS tot_work_date ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  FROM 	allocateInfo b,carInfo a
2023-06-24 02:14:04.655 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
495. SELECT 	DISTINCT INIT_SEQ  FROM 	TBL_MONTH_ARRANGE_BASIC a WHERE	a.COMPANY_NO = '100' AND 	a.BASE_YM = '2023-05' AND 	a.route_nm = '38번' AND 	a.INIT_SEQ > 0
 {executed in 0 msec}
2023-06-24 02:14:04.655 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
496. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 02:14:04.659 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
496. WITH carInfo AS ( SELECT '감차후 총 차량댓수' as CAR_REGNO,'' AS AMPM_GUBUN ,b.emp_nm,0 AS tot_work_date , b.D1    , b.D2    , b.D3    , b.D4    , b.D5    , b.D6    , b.D7    , b.D8    , b.D9    , b.D10 , b.D11    , b.D12    , b.D13    , b.D14    , b.D15    , b.D16    , b.D17    , b.D18    , b.D19    , b.D20 , b.D21    , b.D22    , b.D23    , b.D24    , b.D25    , b.D26    , b.D27    , b.D28    , b.D29    , b.D30 , b.D31 FROM 	TBL_MONTH_ARRANGE_BASIC b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-05' AND    b.DISPATCH_SEQ = 2  AND	b.CAR_REGNO  = '-' ), allocateInfo AS ( SELECT  decode(AMPM_GUBUN,'p','오전','오후') || ' 배정 건수' AS CAR_REGNO,ampm_gubun,'-' emp_nm,0 AS tot_work_date ,0 D1 ,0 D2 ,0 D3 ,0 D4 ,0 D5 ,0 D6 ,0 D7 ,0 D8 ,0 D9 ,0 D10 ,0 D11 ,0 D12 ,0 D13 ,0 D14 ,0 D15 ,0 D16 ,0 D17 ,0 D18 ,0 D19 ,0 D20 ,0 D21 ,0 D22 ,0 D23 ,0 D24 ,0 D25 ,0 D26 ,0 D27 ,0 D28 ,0 d29 ,0 d30 ,0 d31 FROM 	TBL_MONTH_ARRANGE_DETAIL b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-05' AND    b.DISPATCH_SEQ = 6  AND    b.PREV_DAILY_SEQ = 1 AND    b.AMPM_GUBUN IN ('a','p') ) SELECT * FROM carInfo union all SELECT '감차후 총 운행횟수' as CAR_REGNO,' ' AMPM_GUBUN ,b.emp_nm,0 AS tot_work_date , b.D1 *2   , b.D2 *2    , b.D3  *2   , b.D4 *2    , b.D5 *2    , b.D6 *2    , b.D7 *2    , b.D8 *2    , b.D9 *2    , b.D10 *2 , b.D11 *2    , b.D12 *2    , b.D13 *2    , b.D14 *2    , b.D15 *2    , b.D16 *2    , b.D17 *2    , b.D18 *2    , b.D19 *2    , b.D20 *2 , b.D21 *2    , b.D22 *2    , b.D23 *2    , b.D24 *2    , b.D25 *2    , b.D26 *2    , b.D27 *2    , b.D28 *2    , b.D29 *2    , b.D30 *2 , b.D31 *2 FROM 	carInfo b union all SELECT  * FROM 	allocateInfo b union all SELECT  decode(b.AMPM_GUBUN,'p','오전','오후') || ' 미배정 건수' AS CAR_REGNO,b.AMPM_GUBUN ,'-' emp_nm,0 AS tot_work_date ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  FROM 	allocateInfo b,carInfo a
 {executed in 3 msec}
2023-06-24 02:14:04.659 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - SELECT '[38번] 2023-05월' as CAR_REGNO,b.emp_nm,0 AS tot_work_date , b.D1    , b.D2    , b.D3    , b.D4    , b.D5    , b.D6    , b.D7    , b.D8    , b.D9    , b.D10 , b.D11    , b.D12    , b.D13    , b.D14    , b.D15    , b.D16    , b.D17    , b.D18    , b.D19    , b.D20 , b.D21    , b.D22    , b.D23    , b.D24    , b.D25    , b.D26    , b.D27    , b.D28    , b.D29    , b.D30 , b.D31 ,'N' as bit FROM 	TBL_MONTH_ARRANGE_DETAIL b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-05' AND    b.DISPATCH_SEQ = 1
2023-06-24 02:14:04.660 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
496. SELECT '[38번] 2023-05월' as CAR_REGNO,b.emp_nm,0 AS tot_work_date , b.D1    , b.D2    , b.D3    , b.D4    , b.D5    , b.D6    , b.D7    , b.D8    , b.D9    , b.D10 , b.D11    , b.D12    , b.D13    , b.D14    , b.D15    , b.D16    , b.D17    , b.D18    , b.D19    , b.D20 , b.D21    , b.D22    , b.D23    , b.D24    , b.D25    , b.D26    , b.D27    , b.D28    , b.D29    , b.D30 , b.D31 ,'N' as bit FROM 	TBL_MONTH_ARRANGE_DETAIL b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-05' AND    b.DISPATCH_SEQ = 1
 {executed in 1 msec}
2023-06-24 02:14:04.660 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - SELECT b.CAR_REGNO,b.emp_nm , 0 AS tot_work_date ,b.D1  ,b.D2  ,b.D3  ,b.D4  ,b.D5  ,b.D6  ,b.D7  ,b.D8  ,b.D9  ,b.D10 ,b.D11 ,b.D12 ,b.D13 ,b.D14 ,b.D15 ,b.D16 ,b.D17 ,b.D18 ,b.D19 ,b.D20 ,b.D21 ,b.D22 ,b.D23 ,b.D24 ,b.D25 ,b.D26 ,b.D27 ,b.D28 ,b.D29 ,b.D30 ,b.D31 ,'N' AS bit FROM 	TBL_MONTH_ARRANGE_DETAIL b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-05' AND    b.DISPATCH_SEQ = 6 AND    b.CAR_REGNO not like 'SP%' order by b.dispatch_seq,b.CAR_REGNO ,b.ampm_gubun,b.prev_daily_seq
2023-06-24 02:14:04.662 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
496. SELECT b.CAR_REGNO,b.emp_nm , 0 AS tot_work_date ,b.D1  ,b.D2  ,b.D3  ,b.D4  ,b.D5  ,b.D6  ,b.D7  ,b.D8  ,b.D9  ,b.D10 ,b.D11 ,b.D12 ,b.D13 ,b.D14 ,b.D15 ,b.D16 ,b.D17 ,b.D18 ,b.D19 ,b.D20 ,b.D21 ,b.D22 ,b.D23 ,b.D24 ,b.D25 ,b.D26 ,b.D27 ,b.D28 ,b.D29 ,b.D30 ,b.D31 ,'N' AS bit FROM 	TBL_MONTH_ARRANGE_DETAIL b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-05' AND    b.DISPATCH_SEQ = 6 AND    b.CAR_REGNO not like 'SP%' order by b.dispatch_seq,b.CAR_REGNO ,b.ampm_gubun,b.prev_daily_seq
 {executed in 1 msec}
2023-06-24 02:14:04.662 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - WITH sp_maxinfo AS ( SELECT  b.CAR_REGNO,b.EMP_NM ,nvl(max(CASE WHEN nvl(b.D1 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D1   ELSE '#' || b.D1  end),' ') as D1 ,nvl(max(CASE WHEN nvl(b.D2 ,'') = '' THEN '' WHEN b.route_nm = '38번' tHEN b.D2   ELSE '#' || b.D2  end),' ') as D2 ,nvl(max(CASE WHEN nvl(b.D3 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D3   ELSE '#' || b.D3   end),' ') as D3 ,nvl(max(CASE WHEN nvl(b.D4 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D4   ELSE '#' || b.D4   end),' ') as D4 ,nvl(max(CASE WHEN nvl(b.D5 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D5   ELSE '#' || b.D5   end),' ') as D5 ,nvl(max(CASE WHEN nvl(b.D6 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D6   ELSE '#' || b.D6   end),' ') as D6 ,nvl(max(CASE WHEN nvl(b.D7 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D7   ELSE '#' || b.D7   end),' ') as D7 ,nvl(max(CASE WHEN nvl(b.D8 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D8   ELSE '#' || b.D8   end),' ') as D8 ,nvl(max(CASE WHEN nvl(b.D9 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D9   ELSE '#' || b.D9   end),' ') as D9 ,nvl(max(CASE WHEN nvl(b.D10,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D10  ELSE '#' || b.D10  end),' ') as D10 ,nvl(max(CASE WHEN nvl(b.D11,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D11  ELSE '#' || b.D11  end),' ') as D11 ,nvl(max(CASE WHEN nvl(b.D12,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D12  ELSE '#' || b.D12  end),' ') as D12 ,nvl(max(CASE WHEN nvl(b.D13,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D13  ELSE '#' || b.D13  end),' ') as D13 ,nvl(max(CASE WHEN nvl(b.D14,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D14  ELSE '#' || b.D14  end),' ') as D14 ,nvl(max(CASE WHEN nvl(b.D15,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D15  ELSE '#' || b.D15  end),' ') as D15 ,nvl(max(CASE WHEN nvl(b.D16,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D16  ELSE '#' || b.D16  end),' ') as D16 ,nvl(max(CASE WHEN nvl(b.D17,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D17  ELSE '#' || b.D17  end),' ') as D17 ,nvl(max(CASE WHEN nvl(b.D18,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D18  ELSE '#' || b.D18  end),' ') as D18 ,nvl(max(CASE WHEN nvl(b.D19,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D19  ELSE '#' || b.D19  end),' ') as D19 ,nvl(max(CASE WHEN nvl(b.D20,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D20  ELSE '#' || b.D20  end),' ') as D20 ,nvl(max(CASE WHEN nvl(b.D21,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D21  ELSE '#' || b.D21  end),' ') as D21 ,nvl(max(CASE WHEN nvl(b.D22,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D22  ELSE '#' || b.D22  end),' ') as D22 ,nvl(max(CASE WHEN nvl(b.D23,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D23  ELSE '#' || b.D23  end),' ') as D23 ,nvl(max(CASE WHEN nvl(b.D24,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D24  ELSE '#' || b.D24  end),' ') as D24 ,nvl(max(CASE WHEN nvl(b.D25,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D25  ELSE '#' || b.D25  end),' ') as D25 ,nvl(max(CASE WHEN nvl(b.D26,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D26  ELSE '#' || b.D26  end),' ') as D26 ,nvl(max(CASE WHEN nvl(b.D27,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D27  ELSE '#' || b.D27  end),' ') as D27 ,nvl(max(CASE WHEN nvl(b.D28,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D28  ELSE '#' || b.D28  end),' ') as D28 ,nvl(max(CASE WHEN nvl(b.D29,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D29  ELSE '#' || b.D29  end),' ') as D29 ,nvl(max(CASE WHEN nvl(b.D30,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D30  ELSE '#' || b.D30  end),' ') as D30 ,nvl(max(CASE WHEN nvl(b.D31,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D31  ELSE '#' || b.D31  end),' ') as D31 FROM 	TBL_MONTH_ARRANGE_DETAIL b where 	b.company_no = '100' AND b.BASE_YM = '2023-05' and b.DISPATCH_SEQ = 6 and b.init_seq = 0 AND b.CAR_REGNO LIKE  'SP%' GROUP BY b.CAR_REGNO,b.emp_nm ) SELECT b.*,'N' as bit ,	LENGTH (REGEXP_REPLACE(b.D1||b.D2||b.D3||b.D4||b.D5||b.D6||b.D7||b.D8||b.D9||b.D10||b.D11||b.D12||b.D13||b.D14||b.D15||b.D16||b.D17||b.D18||b.D19||b.D20||b.D21||b.D22||b.D23||b.D24||b.D25||b.D26||b.D27||b.D28||b.D29||b.D30||b.D31,'[0-9# ]','') ) AS tot_work_date FROM ( SELECT  a.prev_daily_seq,b.* FROM 	TBL_MONTH_ARRANGE_DETAIL a LEFT OUTER JOIN sp_maxinfo b ON	a.emp_nm = b.EMP_NM AND  a.car_regno = b.CAR_REGNO where 	a.company_no = '100' AND a.BASE_YM = '2023-05' and a.DISPATCH_SEQ = 6 and a.init_seq = 0 AND a.CAR_REGNO LIKE  'SP%' AND a.emp_nm = decode('','',a.emp_nm,'') AND a.route_nm = '38번' ) b ORDER BY b.prev_daily_seq
2023-06-24 02:14:04.675 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
496. WITH sp_maxinfo AS ( SELECT  b.CAR_REGNO,b.EMP_NM ,nvl(max(CASE WHEN nvl(b.D1 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D1   ELSE '#' || b.D1  end),' ') as D1 ,nvl(max(CASE WHEN nvl(b.D2 ,'') = '' THEN '' WHEN b.route_nm = '38번' tHEN b.D2   ELSE '#' || b.D2  end),' ') as D2 ,nvl(max(CASE WHEN nvl(b.D3 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D3   ELSE '#' || b.D3   end),' ') as D3 ,nvl(max(CASE WHEN nvl(b.D4 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D4   ELSE '#' || b.D4   end),' ') as D4 ,nvl(max(CASE WHEN nvl(b.D5 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D5   ELSE '#' || b.D5   end),' ') as D5 ,nvl(max(CASE WHEN nvl(b.D6 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D6   ELSE '#' || b.D6   end),' ') as D6 ,nvl(max(CASE WHEN nvl(b.D7 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D7   ELSE '#' || b.D7   end),' ') as D7 ,nvl(max(CASE WHEN nvl(b.D8 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D8   ELSE '#' || b.D8   end),' ') as D8 ,nvl(max(CASE WHEN nvl(b.D9 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D9   ELSE '#' || b.D9   end),' ') as D9 ,nvl(max(CASE WHEN nvl(b.D10,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D10  ELSE '#' || b.D10  end),' ') as D10 ,nvl(max(CASE WHEN nvl(b.D11,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D11  ELSE '#' || b.D11  end),' ') as D11 ,nvl(max(CASE WHEN nvl(b.D12,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D12  ELSE '#' || b.D12  end),' ') as D12 ,nvl(max(CASE WHEN nvl(b.D13,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D13  ELSE '#' || b.D13  end),' ') as D13 ,nvl(max(CASE WHEN nvl(b.D14,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D14  ELSE '#' || b.D14  end),' ') as D14 ,nvl(max(CASE WHEN nvl(b.D15,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D15  ELSE '#' || b.D15  end),' ') as D15 ,nvl(max(CASE WHEN nvl(b.D16,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D16  ELSE '#' || b.D16  end),' ') as D16 ,nvl(max(CASE WHEN nvl(b.D17,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D17  ELSE '#' || b.D17  end),' ') as D17 ,nvl(max(CASE WHEN nvl(b.D18,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D18  ELSE '#' || b.D18  end),' ') as D18 ,nvl(max(CASE WHEN nvl(b.D19,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D19  ELSE '#' || b.D19  end),' ') as D19 ,nvl(max(CASE WHEN nvl(b.D20,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D20  ELSE '#' || b.D20  end),' ') as D20 ,nvl(max(CASE WHEN nvl(b.D21,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D21  ELSE '#' || b.D21  end),' ') as D21 ,nvl(max(CASE WHEN nvl(b.D22,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D22  ELSE '#' || b.D22  end),' ') as D22 ,nvl(max(CASE WHEN nvl(b.D23,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D23  ELSE '#' || b.D23  end),' ') as D23 ,nvl(max(CASE WHEN nvl(b.D24,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D24  ELSE '#' || b.D24  end),' ') as D24 ,nvl(max(CASE WHEN nvl(b.D25,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D25  ELSE '#' || b.D25  end),' ') as D25 ,nvl(max(CASE WHEN nvl(b.D26,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D26  ELSE '#' || b.D26  end),' ') as D26 ,nvl(max(CASE WHEN nvl(b.D27,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D27  ELSE '#' || b.D27  end),' ') as D27 ,nvl(max(CASE WHEN nvl(b.D28,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D28  ELSE '#' || b.D28  end),' ') as D28 ,nvl(max(CASE WHEN nvl(b.D29,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D29  ELSE '#' || b.D29  end),' ') as D29 ,nvl(max(CASE WHEN nvl(b.D30,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D30  ELSE '#' || b.D30  end),' ') as D30 ,nvl(max(CASE WHEN nvl(b.D31,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D31  ELSE '#' || b.D31  end),' ') as D31 FROM 	TBL_MONTH_ARRANGE_DETAIL b where 	b.company_no = '100' AND b.BASE_YM = '2023-05' and b.DISPATCH_SEQ = 6 and b.init_seq = 0 AND b.CAR_REGNO LIKE  'SP%' GROUP BY b.CAR_REGNO,b.emp_nm ) SELECT b.*,'N' as bit ,	LENGTH (REGEXP_REPLACE(b.D1||b.D2||b.D3||b.D4||b.D5||b.D6||b.D7||b.D8||b.D9||b.D10||b.D11||b.D12||b.D13||b.D14||b.D15||b.D16||b.D17||b.D18||b.D19||b.D20||b.D21||b.D22||b.D23||b.D24||b.D25||b.D26||b.D27||b.D28||b.D29||b.D30||b.D31,'[0-9# ]','') ) AS tot_work_date FROM ( SELECT  a.prev_daily_seq,b.* FROM 	TBL_MONTH_ARRANGE_DETAIL a LEFT OUTER JOIN sp_maxinfo b ON	a.emp_nm = b.EMP_NM AND  a.car_regno = b.CAR_REGNO where 	a.company_no = '100' AND a.BASE_YM = '2023-05' and a.DISPATCH_SEQ = 6 and a.init_seq = 0 AND a.CAR_REGNO LIKE  'SP%' AND a.emp_nm = decode('','',a.emp_nm,'') AND a.route_nm = '38번' ) b ORDER BY b.prev_daily_seq
 {executed in 12 msec}
2023-06-24 02:14:05.226 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@93382024
2023-06-24 02:14:05.226 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_DRIVERINFO_DETAIL} 
2023-06-24 02:14:05.226 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT  'N' as bit,CAR_REGNO ,EMP_NM ,prev_daily_seq ,PREV_WORK_PATTERN ,ampm_gubun, off_group, CAR_REGNO||EMP_NM as key FROM TBM_DRIVERINFO_DETAIL where   company_no = '100' AND 	route_nm = '38번' AND     BASE_YM = '2023-05'
2023-06-24 02:14:05.227 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
495. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 02:14:05.228 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
495. SELECT  'N' as bit,CAR_REGNO ,EMP_NM ,prev_daily_seq ,PREV_WORK_PATTERN ,ampm_gubun, off_group, CAR_REGNO||EMP_NM as key FROM TBM_DRIVERINFO_DETAIL where   company_no = '100' AND 	route_nm = '38번' AND     BASE_YM = '2023-05'
 {executed in 0 msec}
2023-06-24 02:14:05.265 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT 	a.ROUTE_NM,b.STATUS,b.LAST_CHG_USER,b.LAST_CHG_DATE FROM 	TBL_ROUTEINFO a left outer join TBM_MONTH_ARRANGE_STATUS b on	a.company_no = b.company_no and a.route_nm   = b.route_nm AND b.BASE_YM = '2023-05' AND	b.ROUTE_NM like '' || '%' WHERE 	a.company_no = '100' ORDER BY 1
2023-06-24 02:14:05.266 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
495. SELECT 	a.ROUTE_NM,b.STATUS,b.LAST_CHG_USER,b.LAST_CHG_DATE FROM 	TBL_ROUTEINFO a left outer join TBM_MONTH_ARRANGE_STATUS b on	a.company_no = b.company_no and a.route_nm   = b.route_nm AND b.BASE_YM = '2023-05' AND	b.ROUTE_NM like '' || '%' WHERE 	a.company_no = '100' ORDER BY 1
 {executed in 1 msec}
2023-06-24 02:14:18.584 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
496. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 02:14:18.586 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
496. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-06-01') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-06-01'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,'(' || a.route_nm || ')' || a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-06-01' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 1 msec}
2023-06-24 02:14:18.589 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
496. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d1, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d1, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-06'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d1 NOT LIKE '%*%'
			AND a.d1 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d1, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d1, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d1 <> ''
		    AND a.d1 LIKE b.d1 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-06'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d1 LIKE '%*%' OR a.d1 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 02:14:18.591 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
496. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d1, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d1, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-06'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d1 NOT LIKE '%*%'
			AND a.d1 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d1, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d1, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d1 <> ''
		    AND a.d1 LIKE b.d1 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-06'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d1 LIKE '%*%' OR a.d1 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 02:14:18.594 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
496. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d1, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d1, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-06'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d1 NOT LIKE '%*%'
			AND a.d1 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d1, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d1, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d1 <> ''
		    AND a.d1 LIKE b.d1 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-06'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d1 LIKE '%*%' OR a.d1 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 0 msec}
2023-06-24 02:14:18.597 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
496. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d1, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d1, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-06'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d1 NOT LIKE '%*%'
			AND a.d1 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d1, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d1, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d1 <> ''
		    AND a.d1 LIKE b.d1 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-06'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d1 LIKE '%*%' OR a.d1 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 02:14:18.599 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
496. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d1, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d1, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-06'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d1 NOT LIKE '%*%'
			AND a.d1 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d1, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d1, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d1 <> ''
		    AND a.d1 LIKE b.d1 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-06'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d1 LIKE '%*%' OR a.d1 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 02:14:18.602 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
496. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d1, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d1, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-06'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d1 NOT LIKE '%*%'
			AND a.d1 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d1, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d1, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d1 <> ''
		    AND a.d1 LIKE b.d1 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-06'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d1 LIKE '%*%' OR a.d1 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 0 msec}
2023-06-24 02:14:18.604 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
496. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-06'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d1 LIKE '%*%' or a.d1 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 2 msec}
2023-06-24 02:14:18.606 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
496. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-06'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d1 <> '')
		AND (a.d1 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 0 msec}
2023-06-24 02:14:23.027 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
496. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 02:14:23.030 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
496. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-01') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-01'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,'(' || a.route_nm || ')' || a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-01' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 1 msec}
2023-06-24 02:14:23.033 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
496. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d1, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d1, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d1 NOT LIKE '%*%'
			AND a.d1 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d1, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d1, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d1 <> ''
		    AND a.d1 LIKE b.d1 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d1 LIKE '%*%' OR a.d1 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 02:14:23.036 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
496. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d1, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d1, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d1 NOT LIKE '%*%'
			AND a.d1 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d1, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d1, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d1 <> ''
		    AND a.d1 LIKE b.d1 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d1 LIKE '%*%' OR a.d1 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 02:14:23.039 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
496. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d1, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d1, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d1 NOT LIKE '%*%'
			AND a.d1 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d1, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d1, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d1 <> ''
		    AND a.d1 LIKE b.d1 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d1 LIKE '%*%' OR a.d1 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-24 02:14:23.042 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
496. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d1, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d1, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d1 NOT LIKE '%*%'
			AND a.d1 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d1, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d1, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d1 <> ''
		    AND a.d1 LIKE b.d1 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d1 LIKE '%*%' OR a.d1 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 02:14:23.045 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
496. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d1, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d1, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d1 NOT LIKE '%*%'
			AND a.d1 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d1, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d1, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d1 <> ''
		    AND a.d1 LIKE b.d1 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d1 LIKE '%*%' OR a.d1 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-24 02:14:23.049 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
496. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d1, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d1, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d1 NOT LIKE '%*%'
			AND a.d1 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d1, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d1, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d1 <> ''
		    AND a.d1 LIKE b.d1 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d1 LIKE '%*%' OR a.d1 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 02:14:23.050 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
496. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d1 LIKE '%*%' or a.d1 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 02:14:23.052 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
496. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d1 <> '')
		AND (a.d1 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 05:18:29.317 INFO  [Catalina-utility-2] [c.pjy.dashboard.listener.SessionListener] - updateUserCloseTime p00139 
2023-06-24 05:18:29.318 INFO  [Catalina-utility-2] [c.pjy.dashboard.listener.SessionListener] - currentSessionUserList ->  false
2023-06-24 05:18:29.318 INFO  [Catalina-utility-2] [c.pjy.dashboard.listener.SessionListener] - updateUserCloseTime p00139 
2023-06-24 05:18:29.318 INFO  [Catalina-utility-2] [c.pjy.dashboard.listener.SessionListener] - currentSessionUserList ->  false
2023-06-24 05:18:41.987 WARN  [H2 housekeeper] [com.zaxxer.hikari.pool.HikariPool] - H2 - Thread starvation or clock leap detected (housekeeper delta=3h28s976ms701µs100ns).
2023-06-24 08:24:03.824 WARN  [H2 housekeeper] [com.zaxxer.hikari.pool.HikariPool] - H2 - Thread starvation or clock leap detected (housekeeper delta=3h5m29s585ms730µs200ns).
2023-06-24 08:26:37.217 INFO  [http-nio-10010-exec-2] [c.p.d.interceptor.LoggerInterceptor] - ============================== START ==============================
2023-06-24 08:26:37.217 INFO  [http-nio-10010-exec-2] [c.p.d.interceptor.LoggerInterceptor] -  Class       	:  class org.springframework.web.method.HandlerMethod
2023-06-24 08:26:37.217 INFO  [http-nio-10010-exec-2] [c.p.d.interceptor.LoggerInterceptor] -  Request URI 	:  /error
2023-06-24 08:26:37.217 INFO  [http-nio-10010-exec-2] [c.p.d.interceptor.LoggerInterceptor] -  Request addr	:  0:0:0:0:0:0:0:1
2023-06-24 08:26:37.217 INFO  [http-nio-10010-exec-2] [c.p.d.interceptor.LoggerInterceptor] -  Servlet URI 	:  /error
2023-06-24 08:26:38.675 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
515. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 08:26:38.676 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
515. select * from MEMBER where userId = 'p00139'
 {executed in 0 msec}
2023-06-24 08:26:38.678 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.MemberServiceImpl] - ROLE_ADMIN
2023-06-24 08:26:38.783 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.MemberServiceImpl] - pass:$2a$10$MNrQAPw.4k9j2y08eTmYEeI7oKPuaWbA97HHog.8PYep5HsRwhbae,$2a$10$zWkyiBwcpu7rfzmvT/h9V.XWzYBiShj6zCEgySf/bMYg8N7rYofFe
2023-06-24 08:26:38.880 INFO  [http-nio-10010-exec-9] [c.p.d.configuration.SecurityConfig] - authentication:: p00139
2023-06-24 08:26:40.858 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
515. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 08:26:40.859 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
515. SELECT ROUTE_NM  FROM TBL_ROUTEINFO ORDER BY 1
 {executed in 0 msec}
2023-06-24 08:26:47.389 INFO  [http-nio-10010-exec-10] [org.apache.coyote.http11.Http11Processor] - Error parsing HTTP request header
 Note: further occurrences of HTTP request parsing errors will be logged at DEBUG level.
java.lang.IllegalArgumentException: Invalid character found in the request target. The valid characters are defined in RFC 7230 and RFC 3986
	at org.apache.coyote.http11.Http11InputBuffer.parseRequestLine(Http11InputBuffer.java:468)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:260)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-06-24 08:26:47.395 INFO  [http-nio-10010-exec-3] [org.apache.coyote.http11.Http11Processor] - Error parsing HTTP request header
 Note: further occurrences of HTTP request parsing errors will be logged at DEBUG level.
java.lang.IllegalArgumentException: Invalid character found in the request target. The valid characters are defined in RFC 7230 and RFC 3986
	at org.apache.coyote.http11.Http11InputBuffer.parseRequestLine(Http11InputBuffer.java:468)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:260)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-06-24 08:37:39.600 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
515. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 08:37:39.601 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
515. SELECT ROUTE_NM  FROM TBL_ROUTEINFO ORDER BY 1
 {executed in 0 msec}
2023-06-24 08:37:43.041 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
2023-06-24 08:37:43.042 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
515. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 08:37:43.043 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
515. select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
 {executed in 1 msec}
2023-06-24 08:38:32.450 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
2023-06-24 08:38:32.451 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
515. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 08:38:32.452 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
515. select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
 {executed in 1 msec}
2023-06-24 08:39:31.590 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
515. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 08:39:31.593 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
515. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-06-24') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-06-24'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,'(' || a.route_nm || ')' || a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-06-24' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 1 msec}
2023-06-24 08:39:31.596 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
515. SELECT /* select_getDailyArrangeInfo : excel 승무지시서 rawdata 용 */
			SUBSTRING('2023-06-24',1,4) || '년' || SUBSTRING('2023-06-24',6,2) || '월' || SUBSTRING('2023-06-24',9,2) ||'일 '
					|| decode(DAY_OF_WEEK('2023-06-24') ,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') || '요일' as baseYmd
		,	RIGHT(k.car_regno,4) as car_regno
		,	max(decode(k.ampm,'a',k.emp_nm,'') ) AS am_nm
		,	max(decode(k.ampm,'p',k.emp_nm)) AS pm_nm
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d24, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d24, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-06'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d24 NOT LIKE '%*%'
			AND a.d24 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d24, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d24, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d24 <> ''
		    AND a.d24 LIKE b.d24 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-06'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d24 LIKE '%*%' OR a.d24 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 08:39:31.600 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
515. SELECT /* select_getDailyArrangeInfo : excel 승무지시서 rawdata 용 */
			SUBSTRING('2023-06-24',1,4) || '년' || SUBSTRING('2023-06-24',6,2) || '월' || SUBSTRING('2023-06-24',9,2) ||'일 '
					|| decode(DAY_OF_WEEK('2023-06-24') ,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') || '요일' as baseYmd
		,	RIGHT(k.car_regno,4) as car_regno
		,	max(decode(k.ampm,'a',k.emp_nm,'') ) AS am_nm
		,	max(decode(k.ampm,'p',k.emp_nm)) AS pm_nm
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d24, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d24, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-06'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d24 NOT LIKE '%*%'
			AND a.d24 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d24, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d24, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d24 <> ''
		    AND a.d24 LIKE b.d24 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-06'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d24 LIKE '%*%' OR a.d24 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-24 08:39:31.603 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
515. SELECT /* select_getDailyArrangeInfo : excel 승무지시서 rawdata 용 */
			SUBSTRING('2023-06-24',1,4) || '년' || SUBSTRING('2023-06-24',6,2) || '월' || SUBSTRING('2023-06-24',9,2) ||'일 '
					|| decode(DAY_OF_WEEK('2023-06-24') ,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') || '요일' as baseYmd
		,	RIGHT(k.car_regno,4) as car_regno
		,	max(decode(k.ampm,'a',k.emp_nm,'') ) AS am_nm
		,	max(decode(k.ampm,'p',k.emp_nm)) AS pm_nm
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d24, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d24, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-06'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d24 NOT LIKE '%*%'
			AND a.d24 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d24, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d24, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d24 <> ''
		    AND a.d24 LIKE b.d24 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-06'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d24 LIKE '%*%' OR a.d24 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 08:39:31.606 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
515. SELECT /* select_getDailyArrangeInfo : excel 승무지시서 rawdata 용 */
			SUBSTRING('2023-06-24',1,4) || '년' || SUBSTRING('2023-06-24',6,2) || '월' || SUBSTRING('2023-06-24',9,2) ||'일 '
					|| decode(DAY_OF_WEEK('2023-06-24') ,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') || '요일' as baseYmd
		,	RIGHT(k.car_regno,4) as car_regno
		,	max(decode(k.ampm,'a',k.emp_nm,'') ) AS am_nm
		,	max(decode(k.ampm,'p',k.emp_nm)) AS pm_nm
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d24, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d24, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-06'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d24 NOT LIKE '%*%'
			AND a.d24 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d24, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d24, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d24 <> ''
		    AND a.d24 LIKE b.d24 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-06'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d24 LIKE '%*%' OR a.d24 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 08:39:31.609 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
515. SELECT /* select_getDailyArrangeInfo : excel 승무지시서 rawdata 용 */
			SUBSTRING('2023-06-24',1,4) || '년' || SUBSTRING('2023-06-24',6,2) || '월' || SUBSTRING('2023-06-24',9,2) ||'일 '
					|| decode(DAY_OF_WEEK('2023-06-24') ,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') || '요일' as baseYmd
		,	RIGHT(k.car_regno,4) as car_regno
		,	max(decode(k.ampm,'a',k.emp_nm,'') ) AS am_nm
		,	max(decode(k.ampm,'p',k.emp_nm)) AS pm_nm
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d24, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d24, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-06'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d24 NOT LIKE '%*%'
			AND a.d24 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d24, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d24, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d24 <> ''
		    AND a.d24 LIKE b.d24 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-06'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d24 LIKE '%*%' OR a.d24 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 08:39:31.613 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
515. SELECT /* select_getDailyArrangeInfo : excel 승무지시서 rawdata 용 */
			SUBSTRING('2023-06-24',1,4) || '년' || SUBSTRING('2023-06-24',6,2) || '월' || SUBSTRING('2023-06-24',9,2) ||'일 '
					|| decode(DAY_OF_WEEK('2023-06-24') ,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') || '요일' as baseYmd
		,	RIGHT(k.car_regno,4) as car_regno
		,	max(decode(k.ampm,'a',k.emp_nm,'') ) AS am_nm
		,	max(decode(k.ampm,'p',k.emp_nm)) AS pm_nm
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d24, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d24, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-06'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d24 NOT LIKE '%*%'
			AND a.d24 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d24, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d24, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d24 <> ''
		    AND a.d24 LIKE b.d24 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-06'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d24 LIKE '%*%' OR a.d24 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-24 08:42:23.434 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
515. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 08:42:23.436 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
515. SELECT ROUTE_NM  FROM TBL_ROUTEINFO ORDER BY 1
 {executed in 0 msec}
2023-06-24 08:42:32.352 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@7274ecc
2023-06-24 08:42:32.354 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
515. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 08:42:32.374 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
515. SELECT /* select_getDrivingOrder : 승무지시 화면용 */ k.route_nm,k.seq,k.CAR_REGNO
		,	listagg(k.emp_nm,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as empNm
		,	listagg(k.PHONE_NO,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as PHONE
		,	listagg(k.value,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as spGb
		,	' ' as empNm_am
		,	' ' as empNm_pm
		,	' ' as phone_am
		,	' ' as phone_pm
		,	' ' as spgb_am
		,	' ' as spgb_pm
	FROM (
	SELECT	a.route_nm,
			a.CAR_REGNO ,
			a.EMP_NM ,
			b.PHONE_NO ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,
			CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a JOIN TBL_EMPLOYEEINFO b ON a.company_no = b.COMPANY_NO AND a.emp_nm = b.EMP_NM 
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT a.route_nm,
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			nvl(c.PHONE_NO,'-') AS phone_no ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		
			CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON
			a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
			AND b.d2 <> ''
			AND a.d2 LIKE b.d2 || '%'
		LEFT OUTER JOIN TBL_EMPLOYEEINFO c ON b.company_no = c.COMPANY_NO AND b.emp_nm = c.EMP_NM
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%'	OR a.d2 LIKE '%@%')
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.route_nm,k.seq,k.CAR_REGNO
 {executed in 18 msec}
2023-06-24 08:45:02.158 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
525. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 08:45:02.159 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
525. SELECT ROUTE_NM  FROM TBL_ROUTEINFO ORDER BY 1
 {executed in 0 msec}
2023-06-24 08:45:26.400 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
525. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 08:45:26.401 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
525. SELECT ROUTE_NM  FROM TBL_ROUTEINFO ORDER BY 1
 {executed in 1 msec}
2023-06-24 08:45:47.830 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
525. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 08:45:47.831 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
525. SELECT ROUTE_NM  FROM TBL_ROUTEINFO ORDER BY 1
 {executed in 1 msec}
2023-06-24 08:45:54.937 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@7274ecc
2023-06-24 08:45:54.938 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
525. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 08:45:54.954 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
525. SELECT /* select_getDrivingOrder : 승무지시 화면용 */ k.route_nm,k.seq,k.CAR_REGNO
		,	listagg(k.emp_nm,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as empNm
		,	listagg(k.PHONE_NO,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as PHONE
		,	listagg(k.value,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as spGb
		,	' ' as empNm_am
		,	' ' as empNm_pm
		,	' ' as phone_am
		,	' ' as phone_pm
		,	' ' as spgb_am
		,	' ' as spgb_pm
	FROM (
	SELECT	a.route_nm,
			a.CAR_REGNO ,
			a.EMP_NM ,
			b.PHONE_NO ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,
			CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a JOIN TBL_EMPLOYEEINFO b ON a.company_no = b.COMPANY_NO AND a.emp_nm = b.EMP_NM 
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT a.route_nm,
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			nvl(c.PHONE_NO,'-') AS phone_no ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		
			CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON
			a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
			AND b.d2 <> ''
			AND a.d2 LIKE b.d2 || '%'
		LEFT OUTER JOIN TBL_EMPLOYEEINFO c ON b.company_no = c.COMPANY_NO AND b.emp_nm = c.EMP_NM
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%'	OR a.d2 LIKE '%@%')
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.route_nm,k.seq,k.CAR_REGNO
 {executed in 15 msec}
2023-06-24 08:46:14.205 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
2023-06-24 08:46:14.206 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
525. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 08:46:14.207 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
525. select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
 {executed in 1 msec}
2023-06-24 08:47:58.213 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
2023-06-24 08:47:58.214 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
525. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 08:47:58.216 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
525. select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
 {executed in 1 msec}
2023-06-24 08:50:44.004 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
2023-06-24 08:50:44.005 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
525. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 08:50:44.006 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
525. select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
 {executed in 1 msec}
2023-06-24 08:52:07.930 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
2023-06-24 08:52:07.931 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
525. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 08:52:07.932 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
525. select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
 {executed in 1 msec}
2023-06-24 08:52:19.515 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
2023-06-24 08:52:19.516 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
525. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 08:52:19.517 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
525. select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
 {executed in 0 msec}
2023-06-24 08:52:33.627 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
2023-06-24 08:52:33.628 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
525. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 08:52:33.629 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
525. select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
 {executed in 1 msec}
2023-06-24 08:52:52.754 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
2023-06-24 08:52:52.755 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
525. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 08:52:52.756 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
525. select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
 {executed in 1 msec}
2023-06-24 08:53:02.791 ERROR [http-nio-10010-exec-9] [c.p.d.core.error.GlobalExceptionHandler] - handleEntityNotFoundException
org.springframework.web.multipart.support.MissingServletRequestPartException: Required request part 'images' is not present
	at org.springframework.web.method.annotation.RequestParamMethodArgumentResolver.handleMissingValue(RequestParamMethodArgumentResolver.java:198)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:114)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:127)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:893)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:798)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:97)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at jdk.internal.reflect.GeneratedMethodAccessor147.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$dca3e52d.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:114)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:104)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-06-24 08:53:02.793 WARN  [http-nio-10010-exec-9] [o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver] - Resolved [org.springframework.web.multipart.support.MissingServletRequestPartException: Required request part 'images' is not present]
2023-06-24 08:55:38.398 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
2023-06-24 08:55:38.399 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
525. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 08:55:38.400 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
525. select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
 {executed in 1 msec}
2023-06-24 08:56:16.214 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
2023-06-24 08:56:16.215 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
525. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 08:56:16.216 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
525. select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
 {executed in 0 msec}
2023-06-24 08:56:21.504 ERROR [http-nio-10010-exec-3] [c.p.d.core.error.GlobalExceptionHandler] - handleEntityNotFoundException
org.springframework.web.multipart.support.MissingServletRequestPartException: Required request part 'images' is not present
	at org.springframework.web.method.annotation.RequestParamMethodArgumentResolver.handleMissingValue(RequestParamMethodArgumentResolver.java:198)
	at org.springframework.web.method.annotation.AbstractNamedValueMethodArgumentResolver.resolveArgument(AbstractNamedValueMethodArgumentResolver.java:114)
	at org.springframework.web.method.support.HandlerMethodArgumentResolverComposite.resolveArgument(HandlerMethodArgumentResolverComposite.java:127)
	at org.springframework.web.method.support.InvocableHandlerMethod.getMethodArgumentValues(InvocableHandlerMethod.java:167)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:134)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:893)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:798)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:97)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at jdk.internal.reflect.GeneratedMethodAccessor147.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$dca3e52d.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:114)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:104)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-06-24 08:56:21.506 WARN  [http-nio-10010-exec-3] [o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver] - Resolved [org.springframework.web.multipart.support.MissingServletRequestPartException: Required request part 'images' is not present]
2023-06-24 08:58:48.956 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
2023-06-24 08:58:48.957 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
525. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 08:58:48.958 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
525. select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
 {executed in 1 msec}
2023-06-24 08:59:52.880 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
2023-06-24 08:59:52.881 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
525. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 08:59:52.882 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
525. select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
 {executed in 1 msec}
2023-06-24 09:00:44.263 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
2023-06-24 09:00:44.264 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
525. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 09:00:44.265 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
525. select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
 {executed in 1 msec}
2023-06-24 09:02:36.183 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
2023-06-24 09:02:36.184 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
525. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 09:02:36.185 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
525. select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
 {executed in 1 msec}
2023-06-24 09:04:08.824 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
2023-06-24 09:04:08.825 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
535. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 09:04:08.826 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
535. select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
 {executed in 1 msec}
2023-06-24 09:09:46.149 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
2023-06-24 09:09:46.150 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
535. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 09:09:46.151 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
535. select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
 {executed in 1 msec}
2023-06-24 09:10:24.735 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
2023-06-24 09:10:24.736 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
535. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 09:10:24.737 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
535. select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
 {executed in 1 msec}
2023-06-24 09:17:38.746 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
2023-06-24 09:17:38.747 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
535. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 09:17:38.748 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
535. select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
 {executed in 1 msec}
2023-06-24 09:37:28.493 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
2023-06-24 09:37:28.494 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
545. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 09:37:28.495 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
545. select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
 {executed in 1 msec}
2023-06-24 09:38:14.936 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
2023-06-24 09:38:14.937 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
545. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 09:38:14.938 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
545. select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
 {executed in 1 msec}
2023-06-24 09:42:53.479 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
2023-06-24 09:42:53.480 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
546. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 09:42:53.481 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
546. select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
 {executed in 1 msec}
2023-06-24 09:43:19.326 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
2023-06-24 09:43:19.327 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
553. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 09:43:19.328 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
553. select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
 {executed in 1 msec}
2023-06-24 09:45:00.600 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
555. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 09:45:00.601 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
555. select * from TBL_FILE_INFO where company_no = '100' and file_gb = 'templete' and file_id = '20번'
 {executed in 0 msec}
2023-06-24 09:45:00.607 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
555. delete from TBL_FILE_INFO where company_no = '100' and file_gb = 'templete' and file_id = '20번'
 {executed in 1 msec}
2023-06-24 09:45:04.941 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
2023-06-24 09:45:04.942 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
555. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 09:45:04.943 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
555. select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
 {executed in 1 msec}
2023-06-24 09:45:46.484 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
2023-06-24 09:45:46.485 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
555. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 09:45:46.486 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
555. select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
 {executed in 0 msec}
2023-06-24 09:45:50.181 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
555. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 09:45:50.182 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
555. select * from TBL_FILE_INFO where company_no = '100' and file_gb = 'templete' and file_id = '21번'
 {executed in 0 msec}
2023-06-24 09:45:50.185 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
555. delete from TBL_FILE_INFO where company_no = '100' and file_gb = 'templete' and file_id = '21번'
 {executed in 1 msec}
2023-06-24 09:47:10.213 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
2023-06-24 09:47:10.214 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
555. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 09:47:10.215 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
555. select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
 {executed in 0 msec}
2023-06-24 09:48:54.517 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
2023-06-24 09:48:54.518 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
555. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 09:48:54.520 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
555. select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
 {executed in 1 msec}
2023-06-24 09:50:16.124 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
2023-06-24 09:50:16.125 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
555. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 09:50:16.126 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
555. select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
 {executed in 1 msec}
2023-06-24 09:51:33.579 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
2023-06-24 09:51:33.579 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
555. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 09:51:33.581 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
555. select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
 {executed in 0 msec}
2023-06-24 09:52:49.213 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
2023-06-24 09:52:49.213 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
555. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 09:52:49.214 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
555. select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
 {executed in 0 msec}
2023-06-24 09:56:47.896 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
2023-06-24 09:56:47.898 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
555. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 09:56:47.899 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
555. select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
 {executed in 1 msec}
2023-06-24 09:58:43.661 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
2023-06-24 09:58:43.662 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
555. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 09:58:43.663 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
555. select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
 {executed in 0 msec}
2023-06-24 09:58:50.577 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
555. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 09:58:50.577 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
555. select * from TBL_FILE_INFO where company_no = '100' and file_gb = 'templete' and file_id = '20번'
 {executed in 0 msec}
2023-06-24 09:58:50.583 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
555. INSERT INTO PUBLIC.TBL_FILE_INFO
(COMPANY_NO, FILE_GB, FILE_ID, ORGNM, SAVEDNM, SAVEDPATH, LAST_CHG_USER, LAST_CHG_DATE)
VALUES( '100', 'templete', '20번', 'templete_승무지시서(20번).xlsx', 'templete_승무지시서(20번).xlsx', 'd:/bus/templete/templete_승무지시서(20번).xlsx', 'p00139', '2023-06-24 09:58:50');
 {executed in 1 msec}
2023-06-24 09:59:36.124 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
2023-06-24 09:59:36.125 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
555. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 09:59:36.126 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
555. select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
 {executed in 1 msec}
2023-06-24 10:00:30.111 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
2023-06-24 10:00:30.112 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
555. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 10:00:30.113 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
555. select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
 {executed in 1 msec}
2023-06-24 10:00:47.857 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
555. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 10:00:47.858 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
555. select * from TBL_FILE_INFO where company_no = '100' and file_gb = 'templete' and file_id = '21번'
 {executed in 0 msec}
2023-06-24 10:00:47.863 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
555. INSERT INTO PUBLIC.TBL_FILE_INFO
(COMPANY_NO, FILE_GB, FILE_ID, ORGNM, SAVEDNM, SAVEDPATH, LAST_CHG_USER, LAST_CHG_DATE)
VALUES( '100', 'templete', '21번', 'templete_승무지시서(21번).xlsx', 'templete_승무지시서(21번).xlsx', 'd:/bus/templete/templete_승무지시서(21번).xlsx', 'p00139', '2023-06-24 10:00:47');
 {executed in 0 msec}
2023-06-24 10:03:00.292 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
2023-06-24 10:03:00.294 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
563. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 10:03:00.295 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
563. select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
 {executed in 1 msec}
2023-06-24 10:03:04.060 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
563. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 10:03:04.062 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
563. select * from TBL_FILE_INFO where company_no = '100' and file_gb = 'templete' and file_id = '20번'
 {executed in 0 msec}
2023-06-24 10:03:04.066 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
563. delete from TBL_FILE_INFO where company_no = '100' and file_gb = 'templete' and file_id = '20번'
 {executed in 1 msec}
2023-06-24 10:03:13.127 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
563. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 10:03:13.128 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
563. select * from TBL_FILE_INFO where company_no = '100' and file_gb = 'templete' and file_id = '20번'
 {executed in 0 msec}
2023-06-24 10:03:13.133 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeUpdate(ProxyPreparedStatement.java:61)
563. INSERT INTO PUBLIC.TBL_FILE_INFO
(COMPANY_NO, FILE_GB, FILE_ID, ORGNM, SAVEDNM, SAVEDPATH, LAST_CHG_USER, LAST_CHG_DATE)
VALUES( '100', 'templete', '20번', 'templete_승무지시서(20번).xlsx', 'templete_승무지시서(20번).xlsx', 'd:/bus/templete/templete_승무지시서(20번).xlsx', 'p00139', '2023-06-24 10:03:13');
 {executed in 0 msec}
2023-06-24 10:03:22.301 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
2023-06-24 10:03:22.302 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
563. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 10:03:22.303 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
563. select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
 {executed in 1 msec}
2023-06-24 10:08:09.301 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Starting PjyApplication on DESKTOP-QJPD93S with PID 14060 (D:\BUS\dashboard\dashboard\target\classes started by admin in D:\BUS\dashboard\dashboard)
2023-06-24 10:08:09.306 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - The following profiles are active: oauth
2023-06-24 10:08:09.366 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-06-24 10:08:09.366 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-06-24 10:08:12.288 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-24 10:08:12.288 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-06-24 10:08:12.444 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 145ms. Found 3 JPA repository interfaces.
2023-06-24 10:08:12.799 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-24 10:08:12.799 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2023-06-24 10:08:12.844 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.FileRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-06-24 10:08:12.844 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.MemberRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-06-24 10:08:12.845 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.RememberMeRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-06-24 10:08:12.845 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 46ms. Found 0 JDBC repository interfaces.
2023-06-24 10:08:13.311 INFO  [restartedMain] [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] - Post-processing PropertySource instances
2023-06-24 10:08:13.386 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2023-06-24 10:08:13.386 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource commandLineArgs [org.springframework.core.env.SimpleCommandLinePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-06-24 10:08:13.386 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-06-24 10:08:13.386 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-06-24 10:08:13.386 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-24 10:08:13.387 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
2023-06-24 10:08:13.387 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2023-06-24 10:08:13.387 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application-oauth.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-24 10:08:13.387 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-24 10:08:13.387 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-24 10:08:13.387 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [pjy.properties] [org.springframework.core.env.CompositePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-06-24 10:08:13.388 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [common.properties] [org.springframework.core.io.support.ResourcePropertySource] to EncryptableMapPropertySourceWrapper
2023-06-24 10:08:13.446 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'asyncConfiguration' of type [com.pjy.dashboard.configuration.AsyncConfiguration$$EnhancerBySpringCGLIB$$5387bee9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-24 10:08:13.503 INFO  [restartedMain] [c.u.j.filter.DefaultLazyPropertyFilter] - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2023-06-24 10:08:13.589 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$3d7e2316] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-24 10:08:13.672 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-24 10:08:13.674 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@52b700a1' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-24 10:08:13.680 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$6252c5c8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-24 10:08:13.689 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration$$EnhancerBySpringCGLIB$$87a7ddde] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-24 10:08:13.693 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-24 10:08:13.695 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-24 10:08:13.715 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a4d05adc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-24 10:08:13.746 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$2450a80e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-24 10:08:13.876 INFO  [restartedMain] [c.u.j.r.DefaultLazyPropertyResolver] - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2023-06-24 10:08:13.880 INFO  [restartedMain] [c.u.j.d.DefaultLazyPropertyDetector] - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2023-06-24 10:08:14.320 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 10010 (http)
2023-06-24 10:08:14.338 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Initializing ProtocolHandler ["http-nio-10010"]
2023-06-24 10:08:14.351 INFO  [restartedMain] [org.apache.catalina.core.StandardService] - Starting service [Tomcat]
2023-06-24 10:08:14.351 INFO  [restartedMain] [org.apache.catalina.core.StandardEngine] - Starting Servlet engine: [Apache Tomcat/9.0.29]
2023-06-24 10:08:14.746 INFO  [restartedMain] [org.apache.jasper.servlet.TldScanner] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2023-06-24 10:08:14.757 INFO  [restartedMain] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring embedded WebApplicationContext
2023-06-24 10:08:14.758 INFO  [restartedMain] [o.s.web.context.ContextLoader] - Root WebApplicationContext: initialization completed in 5392 ms
2023-06-24 10:08:15.627 INFO  [restartedMain] [c.u.j.encryptor.DefaultLazyEncryptor] - Found Custom Encryptor Bean org.jasypt.encryption.pbe.PooledPBEStringEncryptor@561e7739 with name: jasyptStringEncryptor
2023-06-24 10:08:15.687 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Starting...
2023-06-24 10:08:15.796 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.executeSql(PoolBase.java:567)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 13 msec}
2023-06-24 10:08:15.802 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Start completed.
2023-06-24 10:08:16.566 INFO  [restartedMain] [com.pjy.dashboard.filter.TestFilter] - init Pjy Filter
2023-06-24 10:08:17.027 INFO  [restartedMain] [o.hibernate.jpa.internal.util.LogHelper] - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2023-06-24 10:08:17.154 INFO  [restartedMain] [org.hibernate.Version] - HHH000412: Hibernate Core {5.3.14.Final}
2023-06-24 10:08:17.157 INFO  [restartedMain] [org.hibernate.cfg.Environment] - HHH000206: hibernate.properties not found
2023-06-24 10:08:17.378 INFO  [restartedMain] [org.hibernate.annotations.common.Version] - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2023-06-24 10:08:17.637 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 10:08:17.660 INFO  [restartedMain] [org.hibernate.dialect.Dialect] - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2023-06-24 10:08:18.421 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 10:08:18.425 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select SEQUENCE_CATALOG, SEQUENCE_SCHEMA, SEQUENCE_NAME, INCREMENT from information_schema.sequences
 {executed in 2 msec}
2023-06-24 10:08:18.477 INFO  [restartedMain] [o.s.o.j.LocalContainerEntityManagerFactoryBean] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-06-24 10:08:18.750 INFO  [restartedMain] [o.h.h.i.QueryTranslatorFactoryInitiator] - HHH000397: Using ASTQueryTranslatorFactory
2023-06-24 10:08:19.810 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService
2023-06-24 10:08:19.820 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'asyncThreadPool'
2023-06-24 10:08:20.034 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/h2-console/**'], []
2023-06-24 10:08:20.035 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/css/**'], []
2023-06-24 10:08:20.035 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/js/**'], []
2023-06-24 10:08:20.035 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/monitor/**'], []
2023-06-24 10:08:20.035 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/img/**'], []
2023-06-24 10:08:20.035 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/lib/**'], []
2023-06-24 10:08:20.035 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/main.css'], []
2023-06-24 10:08:20.035 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/common.js'], []
2023-06-24 10:08:20.035 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/resources/**'], []
2023-06-24 10:08:20.197 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6b559701, org.springframework.security.web.context.SecurityContextPersistenceFilter@1cf6dfcf, org.springframework.security.web.header.HeaderWriterFilter@695d8fda, org.springframework.web.filter.CorsFilter@21b1e19c, org.springframework.security.web.authentication.logout.LogoutFilter@51acc7f5, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@4b8fe5ba, org.springframework.security.web.session.ConcurrentSessionFilter@41a69042, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@5d6ed742, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4685644a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3befc7a2, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@715e5ac1, org.springframework.security.web.session.SessionManagementFilter@51bec61e, org.springframework.security.web.access.ExceptionTranslationFilter@22eedcea, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@f386e85]
2023-06-24 10:08:20.219 INFO  [restartedMain] [o.s.aop.framework.CglibAopProxy] - Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(javax.servlet.FilterConfig) throws javax.servlet.ServletException] because it is marked as final: Consider using interface-based JDK proxies instead!
2023-06-24 10:08:20.579 WARN  [restartedMain] [o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-06-24 10:08:20.655 INFO  [restartedMain] [o.s.b.a.w.s.WelcomePageHandlerMapping] - Adding welcome page: ServletContext resource [/index.html]
2023-06-24 10:08:21.082 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 10:08:21.903 INFO  [restartedMain] [o.s.b.d.a.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2023-06-24 10:08:21.931 INFO  [restartedMain] [o.s.b.a.e.web.EndpointLinksResolver] - Exposing 16 endpoint(s) beneath base path '/actuator'
2023-06-24 10:08:22.069 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskScheduler] - Initializing ExecutorService
2023-06-24 10:08:22.072 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Starting ProtocolHandler ["http-nio-10010"]
2023-06-24 10:08:22.122 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 10010 (http) with context path ''
2023-06-24 10:08:22.127 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Started PjyApplication in 13.392 seconds (JVM running for 14.974)
2023-06-24 10:08:22.128 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-06-24 10:08:22.128 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - Application started
2023-06-24 10:08:22.128 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-06-24 10:08:23.099 INFO  [RMI TCP Connection(11)-127.0.0.1] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-24 10:08:23.099 INFO  [RMI TCP Connection(11)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Initializing Servlet 'dispatcherServlet'
2023-06-24 10:08:23.120 INFO  [RMI TCP Connection(11)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Completed initialization in 21 ms
2023-06-24 10:08:36.903 INFO  [http-nio-10010-exec-1] [c.p.d.interceptor.LoggerInterceptor] - ============================== START ==============================
2023-06-24 10:08:36.904 INFO  [http-nio-10010-exec-1] [c.p.d.interceptor.LoggerInterceptor] -  Class       	:  class org.springframework.web.method.HandlerMethod
2023-06-24 10:08:36.904 INFO  [http-nio-10010-exec-1] [c.p.d.interceptor.LoggerInterceptor] -  Request URI 	:  /
2023-06-24 10:08:36.904 INFO  [http-nio-10010-exec-1] [c.p.d.interceptor.LoggerInterceptor] -  Request addr	:  0:0:0:0:0:0:0:1
2023-06-24 10:08:36.904 INFO  [http-nio-10010-exec-1] [c.p.d.interceptor.LoggerInterceptor] -  Servlet URI 	:  /
2023-06-24 10:08:37.704 ERROR [http-nio-10010-exec-1] [o.a.c.c.C.[Tomcat].[localhost].[/].[jsp]] - Servlet.service() for servlet [jsp] threw exception
java.lang.IllegalStateException: Cannot create a session after the response has been committed
	at org.apache.catalina.connector.Request.doGetSession(Request.java:2993)
	at org.apache.catalina.connector.Request.getSession(Request.java:2432)
	at org.apache.catalina.connector.RequestFacade.getSession(RequestFacade.java:908)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:244)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:582)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:527)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at org.apache.jasper.runtime.PageContextImpl.initialize(PageContextImpl.java:133)
	at org.apache.jasper.runtime.JspFactoryImpl.internalGetPageContext(JspFactoryImpl.java:109)
	at org.apache.jasper.runtime.JspFactoryImpl.getPageContext(JspFactoryImpl.java:60)
	at org.apache.jsp.WEB_002dINF.jsp.home_jsp._jspService(home_jsp.java:121)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:477)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:385)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:329)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:580)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:516)
	at org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequestDispatcher.include(HeaderWriterFilter.java:149)
	at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:163)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:317)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1372)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:97)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$ec92a435.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:114)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:104)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-06-24 10:08:37.713 ERROR [http-nio-10010-exec-1] [o.a.c.c.C.[.[.[/].[dispatcherServlet]] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [javax.servlet.ServletException: java.lang.IllegalStateException: Cannot create a session after the response has been committed] with root cause
java.lang.IllegalStateException: Cannot create a session after the response has been committed
	at org.apache.catalina.connector.Request.doGetSession(Request.java:2993)
	at org.apache.catalina.connector.Request.getSession(Request.java:2432)
	at org.apache.catalina.connector.RequestFacade.getSession(RequestFacade.java:908)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:244)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:582)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:527)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at org.apache.jasper.runtime.PageContextImpl.initialize(PageContextImpl.java:133)
	at org.apache.jasper.runtime.JspFactoryImpl.internalGetPageContext(JspFactoryImpl.java:109)
	at org.apache.jasper.runtime.JspFactoryImpl.getPageContext(JspFactoryImpl.java:60)
	at org.apache.jsp.WEB_002dINF.jsp.home_jsp._jspService(home_jsp.java:121)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:477)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:385)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:329)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:580)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:516)
	at org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequestDispatcher.include(HeaderWriterFilter.java:149)
	at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:163)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:317)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1372)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:97)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$ec92a435.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:114)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:104)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-06-24 10:08:37.723 INFO  [http-nio-10010-exec-1] [c.p.d.interceptor.LoggerInterceptor] - ============================== START ==============================
2023-06-24 10:08:37.724 INFO  [http-nio-10010-exec-1] [c.p.d.interceptor.LoggerInterceptor] -  Class       	:  class org.springframework.web.method.HandlerMethod
2023-06-24 10:08:37.724 INFO  [http-nio-10010-exec-1] [c.p.d.interceptor.LoggerInterceptor] -  Request URI 	:  /error
2023-06-24 10:08:37.724 INFO  [http-nio-10010-exec-1] [c.p.d.interceptor.LoggerInterceptor] -  Request addr	:  0:0:0:0:0:0:0:1
2023-06-24 10:08:37.724 INFO  [http-nio-10010-exec-1] [c.p.d.interceptor.LoggerInterceptor] -  Servlet URI 	:  /error
2023-06-24 10:08:37.864 ERROR [http-nio-10010-exec-1] [o.a.c.c.C.[Tomcat].[localhost].[/].[jsp]] - Servlet.service() for servlet [jsp] threw exception
java.lang.IllegalStateException: Cannot create a session after the response has been committed
	at org.apache.catalina.connector.Request.doGetSession(Request.java:2993)
	at org.apache.catalina.connector.Request.getSession(Request.java:2432)
	at org.apache.catalina.connector.RequestFacade.getSession(RequestFacade.java:908)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:244)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:582)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:244)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:582)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:527)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at org.apache.jasper.runtime.PageContextImpl.initialize(PageContextImpl.java:133)
	at org.apache.jasper.runtime.JspFactoryImpl.internalGetPageContext(JspFactoryImpl.java:109)
	at org.apache.jasper.runtime.JspFactoryImpl.getPageContext(JspFactoryImpl.java:60)
	at org.apache.jsp.WEB_002dINF.jsp.error_jsp._jspService(error_jsp.java:107)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:477)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:385)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:329)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:580)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:516)
	at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:163)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:317)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1372)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$ec92a435.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-06-24 10:08:37.865 ERROR [http-nio-10010-exec-1] [o.a.c.c.C.[.[.[/].[dispatcherServlet]] - Servlet.service() for servlet [dispatcherServlet] threw exception
java.lang.IllegalStateException: Cannot create a session after the response has been committed
	at org.apache.catalina.connector.Request.doGetSession(Request.java:2993)
	at org.apache.catalina.connector.Request.getSession(Request.java:2432)
	at org.apache.catalina.connector.RequestFacade.getSession(RequestFacade.java:908)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:244)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:582)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:244)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:582)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:527)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at org.apache.jasper.runtime.PageContextImpl.initialize(PageContextImpl.java:133)
	at org.apache.jasper.runtime.JspFactoryImpl.internalGetPageContext(JspFactoryImpl.java:109)
	at org.apache.jasper.runtime.JspFactoryImpl.getPageContext(JspFactoryImpl.java:60)
	at org.apache.jsp.WEB_002dINF.jsp.error_jsp._jspService(error_jsp.java:107)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:477)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:385)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:329)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:580)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:516)
	at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:163)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:317)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1372)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$ec92a435.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-06-24 10:08:37.866 ERROR [http-nio-10010-exec-1] [o.a.c.c.C.[Tomcat].[localhost]] - Exception Processing ErrorPage[errorCode=0, location=/error]
org.apache.jasper.JasperException: javax.servlet.ServletException: java.lang.IllegalStateException: Cannot create a session after the response has been committed
	at org.apache.jasper.servlet.JspServletWrapper.handleJspException(JspServletWrapper.java:639)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:500)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:385)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:329)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:580)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:516)
	at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:163)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:317)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1372)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$ec92a435.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: javax.servlet.ServletException: java.lang.IllegalStateException: Cannot create a session after the response has been committed
	at org.apache.jsp.WEB_002dINF.jsp.error_jsp._jspService(error_jsp.java:144)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:477)
	... 98 common frames omitted
Caused by: java.lang.IllegalStateException: Cannot create a session after the response has been committed
	at org.apache.catalina.connector.Request.doGetSession(Request.java:2993)
	at org.apache.catalina.connector.Request.getSession(Request.java:2432)
	at org.apache.catalina.connector.RequestFacade.getSession(RequestFacade.java:908)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:244)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:582)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:244)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:582)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:527)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at org.apache.jasper.runtime.PageContextImpl.initialize(PageContextImpl.java:133)
	at org.apache.jasper.runtime.JspFactoryImpl.internalGetPageContext(JspFactoryImpl.java:109)
	at org.apache.jasper.runtime.JspFactoryImpl.getPageContext(JspFactoryImpl.java:60)
	at org.apache.jsp.WEB_002dINF.jsp.error_jsp._jspService(error_jsp.java:107)
	... 101 common frames omitted
2023-06-24 10:08:38.228 INFO  [http-nio-10010-exec-3] [c.p.d.interceptor.LoggerInterceptor] - ============================== START ==============================
2023-06-24 10:08:38.228 INFO  [http-nio-10010-exec-3] [c.p.d.interceptor.LoggerInterceptor] -  Class       	:  class org.springframework.web.method.HandlerMethod
2023-06-24 10:08:38.228 INFO  [http-nio-10010-exec-3] [c.p.d.interceptor.LoggerInterceptor] -  Request URI 	:  /error
2023-06-24 10:08:38.228 INFO  [http-nio-10010-exec-3] [c.p.d.interceptor.LoggerInterceptor] -  Request addr	:  0:0:0:0:0:0:0:1
2023-06-24 10:08:38.229 INFO  [http-nio-10010-exec-3] [c.p.d.interceptor.LoggerInterceptor] -  Servlet URI 	:  /error
2023-06-24 10:08:39.889 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 10:08:39.896 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select * from MEMBER where userId = 'p00139'
 {executed in 0 msec}
2023-06-24 10:08:39.922 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.MemberServiceImpl] - ROLE_ADMIN
2023-06-24 10:08:40.013 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.MemberServiceImpl] - pass:$2a$10$MNrQAPw.4k9j2y08eTmYEeI7oKPuaWbA97HHog.8PYep5HsRwhbae,$2a$10$m45EBAEJs98ia.epfJTRVeNitoF.2EuemSq9fccE.xrJze4zw9pVy
2023-06-24 10:08:40.111 INFO  [http-nio-10010-exec-2] [c.p.d.configuration.SecurityConfig] - authentication:: p00139
2023-06-24 10:08:44.027 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 10:08:44.028 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. SELECT ROUTE_NM  FROM TBL_ROUTEINFO ORDER BY 1
 {executed in 1 msec}
2023-06-24 10:08:47.131 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@7274ecc
2023-06-24 10:08:47.206 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 10:08:47.220 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* select_getDrivingOrder : 승무지시 화면용 */ k.route_nm,k.seq,k.CAR_REGNO
		,	listagg(k.emp_nm,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as empNm
		,	listagg(k.PHONE_NO,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as PHONE
		,	listagg(k.value,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as spGb
		,	' ' as empNm_am
		,	' ' as empNm_pm
		,	' ' as phone_am
		,	' ' as phone_pm
		,	' ' as spgb_am
		,	' ' as spgb_pm
	FROM (
	SELECT	a.route_nm,
			a.CAR_REGNO ,
			a.EMP_NM ,
			b.PHONE_NO ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,
			CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a JOIN TBL_EMPLOYEEINFO b ON a.company_no = b.COMPANY_NO AND a.emp_nm = b.EMP_NM 
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT a.route_nm,
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			nvl(c.PHONE_NO,'-') AS phone_no ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		
			CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON
			a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
			AND b.d2 <> ''
			AND a.d2 LIKE b.d2 || '%'
		LEFT OUTER JOIN TBL_EMPLOYEEINFO c ON b.company_no = c.COMPANY_NO AND b.emp_nm = c.EMP_NM
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%'	OR a.d2 LIKE '%@%')
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.route_nm,k.seq,k.CAR_REGNO
 {executed in 11 msec}
2023-06-24 10:09:03.683 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
2023-06-24 10:09:03.685 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 10:09:03.686 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
 {executed in 0 msec}
2023-06-24 10:09:09.418 ERROR [http-nio-10010-exec-2] [c.p.d.core.error.GlobalExceptionHandler] - handleEntityNotFoundException
java.io.FileNotFoundException: URL [file:d:/bus/templete/undefined] cannot be resolved in the file system for checking its content length
	at org.springframework.core.io.AbstractFileResolvingResource.contentLength(AbstractFileResolvingResource.java:232)
	at org.springframework.http.converter.ResourceHttpMessageConverter.getContentLength(ResourceHttpMessageConverter.java:116)
	at org.springframework.http.converter.ResourceHttpMessageConverter.getContentLength(ResourceHttpMessageConverter.java:45)
	at org.springframework.http.converter.AbstractHttpMessageConverter.addDefaultHeaders(AbstractHttpMessageConverter.java:260)
	at org.springframework.http.converter.AbstractHttpMessageConverter.write(AbstractHttpMessageConverter.java:211)
	at org.springframework.web.servlet.mvc.method.annotation.AbstractMessageConverterMethodProcessor.writeWithMessageConverters(AbstractMessageConverterMethodProcessor.java:294)
	at org.springframework.web.servlet.mvc.method.annotation.HttpEntityMethodProcessor.handleReturnValue(HttpEntityMethodProcessor.java:226)
	at org.springframework.web.method.support.HandlerMethodReturnValueHandlerComposite.handleReturnValue(HandlerMethodReturnValueHandlerComposite.java:82)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:123)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:893)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:798)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:97)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at jdk.internal.reflect.GeneratedMethodAccessor151.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$ec92a435.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:114)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:104)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-06-24 10:09:09.426 WARN  [http-nio-10010-exec-2] [o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver] - Resolved [java.io.FileNotFoundException: URL [file:d:/bus/templete/undefined] cannot be resolved in the file system for checking its content length]
2023-06-24 10:09:19.456 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
2023-06-24 10:09:19.458 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 10:09:19.459 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
 {executed in 0 msec}
2023-06-24 10:09:45.103 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
2023-06-24 10:09:45.105 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 10:09:45.106 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
 {executed in 1 msec}
2023-06-24 10:10:41.367 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 10:10:41.368 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. SELECT ROUTE_NM  FROM TBL_ROUTEINFO ORDER BY 1
 {executed in 0 msec}
2023-06-24 10:10:57.808 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 10:10:57.809 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. SELECT ROUTE_NM  FROM TBL_ROUTEINFO ORDER BY 1
 {executed in 0 msec}
2023-06-24 10:11:00.907 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@7274ecc
2023-06-24 10:11:00.910 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 10:11:00.922 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* select_getDrivingOrder : 승무지시 화면용 */ k.route_nm,k.seq,k.CAR_REGNO
		,	listagg(k.emp_nm,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as empNm
		,	listagg(k.PHONE_NO,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as PHONE
		,	listagg(k.value,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as spGb
		,	' ' as empNm_am
		,	' ' as empNm_pm
		,	' ' as phone_am
		,	' ' as phone_pm
		,	' ' as spgb_am
		,	' ' as spgb_pm
	FROM (
	SELECT	a.route_nm,
			a.CAR_REGNO ,
			a.EMP_NM ,
			b.PHONE_NO ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,
			CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a JOIN TBL_EMPLOYEEINFO b ON a.company_no = b.COMPANY_NO AND a.emp_nm = b.EMP_NM 
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT a.route_nm,
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			nvl(c.PHONE_NO,'-') AS phone_no ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		
			CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON
			a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
			AND b.d2 <> ''
			AND a.d2 LIKE b.d2 || '%'
		LEFT OUTER JOIN TBL_EMPLOYEEINFO c ON b.company_no = c.COMPANY_NO AND b.emp_nm = c.EMP_NM
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%'	OR a.d2 LIKE '%@%')
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.route_nm,k.seq,k.CAR_REGNO
 {executed in 11 msec}
2023-06-24 10:19:38.304 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 10:19:38.308 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,'(' || a.route_nm || ')' || a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 1 msec}
2023-06-24 10:19:38.315 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 10:19:38.319 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 10:19:38.322 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 10:19:38.325 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 0 msec}
2023-06-24 10:19:38.331 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 3 msec}
2023-06-24 10:19:38.335 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-24 10:19:38.338 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d2 LIKE '%*%' or a.d2 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 2 msec}
2023-06-24 10:19:38.341 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d2 <> '')
		AND (a.d2 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 10:23:14.546 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 10:23:14.548 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,'(' || a.route_nm || ')' || a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 1 msec}
2023-06-24 10:23:14.552 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 10:23:14.555 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 10:23:14.561 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 10:23:14.565 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-24 10:23:14.570 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 10:23:14.576 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-24 10:23:14.579 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d2 LIKE '%*%' or a.d2 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 10:23:14.582 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d2 <> '')
		AND (a.d2 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 10:24:16.371 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 10:24:16.373 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,'(' || a.route_nm || ')' || a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 1 msec}
2023-06-24 10:24:16.376 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 10:24:16.380 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 10:24:16.384 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 10:24:16.388 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 10:24:16.391 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 10:24:16.395 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 10:24:16.397 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d2 LIKE '%*%' or a.d2 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 10:24:16.399 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d2 <> '')
		AND (a.d2 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 10:39:34.339 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
11. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 10:39:34.342 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,'(' || a.route_nm || ')' || a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 1 msec}
2023-06-24 10:39:34.346 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 10:39:34.350 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 10:39:34.353 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 10:39:34.358 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 10:39:34.361 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-24 10:39:34.365 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 10:39:34.367 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d2 LIKE '%*%' or a.d2 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 10:39:34.368 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d2 <> '')
		AND (a.d2 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 10:39:50.812 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
11. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 10:39:50.815 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,'(' || a.route_nm || ')' || a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 1 msec}
2023-06-24 10:39:50.819 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 0 msec}
2023-06-24 10:39:50.822 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 10:39:50.825 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-24 10:39:50.828 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 10:39:50.832 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 10:39:50.835 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 10:39:50.837 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d2 LIKE '%*%' or a.d2 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 10:39:50.839 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d2 <> '')
		AND (a.d2 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 10:40:04.445 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
11. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 10:40:04.447 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,'(' || a.route_nm || ')' || a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 1 msec}
2023-06-24 10:40:04.450 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 10:40:04.453 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 10:40:04.457 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 10:40:04.461 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 10:40:04.465 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 0 msec}
2023-06-24 10:40:04.468 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-24 10:40:04.471 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d2 LIKE '%*%' or a.d2 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 2 msec}
2023-06-24 10:40:04.474 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d2 <> '')
		AND (a.d2 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 2 msec}
2023-06-24 10:44:15.812 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
11. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 10:44:15.815 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,'(' || a.route_nm || ')' || a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 2 msec}
2023-06-24 10:44:15.818 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 10:44:15.820 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 10:44:15.823 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 10:44:15.826 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 10:44:15.830 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-24 10:44:15.833 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-24 10:44:15.835 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d2 LIKE '%*%' or a.d2 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 0 msec}
2023-06-24 10:44:15.837 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d2 <> '')
		AND (a.d2 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 10:46:40.299 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
11. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 10:46:40.304 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,'(' || a.route_nm || ')' || a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 1 msec}
2023-06-24 10:46:40.307 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 0 msec}
2023-06-24 10:46:40.309 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 10:46:40.312 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 10:46:40.316 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 10:46:40.319 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-24 10:46:40.322 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-24 10:46:40.324 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d2 LIKE '%*%' or a.d2 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 0 msec}
2023-06-24 10:46:40.326 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d2 <> '')
		AND (a.d2 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 10:54:19.159 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
21. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 10:54:19.162 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,'(' || a.route_nm || ')' || a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 1 msec}
2023-06-24 10:54:19.166 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 10:54:19.168 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 10:54:19.172 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 10:54:19.176 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 10:54:19.179 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 10:54:19.182 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 10:54:19.183 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d2 LIKE '%*%' or a.d2 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 10:54:19.184 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d2 <> '')
		AND (a.d2 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 0 msec}
2023-06-24 10:54:54.424 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
21. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 10:54:54.426 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,'(' || a.route_nm || ')' || a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 1 msec}
2023-06-24 10:54:54.430 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 10:54:54.434 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-24 10:54:54.438 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-24 10:54:54.443 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-24 10:54:54.447 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 10:54:54.451 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-24 10:54:54.453 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d2 LIKE '%*%' or a.d2 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 10:54:54.455 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d2 <> '')
		AND (a.d2 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 10:58:22.915 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
21. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 10:58:22.918 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-06-06') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-06-06'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,'(' || a.route_nm || ')' || a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-06-06' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 2 msec}
2023-06-24 10:58:22.920 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d6, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d6, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-06'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d6 NOT LIKE '%*%'
			AND a.d6 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d6, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d6, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d6 <> ''
		    AND a.d6 LIKE b.d6 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-06'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d6 LIKE '%*%' OR a.d6 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 10:58:22.922 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d6, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d6, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-06'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d6 NOT LIKE '%*%'
			AND a.d6 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d6, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d6, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d6 <> ''
		    AND a.d6 LIKE b.d6 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-06'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d6 LIKE '%*%' OR a.d6 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 10:58:22.925 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d6, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d6, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-06'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d6 NOT LIKE '%*%'
			AND a.d6 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d6, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d6, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d6 <> ''
		    AND a.d6 LIKE b.d6 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-06'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d6 LIKE '%*%' OR a.d6 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 10:58:22.928 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d6, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d6, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-06'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d6 NOT LIKE '%*%'
			AND a.d6 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d6, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d6, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d6 <> ''
		    AND a.d6 LIKE b.d6 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-06'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d6 LIKE '%*%' OR a.d6 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 0 msec}
2023-06-24 10:58:22.930 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d6, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d6, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-06'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d6 NOT LIKE '%*%'
			AND a.d6 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d6, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d6, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d6 <> ''
		    AND a.d6 LIKE b.d6 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-06'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d6 LIKE '%*%' OR a.d6 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 10:58:22.934 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d6, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d6, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-06'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d6 NOT LIKE '%*%'
			AND a.d6 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d6, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d6, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d6 <> ''
		    AND a.d6 LIKE b.d6 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-06'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d6 LIKE '%*%' OR a.d6 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-24 10:58:22.937 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-06'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d6 LIKE '%*%' or a.d6 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 10:58:22.939 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-06'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d6 <> '')
		AND (a.d6 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 0 msec}
2023-06-24 11:00:29.337 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
21. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 11:00:29.340 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-06-05') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-06-05'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,'(' || a.route_nm || ')' || a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-06-05' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 0 msec}
2023-06-24 11:00:29.343 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d5, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d5, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-06'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d5 NOT LIKE '%*%'
			AND a.d5 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d5, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d5, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d5 <> ''
		    AND a.d5 LIKE b.d5 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-06'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d5 LIKE '%*%' OR a.d5 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 11:00:29.346 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d5, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d5, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-06'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d5 NOT LIKE '%*%'
			AND a.d5 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d5, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d5, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d5 <> ''
		    AND a.d5 LIKE b.d5 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-06'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d5 LIKE '%*%' OR a.d5 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 11:00:29.349 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d5, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d5, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-06'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d5 NOT LIKE '%*%'
			AND a.d5 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d5, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d5, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d5 <> ''
		    AND a.d5 LIKE b.d5 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-06'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d5 LIKE '%*%' OR a.d5 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 11:00:29.352 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d5, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d5, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-06'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d5 NOT LIKE '%*%'
			AND a.d5 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d5, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d5, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d5 <> ''
		    AND a.d5 LIKE b.d5 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-06'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d5 LIKE '%*%' OR a.d5 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 11:00:29.355 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d5, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d5, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-06'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d5 NOT LIKE '%*%'
			AND a.d5 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d5, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d5, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d5 <> ''
		    AND a.d5 LIKE b.d5 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-06'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d5 LIKE '%*%' OR a.d5 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 11:00:29.358 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d5, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d5, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-06'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d5 NOT LIKE '%*%'
			AND a.d5 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d5, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d5, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d5 <> ''
		    AND a.d5 LIKE b.d5 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-06'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d5 LIKE '%*%' OR a.d5 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 11:00:29.360 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-06'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d5 LIKE '%*%' or a.d5 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 0 msec}
2023-06-24 11:00:29.362 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-06'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d5 <> '')
		AND (a.d5 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 11:01:03.777 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
21. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 11:01:03.780 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,'(' || a.route_nm || ')' || a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 1 msec}
2023-06-24 11:01:03.784 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 11:01:03.789 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 11:01:03.792 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 11:01:03.796 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 11:01:03.800 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 11:01:03.804 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-24 11:01:03.807 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d2 LIKE '%*%' or a.d2 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 11:01:03.810 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d2 <> '')
		AND (a.d2 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 0 msec}
2023-06-24 11:03:09.642 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
21. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 11:03:09.645 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,'(' || a.route_nm || ')' || a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 2 msec}
2023-06-24 11:03:09.648 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 11:03:09.650 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 11:03:09.654 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 11:03:09.657 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 11:03:09.660 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-24 11:03:09.663 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 11:03:09.665 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d2 LIKE '%*%' or a.d2 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 11:03:09.668 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d2 <> '')
		AND (a.d2 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 14:05:45.971 WARN  [H2 housekeeper] [com.zaxxer.hikari.pool.HikariPool] - H2 - Thread starvation or clock leap detected (housekeeper delta=3h29s311ms578µs100ns).
2023-06-24 19:54:07.533 INFO  [Catalina-utility-1] [c.pjy.dashboard.listener.SessionListener] - updateUserCloseTime p00139 
2023-06-24 19:54:07.534 INFO  [Catalina-utility-1] [c.pjy.dashboard.listener.SessionListener] - currentSessionUserList ->  false
2023-06-24 19:54:07.534 INFO  [Catalina-utility-1] [c.pjy.dashboard.listener.SessionListener] - updateUserCloseTime p00139 
2023-06-24 19:54:07.534 INFO  [Catalina-utility-1] [c.pjy.dashboard.listener.SessionListener] - currentSessionUserList ->  false
2023-06-24 19:54:12.410 WARN  [H2 housekeeper] [com.zaxxer.hikari.pool.HikariPool] - H2 - Thread starvation or clock leap detected (housekeeper delta=5h48m34s169ms19µs600ns).
2023-06-24 19:56:33.509 INFO  [http-nio-10010-exec-3] [c.p.d.interceptor.LoggerInterceptor] - ============================== START ==============================
2023-06-24 19:56:33.509 INFO  [http-nio-10010-exec-3] [c.p.d.interceptor.LoggerInterceptor] -  Class       	:  class org.springframework.web.method.HandlerMethod
2023-06-24 19:56:33.509 INFO  [http-nio-10010-exec-3] [c.p.d.interceptor.LoggerInterceptor] -  Request URI 	:  /
2023-06-24 19:56:33.509 INFO  [http-nio-10010-exec-3] [c.p.d.interceptor.LoggerInterceptor] -  Request addr	:  0:0:0:0:0:0:0:1
2023-06-24 19:56:33.510 INFO  [http-nio-10010-exec-3] [c.p.d.interceptor.LoggerInterceptor] -  Servlet URI 	:  /
2023-06-24 19:56:33.600 ERROR [http-nio-10010-exec-3] [o.a.c.c.C.[Tomcat].[localhost].[/].[jsp]] - Servlet.service() for servlet [jsp] threw exception
java.lang.IllegalStateException: Cannot create a session after the response has been committed
	at org.apache.catalina.connector.Request.doGetSession(Request.java:2993)
	at org.apache.catalina.connector.Request.getSession(Request.java:2432)
	at org.apache.catalina.connector.RequestFacade.getSession(RequestFacade.java:908)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:244)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:582)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:527)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at org.apache.jasper.runtime.PageContextImpl.initialize(PageContextImpl.java:133)
	at org.apache.jasper.runtime.JspFactoryImpl.internalGetPageContext(JspFactoryImpl.java:109)
	at org.apache.jasper.runtime.JspFactoryImpl.getPageContext(JspFactoryImpl.java:60)
	at org.apache.jsp.WEB_002dINF.jsp.home_jsp._jspService(home_jsp.java:121)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:477)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:385)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:329)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:580)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:516)
	at org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequestDispatcher.include(HeaderWriterFilter.java:149)
	at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:163)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:317)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1372)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:97)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at jdk.internal.reflect.GeneratedMethodAccessor151.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$ec92a435.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:114)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:104)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-06-24 19:56:33.603 ERROR [http-nio-10010-exec-3] [o.a.c.c.C.[.[.[/].[dispatcherServlet]] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [javax.servlet.ServletException: java.lang.IllegalStateException: Cannot create a session after the response has been committed] with root cause
java.lang.IllegalStateException: Cannot create a session after the response has been committed
	at org.apache.catalina.connector.Request.doGetSession(Request.java:2993)
	at org.apache.catalina.connector.Request.getSession(Request.java:2432)
	at org.apache.catalina.connector.RequestFacade.getSession(RequestFacade.java:908)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:244)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:582)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:527)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at org.apache.jasper.runtime.PageContextImpl.initialize(PageContextImpl.java:133)
	at org.apache.jasper.runtime.JspFactoryImpl.internalGetPageContext(JspFactoryImpl.java:109)
	at org.apache.jasper.runtime.JspFactoryImpl.getPageContext(JspFactoryImpl.java:60)
	at org.apache.jsp.WEB_002dINF.jsp.home_jsp._jspService(home_jsp.java:121)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:477)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:385)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:329)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:580)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:516)
	at org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequestDispatcher.include(HeaderWriterFilter.java:149)
	at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:163)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:317)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1372)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:97)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at jdk.internal.reflect.GeneratedMethodAccessor151.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$ec92a435.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:114)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:104)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-06-24 19:56:33.607 INFO  [http-nio-10010-exec-3] [c.p.d.interceptor.LoggerInterceptor] - ============================== START ==============================
2023-06-24 19:56:33.607 INFO  [http-nio-10010-exec-3] [c.p.d.interceptor.LoggerInterceptor] -  Class       	:  class org.springframework.web.method.HandlerMethod
2023-06-24 19:56:33.607 INFO  [http-nio-10010-exec-3] [c.p.d.interceptor.LoggerInterceptor] -  Request URI 	:  /error
2023-06-24 19:56:33.607 INFO  [http-nio-10010-exec-3] [c.p.d.interceptor.LoggerInterceptor] -  Request addr	:  0:0:0:0:0:0:0:1
2023-06-24 19:56:33.607 INFO  [http-nio-10010-exec-3] [c.p.d.interceptor.LoggerInterceptor] -  Servlet URI 	:  /error
2023-06-24 19:56:33.628 ERROR [http-nio-10010-exec-3] [o.a.c.c.C.[Tomcat].[localhost].[/].[jsp]] - Servlet.service() for servlet [jsp] threw exception
java.lang.IllegalStateException: Cannot create a session after the response has been committed
	at org.apache.catalina.connector.Request.doGetSession(Request.java:2993)
	at org.apache.catalina.connector.Request.getSession(Request.java:2432)
	at org.apache.catalina.connector.RequestFacade.getSession(RequestFacade.java:908)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:244)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:582)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:244)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:582)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:527)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at org.apache.jasper.runtime.PageContextImpl.initialize(PageContextImpl.java:133)
	at org.apache.jasper.runtime.JspFactoryImpl.internalGetPageContext(JspFactoryImpl.java:109)
	at org.apache.jasper.runtime.JspFactoryImpl.getPageContext(JspFactoryImpl.java:60)
	at org.apache.jsp.WEB_002dINF.jsp.error_jsp._jspService(error_jsp.java:107)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:477)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:385)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:329)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:580)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:516)
	at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:163)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:317)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1372)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at jdk.internal.reflect.GeneratedMethodAccessor151.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$ec92a435.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-06-24 19:56:33.630 ERROR [http-nio-10010-exec-3] [o.a.c.c.C.[.[.[/].[dispatcherServlet]] - Servlet.service() for servlet [dispatcherServlet] threw exception
java.lang.IllegalStateException: Cannot create a session after the response has been committed
	at org.apache.catalina.connector.Request.doGetSession(Request.java:2993)
	at org.apache.catalina.connector.Request.getSession(Request.java:2432)
	at org.apache.catalina.connector.RequestFacade.getSession(RequestFacade.java:908)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:244)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:582)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:244)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:582)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:527)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at org.apache.jasper.runtime.PageContextImpl.initialize(PageContextImpl.java:133)
	at org.apache.jasper.runtime.JspFactoryImpl.internalGetPageContext(JspFactoryImpl.java:109)
	at org.apache.jasper.runtime.JspFactoryImpl.getPageContext(JspFactoryImpl.java:60)
	at org.apache.jsp.WEB_002dINF.jsp.error_jsp._jspService(error_jsp.java:107)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:477)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:385)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:329)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:580)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:516)
	at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:163)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:317)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1372)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at jdk.internal.reflect.GeneratedMethodAccessor151.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$ec92a435.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-06-24 19:56:33.631 ERROR [http-nio-10010-exec-3] [o.a.c.c.C.[Tomcat].[localhost]] - Exception Processing ErrorPage[errorCode=0, location=/error]
org.apache.jasper.JasperException: javax.servlet.ServletException: java.lang.IllegalStateException: Cannot create a session after the response has been committed
	at org.apache.jasper.servlet.JspServletWrapper.handleJspException(JspServletWrapper.java:639)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:500)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:385)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:329)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:580)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:516)
	at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:163)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:317)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1372)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at jdk.internal.reflect.GeneratedMethodAccessor151.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$ec92a435.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: javax.servlet.ServletException: java.lang.IllegalStateException: Cannot create a session after the response has been committed
	at org.apache.jsp.WEB_002dINF.jsp.error_jsp._jspService(error_jsp.java:144)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:477)
	... 97 common frames omitted
Caused by: java.lang.IllegalStateException: Cannot create a session after the response has been committed
	at org.apache.catalina.connector.Request.doGetSession(Request.java:2993)
	at org.apache.catalina.connector.Request.getSession(Request.java:2432)
	at org.apache.catalina.connector.RequestFacade.getSession(RequestFacade.java:908)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:244)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:582)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:244)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:582)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:527)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at org.apache.jasper.runtime.PageContextImpl.initialize(PageContextImpl.java:133)
	at org.apache.jasper.runtime.JspFactoryImpl.internalGetPageContext(JspFactoryImpl.java:109)
	at org.apache.jasper.runtime.JspFactoryImpl.getPageContext(JspFactoryImpl.java:60)
	at org.apache.jsp.WEB_002dINF.jsp.error_jsp._jspService(error_jsp.java:107)
	... 100 common frames omitted
2023-06-24 19:56:33.684 INFO  [http-nio-10010-exec-4] [c.p.d.interceptor.LoggerInterceptor] - ============================== START ==============================
2023-06-24 19:56:33.684 INFO  [http-nio-10010-exec-4] [c.p.d.interceptor.LoggerInterceptor] -  Class       	:  class org.springframework.web.method.HandlerMethod
2023-06-24 19:56:33.684 INFO  [http-nio-10010-exec-4] [c.p.d.interceptor.LoggerInterceptor] -  Request URI 	:  /error
2023-06-24 19:56:33.684 INFO  [http-nio-10010-exec-4] [c.p.d.interceptor.LoggerInterceptor] -  Request addr	:  0:0:0:0:0:0:0:1
2023-06-24 19:56:33.684 INFO  [http-nio-10010-exec-4] [c.p.d.interceptor.LoggerInterceptor] -  Servlet URI 	:  /error
2023-06-24 19:56:34.986 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
41. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 19:56:34.987 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
41. select * from MEMBER where userId = 'p00139'
 {executed in 1 msec}
2023-06-24 19:56:34.989 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.MemberServiceImpl] - ROLE_ADMIN
2023-06-24 19:56:35.082 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.MemberServiceImpl] - pass:$2a$10$MNrQAPw.4k9j2y08eTmYEeI7oKPuaWbA97HHog.8PYep5HsRwhbae,$2a$10$7eDhSdT985HYoFCaxc61L.ak3Lw1sPcL3ZcfTom8XnZDbiMmUooja
2023-06-24 19:56:35.174 INFO  [http-nio-10010-exec-8] [c.p.d.configuration.SecurityConfig] - authentication:: p00139
2023-06-24 19:56:43.525 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
41. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 19:56:43.529 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,'(' || a.route_nm || ')' || a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 1 msec}
2023-06-24 19:56:43.532 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 19:56:43.536 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-24 19:56:43.539 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 19:56:43.543 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 19:56:43.546 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 19:56:43.549 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 19:56:43.553 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d2 LIKE '%*%' or a.d2 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 19:56:43.555 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d2 <> '')
		AND (a.d2 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 20:00:15.608 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
41. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 2 msec}
2023-06-24 20:00:15.610 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,'(' || a.route_nm || ')' || a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 1 msec}
2023-06-24 20:00:15.614 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 20:00:15.616 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 20:00:15.619 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-24 20:00:15.622 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-24 20:00:15.625 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-24 20:00:15.627 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 20:00:15.629 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d2 LIKE '%*%' or a.d2 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 2 msec}
2023-06-24 20:00:15.632 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d2 <> '')
		AND (a.d2 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 20:01:16.529 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
41. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 20:01:16.531 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-03') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-03'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,'(' || a.route_nm || ')' || a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-03' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 1 msec}
2023-06-24 20:01:16.534 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d3, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d3, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d3 NOT LIKE '%*%'
			AND a.d3 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d3, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d3, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d3 <> ''
		    AND a.d3 LIKE b.d3 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d3 LIKE '%*%' OR a.d3 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 20:01:16.537 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d3, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d3, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d3 NOT LIKE '%*%'
			AND a.d3 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d3, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d3, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d3 <> ''
		    AND a.d3 LIKE b.d3 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d3 LIKE '%*%' OR a.d3 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 20:01:16.541 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d3, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d3, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d3 NOT LIKE '%*%'
			AND a.d3 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d3, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d3, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d3 <> ''
		    AND a.d3 LIKE b.d3 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d3 LIKE '%*%' OR a.d3 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-24 20:01:16.546 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d3, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d3, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d3 NOT LIKE '%*%'
			AND a.d3 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d3, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d3, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d3 <> ''
		    AND a.d3 LIKE b.d3 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d3 LIKE '%*%' OR a.d3 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 20:01:16.548 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d3, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d3, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d3 NOT LIKE '%*%'
			AND a.d3 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d3, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d3, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d3 <> ''
		    AND a.d3 LIKE b.d3 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d3 LIKE '%*%' OR a.d3 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 20:01:16.551 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d3, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d3, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d3 NOT LIKE '%*%'
			AND a.d3 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d3, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d3, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d3 <> ''
		    AND a.d3 LIKE b.d3 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d3 LIKE '%*%' OR a.d3 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 20:01:16.553 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d3 LIKE '%*%' or a.d3 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 20:01:16.555 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d3 <> '')
		AND (a.d3 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 20:02:28.314 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   'N' as bit, a.* from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' and		a.code = '휴가종류' order by a.route_nm
2023-06-24 20:02:28.315 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
42. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 20:02:28.315 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
41. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 20:02:28.316 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
41. SELECT ROUTE_NM  FROM TBL_ROUTEINFO ORDER BY 1
 {executed in 0 msec}
2023-06-24 20:02:28.316 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
42. select   'N' as bit, a.* from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' and		a.code = '휴가종류' order by a.route_nm
 {executed in 0 msec}
2023-06-24 20:21:54.310 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
51. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 20:21:54.312 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,'(' || a.route_nm || ')' || a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 1 msec}
2023-06-24 20:21:54.316 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 0 msec}
2023-06-24 20:21:54.319 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 20:21:54.322 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-24 20:21:54.325 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 20:21:54.328 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 20:21:54.332 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-24 20:21:54.334 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d2 LIKE '%*%' or a.d2 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 0 msec}
2023-06-24 20:21:54.335 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d2 <> '')
		AND (a.d2 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 20:22:44.630 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
51. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 20:22:44.632 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,'(' || a.route_nm || ')' || a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 1 msec}
2023-06-24 20:22:44.635 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 20:22:44.638 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 20:22:44.641 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-24 20:22:44.644 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 20:22:44.648 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 20:22:44.650 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 20:22:44.652 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d2 LIKE '%*%' or a.d2 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 0 msec}
2023-06-24 20:22:44.653 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d2 <> '')
		AND (a.d2 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 20:25:07.794 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
51. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 20:25:07.797 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,'(' || a.route_nm || ')' || a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 1 msec}
2023-06-24 20:25:07.800 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 20:25:07.803 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 20:25:07.806 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 20:25:07.809 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 20:25:07.812 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 20:25:07.815 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 20:25:07.817 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d2 LIKE '%*%' or a.d2 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 20:25:07.819 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d2 <> '')
		AND (a.d2 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 0 msec}
2023-06-24 22:10:15.828 WARN  [H2 housekeeper] [com.zaxxer.hikari.pool.HikariPool] - H2 - Thread starvation or clock leap detected (housekeeper delta=1h45m2s901ms140µs800ns).
2023-06-24 22:10:38.247 INFO  [Catalina-utility-2] [c.pjy.dashboard.listener.SessionListener] - updateUserCloseTime p00139 
2023-06-24 22:10:38.247 INFO  [Catalina-utility-2] [c.pjy.dashboard.listener.SessionListener] - currentSessionUserList ->  false
2023-06-24 22:10:38.247 INFO  [Catalina-utility-2] [c.pjy.dashboard.listener.SessionListener] - updateUserCloseTime p00139 
2023-06-24 22:10:38.247 INFO  [Catalina-utility-2] [c.pjy.dashboard.listener.SessionListener] - currentSessionUserList ->  false
2023-06-24 22:17:05.276 INFO  [http-nio-10010-exec-1] [c.p.d.interceptor.LoggerInterceptor] - ============================== START ==============================
2023-06-24 22:17:05.276 INFO  [http-nio-10010-exec-1] [c.p.d.interceptor.LoggerInterceptor] -  Class       	:  class org.springframework.web.method.HandlerMethod
2023-06-24 22:17:05.276 INFO  [http-nio-10010-exec-1] [c.p.d.interceptor.LoggerInterceptor] -  Request URI 	:  /
2023-06-24 22:17:05.276 INFO  [http-nio-10010-exec-1] [c.p.d.interceptor.LoggerInterceptor] -  Request addr	:  0:0:0:0:0:0:0:1
2023-06-24 22:17:05.276 INFO  [http-nio-10010-exec-1] [c.p.d.interceptor.LoggerInterceptor] -  Servlet URI 	:  /
2023-06-24 22:17:05.288 ERROR [http-nio-10010-exec-1] [o.a.c.c.C.[Tomcat].[localhost].[/].[jsp]] - Servlet.service() for servlet [jsp] threw exception
java.lang.IllegalStateException: Cannot create a session after the response has been committed
	at org.apache.catalina.connector.Request.doGetSession(Request.java:2993)
	at org.apache.catalina.connector.Request.getSession(Request.java:2432)
	at org.apache.catalina.connector.RequestFacade.getSession(RequestFacade.java:908)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:244)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:582)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:527)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at org.apache.jasper.runtime.PageContextImpl.initialize(PageContextImpl.java:133)
	at org.apache.jasper.runtime.JspFactoryImpl.internalGetPageContext(JspFactoryImpl.java:109)
	at org.apache.jasper.runtime.JspFactoryImpl.getPageContext(JspFactoryImpl.java:60)
	at org.apache.jsp.WEB_002dINF.jsp.home_jsp._jspService(home_jsp.java:121)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:477)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:385)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:329)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:580)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:516)
	at org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequestDispatcher.include(HeaderWriterFilter.java:149)
	at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:163)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:317)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1372)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:97)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at jdk.internal.reflect.GeneratedMethodAccessor151.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$ec92a435.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:114)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:104)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-06-24 22:17:05.291 ERROR [http-nio-10010-exec-1] [o.a.c.c.C.[.[.[/].[dispatcherServlet]] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [javax.servlet.ServletException: java.lang.IllegalStateException: Cannot create a session after the response has been committed] with root cause
java.lang.IllegalStateException: Cannot create a session after the response has been committed
	at org.apache.catalina.connector.Request.doGetSession(Request.java:2993)
	at org.apache.catalina.connector.Request.getSession(Request.java:2432)
	at org.apache.catalina.connector.RequestFacade.getSession(RequestFacade.java:908)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:244)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:582)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:527)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at org.apache.jasper.runtime.PageContextImpl.initialize(PageContextImpl.java:133)
	at org.apache.jasper.runtime.JspFactoryImpl.internalGetPageContext(JspFactoryImpl.java:109)
	at org.apache.jasper.runtime.JspFactoryImpl.getPageContext(JspFactoryImpl.java:60)
	at org.apache.jsp.WEB_002dINF.jsp.home_jsp._jspService(home_jsp.java:121)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:477)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:385)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:329)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:580)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:516)
	at org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequestDispatcher.include(HeaderWriterFilter.java:149)
	at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:163)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:317)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1372)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:97)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at jdk.internal.reflect.GeneratedMethodAccessor151.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$ec92a435.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:114)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:104)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-06-24 22:17:05.293 INFO  [http-nio-10010-exec-1] [c.p.d.interceptor.LoggerInterceptor] - ============================== START ==============================
2023-06-24 22:17:05.293 INFO  [http-nio-10010-exec-1] [c.p.d.interceptor.LoggerInterceptor] -  Class       	:  class org.springframework.web.method.HandlerMethod
2023-06-24 22:17:05.293 INFO  [http-nio-10010-exec-1] [c.p.d.interceptor.LoggerInterceptor] -  Request URI 	:  /error
2023-06-24 22:17:05.293 INFO  [http-nio-10010-exec-1] [c.p.d.interceptor.LoggerInterceptor] -  Request addr	:  0:0:0:0:0:0:0:1
2023-06-24 22:17:05.293 INFO  [http-nio-10010-exec-1] [c.p.d.interceptor.LoggerInterceptor] -  Servlet URI 	:  /error
2023-06-24 22:17:05.310 ERROR [http-nio-10010-exec-1] [o.a.c.c.C.[Tomcat].[localhost].[/].[jsp]] - Servlet.service() for servlet [jsp] threw exception
java.lang.IllegalStateException: Cannot create a session after the response has been committed
	at org.apache.catalina.connector.Request.doGetSession(Request.java:2993)
	at org.apache.catalina.connector.Request.getSession(Request.java:2432)
	at org.apache.catalina.connector.RequestFacade.getSession(RequestFacade.java:908)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:244)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:582)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:244)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:582)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:527)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at org.apache.jasper.runtime.PageContextImpl.initialize(PageContextImpl.java:133)
	at org.apache.jasper.runtime.JspFactoryImpl.internalGetPageContext(JspFactoryImpl.java:109)
	at org.apache.jasper.runtime.JspFactoryImpl.getPageContext(JspFactoryImpl.java:60)
	at org.apache.jsp.WEB_002dINF.jsp.error_jsp._jspService(error_jsp.java:107)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:477)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:385)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:329)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:580)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:516)
	at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:163)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:317)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1372)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at jdk.internal.reflect.GeneratedMethodAccessor151.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$ec92a435.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-06-24 22:17:05.312 ERROR [http-nio-10010-exec-1] [o.a.c.c.C.[.[.[/].[dispatcherServlet]] - Servlet.service() for servlet [dispatcherServlet] threw exception
java.lang.IllegalStateException: Cannot create a session after the response has been committed
	at org.apache.catalina.connector.Request.doGetSession(Request.java:2993)
	at org.apache.catalina.connector.Request.getSession(Request.java:2432)
	at org.apache.catalina.connector.RequestFacade.getSession(RequestFacade.java:908)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:244)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:582)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:244)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:582)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:527)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at org.apache.jasper.runtime.PageContextImpl.initialize(PageContextImpl.java:133)
	at org.apache.jasper.runtime.JspFactoryImpl.internalGetPageContext(JspFactoryImpl.java:109)
	at org.apache.jasper.runtime.JspFactoryImpl.getPageContext(JspFactoryImpl.java:60)
	at org.apache.jsp.WEB_002dINF.jsp.error_jsp._jspService(error_jsp.java:107)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:477)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:385)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:329)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:580)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:516)
	at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:163)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:317)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1372)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at jdk.internal.reflect.GeneratedMethodAccessor151.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$ec92a435.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-06-24 22:17:05.312 ERROR [http-nio-10010-exec-1] [o.a.c.c.C.[Tomcat].[localhost]] - Exception Processing ErrorPage[errorCode=0, location=/error]
org.apache.jasper.JasperException: javax.servlet.ServletException: java.lang.IllegalStateException: Cannot create a session after the response has been committed
	at org.apache.jasper.servlet.JspServletWrapper.handleJspException(JspServletWrapper.java:639)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:500)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:385)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:329)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:580)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:516)
	at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:163)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:317)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1372)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at jdk.internal.reflect.GeneratedMethodAccessor151.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$ec92a435.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: javax.servlet.ServletException: java.lang.IllegalStateException: Cannot create a session after the response has been committed
	at org.apache.jsp.WEB_002dINF.jsp.error_jsp._jspService(error_jsp.java:144)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:477)
	... 97 common frames omitted
Caused by: java.lang.IllegalStateException: Cannot create a session after the response has been committed
	at org.apache.catalina.connector.Request.doGetSession(Request.java:2993)
	at org.apache.catalina.connector.Request.getSession(Request.java:2432)
	at org.apache.catalina.connector.RequestFacade.getSession(RequestFacade.java:908)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:244)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:582)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:244)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:582)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:527)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at org.apache.jasper.runtime.PageContextImpl.initialize(PageContextImpl.java:133)
	at org.apache.jasper.runtime.JspFactoryImpl.internalGetPageContext(JspFactoryImpl.java:109)
	at org.apache.jasper.runtime.JspFactoryImpl.getPageContext(JspFactoryImpl.java:60)
	at org.apache.jsp.WEB_002dINF.jsp.error_jsp._jspService(error_jsp.java:107)
	... 100 common frames omitted
2023-06-24 22:17:05.357 INFO  [http-nio-10010-exec-10] [c.p.d.interceptor.LoggerInterceptor] - ============================== START ==============================
2023-06-24 22:17:05.357 INFO  [http-nio-10010-exec-10] [c.p.d.interceptor.LoggerInterceptor] -  Class       	:  class org.springframework.web.method.HandlerMethod
2023-06-24 22:17:05.357 INFO  [http-nio-10010-exec-10] [c.p.d.interceptor.LoggerInterceptor] -  Request URI 	:  /error
2023-06-24 22:17:05.357 INFO  [http-nio-10010-exec-10] [c.p.d.interceptor.LoggerInterceptor] -  Request addr	:  0:0:0:0:0:0:0:1
2023-06-24 22:17:05.357 INFO  [http-nio-10010-exec-10] [c.p.d.interceptor.LoggerInterceptor] -  Servlet URI 	:  /error
2023-06-24 22:17:06.760 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
61. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 22:17:06.761 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
61. select * from MEMBER where userId = 'p00139'
 {executed in 1 msec}
2023-06-24 22:17:06.764 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.MemberServiceImpl] - ROLE_ADMIN
2023-06-24 22:17:06.856 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.MemberServiceImpl] - pass:$2a$10$MNrQAPw.4k9j2y08eTmYEeI7oKPuaWbA97HHog.8PYep5HsRwhbae,$2a$10$.EISEoDAj2Vh/W87oWIEoeDl0K4VRmsbWAp/EpSwr5Rr4O2VjxEN2
2023-06-24 22:17:06.945 INFO  [http-nio-10010-exec-9] [c.p.d.configuration.SecurityConfig] - authentication:: p00139
2023-06-24 22:18:10.407 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
61. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 22:18:10.411 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,'(' || a.route_nm || ')' || a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 1 msec}
2023-06-24 22:18:10.415 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:18:10.421 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 4 msec}
2023-06-24 22:18:10.426 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-24 22:18:10.428 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:18:10.432 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:18:10.436 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-24 22:18:10.438 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d2 LIKE '%*%' or a.d2 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 22:18:10.440 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d2 <> '')
		AND (a.d2 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 0 msec}
2023-06-24 22:20:15.796 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
61. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 22:20:15.798 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,'(' || a.route_nm || ')' || a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 1 msec}
2023-06-24 22:20:15.802 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-24 22:20:15.806 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-24 22:20:15.810 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-24 22:20:15.814 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:20:15.817 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:20:15.820 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:20:15.823 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d2 LIKE '%*%' or a.d2 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 22:20:15.825 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d2 <> '')
		AND (a.d2 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 0 msec}
2023-06-24 22:20:23.604 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
61. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 22:20:23.607 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,'(' || a.route_nm || ')' || a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 1 msec}
2023-06-24 22:20:23.610 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:20:23.613 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:20:23.616 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-24 22:20:23.621 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:20:23.624 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:20:23.627 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:20:23.629 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d2 LIKE '%*%' or a.d2 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 22:20:23.631 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d2 <> '')
		AND (a.d2 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 22:21:03.049 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
61. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 22:21:03.052 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,'(' || a.route_nm || ')' || a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 2 msec}
2023-06-24 22:21:03.055 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:21:03.058 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:21:03.060 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:21:03.064 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:21:03.067 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-24 22:21:03.070 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:21:03.073 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d2 LIKE '%*%' or a.d2 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 22:21:03.076 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d2 <> '')
		AND (a.d2 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 22:21:30.103 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
61. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 22:21:30.105 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,'(' || a.route_nm || ')' || a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 0 msec}
2023-06-24 22:21:30.108 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:21:30.111 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-24 22:21:30.115 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-24 22:21:30.119 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:21:30.122 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-24 22:21:30.125 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:21:30.128 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d2 LIKE '%*%' or a.d2 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 22:21:30.131 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d2 <> '')
		AND (a.d2 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 22:22:42.854 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
61. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 22:22:42.857 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,'(' || a.route_nm || ')' || a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 1 msec}
2023-06-24 22:22:42.860 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:22:42.862 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:22:42.865 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:22:42.868 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 0 msec}
2023-06-24 22:22:42.870 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:22:42.874 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:22:42.876 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d2 LIKE '%*%' or a.d2 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 22:22:42.878 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d2 <> '')
		AND (a.d2 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 22:24:04.610 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
61. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 22:24:04.612 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,'(' || a.route_nm || ')' || a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 1 msec}
2023-06-24 22:24:04.615 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:24:04.618 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:24:04.621 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:24:04.624 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:24:04.628 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-24 22:24:04.632 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:24:04.634 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d2 LIKE '%*%' or a.d2 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 22:24:04.636 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d2 <> '')
		AND (a.d2 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 22:24:48.948 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
61. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 22:24:48.950 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,'(' || a.route_nm || ')' || a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 1 msec}
2023-06-24 22:24:48.953 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:24:48.956 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:24:48.962 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 4 msec}
2023-06-24 22:24:48.966 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:24:48.968 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:24:48.972 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-24 22:24:48.974 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d2 LIKE '%*%' or a.d2 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 22:24:48.977 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d2 <> '')
		AND (a.d2 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 2 msec}
2023-06-24 22:25:43.616 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
61. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 22:25:43.618 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,'(' || a.route_nm || ')' || a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 1 msec}
2023-06-24 22:25:43.621 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:25:43.624 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-24 22:25:43.628 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:25:43.631 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:25:43.633 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:25:43.636 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 0 msec}
2023-06-24 22:25:43.637 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d2 LIKE '%*%' or a.d2 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 22:25:43.639 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d2 <> '')
		AND (a.d2 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 0 msec}
2023-06-24 22:28:18.614 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
61. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 22:28:18.616 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,'(' || a.route_nm || ')' || a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 1 msec}
2023-06-24 22:28:18.618 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:28:18.621 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:28:18.625 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:28:18.627 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:28:18.629 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:28:18.631 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 0 msec}
2023-06-24 22:28:18.633 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d2 LIKE '%*%' or a.d2 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 22:28:18.635 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d2 <> '')
		AND (a.d2 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 22:28:39.669 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
61. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 22:28:39.672 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,'(' || a.route_nm || ')' || a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 1 msec}
2023-06-24 22:28:39.674 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:28:39.677 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:28:39.680 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:28:39.684 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:28:39.688 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:28:39.690 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:28:39.692 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d2 LIKE '%*%' or a.d2 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 22:28:39.694 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d2 <> '')
		AND (a.d2 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 0 msec}
2023-06-24 22:33:27.901 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 22:33:27.904 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,'(' || a.route_nm || ')' || a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 2 msec}
2023-06-24 22:33:27.908 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:33:27.911 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-24 22:33:27.914 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:33:27.918 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:33:27.921 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:33:27.925 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:33:27.927 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d2 LIKE '%*%' or a.d2 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 22:33:27.929 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d2 <> '')
		AND (a.d2 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 22:35:22.205 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 22:35:22.207 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,'(' || a.route_nm || ')' || a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 1 msec}
2023-06-24 22:35:22.210 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:35:22.212 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:35:22.216 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-24 22:35:22.220 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-24 22:35:22.223 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:35:22.225 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:35:22.227 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d2 LIKE '%*%' or a.d2 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 0 msec}
2023-06-24 22:35:22.230 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d2 <> '')
		AND (a.d2 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 22:40:00.812 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 22:40:00.814 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,'(' || a.route_nm || ')' || a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 1 msec}
2023-06-24 22:40:00.817 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:40:00.821 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:40:00.825 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-24 22:40:00.828 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-24 22:40:00.831 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-24 22:40:00.835 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:40:00.838 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d2 LIKE '%*%' or a.d2 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 22:40:00.839 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d2 <> '')
		AND (a.d2 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 22:40:35.976 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 22:40:35.981 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,'(' || a.route_nm || ')' || a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 1 msec}
2023-06-24 22:40:35.983 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:40:35.986 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:40:35.988 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:40:35.992 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:40:35.995 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:40:35.998 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:40:36.000 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d2 LIKE '%*%' or a.d2 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 22:40:36.002 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d2 <> '')
		AND (a.d2 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 22:40:55.798 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 22:40:55.801 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,'(' || a.route_nm || ')' || a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 1 msec}
2023-06-24 22:40:55.804 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:40:55.807 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:40:55.811 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:40:55.814 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:40:55.819 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-24 22:40:55.821 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:40:55.823 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d2 LIKE '%*%' or a.d2 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 0 msec}
2023-06-24 22:40:55.825 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d2 <> '')
		AND (a.d2 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 22:41:35.394 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 22:41:35.396 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,'(' || a.route_nm || ')' || a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 1 msec}
2023-06-24 22:41:35.398 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 0 msec}
2023-06-24 22:41:35.400 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:41:35.403 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-24 22:41:35.405 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:41:35.408 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:41:35.411 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:41:35.412 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d2 LIKE '%*%' or a.d2 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 22:41:35.414 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d2 <> '')
		AND (a.d2 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 22:41:51.811 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 22:41:51.813 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,'(' || a.route_nm || ')' || a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 1 msec}
2023-06-24 22:41:51.816 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:41:51.821 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:41:51.823 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:41:51.826 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:41:51.829 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-24 22:41:51.833 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:41:51.835 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d2 LIKE '%*%' or a.d2 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 0 msec}
2023-06-24 22:41:51.837 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d2 <> '')
		AND (a.d2 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 22:42:30.541 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 22:42:30.543 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,'(' || a.route_nm || ')' || a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 1 msec}
2023-06-24 22:42:30.545 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:42:30.549 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:42:30.552 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-24 22:42:30.555 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-24 22:42:30.558 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:42:30.560 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:42:30.562 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d2 LIKE '%*%' or a.d2 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 22:42:30.563 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d2 <> '')
		AND (a.d2 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 22:43:07.276 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 22:43:07.279 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,'(' || a.route_nm || ')' || a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 0 msec}
2023-06-24 22:43:07.282 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 0 msec}
2023-06-24 22:43:07.285 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:43:07.287 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:43:07.291 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 0 msec}
2023-06-24 22:43:07.293 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:43:07.296 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:43:07.298 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d2 LIKE '%*%' or a.d2 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 22:43:07.300 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d2 <> '')
		AND (a.d2 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 22:46:05.154 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 22:46:05.156 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-01') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-01'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,'(' || a.route_nm || ')' || a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-01' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 0 msec}
2023-06-24 22:46:05.158 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d1, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d1, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d1 NOT LIKE '%*%'
			AND a.d1 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d1, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d1, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d1 <> ''
		    AND a.d1 LIKE b.d1 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d1 LIKE '%*%' OR a.d1 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:46:05.161 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d1, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d1, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d1 NOT LIKE '%*%'
			AND a.d1 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d1, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d1, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d1 <> ''
		    AND a.d1 LIKE b.d1 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d1 LIKE '%*%' OR a.d1 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:46:05.164 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d1, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d1, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d1 NOT LIKE '%*%'
			AND a.d1 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d1, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d1, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d1 <> ''
		    AND a.d1 LIKE b.d1 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d1 LIKE '%*%' OR a.d1 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:46:05.167 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d1, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d1, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d1 NOT LIKE '%*%'
			AND a.d1 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d1, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d1, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d1 <> ''
		    AND a.d1 LIKE b.d1 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d1 LIKE '%*%' OR a.d1 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:46:05.169 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d1, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d1, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d1 NOT LIKE '%*%'
			AND a.d1 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d1, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d1, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d1 <> ''
		    AND a.d1 LIKE b.d1 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d1 LIKE '%*%' OR a.d1 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:46:05.171 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d1, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d1, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d1 NOT LIKE '%*%'
			AND a.d1 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d1, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d1, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d1 <> ''
		    AND a.d1 LIKE b.d1 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d1 LIKE '%*%' OR a.d1 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:46:05.173 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d1 LIKE '%*%' or a.d1 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 22:46:05.178 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d1 <> '')
		AND (a.d1 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 4 msec}
2023-06-24 22:46:43.339 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 22:46:43.341 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,'(' || a.route_nm || ')' || a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 1 msec}
2023-06-24 22:46:43.343 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:46:43.347 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:46:43.350 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-24 22:46:43.353 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:46:43.355 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:46:43.358 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:46:43.359 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d2 LIKE '%*%' or a.d2 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 0 msec}
2023-06-24 22:46:43.361 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d2 <> '')
		AND (a.d2 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 22:47:33.181 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 22:47:33.183 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,'(' || a.route_nm || ')' || a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 1 msec}
2023-06-24 22:47:33.186 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 0 msec}
2023-06-24 22:47:33.189 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:47:33.192 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-24 22:47:33.195 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:47:33.198 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-24 22:47:33.201 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:47:33.203 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d2 LIKE '%*%' or a.d2 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 0 msec}
2023-06-24 22:47:33.205 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d2 <> '')
		AND (a.d2 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 0 msec}
2023-06-24 22:49:55.219 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
75. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 22:49:55.221 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
75. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,'(' || a.route_nm || ')' || a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 1 msec}
2023-06-24 22:49:55.224 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
75. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:49:55.227 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
75. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:49:55.229 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
75. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:49:55.232 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
75. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:49:55.235 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
75. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:49:55.238 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
75. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-24 22:49:55.240 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
75. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d2 LIKE '%*%' or a.d2 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 22:49:55.241 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
75. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d2 <> '')
		AND (a.d2 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 22:50:50.475 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
81. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 22:50:50.477 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,'(' || a.route_nm || ')' || a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 1 msec}
2023-06-24 22:50:50.480 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 0 msec}
2023-06-24 22:50:50.483 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:50:50.485 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:50:50.488 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:50:50.490 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 0 msec}
2023-06-24 22:50:50.492 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:50:50.494 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d2 LIKE '%*%' or a.d2 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 0 msec}
2023-06-24 22:50:50.495 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d2 <> '')
		AND (a.d2 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 22:51:50.527 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
81. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 22:51:50.530 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,'(' || a.route_nm || ')' || a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 2 msec}
2023-06-24 22:51:50.532 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:51:50.533 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:51:50.536 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 0 msec}
2023-06-24 22:51:50.538 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:51:50.541 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-24 22:51:50.545 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-24 22:51:50.547 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d2 LIKE '%*%' or a.d2 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 22:51:50.552 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d2 <> '')
		AND (a.d2 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 22:53:06.844 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
81. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 22:53:06.846 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,'(' || a.route_nm || ')' || a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 1 msec}
2023-06-24 22:53:06.849 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:53:06.852 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:53:06.855 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:53:06.857 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:53:06.860 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:53:06.863 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:53:06.865 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d2 LIKE '%*%' or a.d2 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 0 msec}
2023-06-24 22:53:06.866 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d2 <> '')
		AND (a.d2 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 22:53:59.468 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
81. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 22:53:59.470 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,'(' || a.route_nm || ')' || a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 1 msec}
2023-06-24 22:53:59.472 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:53:59.475 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-24 22:53:59.480 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 4 msec}
2023-06-24 22:53:59.483 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:53:59.487 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:53:59.490 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:53:59.491 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d2 LIKE '%*%' or a.d2 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 22:53:59.493 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d2 <> '')
		AND (a.d2 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 22:57:23.079 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
81. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 22:57:23.081 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-06-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-06-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,'(' || a.route_nm || ')' || a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-06-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 1 msec}
2023-06-24 22:57:23.084 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-06'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-06'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:57:23.086 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-06'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-06'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:57:23.088 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-06'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-06'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 0 msec}
2023-06-24 22:57:23.090 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-06'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-06'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:57:23.092 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-06'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-06'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:57:23.094 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-06'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-06'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:57:23.096 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-06'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d2 LIKE '%*%' or a.d2 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 0 msec}
2023-06-24 22:57:23.098 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-06'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d2 <> '')
		AND (a.d2 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 22:57:26.898 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
81. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 22:57:26.900 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,'(' || a.route_nm || ')' || a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 1 msec}
2023-06-24 22:57:26.903 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:57:26.906 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:57:26.909 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:57:26.911 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:57:26.914 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:57:26.917 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:57:26.919 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d2 LIKE '%*%' or a.d2 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 22:57:26.920 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d2 <> '')
		AND (a.d2 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 22:58:09.435 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
81. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 22:58:09.437 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,'(' || a.route_nm || ')' || a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 0 msec}
2023-06-24 22:58:09.439 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:58:09.441 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:58:09.444 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:58:09.447 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:58:09.449 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:58:09.451 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:58:09.453 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d2 LIKE '%*%' or a.d2 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 22:58:09.455 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d2 <> '')
		AND (a.d2 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 22:58:27.212 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
81. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 22:58:27.215 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,'(' || a.route_nm || ')' || a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 1 msec}
2023-06-24 22:58:27.217 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:58:27.220 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:58:27.223 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 0 msec}
2023-06-24 22:58:27.225 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:58:27.228 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:58:27.232 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-24 22:58:27.234 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d2 LIKE '%*%' or a.d2 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 22:58:27.236 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d2 <> '')
		AND (a.d2 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 0 msec}
2023-06-24 22:59:53.912 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
81. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 22:59:53.914 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,'(' || a.route_nm || ')' || a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 1 msec}
2023-06-24 22:59:53.916 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:59:53.919 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:59:53.921 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:59:53.924 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:59:53.926 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:59:53.929 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 22:59:53.931 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d2 LIKE '%*%' or a.d2 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 22:59:53.933 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d2 <> '')
		AND (a.d2 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 23:02:55.594 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
81. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 23:02:55.597 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,'(' || a.route_nm || ')' || a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 1 msec}
2023-06-24 23:02:55.599 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:02:55.601 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 0 msec}
2023-06-24 23:02:55.604 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:02:55.606 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:02:55.609 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:02:55.612 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:02:55.613 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d2 LIKE '%*%' or a.d2 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 23:02:55.615 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d2 <> '')
		AND (a.d2 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 23:03:50.561 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
81. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 23:03:50.563 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,'(' || a.route_nm || ')' || a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 0 msec}
2023-06-24 23:03:50.565 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:03:50.568 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-24 23:03:50.671 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:03:50.674 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:03:50.676 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:03:50.678 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:03:50.680 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d2 LIKE '%*%' or a.d2 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 23:03:50.682 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d2 <> '')
		AND (a.d2 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 23:04:49.996 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
81. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 23:04:49.998 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,'(' || a.route_nm || ')' || a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 1 msec}
2023-06-24 23:04:50.000 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:04:50.003 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:04:50.005 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:04:50.008 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:04:50.011 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:04:50.014 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:04:50.016 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d2 LIKE '%*%' or a.d2 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 23:04:50.018 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d2 <> '')
		AND (a.d2 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 23:05:18.544 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
81. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 23:05:18.546 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,'(' || a.route_nm || ')' || a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 1 msec}
2023-06-24 23:05:18.549 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 0 msec}
2023-06-24 23:05:18.551 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:05:18.556 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-24 23:05:18.558 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:05:18.561 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-24 23:05:18.565 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:05:18.567 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d2 LIKE '%*%' or a.d2 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 23:05:18.569 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d2 <> '')
		AND (a.d2 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 23:06:15.555 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
81. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 23:06:15.557 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-01') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-01'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,'(' || a.route_nm || ')' || a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-01' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 1 msec}
2023-06-24 23:06:15.559 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d1, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d1, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d1 NOT LIKE '%*%'
			AND a.d1 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d1, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d1, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d1 <> ''
		    AND a.d1 LIKE b.d1 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d1 LIKE '%*%' OR a.d1 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:06:15.562 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d1, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d1, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d1 NOT LIKE '%*%'
			AND a.d1 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d1, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d1, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d1 <> ''
		    AND a.d1 LIKE b.d1 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d1 LIKE '%*%' OR a.d1 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:06:15.564 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d1, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d1, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d1 NOT LIKE '%*%'
			AND a.d1 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d1, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d1, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d1 <> ''
		    AND a.d1 LIKE b.d1 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d1 LIKE '%*%' OR a.d1 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:06:15.568 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d1, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d1, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d1 NOT LIKE '%*%'
			AND a.d1 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d1, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d1, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d1 <> ''
		    AND a.d1 LIKE b.d1 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d1 LIKE '%*%' OR a.d1 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:06:15.570 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d1, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d1, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d1 NOT LIKE '%*%'
			AND a.d1 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d1, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d1, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d1 <> ''
		    AND a.d1 LIKE b.d1 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d1 LIKE '%*%' OR a.d1 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:06:15.573 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d1, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d1, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d1 NOT LIKE '%*%'
			AND a.d1 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d1, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d1, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d1 <> ''
		    AND a.d1 LIKE b.d1 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d1 LIKE '%*%' OR a.d1 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:06:15.575 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d1 LIKE '%*%' or a.d1 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 0 msec}
2023-06-24 23:06:15.576 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d1 <> '')
		AND (a.d1 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 23:06:35.101 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   'N' as bit, a.* from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' and		a.code = '휴가종류' order by a.route_nm
2023-06-24 23:06:35.101 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
81. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 23:06:35.102 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
82. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 23:06:35.102 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
81. SELECT ROUTE_NM  FROM TBL_ROUTEINFO ORDER BY 1
 {executed in 0 msec}
2023-06-24 23:06:35.102 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
82. select   'N' as bit, a.* from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' and		a.code = '휴가종류' order by a.route_nm
 {executed in 0 msec}
2023-06-24 23:08:47.430 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
81. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 23:08:47.433 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,'(' || a.route_nm || ')' || a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 1 msec}
2023-06-24 23:08:47.435 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:08:47.438 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:08:47.441 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:08:47.443 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:08:47.445 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:08:47.448 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:08:47.450 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d2 LIKE '%*%' or a.d2 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 23:08:47.453 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d2 <> '')
		AND (a.d2 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 23:10:13.955 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
91. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 23:10:13.957 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,'(' || a.route_nm || ')' || a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 0 msec}
2023-06-24 23:10:13.960 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 0 msec}
2023-06-24 23:10:13.962 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:10:13.965 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:10:13.967 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:10:13.970 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:10:13.973 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:10:13.975 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d2 LIKE '%*%' or a.d2 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 23:10:13.977 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d2 <> '')
		AND (a.d2 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 0 msec}
2023-06-24 23:12:29.711 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
91. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 23:12:29.713 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,'(' || a.route_nm || ')' || a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 1 msec}
2023-06-24 23:12:29.716 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:12:29.718 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:12:29.723 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 3 msec}
2023-06-24 23:12:29.727 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-24 23:12:29.730 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:12:29.732 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:12:29.734 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d2 LIKE '%*%' or a.d2 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 23:12:29.735 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d2 <> '')
		AND (a.d2 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 23:13:43.419 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
91. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 23:13:43.421 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,'(' || a.route_nm || ')' || a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 1 msec}
2023-06-24 23:13:43.424 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:13:43.426 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:13:43.430 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-24 23:13:43.433 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-24 23:13:43.436 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:13:43.438 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:13:43.440 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d2 LIKE '%*%' or a.d2 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 23:13:43.442 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d2 <> '')
		AND (a.d2 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 23:15:23.350 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
91. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 23:15:23.352 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-09') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-09'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,'(' || a.route_nm || ')' || a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-09' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 1 msec}
2023-06-24 23:15:23.354 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d9, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d9, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d9 NOT LIKE '%*%'
			AND a.d9 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d9, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d9, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d9 <> ''
		    AND a.d9 LIKE b.d9 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d9 LIKE '%*%' OR a.d9 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:15:23.356 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d9, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d9, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d9 NOT LIKE '%*%'
			AND a.d9 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d9, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d9, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d9 <> ''
		    AND a.d9 LIKE b.d9 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d9 LIKE '%*%' OR a.d9 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:15:23.359 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d9, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d9, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d9 NOT LIKE '%*%'
			AND a.d9 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d9, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d9, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d9 <> ''
		    AND a.d9 LIKE b.d9 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d9 LIKE '%*%' OR a.d9 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:15:23.362 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d9, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d9, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d9 NOT LIKE '%*%'
			AND a.d9 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d9, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d9, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d9 <> ''
		    AND a.d9 LIKE b.d9 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d9 LIKE '%*%' OR a.d9 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 0 msec}
2023-06-24 23:15:23.364 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d9, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d9, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d9 NOT LIKE '%*%'
			AND a.d9 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d9, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d9, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d9 <> ''
		    AND a.d9 LIKE b.d9 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d9 LIKE '%*%' OR a.d9 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:15:23.368 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d9, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d9, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d9 NOT LIKE '%*%'
			AND a.d9 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d9, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d9, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d9 <> ''
		    AND a.d9 LIKE b.d9 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d9 LIKE '%*%' OR a.d9 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:15:23.369 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d9 LIKE '%*%' or a.d9 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 23:15:23.371 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d9 <> '')
		AND (a.d9 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 23:16:35.083 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
91. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 23:16:35.085 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,'(' || a.route_nm || ')' || a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 1 msec}
2023-06-24 23:16:35.087 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:16:35.090 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:16:35.094 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:16:35.096 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:16:35.099 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:16:35.101 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:16:35.102 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d2 LIKE '%*%' or a.d2 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 0 msec}
2023-06-24 23:16:35.104 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d2 <> '')
		AND (a.d2 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 23:16:46.244 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
91. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 2 msec}
2023-06-24 23:16:46.245 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,'(' || a.route_nm || ')' || a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 0 msec}
2023-06-24 23:16:46.247 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:16:46.250 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:16:46.252 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:16:46.255 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-24 23:16:46.259 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:16:46.262 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:16:46.264 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d2 LIKE '%*%' or a.d2 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 23:16:46.265 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d2 <> '')
		AND (a.d2 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 23:18:24.773 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
91. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 23:18:24.775 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,'(' || a.route_nm || ')' || a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 1 msec}
2023-06-24 23:18:24.777 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:18:24.780 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:18:24.782 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:18:24.785 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:18:24.788 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:18:24.790 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:18:24.791 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d2 LIKE '%*%' or a.d2 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 23:18:24.793 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d2 <> '')
		AND (a.d2 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 23:21:52.037 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
91. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 23:21:52.039 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,'(' || a.route_nm || ')' || a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 1 msec}
2023-06-24 23:21:52.041 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:21:52.044 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:21:52.046 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:21:52.049 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-24 23:21:52.052 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-24 23:21:52.054 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:21:52.056 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d2 LIKE '%*%' or a.d2 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 23:21:52.057 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d2 <> '')
		AND (a.d2 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 23:22:09.963 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
91. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 23:22:09.967 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,'(' || a.route_nm || ')' || a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 1 msec}
2023-06-24 23:22:09.969 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:22:09.972 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:22:09.974 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:22:09.976 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:22:09.980 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-24 23:22:09.983 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:22:09.984 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d2 LIKE '%*%' or a.d2 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 23:22:09.985 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d2 <> '')
		AND (a.d2 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 0 msec}
2023-06-24 23:22:18.043 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
91. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 2 msec}
2023-06-24 23:22:18.045 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,'(' || a.route_nm || ')' || a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 1 msec}
2023-06-24 23:22:18.048 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 0 msec}
2023-06-24 23:22:18.050 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:22:18.053 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-24 23:22:18.055 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:22:18.057 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:22:18.060 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:22:18.062 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d2 LIKE '%*%' or a.d2 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 23:22:18.063 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d2 <> '')
		AND (a.d2 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 23:24:46.307 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
91. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 23:24:46.310 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,'(' || a.route_nm || ')' || a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 2 msec}
2023-06-24 23:24:46.312 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:24:46.315 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:24:46.318 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:24:46.320 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:24:46.323 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-24 23:24:46.327 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:24:46.329 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d2 LIKE '%*%' or a.d2 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 23:24:46.331 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d2 <> '')
		AND (a.d2 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 23:25:17.703 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
91. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 23:25:17.706 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,'(' || a.route_nm || ')' || a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 1 msec}
2023-06-24 23:25:17.708 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:25:17.712 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:25:17.715 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-24 23:25:17.718 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:25:17.720 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:25:17.724 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:25:17.727 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d2 LIKE '%*%' or a.d2 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 0 msec}
2023-06-24 23:25:17.729 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d2 <> '')
		AND (a.d2 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 23:29:11.492 INFO  [RMI TCP Connection(185)-127.0.0.1] [o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin] - Application shutdown requested.
2023-06-24 23:29:11.529 INFO  [RMI TCP Connection(185)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Shutting down ExecutorService 'asyncThreadPool'
2023-06-24 23:29:11.532 INFO  [RMI TCP Connection(185)-127.0.0.1] [com.zaxxer.hikari.HikariDataSource] - H2 - Shutdown initiated...
2023-06-24 23:29:11.539 INFO  [RMI TCP Connection(185)-127.0.0.1] [com.zaxxer.hikari.HikariDataSource] - H2 - Shutdown completed.
2023-06-24 23:29:11.570 INFO  [RMI TCP Connection(185)-127.0.0.1] [com.pjy.dashboard.filter.TestFilter] - destroy Pjy Filter
2023-06-24 23:29:17.975 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Starting PjyApplication on DESKTOP-QJPD93S with PID 25560 (D:\BUS\dashboard\dashboard\target\classes started by admin in D:\BUS\dashboard\dashboard)
2023-06-24 23:29:17.981 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - The following profiles are active: oauth
2023-06-24 23:29:18.035 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-06-24 23:29:18.035 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-06-24 23:29:20.567 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-24 23:29:20.567 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-06-24 23:29:20.709 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 133ms. Found 3 JPA repository interfaces.
2023-06-24 23:29:21.049 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-24 23:29:21.049 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2023-06-24 23:29:21.095 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.FileRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-06-24 23:29:21.096 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.MemberRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-06-24 23:29:21.096 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.RememberMeRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-06-24 23:29:21.097 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 48ms. Found 0 JDBC repository interfaces.
2023-06-24 23:29:21.541 INFO  [restartedMain] [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] - Post-processing PropertySource instances
2023-06-24 23:29:21.613 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2023-06-24 23:29:21.614 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource commandLineArgs [org.springframework.core.env.SimpleCommandLinePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-06-24 23:29:21.614 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-06-24 23:29:21.614 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-06-24 23:29:21.614 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-24 23:29:21.615 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
2023-06-24 23:29:21.615 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2023-06-24 23:29:21.615 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application-oauth.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-24 23:29:21.615 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-24 23:29:21.616 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-24 23:29:21.616 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [pjy.properties] [org.springframework.core.env.CompositePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-06-24 23:29:21.616 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [common.properties] [org.springframework.core.io.support.ResourcePropertySource] to EncryptableMapPropertySourceWrapper
2023-06-24 23:29:21.676 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'asyncConfiguration' of type [com.pjy.dashboard.configuration.AsyncConfiguration$$EnhancerBySpringCGLIB$$d44aa14a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-24 23:29:21.732 INFO  [restartedMain] [c.u.j.filter.DefaultLazyPropertyFilter] - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2023-06-24 23:29:21.826 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$be410577] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-24 23:29:21.906 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-24 23:29:21.909 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@67da66bf' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-24 23:29:21.910 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$e315a829] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-24 23:29:21.923 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration$$EnhancerBySpringCGLIB$$86ac03f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-24 23:29:21.926 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-24 23:29:21.928 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-24 23:29:21.949 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$25933d3d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-24 23:29:21.977 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$a5138a6f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-24 23:29:22.112 INFO  [restartedMain] [c.u.j.r.DefaultLazyPropertyResolver] - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2023-06-24 23:29:22.118 INFO  [restartedMain] [c.u.j.d.DefaultLazyPropertyDetector] - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2023-06-24 23:29:22.564 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 10010 (http)
2023-06-24 23:29:22.582 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Initializing ProtocolHandler ["http-nio-10010"]
2023-06-24 23:29:22.592 INFO  [restartedMain] [org.apache.catalina.core.StandardService] - Starting service [Tomcat]
2023-06-24 23:29:22.592 INFO  [restartedMain] [org.apache.catalina.core.StandardEngine] - Starting Servlet engine: [Apache Tomcat/9.0.29]
2023-06-24 23:29:22.975 INFO  [restartedMain] [org.apache.jasper.servlet.TldScanner] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2023-06-24 23:29:22.988 INFO  [restartedMain] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring embedded WebApplicationContext
2023-06-24 23:29:22.988 INFO  [restartedMain] [o.s.web.context.ContextLoader] - Root WebApplicationContext: initialization completed in 4953 ms
2023-06-24 23:29:23.827 INFO  [restartedMain] [c.u.j.encryptor.DefaultLazyEncryptor] - Found Custom Encryptor Bean org.jasypt.encryption.pbe.PooledPBEStringEncryptor@54e8e602 with name: jasyptStringEncryptor
2023-06-24 23:29:23.882 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Starting...
2023-06-24 23:29:23.969 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.executeSql(PoolBase.java:567)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 7 msec}
2023-06-24 23:29:23.973 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Start completed.
2023-06-24 23:29:24.743 INFO  [restartedMain] [com.pjy.dashboard.filter.TestFilter] - init Pjy Filter
2023-06-24 23:29:25.106 INFO  [restartedMain] [o.hibernate.jpa.internal.util.LogHelper] - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2023-06-24 23:29:25.180 INFO  [restartedMain] [org.hibernate.Version] - HHH000412: Hibernate Core {5.3.14.Final}
2023-06-24 23:29:25.183 INFO  [restartedMain] [org.hibernate.cfg.Environment] - HHH000206: hibernate.properties not found
2023-06-24 23:29:25.337 INFO  [restartedMain] [org.hibernate.annotations.common.Version] - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2023-06-24 23:29:25.566 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 23:29:25.585 INFO  [restartedMain] [org.hibernate.dialect.Dialect] - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2023-06-24 23:29:26.287 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 23:29:26.289 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select SEQUENCE_CATALOG, SEQUENCE_SCHEMA, SEQUENCE_NAME, INCREMENT from information_schema.sequences
 {executed in 1 msec}
2023-06-24 23:29:26.339 INFO  [restartedMain] [o.s.o.j.LocalContainerEntityManagerFactoryBean] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-06-24 23:29:26.591 INFO  [restartedMain] [o.h.h.i.QueryTranslatorFactoryInitiator] - HHH000397: Using ASTQueryTranslatorFactory
2023-06-24 23:29:27.662 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService
2023-06-24 23:29:27.673 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'asyncThreadPool'
2023-06-24 23:29:27.851 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/h2-console/**'], []
2023-06-24 23:29:27.851 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/css/**'], []
2023-06-24 23:29:27.851 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/js/**'], []
2023-06-24 23:29:27.851 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/monitor/**'], []
2023-06-24 23:29:27.851 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/img/**'], []
2023-06-24 23:29:27.852 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/lib/**'], []
2023-06-24 23:29:27.852 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/main.css'], []
2023-06-24 23:29:27.852 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/common.js'], []
2023-06-24 23:29:27.852 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/resources/**'], []
2023-06-24 23:29:28.016 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@73ff1963, org.springframework.security.web.context.SecurityContextPersistenceFilter@7387cd22, org.springframework.security.web.header.HeaderWriterFilter@2555c974, org.springframework.web.filter.CorsFilter@50b2f39f, org.springframework.security.web.authentication.logout.LogoutFilter@626f9, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@5d4bdb1f, org.springframework.security.web.session.ConcurrentSessionFilter@13819050, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@d3f3ec3, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@49aaf52, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5acffad, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2fb82b8c, org.springframework.security.web.session.SessionManagementFilter@6b547165, org.springframework.security.web.access.ExceptionTranslationFilter@61ac7af3, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@105c2b8c]
2023-06-24 23:29:28.046 INFO  [restartedMain] [o.s.aop.framework.CglibAopProxy] - Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(javax.servlet.FilterConfig) throws javax.servlet.ServletException] because it is marked as final: Consider using interface-based JDK proxies instead!
2023-06-24 23:29:28.392 WARN  [restartedMain] [o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-06-24 23:29:28.481 INFO  [restartedMain] [o.s.b.a.w.s.WelcomePageHandlerMapping] - Adding welcome page: ServletContext resource [/index.html]
2023-06-24 23:29:28.912 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 23:29:29.719 INFO  [restartedMain] [o.s.b.d.a.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2023-06-24 23:29:29.747 INFO  [restartedMain] [o.s.b.a.e.web.EndpointLinksResolver] - Exposing 16 endpoint(s) beneath base path '/actuator'
2023-06-24 23:29:29.887 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskScheduler] - Initializing ExecutorService
2023-06-24 23:29:29.889 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Starting ProtocolHandler ["http-nio-10010"]
2023-06-24 23:29:29.942 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 10010 (http) with context path ''
2023-06-24 23:29:29.947 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Started PjyApplication in 12.502 seconds (JVM running for 13.973)
2023-06-24 23:29:29.948 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-06-24 23:29:29.948 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - Application started
2023-06-24 23:29:29.949 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-06-24 23:29:31.287 INFO  [RMI TCP Connection(10)-127.0.0.1] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-24 23:29:31.288 INFO  [RMI TCP Connection(10)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Initializing Servlet 'dispatcherServlet'
2023-06-24 23:29:31.312 INFO  [RMI TCP Connection(10)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Completed initialization in 24 ms
2023-06-24 23:29:58.484 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 23:29:58.493 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,'(' || a.route_nm || ')' || '<br> || a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 1 msec}
2023-06-24 23:29:58.527 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-24 23:29:58.528 ERROR [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - Cannot invoke "Object.toString()" because the return value of "java.util.Map.get(Object)" is null
2023-06-24 23:30:13.860 INFO  [RMI TCP Connection(12)-127.0.0.1] [o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin] - Application shutdown requested.
2023-06-24 23:30:13.891 INFO  [RMI TCP Connection(12)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Shutting down ExecutorService 'asyncThreadPool'
2023-06-24 23:30:13.893 INFO  [RMI TCP Connection(12)-127.0.0.1] [com.zaxxer.hikari.HikariDataSource] - H2 - Shutdown initiated...
2023-06-24 23:30:13.900 INFO  [RMI TCP Connection(12)-127.0.0.1] [com.zaxxer.hikari.HikariDataSource] - H2 - Shutdown completed.
2023-06-24 23:30:13.932 INFO  [RMI TCP Connection(12)-127.0.0.1] [com.pjy.dashboard.filter.TestFilter] - destroy Pjy Filter
2023-06-24 23:30:17.675 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Starting PjyApplication on DESKTOP-QJPD93S with PID 9508 (D:\BUS\dashboard\dashboard\target\classes started by admin in D:\BUS\dashboard\dashboard)
2023-06-24 23:30:17.681 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - The following profiles are active: oauth
2023-06-24 23:30:17.737 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-06-24 23:30:17.737 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-06-24 23:30:18.915 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-24 23:30:18.915 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-06-24 23:30:19.075 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 149ms. Found 3 JPA repository interfaces.
2023-06-24 23:30:19.426 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-24 23:30:19.427 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2023-06-24 23:30:19.472 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.FileRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-06-24 23:30:19.472 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.MemberRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-06-24 23:30:19.473 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.RememberMeRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-06-24 23:30:19.473 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 46ms. Found 0 JDBC repository interfaces.
2023-06-24 23:30:19.907 INFO  [restartedMain] [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] - Post-processing PropertySource instances
2023-06-24 23:30:19.977 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2023-06-24 23:30:19.978 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource commandLineArgs [org.springframework.core.env.SimpleCommandLinePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-06-24 23:30:19.978 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-06-24 23:30:19.978 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-06-24 23:30:19.979 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-24 23:30:19.979 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
2023-06-24 23:30:19.980 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2023-06-24 23:30:19.980 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application-oauth.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-24 23:30:19.980 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-24 23:30:19.980 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-24 23:30:19.980 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [pjy.properties] [org.springframework.core.env.CompositePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-06-24 23:30:19.980 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [common.properties] [org.springframework.core.io.support.ResourcePropertySource] to EncryptableMapPropertySourceWrapper
2023-06-24 23:30:20.044 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'asyncConfiguration' of type [com.pjy.dashboard.configuration.AsyncConfiguration$$EnhancerBySpringCGLIB$$71f0ecb9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-24 23:30:20.099 INFO  [restartedMain] [c.u.j.filter.DefaultLazyPropertyFilter] - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2023-06-24 23:30:20.191 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$5be750e6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-24 23:30:20.275 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-24 23:30:20.279 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@62b85656' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-24 23:30:20.285 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$80bbf398] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-24 23:30:20.295 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration$$EnhancerBySpringCGLIB$$a6110bae] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-24 23:30:20.300 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-24 23:30:20.301 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-24 23:30:20.323 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c33988ac] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-24 23:30:20.352 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$42b9d5de] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-24 23:30:20.485 INFO  [restartedMain] [c.u.j.r.DefaultLazyPropertyResolver] - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2023-06-24 23:30:20.492 INFO  [restartedMain] [c.u.j.d.DefaultLazyPropertyDetector] - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2023-06-24 23:30:20.913 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 10010 (http)
2023-06-24 23:30:20.930 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Initializing ProtocolHandler ["http-nio-10010"]
2023-06-24 23:30:20.941 INFO  [restartedMain] [org.apache.catalina.core.StandardService] - Starting service [Tomcat]
2023-06-24 23:30:20.941 INFO  [restartedMain] [org.apache.catalina.core.StandardEngine] - Starting Servlet engine: [Apache Tomcat/9.0.29]
2023-06-24 23:30:21.321 INFO  [restartedMain] [org.apache.jasper.servlet.TldScanner] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2023-06-24 23:30:21.332 INFO  [restartedMain] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring embedded WebApplicationContext
2023-06-24 23:30:21.333 INFO  [restartedMain] [o.s.web.context.ContextLoader] - Root WebApplicationContext: initialization completed in 3596 ms
2023-06-24 23:30:22.188 INFO  [restartedMain] [c.u.j.encryptor.DefaultLazyEncryptor] - Found Custom Encryptor Bean org.jasypt.encryption.pbe.PooledPBEStringEncryptor@60d70b76 with name: jasyptStringEncryptor
2023-06-24 23:30:22.234 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Starting...
2023-06-24 23:30:22.319 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.executeSql(PoolBase.java:567)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 7 msec}
2023-06-24 23:30:22.324 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Start completed.
2023-06-24 23:30:23.110 INFO  [restartedMain] [com.pjy.dashboard.filter.TestFilter] - init Pjy Filter
2023-06-24 23:30:23.438 INFO  [restartedMain] [o.hibernate.jpa.internal.util.LogHelper] - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2023-06-24 23:30:23.510 INFO  [restartedMain] [org.hibernate.Version] - HHH000412: Hibernate Core {5.3.14.Final}
2023-06-24 23:30:23.512 INFO  [restartedMain] [org.hibernate.cfg.Environment] - HHH000206: hibernate.properties not found
2023-06-24 23:30:23.670 INFO  [restartedMain] [org.hibernate.annotations.common.Version] - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2023-06-24 23:30:23.901 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 23:30:23.922 INFO  [restartedMain] [org.hibernate.dialect.Dialect] - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2023-06-24 23:30:24.645 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 23:30:24.647 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select SEQUENCE_CATALOG, SEQUENCE_SCHEMA, SEQUENCE_NAME, INCREMENT from information_schema.sequences
 {executed in 1 msec}
2023-06-24 23:30:24.699 INFO  [restartedMain] [o.s.o.j.LocalContainerEntityManagerFactoryBean] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-06-24 23:30:24.960 INFO  [restartedMain] [o.h.h.i.QueryTranslatorFactoryInitiator] - HHH000397: Using ASTQueryTranslatorFactory
2023-06-24 23:30:26.038 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService
2023-06-24 23:30:26.049 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'asyncThreadPool'
2023-06-24 23:30:26.243 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/h2-console/**'], []
2023-06-24 23:30:26.243 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/css/**'], []
2023-06-24 23:30:26.244 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/js/**'], []
2023-06-24 23:30:26.244 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/monitor/**'], []
2023-06-24 23:30:26.244 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/img/**'], []
2023-06-24 23:30:26.244 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/lib/**'], []
2023-06-24 23:30:26.244 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/main.css'], []
2023-06-24 23:30:26.244 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/common.js'], []
2023-06-24 23:30:26.244 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/resources/**'], []
2023-06-24 23:30:26.410 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@336b5efb, org.springframework.security.web.context.SecurityContextPersistenceFilter@2447e3d7, org.springframework.security.web.header.HeaderWriterFilter@5bf94016, org.springframework.web.filter.CorsFilter@6ed5b39a, org.springframework.security.web.authentication.logout.LogoutFilter@21600bf7, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@57f2e978, org.springframework.security.web.session.ConcurrentSessionFilter@2225e34d, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@147c00ee, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@59e10db4, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1beac32e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1377de80, org.springframework.security.web.session.SessionManagementFilter@795da363, org.springframework.security.web.access.ExceptionTranslationFilter@49f29201, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@586e598d]
2023-06-24 23:30:26.432 INFO  [restartedMain] [o.s.aop.framework.CglibAopProxy] - Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(javax.servlet.FilterConfig) throws javax.servlet.ServletException] because it is marked as final: Consider using interface-based JDK proxies instead!
2023-06-24 23:30:26.795 WARN  [restartedMain] [o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-06-24 23:30:26.886 INFO  [restartedMain] [o.s.b.a.w.s.WelcomePageHandlerMapping] - Adding welcome page: ServletContext resource [/index.html]
2023-06-24 23:30:27.321 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 23:30:28.210 INFO  [restartedMain] [o.s.b.d.a.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2023-06-24 23:30:28.238 INFO  [restartedMain] [o.s.b.a.e.web.EndpointLinksResolver] - Exposing 16 endpoint(s) beneath base path '/actuator'
2023-06-24 23:30:28.385 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskScheduler] - Initializing ExecutorService
2023-06-24 23:30:28.388 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Starting ProtocolHandler ["http-nio-10010"]
2023-06-24 23:30:28.446 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 10010 (http) with context path ''
2023-06-24 23:30:28.450 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Started PjyApplication in 11.239 seconds (JVM running for 12.591)
2023-06-24 23:30:28.451 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-06-24 23:30:28.451 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - Application started
2023-06-24 23:30:28.451 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-06-24 23:30:29.331 INFO  [RMI TCP Connection(10)-127.0.0.1] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-24 23:30:29.332 INFO  [RMI TCP Connection(10)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Initializing Servlet 'dispatcherServlet'
2023-06-24 23:30:29.353 INFO  [RMI TCP Connection(10)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Completed initialization in 21 ms
2023-06-24 23:30:34.406 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 23:30:34.415 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,'(' || a.route_nm || ')' || '<br>' || a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 1 msec}
2023-06-24 23:30:34.432 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-24 23:30:34.436 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:30:34.442 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-24 23:30:34.448 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:30:34.454 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 4 msec}
2023-06-24 23:30:34.460 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:30:34.463 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d2 LIKE '%*%' or a.d2 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 23:30:34.466 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d2 <> '')
		AND (a.d2 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 23:31:20.946 INFO  [RMI TCP Connection(12)-127.0.0.1] [o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin] - Application shutdown requested.
2023-06-24 23:31:20.975 INFO  [RMI TCP Connection(12)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Shutting down ExecutorService 'asyncThreadPool'
2023-06-24 23:31:20.978 INFO  [RMI TCP Connection(12)-127.0.0.1] [com.zaxxer.hikari.HikariDataSource] - H2 - Shutdown initiated...
2023-06-24 23:31:20.984 INFO  [RMI TCP Connection(12)-127.0.0.1] [com.zaxxer.hikari.HikariDataSource] - H2 - Shutdown completed.
2023-06-24 23:31:21.017 INFO  [RMI TCP Connection(12)-127.0.0.1] [com.pjy.dashboard.filter.TestFilter] - destroy Pjy Filter
2023-06-24 23:31:24.762 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Starting PjyApplication on DESKTOP-QJPD93S with PID 15916 (D:\BUS\dashboard\dashboard\target\classes started by admin in D:\BUS\dashboard\dashboard)
2023-06-24 23:31:24.767 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - The following profiles are active: oauth
2023-06-24 23:31:24.832 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-06-24 23:31:24.832 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-06-24 23:31:26.075 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-24 23:31:26.075 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-06-24 23:31:26.233 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 147ms. Found 3 JPA repository interfaces.
2023-06-24 23:31:26.598 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-24 23:31:26.598 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2023-06-24 23:31:26.645 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.FileRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-06-24 23:31:26.645 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.MemberRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-06-24 23:31:26.646 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.RememberMeRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-06-24 23:31:26.646 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 48ms. Found 0 JDBC repository interfaces.
2023-06-24 23:31:27.107 INFO  [restartedMain] [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] - Post-processing PropertySource instances
2023-06-24 23:31:27.178 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2023-06-24 23:31:27.178 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource commandLineArgs [org.springframework.core.env.SimpleCommandLinePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-06-24 23:31:27.178 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-06-24 23:31:27.178 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-06-24 23:31:27.180 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-24 23:31:27.180 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
2023-06-24 23:31:27.180 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2023-06-24 23:31:27.180 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application-oauth.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-24 23:31:27.180 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-24 23:31:27.180 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-24 23:31:27.180 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [pjy.properties] [org.springframework.core.env.CompositePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-06-24 23:31:27.181 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [common.properties] [org.springframework.core.io.support.ResourcePropertySource] to EncryptableMapPropertySourceWrapper
2023-06-24 23:31:27.243 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'asyncConfiguration' of type [com.pjy.dashboard.configuration.AsyncConfiguration$$EnhancerBySpringCGLIB$$804c8e96] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-24 23:31:27.298 INFO  [restartedMain] [c.u.j.filter.DefaultLazyPropertyFilter] - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2023-06-24 23:31:27.390 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$6a42f2c3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-24 23:31:27.481 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-24 23:31:27.483 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@15fc5368' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-24 23:31:27.488 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$8f179575] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-24 23:31:27.499 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration$$EnhancerBySpringCGLIB$$b46cad8b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-24 23:31:27.503 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-24 23:31:27.505 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-24 23:31:27.527 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d1952a89] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-24 23:31:27.556 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$511577bb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-24 23:31:27.691 INFO  [restartedMain] [c.u.j.r.DefaultLazyPropertyResolver] - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2023-06-24 23:31:27.697 INFO  [restartedMain] [c.u.j.d.DefaultLazyPropertyDetector] - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2023-06-24 23:31:28.142 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 10010 (http)
2023-06-24 23:31:28.159 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Initializing ProtocolHandler ["http-nio-10010"]
2023-06-24 23:31:28.170 INFO  [restartedMain] [org.apache.catalina.core.StandardService] - Starting service [Tomcat]
2023-06-24 23:31:28.170 INFO  [restartedMain] [org.apache.catalina.core.StandardEngine] - Starting Servlet engine: [Apache Tomcat/9.0.29]
2023-06-24 23:31:28.579 INFO  [restartedMain] [org.apache.jasper.servlet.TldScanner] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2023-06-24 23:31:28.593 INFO  [restartedMain] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring embedded WebApplicationContext
2023-06-24 23:31:28.593 INFO  [restartedMain] [o.s.web.context.ContextLoader] - Root WebApplicationContext: initialization completed in 3761 ms
2023-06-24 23:31:29.492 INFO  [restartedMain] [c.u.j.encryptor.DefaultLazyEncryptor] - Found Custom Encryptor Bean org.jasypt.encryption.pbe.PooledPBEStringEncryptor@b6702a5 with name: jasyptStringEncryptor
2023-06-24 23:31:29.551 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Starting...
2023-06-24 23:31:29.637 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.executeSql(PoolBase.java:567)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 6 msec}
2023-06-24 23:31:29.642 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Start completed.
2023-06-24 23:31:30.410 INFO  [restartedMain] [com.pjy.dashboard.filter.TestFilter] - init Pjy Filter
2023-06-24 23:31:30.739 INFO  [restartedMain] [o.hibernate.jpa.internal.util.LogHelper] - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2023-06-24 23:31:30.814 INFO  [restartedMain] [org.hibernate.Version] - HHH000412: Hibernate Core {5.3.14.Final}
2023-06-24 23:31:30.816 INFO  [restartedMain] [org.hibernate.cfg.Environment] - HHH000206: hibernate.properties not found
2023-06-24 23:31:30.970 INFO  [restartedMain] [org.hibernate.annotations.common.Version] - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2023-06-24 23:31:31.206 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 23:31:31.222 INFO  [restartedMain] [org.hibernate.dialect.Dialect] - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2023-06-24 23:31:31.941 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-24 23:31:31.944 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select SEQUENCE_CATALOG, SEQUENCE_SCHEMA, SEQUENCE_NAME, INCREMENT from information_schema.sequences
 {executed in 1 msec}
2023-06-24 23:31:32.000 INFO  [restartedMain] [o.s.o.j.LocalContainerEntityManagerFactoryBean] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-06-24 23:31:32.245 INFO  [restartedMain] [o.h.h.i.QueryTranslatorFactoryInitiator] - HHH000397: Using ASTQueryTranslatorFactory
2023-06-24 23:31:33.347 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService
2023-06-24 23:31:33.358 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'asyncThreadPool'
2023-06-24 23:31:33.539 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/h2-console/**'], []
2023-06-24 23:31:33.540 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/css/**'], []
2023-06-24 23:31:33.540 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/js/**'], []
2023-06-24 23:31:33.540 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/monitor/**'], []
2023-06-24 23:31:33.540 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/img/**'], []
2023-06-24 23:31:33.540 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/lib/**'], []
2023-06-24 23:31:33.540 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/main.css'], []
2023-06-24 23:31:33.540 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/common.js'], []
2023-06-24 23:31:33.540 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/resources/**'], []
2023-06-24 23:31:33.700 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@477cadeb, org.springframework.security.web.context.SecurityContextPersistenceFilter@3c8ec436, org.springframework.security.web.header.HeaderWriterFilter@7525443, org.springframework.web.filter.CorsFilter@dbd36, org.springframework.security.web.authentication.logout.LogoutFilter@7cb36787, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@326d4a0c, org.springframework.security.web.session.ConcurrentSessionFilter@4acc344b, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@5d567023, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4158822f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7189dcca, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6d5f9e68, org.springframework.security.web.session.SessionManagementFilter@6bdc1dbb, org.springframework.security.web.access.ExceptionTranslationFilter@36e942f6, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4fb06d3d]
2023-06-24 23:31:33.725 INFO  [restartedMain] [o.s.aop.framework.CglibAopProxy] - Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(javax.servlet.FilterConfig) throws javax.servlet.ServletException] because it is marked as final: Consider using interface-based JDK proxies instead!
2023-06-24 23:31:34.082 WARN  [restartedMain] [o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-06-24 23:31:34.158 INFO  [restartedMain] [o.s.b.a.w.s.WelcomePageHandlerMapping] - Adding welcome page: ServletContext resource [/index.html]
2023-06-24 23:31:34.575 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 23:31:35.374 INFO  [restartedMain] [o.s.b.d.a.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2023-06-24 23:31:35.402 INFO  [restartedMain] [o.s.b.a.e.web.EndpointLinksResolver] - Exposing 16 endpoint(s) beneath base path '/actuator'
2023-06-24 23:31:35.541 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskScheduler] - Initializing ExecutorService
2023-06-24 23:31:35.544 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Starting ProtocolHandler ["http-nio-10010"]
2023-06-24 23:31:35.588 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 10010 (http) with context path ''
2023-06-24 23:31:35.592 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Started PjyApplication in 11.304 seconds (JVM running for 12.657)
2023-06-24 23:31:35.593 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-06-24 23:31:35.594 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - Application started
2023-06-24 23:31:35.594 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-06-24 23:31:36.429 INFO  [RMI TCP Connection(10)-127.0.0.1] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-24 23:31:36.430 INFO  [RMI TCP Connection(10)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Initializing Servlet 'dispatcherServlet'
2023-06-24 23:31:36.448 INFO  [RMI TCP Connection(10)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Completed initialization in 18 ms
2023-06-24 23:33:48.423 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 23:33:48.434 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 3 msec}
2023-06-24 23:33:48.450 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:33:48.455 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-24 23:33:48.461 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:33:48.465 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:33:48.470 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-24 23:33:48.475 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-24 23:33:48.479 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d2 LIKE '%*%' or a.d2 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 23:33:48.481 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d2 <> '')
		AND (a.d2 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 23:34:27.286 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 23:34:27.289 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 1 msec}
2023-06-24 23:34:27.293 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:34:27.297 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:34:27.301 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:34:27.305 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:34:27.309 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:34:27.315 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:34:27.318 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d2 LIKE '%*%' or a.d2 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 2 msec}
2023-06-24 23:34:27.320 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d2 <> '')
		AND (a.d2 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 23:34:42.784 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-24 23:34:42.786 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 1 msec}
2023-06-24 23:34:42.790 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:34:42.793 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:34:42.797 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-24 23:34:42.800 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:34:42.803 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-24 23:34:42.808 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-24 23:34:42.810 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d2 LIKE '%*%' or a.d2 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-24 23:34:42.813 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d2 <> '')
		AND (a.d2 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 1 msec}
