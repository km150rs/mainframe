2023-06-25 00:11:34.613 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
21. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 00:11:34.617 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 1 msec}
2023-06-25 00:11:34.623 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:11:34.626 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-25 00:11:34.629 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:11:34.633 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:11:34.637 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:11:34.641 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:11:34.643 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d2 LIKE '%*%' or a.d2 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-25 00:11:34.648 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d2 <> '')
		AND (a.d2 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 3 msec}
2023-06-25 00:13:10.179 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
21. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 00:13:10.181 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 0 msec}
2023-06-25 00:13:10.183 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:13:10.186 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:13:10.190 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-25 00:13:10.193 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:13:10.196 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:13:10.199 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:13:10.202 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d2 LIKE '%*%' or a.d2 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 0 msec}
2023-06-25 00:13:10.204 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d2 <> '')
		AND (a.d2 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-25 00:13:37.214 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
21. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 00:13:37.216 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 1 msec}
2023-06-25 00:13:37.219 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:13:37.222 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:13:37.226 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:13:37.230 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-25 00:13:37.233 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:13:37.236 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:13:37.238 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d2 LIKE '%*%' or a.d2 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-25 00:13:37.240 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d2 <> '')
		AND (a.d2 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-25 00:13:52.511 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
21. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 00:13:52.512 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 0 msec}
2023-06-25 00:13:52.515 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 0 msec}
2023-06-25 00:13:52.518 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:13:52.522 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:13:52.524 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:13:52.528 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-25 00:13:52.532 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:13:52.534 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d2 LIKE '%*%' or a.d2 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 0 msec}
2023-06-25 00:13:52.535 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d2 <> '')
		AND (a.d2 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 0 msec}
2023-06-25 00:14:06.306 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
21. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 00:14:06.309 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 2 msec}
2023-06-25 00:14:06.311 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:14:06.314 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:14:06.318 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-25 00:14:06.321 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-25 00:14:06.323 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:14:06.326 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:14:06.328 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d2 LIKE '%*%' or a.d2 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-25 00:14:06.330 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d2 <> '')
		AND (a.d2 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 0 msec}
2023-06-25 00:15:19.066 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
21. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 00:15:19.069 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 1 msec}
2023-06-25 00:15:19.071 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:15:19.074 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:15:19.078 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-25 00:15:19.081 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:15:19.084 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:15:19.088 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:15:19.090 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d2 LIKE '%*%' or a.d2 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-25 00:15:19.092 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d2 <> '')
		AND (a.d2 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-25 00:15:58.624 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
21. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 00:15:58.626 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 1 msec}
2023-06-25 00:15:58.631 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:15:58.633 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:15:58.636 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:15:58.639 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:15:58.641 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:15:58.644 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:15:58.647 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d2 LIKE '%*%' or a.d2 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-25 00:15:58.649 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d2 <> '')
		AND (a.d2 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-25 00:19:09.747 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
21. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 00:19:09.749 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 1 msec}
2023-06-25 00:19:09.753 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:19:09.756 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:19:09.761 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 0 msec}
2023-06-25 00:19:09.767 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:19:09.770 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:19:09.773 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:19:09.774 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d2 LIKE '%*%' or a.d2 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 0 msec}
2023-06-25 00:19:09.776 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d2 <> '')
		AND (a.d2 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-25 00:26:23.243 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
21. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 00:26:23.245 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 1 msec}
2023-06-25 00:26:23.248 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:26:23.251 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:26:23.254 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 0 msec}
2023-06-25 00:26:23.256 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 0 msec}
2023-06-25 00:26:23.259 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:26:23.262 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:26:23.264 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d2 LIKE '%*%' or a.d2 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-25 00:26:23.267 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d2 <> '')
		AND (a.d2 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-25 00:26:46.517 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
21. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 00:26:46.519 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 1 msec}
2023-06-25 00:26:46.522 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:26:46.525 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:26:46.529 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:26:46.532 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-25 00:26:46.536 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:26:46.539 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:26:46.541 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d2 LIKE '%*%' or a.d2 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-25 00:26:46.544 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d2 <> '')
		AND (a.d2 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 2 msec}
2023-06-25 00:28:49.945 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
21. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 00:28:49.948 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 1 msec}
2023-06-25 00:28:49.951 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:28:49.953 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:28:49.957 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:28:49.960 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:28:49.962 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:28:49.965 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-25 00:28:49.967 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d2 LIKE '%*%' or a.d2 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-25 00:28:49.969 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d2 <> '')
		AND (a.d2 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-25 00:30:42.114 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
27. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 00:30:42.117 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
27. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 0 msec}
2023-06-25 00:30:42.120 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
27. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:30:42.124 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
27. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:30:42.126 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
27. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:30:42.129 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
27. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-25 00:30:42.133 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
27. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:30:42.136 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
27. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:30:42.137 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
27. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d2 LIKE '%*%' or a.d2 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-25 00:30:42.140 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
27. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d2 <> '')
		AND (a.d2 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-25 00:32:12.101 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 00:32:12.103 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 1 msec}
2023-06-25 00:32:12.106 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:32:12.109 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-25 00:32:12.112 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:32:12.115 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-25 00:32:12.118 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:32:12.121 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:32:12.123 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d2 LIKE '%*%' or a.d2 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 0 msec}
2023-06-25 00:32:12.124 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d2 <> '')
		AND (a.d2 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-25 00:35:47.558 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 00:35:47.562 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 1 msec}
2023-06-25 00:35:47.564 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:35:47.569 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 3 msec}
2023-06-25 00:35:47.571 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:35:47.574 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:35:47.577 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-25 00:35:47.580 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:35:47.582 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d2 LIKE '%*%' or a.d2 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-25 00:35:47.583 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d2 <> '')
		AND (a.d2 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-25 00:37:29.728 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 00:37:29.730 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 1 msec}
2023-06-25 00:37:29.733 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 0 msec}
2023-06-25 00:37:29.736 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:37:29.739 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-25 00:37:29.742 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-25 00:37:29.745 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:37:29.747 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:37:29.749 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d2 LIKE '%*%' or a.d2 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-25 00:37:29.751 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d2 <> '')
		AND (a.d2 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-25 00:40:41.223 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 00:40:41.226 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 1 msec}
2023-06-25 00:40:41.229 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:40:41.232 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:40:41.236 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:40:41.239 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:40:41.242 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:40:41.245 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:40:41.247 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d2 LIKE '%*%' or a.d2 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-25 00:40:41.250 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d2 <> '')
		AND (a.d2 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 2 msec}
2023-06-25 00:40:50.298 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 00:40:50.300 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 1 msec}
2023-06-25 00:40:50.302 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:40:50.305 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:40:50.309 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-25 00:40:50.312 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:40:50.314 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:40:50.317 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:40:50.319 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d2 LIKE '%*%' or a.d2 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-25 00:40:50.320 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d2 <> '')
		AND (a.d2 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 0 msec}
2023-06-25 00:43:36.814 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 00:43:36.817 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 1 msec}
2023-06-25 00:43:36.819 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:43:36.822 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:43:36.825 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:43:36.827 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 0 msec}
2023-06-25 00:43:36.829 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:43:36.831 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:43:36.834 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d2 LIKE '%*%' or a.d2 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-25 00:43:36.836 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d2 <> '')
		AND (a.d2 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-25 00:44:08.938 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 00:44:08.940 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 1 msec}
2023-06-25 00:44:08.943 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:44:08.946 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:44:08.949 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:44:08.951 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:44:08.954 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 0 msec}
2023-06-25 00:44:08.957 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-25 00:44:08.959 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d2 LIKE '%*%' or a.d2 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-25 00:44:08.960 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d2 <> '')
		AND (a.d2 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 0 msec}
2023-06-25 00:44:42.875 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 00:44:42.878 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 1 msec}
2023-06-25 00:44:42.880 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:44:42.883 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 0 msec}
2023-06-25 00:44:42.888 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 3 msec}
2023-06-25 00:44:42.892 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-25 00:44:42.896 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-25 00:44:42.899 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:44:42.901 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d2 LIKE '%*%' or a.d2 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-25 00:44:42.904 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d2 <> '')
		AND (a.d2 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 0 msec}
2023-06-25 00:45:01.642 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 00:45:01.645 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 1 msec}
2023-06-25 00:45:01.647 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:45:01.651 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:45:01.653 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:45:01.657 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:45:01.660 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:45:01.662 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:45:01.665 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d2 LIKE '%*%' or a.d2 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 2 msec}
2023-06-25 00:45:01.666 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d2 <> '')
		AND (a.d2 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-25 00:45:41.850 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 00:45:41.852 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 1 msec}
2023-06-25 00:45:41.855 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:45:41.858 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-25 00:45:41.861 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:45:41.865 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:45:41.868 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:45:41.871 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:45:41.872 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d2 LIKE '%*%' or a.d2 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-25 00:45:41.875 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d2 <> '')
		AND (a.d2 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-25 00:45:58.622 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 00:45:58.624 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 1 msec}
2023-06-25 00:45:58.627 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:45:58.630 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:45:58.632 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:45:58.635 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 0 msec}
2023-06-25 00:45:58.638 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:45:58.641 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-25 00:45:58.643 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d2 LIKE '%*%' or a.d2 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-25 00:45:58.645 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d2 <> '')
		AND (a.d2 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-25 00:46:34.056 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 2 msec}
2023-06-25 00:46:34.058 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 1 msec}
2023-06-25 00:46:34.060 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:46:34.063 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:46:34.066 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:46:34.068 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:46:34.070 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:46:34.074 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:46:34.075 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d2 LIKE '%*%' or a.d2 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 0 msec}
2023-06-25 00:46:34.077 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d2 <> '')
		AND (a.d2 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-25 00:47:02.698 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 00:47:02.700 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 1 msec}
2023-06-25 00:47:02.702 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:47:02.705 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-25 00:47:02.708 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:47:02.710 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:47:02.713 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 0 msec}
2023-06-25 00:47:02.716 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 00:47:02.718 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d2 LIKE '%*%' or a.d2 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-25 00:47:02.720 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d2 <> '')
		AND (a.d2 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-25 01:04:10.488 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.emp_no,a.emp_nm,nvl(b.route_nm,'-') as route_nm from    TBL_employeeInfo a left outer join TBL_DRIVERINFO b on a.company_no = b.company_no and a.emp_nm = b.emp_nm where   a.company_no = '100' and	    b.sp_gb = decode('ALL','ALL',b.sp_gb,'ALL') order by a.emp_nm
2023-06-25 01:04:10.507 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
41. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 01:04:10.532 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
41. select   a.emp_no,a.emp_nm,nvl(b.route_nm,'-') as route_nm from    TBL_employeeInfo a left outer join TBL_DRIVERINFO b on a.company_no = b.company_no and a.emp_nm = b.emp_nm where   a.company_no = '100' and	    b.sp_gb = decode('ALL','ALL',b.sp_gb,'ALL') order by a.emp_nm
 {executed in 24 msec}
2023-06-25 01:04:14.436 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@e79d3d0d
2023-06-25 01:04:14.438 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
41. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 01:04:14.442 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT  5 AS seq
		,  '5' AS a0 
		,	'현주소' AS a1, 		nvl(b.address,'') AS a1_value 
		,	'' AS a2, '' AS a2_value 
		,	'' AS a3, '' AS a3_value 
		,	'' AS a4, '' AS a4_value 
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='강근원' 
	union 
	SELECT  4 AS seq
		,  '4' AS a0 
		,	'이메일' AS a1, 		nvl(b.email,'')  AS a1_value 
		,	'호봉' AS a2, 		nvl(b.hobong,'') AS a2_value 
		,	'구분' AS a3, 		a.JOB_KIND AS a3_value 
		,	'급여계산' AS a4, 		'' AS a4_value 
		,	'국민연금취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='강근원' 
	union 
	SELECT  3 AS seq
		,  '3' AS a0 
		,	'휴대폰' AS a1, 		a.PHONE_NO  AS a1_value 
		,	'정규직구분' AS a2, 	nvl(b.enter_gb,'')  AS a2_value 
		,	'부서' AS a3, 		a.TEAM_NM  AS a3_value  
		,	'운전면허번호' AS a4, 	nvl(b.dirver_regno,'')	  AS a4_value  
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='강근원' 
	union 
	SELECT  2 AS seq
		,  '2' AS a0 
		,	'생년월일' AS a1, 		nvl(b.BIRTH_YMD,'') AS a1_value  
		,	'근속일자' AS a2, 		nvl(to_char(datediff(DAY,'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'직종' AS a3, 		a.JOB_TYPE AS a3_value  
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'건강보험취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='강근원' 
	union 
	SELECT  1 AS seq
		,	'1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'고정/SP구분' AS a3, 	nvl(b.sp_gb,'') AS a3_value 
		,	'가입조합' AS a4, 		nvl(b.work_group,'') AS a4_value 
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='강근원' 
	union 
	SELECT  0 AS seq
		,	a.emp_nm AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-') AS a2_value 
		,	'노선' AS a3, 		nvl(b.route_nm,'')  AS a3_value 
		,	'성별' AS a4, 		a.sex AS a4_value 
		,	'고용보험취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='강근원'
	order by 1
 {executed in 1 msec}
2023-06-25 01:04:14.476 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@aeacbabd
2023-06-25 01:04:14.476 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO_empNm} 
2023-06-25 01:04:14.476 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '강근원' order by a.base_year desc,a.acc_time desc
2023-06-25 01:04:14.480 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
41. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '강근원' order by a.base_year desc,a.acc_time desc
 {executed in 3 msec}
2023-06-25 01:04:14.482 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
41. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '강근원' order by a.base_year desc,a.acc_time desc
 {executed in 1 msec}
2023-06-25 01:04:14.594 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
41. select * from TBL_FILE_INFO where company_no = '100' and file_gb = 'empImage' and file_id = '강근원'
 {executed in 0 msec}
2023-06-25 01:36:54.453 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@238ff6d9
2023-06-25 01:36:54.453 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_ANALIZE_emp} 
2023-06-25 01:36:54.453 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select  a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.BASE_YMD > TO_CHAR(DATEADD(MONTH,-1,SYSDATE()),'yyyy-MM') and		a.emp_nm = '강근원' ORDER BY a.base_ymd DESC,a.col003 desc
2023-06-25 01:36:54.454 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
61. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 01:36:54.455 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
61. select  a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.BASE_YMD > TO_CHAR(DATEADD(MONTH,-1,SYSDATE()),'yyyy-MM') and		a.emp_nm = '강근원' ORDER BY a.base_ymd DESC,a.col003 desc
 {executed in 1 msec}
2023-06-25 01:36:54.457 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
61. select  a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.BASE_YMD > TO_CHAR(DATEADD(MONTH,-1,SYSDATE()),'yyyy-MM') and		a.emp_nm = '강근원' ORDER BY a.base_ymd DESC,a.col003 desc
 {executed in 1 msec}
2023-06-25 01:36:56.972 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@aeacbabd
2023-06-25 01:36:56.972 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO_empNm} 
2023-06-25 01:36:56.972 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '강근원' order by a.base_year desc,a.acc_time desc
2023-06-25 01:36:56.972 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
61. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 01:36:56.973 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
61. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '강근원' order by a.base_year desc,a.acc_time desc
 {executed in 1 msec}
2023-06-25 01:36:56.975 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
61. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '강근원' order by a.base_year desc,a.acc_time desc
 {executed in 2 msec}
2023-06-25 01:36:57.032 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f2102e2
2023-06-25 01:36:57.035 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT  5 AS seq
		,  '5' AS a0 
		,	'현주소' AS a1, 		nvl(b.address,'') AS a1_value 
		,	'' AS a2, '' AS a2_value 
		,	'' AS a3, '' AS a3_value 
		,	'' AS a4, '' AS a4_value 
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고상욱' 
	union 
	SELECT  4 AS seq
		,  '4' AS a0 
		,	'이메일' AS a1, 		nvl(b.email,'')  AS a1_value 
		,	'호봉' AS a2, 		nvl(b.hobong,'') AS a2_value 
		,	'구분' AS a3, 		a.JOB_KIND AS a3_value 
		,	'급여계산' AS a4, 		'' AS a4_value 
		,	'국민연금취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고상욱' 
	union 
	SELECT  3 AS seq
		,  '3' AS a0 
		,	'휴대폰' AS a1, 		a.PHONE_NO  AS a1_value 
		,	'정규직구분' AS a2, 	nvl(b.enter_gb,'')  AS a2_value 
		,	'부서' AS a3, 		a.TEAM_NM  AS a3_value  
		,	'운전면허번호' AS a4, 	nvl(b.dirver_regno,'')	  AS a4_value  
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고상욱' 
	union 
	SELECT  2 AS seq
		,  '2' AS a0 
		,	'생년월일' AS a1, 		nvl(b.BIRTH_YMD,'') AS a1_value  
		,	'근속일자' AS a2, 		nvl(to_char(datediff(DAY,'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'직종' AS a3, 		a.JOB_TYPE AS a3_value  
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'건강보험취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고상욱' 
	union 
	SELECT  1 AS seq
		,	'1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'고정/SP구분' AS a3, 	nvl(b.sp_gb,'') AS a3_value 
		,	'가입조합' AS a4, 		nvl(b.work_group,'') AS a4_value 
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고상욱' 
	union 
	SELECT  0 AS seq
		,	a.emp_nm AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-') AS a2_value 
		,	'노선' AS a3, 		nvl(b.route_nm,'')  AS a3_value 
		,	'성별' AS a4, 		a.sex AS a4_value 
		,	'고용보험취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고상욱'
	order by 1
 {executed in 2 msec}
2023-06-25 01:36:57.064 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@56308092
2023-06-25 01:36:57.064 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO_empNm} 
2023-06-25 01:36:57.064 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '고상욱' order by a.base_year desc,a.acc_time desc
2023-06-25 01:36:57.068 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
61. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '고상욱' order by a.base_year desc,a.acc_time desc
 {executed in 3 msec}
2023-06-25 01:36:57.069 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
61. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '고상욱' order by a.base_year desc,a.acc_time desc
 {executed in 1 msec}
2023-06-25 01:36:57.127 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
61. select * from TBL_FILE_INFO where company_no = '100' and file_gb = 'empImage' and file_id = '고상욱'
 {executed in 0 msec}
2023-06-25 01:36:58.795 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@d0f1a0d6
2023-06-25 01:36:58.797 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
61. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 01:36:58.799 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT  5 AS seq
		,  '5' AS a0 
		,	'현주소' AS a1, 		nvl(b.address,'') AS a1_value 
		,	'' AS a2, '' AS a2_value 
		,	'' AS a3, '' AS a3_value 
		,	'' AS a4, '' AS a4_value 
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='권오현' 
	union 
	SELECT  4 AS seq
		,  '4' AS a0 
		,	'이메일' AS a1, 		nvl(b.email,'')  AS a1_value 
		,	'호봉' AS a2, 		nvl(b.hobong,'') AS a2_value 
		,	'구분' AS a3, 		a.JOB_KIND AS a3_value 
		,	'급여계산' AS a4, 		'' AS a4_value 
		,	'국민연금취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='권오현' 
	union 
	SELECT  3 AS seq
		,  '3' AS a0 
		,	'휴대폰' AS a1, 		a.PHONE_NO  AS a1_value 
		,	'정규직구분' AS a2, 	nvl(b.enter_gb,'')  AS a2_value 
		,	'부서' AS a3, 		a.TEAM_NM  AS a3_value  
		,	'운전면허번호' AS a4, 	nvl(b.dirver_regno,'')	  AS a4_value  
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='권오현' 
	union 
	SELECT  2 AS seq
		,  '2' AS a0 
		,	'생년월일' AS a1, 		nvl(b.BIRTH_YMD,'') AS a1_value  
		,	'근속일자' AS a2, 		nvl(to_char(datediff(DAY,'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'직종' AS a3, 		a.JOB_TYPE AS a3_value  
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'건강보험취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='권오현' 
	union 
	SELECT  1 AS seq
		,	'1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'고정/SP구분' AS a3, 	nvl(b.sp_gb,'') AS a3_value 
		,	'가입조합' AS a4, 		nvl(b.work_group,'') AS a4_value 
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='권오현' 
	union 
	SELECT  0 AS seq
		,	a.emp_nm AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-') AS a2_value 
		,	'노선' AS a3, 		nvl(b.route_nm,'')  AS a3_value 
		,	'성별' AS a4, 		a.sex AS a4_value 
		,	'고용보험취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='권오현'
	order by 1
 {executed in 1 msec}
2023-06-25 01:36:58.823 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@98011e86
2023-06-25 01:36:58.823 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO_empNm} 
2023-06-25 01:36:58.823 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '권오현' order by a.base_year desc,a.acc_time desc
2023-06-25 01:36:58.824 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
61. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '권오현' order by a.base_year desc,a.acc_time desc
 {executed in 1 msec}
2023-06-25 01:36:58.825 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
61. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '권오현' order by a.base_year desc,a.acc_time desc
 {executed in 1 msec}
2023-06-25 01:36:58.871 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
61. select * from TBL_FILE_INFO where company_no = '100' and file_gb = 'empImage' and file_id = '권오현'
 {executed in 0 msec}
2023-06-25 01:37:00.053 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@449e82dd
2023-06-25 01:37:00.054 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
61. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 01:37:00.056 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT  5 AS seq
		,  '5' AS a0 
		,	'현주소' AS a1, 		nvl(b.address,'') AS a1_value 
		,	'' AS a2, '' AS a2_value 
		,	'' AS a3, '' AS a3_value 
		,	'' AS a4, '' AS a4_value 
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='국수현' 
	union 
	SELECT  4 AS seq
		,  '4' AS a0 
		,	'이메일' AS a1, 		nvl(b.email,'')  AS a1_value 
		,	'호봉' AS a2, 		nvl(b.hobong,'') AS a2_value 
		,	'구분' AS a3, 		a.JOB_KIND AS a3_value 
		,	'급여계산' AS a4, 		'' AS a4_value 
		,	'국민연금취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='국수현' 
	union 
	SELECT  3 AS seq
		,  '3' AS a0 
		,	'휴대폰' AS a1, 		a.PHONE_NO  AS a1_value 
		,	'정규직구분' AS a2, 	nvl(b.enter_gb,'')  AS a2_value 
		,	'부서' AS a3, 		a.TEAM_NM  AS a3_value  
		,	'운전면허번호' AS a4, 	nvl(b.dirver_regno,'')	  AS a4_value  
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='국수현' 
	union 
	SELECT  2 AS seq
		,  '2' AS a0 
		,	'생년월일' AS a1, 		nvl(b.BIRTH_YMD,'') AS a1_value  
		,	'근속일자' AS a2, 		nvl(to_char(datediff(DAY,'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'직종' AS a3, 		a.JOB_TYPE AS a3_value  
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'건강보험취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='국수현' 
	union 
	SELECT  1 AS seq
		,	'1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'고정/SP구분' AS a3, 	nvl(b.sp_gb,'') AS a3_value 
		,	'가입조합' AS a4, 		nvl(b.work_group,'') AS a4_value 
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='국수현' 
	union 
	SELECT  0 AS seq
		,	a.emp_nm AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-') AS a2_value 
		,	'노선' AS a3, 		nvl(b.route_nm,'')  AS a3_value 
		,	'성별' AS a4, 		a.sex AS a4_value 
		,	'고용보험취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='국수현'
	order by 1
 {executed in 1 msec}
2023-06-25 01:37:00.080 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@bae008d
2023-06-25 01:37:00.080 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO_empNm} 
2023-06-25 01:37:00.080 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '국수현' order by a.base_year desc,a.acc_time desc
2023-06-25 01:37:00.081 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
61. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '국수현' order by a.base_year desc,a.acc_time desc
 {executed in 1 msec}
2023-06-25 01:37:00.082 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
61. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '국수현' order by a.base_year desc,a.acc_time desc
 {executed in 1 msec}
2023-06-25 01:37:00.130 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
61. select * from TBL_FILE_INFO where company_no = '100' and file_gb = 'empImage' and file_id = '국수현'
 {executed in 1 msec}
2023-06-25 01:37:13.680 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@e9727d06
2023-06-25 01:37:13.680 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - filterType={danagerAnal_Employee2} 
2023-06-25 01:37:13.681 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT 	b.base_ym, b.emp_nm,b.danger_km100,b.DANGER_ACT_CNT, b.DANGER_ACT,b.DANGER_LEVEL,b.DRIVING_CNT,b.DRIVING_DISTANCE,b.DRIVING_TIME FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym > TO_CHAR(DATEADD(YEAR,-3,SYSDATE()),'yyyy-MM') AND   b.emp_nm = '국수현' ORDER BY b.base_ym desc
2023-06-25 01:37:13.682 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
61. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 01:37:13.691 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
61. SELECT 	b.base_ym, b.emp_nm,b.danger_km100,b.DANGER_ACT_CNT, b.DANGER_ACT,b.DANGER_LEVEL,b.DRIVING_CNT,b.DRIVING_DISTANCE,b.DRIVING_TIME FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym > TO_CHAR(DATEADD(YEAR,-3,SYSDATE()),'yyyy-MM') AND   b.emp_nm = '국수현' ORDER BY b.base_ym desc
 {executed in 9 msec}
2023-06-25 01:37:13.692 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
61. SELECT 	b.base_ym, b.emp_nm,b.danger_km100,b.DANGER_ACT_CNT, b.DANGER_ACT,b.DANGER_LEVEL,b.DRIVING_CNT,b.DRIVING_DISTANCE,b.DRIVING_TIME FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym > TO_CHAR(DATEADD(YEAR,-3,SYSDATE()),'yyyy-MM') AND   b.emp_nm = '국수현' ORDER BY b.base_ym desc
 {executed in 1 msec}
2023-06-25 01:37:44.200 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@80913ca9
2023-06-25 01:37:44.200 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_ANALIZE_emp} 
2023-06-25 01:37:44.200 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select  a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.BASE_YMD > TO_CHAR(DATEADD(MONTH,-1,SYSDATE()),'yyyy-MM') and		a.emp_nm = '국수현' ORDER BY a.base_ymd DESC,a.col003 desc
2023-06-25 01:37:44.201 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
61. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 01:37:44.202 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
61. select  a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.BASE_YMD > TO_CHAR(DATEADD(MONTH,-1,SYSDATE()),'yyyy-MM') and		a.emp_nm = '국수현' ORDER BY a.base_ymd DESC,a.col003 desc
 {executed in 1 msec}
2023-06-25 01:37:44.203 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
61. select  a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.BASE_YMD > TO_CHAR(DATEADD(MONTH,-1,SYSDATE()),'yyyy-MM') and		a.emp_nm = '국수현' ORDER BY a.base_ymd DESC,a.col003 desc
 {executed in 1 msec}
2023-06-25 01:37:47.383 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@d0d1365d
2023-06-25 01:37:47.383 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - filterType={getDrivingRecord_year} 
2023-06-25 01:37:47.383 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : WITH wholeAvgInfo AS ( SELECT 	k.base_ym ,	round(avg(k.bms_km),2) AS wholeAvg_bms_km ,	round(avg(k.tot_min),2) AS wholeAvg_tot_min FROM ( SELECT	a.base_ym,a.WORK_DATE ,a.driver_id,	sum(a.BMS_KM) bms_km ,	sum(a.TOT_MIN) tot_min FROM	TBL_DRIVING_RECORD a where 	a.company_no = '100' and 	a.BASE_YM LIKE  '2023' || '%' GROUP BY	a.base_ym,a.WORK_DATE,a.driver_id ) k	GROUP BY k.base_ym ) SELECT 	k.base_ym , 	count(k.base_ym) as tot_day ,	round(sum(k.bms_km),2) AS bms_km , 	round(sum(k.tot_min),2) AS tot_min ,	round(avg(k.bms_km),2) AS avg_bms_km ,	round(avg(k.tot_min),2) AS avg_tot_min ,	m.wholeAvg_bms_km ,	m.wholeAvg_tot_min FROM ( SELECT	a.base_ym, a.WORK_DATE ,	sum(a.BMS_KM) bms_km ,	sum(a.TOT_MIN) tot_min FROM	TBL_DRIVING_RECORD a JOIN 	TBL_ISC_DRIVER_INFO b ON	a.company_no = b.COMPANY_NO  AND b.EMP_NM = '국수현'	AND b.DRIVER_ID = a.DRIVER_ID where 	a.company_no = '100' AND     a.BASE_YM LIKE  '2023' || '%' GROUP BY	a.base_ym,a.WORK_DATE ) k JOIN wholeAvgInfo m ON m.base_ym = k.base_ym GROUP BY k.base_ym
2023-06-25 01:37:47.384 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
61. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 01:37:47.806 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
61. WITH wholeAvgInfo AS ( SELECT 	k.base_ym ,	round(avg(k.bms_km),2) AS wholeAvg_bms_km ,	round(avg(k.tot_min),2) AS wholeAvg_tot_min FROM ( SELECT	a.base_ym,a.WORK_DATE ,a.driver_id,	sum(a.BMS_KM) bms_km ,	sum(a.TOT_MIN) tot_min FROM	TBL_DRIVING_RECORD a where 	a.company_no = '100' and 	a.BASE_YM LIKE  '2023' || '%' GROUP BY	a.base_ym,a.WORK_DATE,a.driver_id ) k	GROUP BY k.base_ym ) SELECT 	k.base_ym , 	count(k.base_ym) as tot_day ,	round(sum(k.bms_km),2) AS bms_km , 	round(sum(k.tot_min),2) AS tot_min ,	round(avg(k.bms_km),2) AS avg_bms_km ,	round(avg(k.tot_min),2) AS avg_tot_min ,	m.wholeAvg_bms_km ,	m.wholeAvg_tot_min FROM ( SELECT	a.base_ym, a.WORK_DATE ,	sum(a.BMS_KM) bms_km ,	sum(a.TOT_MIN) tot_min FROM	TBL_DRIVING_RECORD a JOIN 	TBL_ISC_DRIVER_INFO b ON	a.company_no = b.COMPANY_NO  AND b.EMP_NM = '국수현'	AND b.DRIVER_ID = a.DRIVER_ID where 	a.company_no = '100' AND     a.BASE_YM LIKE  '2023' || '%' GROUP BY	a.base_ym,a.WORK_DATE ) k JOIN wholeAvgInfo m ON m.base_ym = k.base_ym GROUP BY k.base_ym
 {executed in 422 msec}
2023-06-25 01:37:48.055 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
61. WITH wholeAvgInfo AS ( SELECT 	k.base_ym ,	round(avg(k.bms_km),2) AS wholeAvg_bms_km ,	round(avg(k.tot_min),2) AS wholeAvg_tot_min FROM ( SELECT	a.base_ym,a.WORK_DATE ,a.driver_id,	sum(a.BMS_KM) bms_km ,	sum(a.TOT_MIN) tot_min FROM	TBL_DRIVING_RECORD a where 	a.company_no = '100' and 	a.BASE_YM LIKE  '2023' || '%' GROUP BY	a.base_ym,a.WORK_DATE,a.driver_id ) k	GROUP BY k.base_ym ) SELECT 	k.base_ym , 	count(k.base_ym) as tot_day ,	round(sum(k.bms_km),2) AS bms_km , 	round(sum(k.tot_min),2) AS tot_min ,	round(avg(k.bms_km),2) AS avg_bms_km ,	round(avg(k.tot_min),2) AS avg_tot_min ,	m.wholeAvg_bms_km ,	m.wholeAvg_tot_min FROM ( SELECT	a.base_ym, a.WORK_DATE ,	sum(a.BMS_KM) bms_km ,	sum(a.TOT_MIN) tot_min FROM	TBL_DRIVING_RECORD a JOIN 	TBL_ISC_DRIVER_INFO b ON	a.company_no = b.COMPANY_NO  AND b.EMP_NM = '국수현'	AND b.DRIVER_ID = a.DRIVER_ID where 	a.company_no = '100' AND     a.BASE_YM LIKE  '2023' || '%' GROUP BY	a.base_ym,a.WORK_DATE ) k JOIN wholeAvgInfo m ON m.base_ym = k.base_ym GROUP BY k.base_ym
 {executed in 249 msec}
2023-06-25 01:37:48.090 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@59abaf73
2023-06-25 01:37:48.090 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - filterType={getDrivingRecord_month} 
2023-06-25 01:37:48.091 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT 	WORK_DATE ,	count(WORK_DATE) AS tot_cnt ,	round(sum(a.BMS_KM),2) bms_km ,	sum(a.TOT_MIN) tot_min FROM 	TBL_DRIVING_RECORD a JOIN TBL_ISC_DRIVER_INFO b ON b.EMP_NM  = '국수현' AND b.DRIVER_ID = a.DRIVER_ID where 	a.company_no = '100' AND   	a.BASE_YM = '2023-03' GROUP BY WORK_DATE
2023-06-25 01:37:48.574 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
61. SELECT 	WORK_DATE ,	count(WORK_DATE) AS tot_cnt ,	round(sum(a.BMS_KM),2) bms_km ,	sum(a.TOT_MIN) tot_min FROM 	TBL_DRIVING_RECORD a JOIN TBL_ISC_DRIVER_INFO b ON b.EMP_NM  = '국수현' AND b.DRIVER_ID = a.DRIVER_ID where 	a.company_no = '100' AND   	a.BASE_YM = '2023-03' GROUP BY WORK_DATE
 {executed in 483 msec}
2023-06-25 01:37:48.575 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
61. SELECT 	WORK_DATE ,	count(WORK_DATE) AS tot_cnt ,	round(sum(a.BMS_KM),2) bms_km ,	sum(a.TOT_MIN) tot_min FROM 	TBL_DRIVING_RECORD a JOIN TBL_ISC_DRIVER_INFO b ON b.EMP_NM  = '국수현' AND b.DRIVER_ID = a.DRIVER_ID where 	a.company_no = '100' AND   	a.BASE_YM = '2023-03' GROUP BY WORK_DATE
 {executed in 1 msec}
2023-06-25 01:37:48.611 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@68910bc9
2023-06-25 01:37:48.611 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - filterType={getDrivingRecord_day} 
2023-06-25 01:37:48.611 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT 	ROWNUM as no, a.CAR_REGNO ,substring(a.START_TIME,12) as START_TIME,substring(a.END_TIME,12) as END_TIME ,round(a.BMS_KM,2) as bms_km ,a.TOT_MIN FROM 	TBL_DRIVING_RECORD a JOIN TBL_ISC_DRIVER_INFO b ON b.EMP_NM  = '국수현' AND b.DRIVER_ID = a.DRIVER_ID where 	a.company_no = '100' AND   	a.WORK_DATE = '2023-03-01' ORDER BY a.START_TIME
2023-06-25 01:37:48.657 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
61. SELECT 	ROWNUM as no, a.CAR_REGNO ,substring(a.START_TIME,12) as START_TIME,substring(a.END_TIME,12) as END_TIME ,round(a.BMS_KM,2) as bms_km ,a.TOT_MIN FROM 	TBL_DRIVING_RECORD a JOIN TBL_ISC_DRIVER_INFO b ON b.EMP_NM  = '국수현' AND b.DRIVER_ID = a.DRIVER_ID where 	a.company_no = '100' AND   	a.WORK_DATE = '2023-03-01' ORDER BY a.START_TIME
 {executed in 45 msec}
2023-06-25 01:37:48.687 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
61. SELECT 	ROWNUM as no, a.CAR_REGNO ,substring(a.START_TIME,12) as START_TIME,substring(a.END_TIME,12) as END_TIME ,round(a.BMS_KM,2) as bms_km ,a.TOT_MIN FROM 	TBL_DRIVING_RECORD a JOIN TBL_ISC_DRIVER_INFO b ON b.EMP_NM  = '국수현' AND b.DRIVER_ID = a.DRIVER_ID where 	a.company_no = '100' AND   	a.WORK_DATE = '2023-03-01' ORDER BY a.START_TIME
 {executed in 30 msec}
2023-06-25 01:40:10.922 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.emp_no,a.emp_nm,nvl(b.route_nm,'-') as route_nm from    TBL_employeeInfo a left outer join TBL_DRIVERINFO b on a.company_no = b.company_no and a.emp_nm = b.emp_nm where   a.company_no = '100' and	    b.sp_gb = decode('ALL','ALL',b.sp_gb,'ALL') order by a.emp_nm
2023-06-25 01:40:10.923 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
61. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 01:40:10.939 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
61. select   a.emp_no,a.emp_nm,nvl(b.route_nm,'-') as route_nm from    TBL_employeeInfo a left outer join TBL_DRIVERINFO b on a.company_no = b.company_no and a.emp_nm = b.emp_nm where   a.company_no = '100' and	    b.sp_gb = decode('ALL','ALL',b.sp_gb,'ALL') order by a.emp_nm
 {executed in 15 msec}
2023-06-25 01:41:43.334 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.emp_no,a.emp_nm,nvl(b.route_nm,'-') as route_nm from    TBL_employeeInfo a left outer join TBL_DRIVERINFO b on a.company_no = b.company_no and a.emp_nm = b.emp_nm where   a.company_no = '100' and	    b.sp_gb = decode('ALL','ALL',b.sp_gb,'ALL') order by a.emp_nm
2023-06-25 01:41:43.335 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
61. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 01:41:43.336 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
61. select   a.emp_no,a.emp_nm,nvl(b.route_nm,'-') as route_nm from    TBL_employeeInfo a left outer join TBL_DRIVERINFO b on a.company_no = b.company_no and a.emp_nm = b.emp_nm where   a.company_no = '100' and	    b.sp_gb = decode('ALL','ALL',b.sp_gb,'ALL') order by a.emp_nm
 {executed in 1 msec}
2023-06-25 01:44:34.433 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.emp_no,a.emp_nm,nvl(b.route_nm,'-') as route_nm from    TBL_employeeInfo a left outer join TBL_DRIVERINFO b on a.company_no = b.company_no and a.emp_nm = b.emp_nm where   a.company_no = '100' and	    b.sp_gb = decode('ALL','ALL',b.sp_gb,'ALL') order by a.emp_nm
2023-06-25 01:44:34.434 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
61. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 01:44:34.435 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
61. select   a.emp_no,a.emp_nm,nvl(b.route_nm,'-') as route_nm from    TBL_employeeInfo a left outer join TBL_DRIVERINFO b on a.company_no = b.company_no and a.emp_nm = b.emp_nm where   a.company_no = '100' and	    b.sp_gb = decode('ALL','ALL',b.sp_gb,'ALL') order by a.emp_nm
 {executed in 1 msec}
2023-06-25 01:44:38.923 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@e79d3d0d
2023-06-25 01:44:38.924 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
61. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 01:44:38.926 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT  5 AS seq
		,  '5' AS a0 
		,	'현주소' AS a1, 		nvl(b.address,'') AS a1_value 
		,	'' AS a2, '' AS a2_value 
		,	'' AS a3, '' AS a3_value 
		,	'' AS a4, '' AS a4_value 
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='강근원' 
	union 
	SELECT  4 AS seq
		,  '4' AS a0 
		,	'이메일' AS a1, 		nvl(b.email,'')  AS a1_value 
		,	'호봉' AS a2, 		nvl(b.hobong,'') AS a2_value 
		,	'구분' AS a3, 		a.JOB_KIND AS a3_value 
		,	'급여계산' AS a4, 		'' AS a4_value 
		,	'국민연금취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='강근원' 
	union 
	SELECT  3 AS seq
		,  '3' AS a0 
		,	'휴대폰' AS a1, 		a.PHONE_NO  AS a1_value 
		,	'정규직구분' AS a2, 	nvl(b.enter_gb,'')  AS a2_value 
		,	'부서' AS a3, 		a.TEAM_NM  AS a3_value  
		,	'운전면허번호' AS a4, 	nvl(b.dirver_regno,'')	  AS a4_value  
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='강근원' 
	union 
	SELECT  2 AS seq
		,  '2' AS a0 
		,	'생년월일' AS a1, 		nvl(b.BIRTH_YMD,'') AS a1_value  
		,	'근속일자' AS a2, 		nvl(to_char(datediff(DAY,'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'직종' AS a3, 		a.JOB_TYPE AS a3_value  
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'건강보험취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='강근원' 
	union 
	SELECT  1 AS seq
		,	'1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'고정/SP구분' AS a3, 	nvl(b.sp_gb,'') AS a3_value 
		,	'가입조합' AS a4, 		nvl(b.work_group,'') AS a4_value 
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='강근원' 
	union 
	SELECT  0 AS seq
		,	a.emp_nm AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-') AS a2_value 
		,	'노선' AS a3, 		nvl(b.route_nm,'')  AS a3_value 
		,	'성별' AS a4, 		a.sex AS a4_value 
		,	'고용보험취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='강근원'
	order by 1
 {executed in 1 msec}
2023-06-25 01:44:38.952 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@aeacbabd
2023-06-25 01:44:38.952 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO_empNm} 
2023-06-25 01:44:38.952 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '강근원' order by a.base_year desc,a.acc_time desc
2023-06-25 01:44:38.953 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
61. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '강근원' order by a.base_year desc,a.acc_time desc
 {executed in 1 msec}
2023-06-25 01:44:38.954 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
61. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '강근원' order by a.base_year desc,a.acc_time desc
 {executed in 1 msec}
2023-06-25 01:44:38.994 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
61. select * from TBL_FILE_INFO where company_no = '100' and file_gb = 'empImage' and file_id = '강근원'
 {executed in 0 msec}
2023-06-25 01:45:02.458 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.emp_no,a.emp_nm,nvl(b.route_nm,'-') as route_nm from    TBL_employeeInfo a left outer join TBL_DRIVERINFO b on a.company_no = b.company_no and a.emp_nm = b.emp_nm where   a.company_no = '100' and	    b.sp_gb = decode('ALL','ALL',b.sp_gb,'ALL') order by a.emp_nm
2023-06-25 01:45:02.459 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
61. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 01:45:02.460 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
61. select   a.emp_no,a.emp_nm,nvl(b.route_nm,'-') as route_nm from    TBL_employeeInfo a left outer join TBL_DRIVERINFO b on a.company_no = b.company_no and a.emp_nm = b.emp_nm where   a.company_no = '100' and	    b.sp_gb = decode('ALL','ALL',b.sp_gb,'ALL') order by a.emp_nm
 {executed in 1 msec}
2023-06-25 01:45:04.170 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@e79d3d0d
2023-06-25 01:45:04.171 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
61. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 01:45:04.174 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT  5 AS seq
		,  '5' AS a0 
		,	'현주소' AS a1, 		nvl(b.address,'') AS a1_value 
		,	'' AS a2, '' AS a2_value 
		,	'' AS a3, '' AS a3_value 
		,	'' AS a4, '' AS a4_value 
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='강근원' 
	union 
	SELECT  4 AS seq
		,  '4' AS a0 
		,	'이메일' AS a1, 		nvl(b.email,'')  AS a1_value 
		,	'호봉' AS a2, 		nvl(b.hobong,'') AS a2_value 
		,	'구분' AS a3, 		a.JOB_KIND AS a3_value 
		,	'급여계산' AS a4, 		'' AS a4_value 
		,	'국민연금취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='강근원' 
	union 
	SELECT  3 AS seq
		,  '3' AS a0 
		,	'휴대폰' AS a1, 		a.PHONE_NO  AS a1_value 
		,	'정규직구분' AS a2, 	nvl(b.enter_gb,'')  AS a2_value 
		,	'부서' AS a3, 		a.TEAM_NM  AS a3_value  
		,	'운전면허번호' AS a4, 	nvl(b.dirver_regno,'')	  AS a4_value  
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='강근원' 
	union 
	SELECT  2 AS seq
		,  '2' AS a0 
		,	'생년월일' AS a1, 		nvl(b.BIRTH_YMD,'') AS a1_value  
		,	'근속일자' AS a2, 		nvl(to_char(datediff(DAY,'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'직종' AS a3, 		a.JOB_TYPE AS a3_value  
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'건강보험취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='강근원' 
	union 
	SELECT  1 AS seq
		,	'1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'고정/SP구분' AS a3, 	nvl(b.sp_gb,'') AS a3_value 
		,	'가입조합' AS a4, 		nvl(b.work_group,'') AS a4_value 
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='강근원' 
	union 
	SELECT  0 AS seq
		,	a.emp_nm AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-') AS a2_value 
		,	'노선' AS a3, 		nvl(b.route_nm,'')  AS a3_value 
		,	'성별' AS a4, 		a.sex AS a4_value 
		,	'고용보험취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='강근원'
	order by 1
 {executed in 1 msec}
2023-06-25 01:45:04.183 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
61. select * from TBL_FILE_INFO where company_no = '100' and file_gb = 'empImage' and file_id = '강근원'
 {executed in 0 msec}
2023-06-25 01:45:04.207 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@aeacbabd
2023-06-25 01:45:04.207 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO_empNm} 
2023-06-25 01:45:04.207 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '강근원' order by a.base_year desc,a.acc_time desc
2023-06-25 01:45:04.208 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
61. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '강근원' order by a.base_year desc,a.acc_time desc
 {executed in 1 msec}
2023-06-25 01:45:04.209 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
61. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '강근원' order by a.base_year desc,a.acc_time desc
 {executed in 0 msec}
2023-06-25 01:45:15.010 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.emp_no,a.emp_nm,nvl(b.route_nm,'-') as route_nm from    TBL_employeeInfo a left outer join TBL_DRIVERINFO b on a.company_no = b.company_no and a.emp_nm = b.emp_nm where   a.company_no = '100' and	    b.sp_gb = decode('ALL','ALL',b.sp_gb,'ALL') order by a.emp_nm
2023-06-25 01:45:15.011 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
61. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 01:45:15.012 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
61. select   a.emp_no,a.emp_nm,nvl(b.route_nm,'-') as route_nm from    TBL_employeeInfo a left outer join TBL_DRIVERINFO b on a.company_no = b.company_no and a.emp_nm = b.emp_nm where   a.company_no = '100' and	    b.sp_gb = decode('ALL','ALL',b.sp_gb,'ALL') order by a.emp_nm
 {executed in 1 msec}
2023-06-25 01:45:16.340 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f2102e2
2023-06-25 01:45:16.341 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
61. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 01:45:16.344 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT  5 AS seq
		,  '5' AS a0 
		,	'현주소' AS a1, 		nvl(b.address,'') AS a1_value 
		,	'' AS a2, '' AS a2_value 
		,	'' AS a3, '' AS a3_value 
		,	'' AS a4, '' AS a4_value 
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고상욱' 
	union 
	SELECT  4 AS seq
		,  '4' AS a0 
		,	'이메일' AS a1, 		nvl(b.email,'')  AS a1_value 
		,	'호봉' AS a2, 		nvl(b.hobong,'') AS a2_value 
		,	'구분' AS a3, 		a.JOB_KIND AS a3_value 
		,	'급여계산' AS a4, 		'' AS a4_value 
		,	'국민연금취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고상욱' 
	union 
	SELECT  3 AS seq
		,  '3' AS a0 
		,	'휴대폰' AS a1, 		a.PHONE_NO  AS a1_value 
		,	'정규직구분' AS a2, 	nvl(b.enter_gb,'')  AS a2_value 
		,	'부서' AS a3, 		a.TEAM_NM  AS a3_value  
		,	'운전면허번호' AS a4, 	nvl(b.dirver_regno,'')	  AS a4_value  
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고상욱' 
	union 
	SELECT  2 AS seq
		,  '2' AS a0 
		,	'생년월일' AS a1, 		nvl(b.BIRTH_YMD,'') AS a1_value  
		,	'근속일자' AS a2, 		nvl(to_char(datediff(DAY,'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'직종' AS a3, 		a.JOB_TYPE AS a3_value  
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'건강보험취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고상욱' 
	union 
	SELECT  1 AS seq
		,	'1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'고정/SP구분' AS a3, 	nvl(b.sp_gb,'') AS a3_value 
		,	'가입조합' AS a4, 		nvl(b.work_group,'') AS a4_value 
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고상욱' 
	union 
	SELECT  0 AS seq
		,	a.emp_nm AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-') AS a2_value 
		,	'노선' AS a3, 		nvl(b.route_nm,'')  AS a3_value 
		,	'성별' AS a4, 		a.sex AS a4_value 
		,	'고용보험취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고상욱'
	order by 1
 {executed in 1 msec}
2023-06-25 01:45:16.369 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@56308092
2023-06-25 01:45:16.369 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO_empNm} 
2023-06-25 01:45:16.369 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '고상욱' order by a.base_year desc,a.acc_time desc
2023-06-25 01:45:16.370 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
61. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '고상욱' order by a.base_year desc,a.acc_time desc
 {executed in 1 msec}
2023-06-25 01:45:16.371 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
61. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '고상욱' order by a.base_year desc,a.acc_time desc
 {executed in 0 msec}
2023-06-25 01:45:16.425 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
61. select * from TBL_FILE_INFO where company_no = '100' and file_gb = 'empImage' and file_id = '고상욱'
 {executed in 1 msec}
2023-06-25 01:45:18.416 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@33f61355
2023-06-25 01:45:18.417 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
61. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 01:45:18.419 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT  5 AS seq
		,  '5' AS a0 
		,	'현주소' AS a1, 		nvl(b.address,'') AS a1_value 
		,	'' AS a2, '' AS a2_value 
		,	'' AS a3, '' AS a3_value 
		,	'' AS a4, '' AS a4_value 
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='강병석' 
	union 
	SELECT  4 AS seq
		,  '4' AS a0 
		,	'이메일' AS a1, 		nvl(b.email,'')  AS a1_value 
		,	'호봉' AS a2, 		nvl(b.hobong,'') AS a2_value 
		,	'구분' AS a3, 		a.JOB_KIND AS a3_value 
		,	'급여계산' AS a4, 		'' AS a4_value 
		,	'국민연금취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='강병석' 
	union 
	SELECT  3 AS seq
		,  '3' AS a0 
		,	'휴대폰' AS a1, 		a.PHONE_NO  AS a1_value 
		,	'정규직구분' AS a2, 	nvl(b.enter_gb,'')  AS a2_value 
		,	'부서' AS a3, 		a.TEAM_NM  AS a3_value  
		,	'운전면허번호' AS a4, 	nvl(b.dirver_regno,'')	  AS a4_value  
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='강병석' 
	union 
	SELECT  2 AS seq
		,  '2' AS a0 
		,	'생년월일' AS a1, 		nvl(b.BIRTH_YMD,'') AS a1_value  
		,	'근속일자' AS a2, 		nvl(to_char(datediff(DAY,'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'직종' AS a3, 		a.JOB_TYPE AS a3_value  
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'건강보험취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='강병석' 
	union 
	SELECT  1 AS seq
		,	'1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'고정/SP구분' AS a3, 	nvl(b.sp_gb,'') AS a3_value 
		,	'가입조합' AS a4, 		nvl(b.work_group,'') AS a4_value 
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='강병석' 
	union 
	SELECT  0 AS seq
		,	a.emp_nm AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-') AS a2_value 
		,	'노선' AS a3, 		nvl(b.route_nm,'')  AS a3_value 
		,	'성별' AS a4, 		a.sex AS a4_value 
		,	'고용보험취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='강병석'
	order by 1
 {executed in 2 msec}
2023-06-25 01:45:18.442 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@fb059105
2023-06-25 01:45:18.442 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO_empNm} 
2023-06-25 01:45:18.442 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '강병석' order by a.base_year desc,a.acc_time desc
2023-06-25 01:45:18.443 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
61. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '강병석' order by a.base_year desc,a.acc_time desc
 {executed in 1 msec}
2023-06-25 01:45:18.444 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
61. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '강병석' order by a.base_year desc,a.acc_time desc
 {executed in 0 msec}
2023-06-25 01:45:18.491 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
61. select * from TBL_FILE_INFO where company_no = '100' and file_gb = 'empImage' and file_id = '강병석'
 {executed in 0 msec}
2023-06-25 01:47:51.727 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.emp_no,a.emp_nm,nvl(b.route_nm,'-') as route_nm from    TBL_employeeInfo a left outer join TBL_DRIVERINFO b on a.company_no = b.company_no and a.emp_nm = b.emp_nm where   a.company_no = '100' and	    b.sp_gb = decode('ALL','ALL',b.sp_gb,'ALL') order by a.emp_nm
2023-06-25 01:47:51.728 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
61. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 01:47:51.730 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
61. select   a.emp_no,a.emp_nm,nvl(b.route_nm,'-') as route_nm from    TBL_employeeInfo a left outer join TBL_DRIVERINFO b on a.company_no = b.company_no and a.emp_nm = b.emp_nm where   a.company_no = '100' and	    b.sp_gb = decode('ALL','ALL',b.sp_gb,'ALL') order by a.emp_nm
 {executed in 0 msec}
2023-06-25 01:47:53.279 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@e79d3d0d
2023-06-25 01:47:53.280 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
61. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 01:47:53.283 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT  5 AS seq
		,  '5' AS a0 
		,	'현주소' AS a1, 		nvl(b.address,'') AS a1_value 
		,	'' AS a2, '' AS a2_value 
		,	'' AS a3, '' AS a3_value 
		,	'' AS a4, '' AS a4_value 
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='강근원' 
	union 
	SELECT  4 AS seq
		,  '4' AS a0 
		,	'이메일' AS a1, 		nvl(b.email,'')  AS a1_value 
		,	'호봉' AS a2, 		nvl(b.hobong,'') AS a2_value 
		,	'구분' AS a3, 		a.JOB_KIND AS a3_value 
		,	'급여계산' AS a4, 		'' AS a4_value 
		,	'국민연금취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='강근원' 
	union 
	SELECT  3 AS seq
		,  '3' AS a0 
		,	'휴대폰' AS a1, 		a.PHONE_NO  AS a1_value 
		,	'정규직구분' AS a2, 	nvl(b.enter_gb,'')  AS a2_value 
		,	'부서' AS a3, 		a.TEAM_NM  AS a3_value  
		,	'운전면허번호' AS a4, 	nvl(b.dirver_regno,'')	  AS a4_value  
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='강근원' 
	union 
	SELECT  2 AS seq
		,  '2' AS a0 
		,	'생년월일' AS a1, 		nvl(b.BIRTH_YMD,'') AS a1_value  
		,	'근속일자' AS a2, 		nvl(to_char(datediff(DAY,'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'직종' AS a3, 		a.JOB_TYPE AS a3_value  
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'건강보험취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='강근원' 
	union 
	SELECT  1 AS seq
		,	'1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'고정/SP구분' AS a3, 	nvl(b.sp_gb,'') AS a3_value 
		,	'가입조합' AS a4, 		nvl(b.work_group,'') AS a4_value 
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='강근원' 
	union 
	SELECT  0 AS seq
		,	a.emp_nm AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-') AS a2_value 
		,	'노선' AS a3, 		nvl(b.route_nm,'')  AS a3_value 
		,	'성별' AS a4, 		a.sex AS a4_value 
		,	'고용보험취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='강근원'
	order by 1
 {executed in 2 msec}
2023-06-25 01:47:53.307 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@aeacbabd
2023-06-25 01:47:53.307 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO_empNm} 
2023-06-25 01:47:53.308 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '강근원' order by a.base_year desc,a.acc_time desc
2023-06-25 01:47:53.309 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
61. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '강근원' order by a.base_year desc,a.acc_time desc
 {executed in 0 msec}
2023-06-25 01:47:53.310 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
61. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '강근원' order by a.base_year desc,a.acc_time desc
 {executed in 0 msec}
2023-06-25 01:47:53.352 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
61. select * from TBL_FILE_INFO where company_no = '100' and file_gb = 'empImage' and file_id = '강근원'
 {executed in 0 msec}
2023-06-25 01:47:57.626 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8c713736
2023-06-25 01:47:57.626 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - filterType={danagerAnal_Employee2} 
2023-06-25 01:47:57.626 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT 	b.base_ym, b.emp_nm,b.danger_km100,b.DANGER_ACT_CNT, b.DANGER_ACT,b.DANGER_LEVEL,b.DRIVING_CNT,b.DRIVING_DISTANCE,b.DRIVING_TIME FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym > TO_CHAR(DATEADD(YEAR,-3,SYSDATE()),'yyyy-MM') AND   b.emp_nm = '강근원' ORDER BY b.base_ym desc
2023-06-25 01:47:57.627 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
61. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 01:47:57.635 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
61. SELECT 	b.base_ym, b.emp_nm,b.danger_km100,b.DANGER_ACT_CNT, b.DANGER_ACT,b.DANGER_LEVEL,b.DRIVING_CNT,b.DRIVING_DISTANCE,b.DRIVING_TIME FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym > TO_CHAR(DATEADD(YEAR,-3,SYSDATE()),'yyyy-MM') AND   b.emp_nm = '강근원' ORDER BY b.base_ym desc
 {executed in 7 msec}
2023-06-25 01:47:57.636 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
61. SELECT 	b.base_ym, b.emp_nm,b.danger_km100,b.DANGER_ACT_CNT, b.DANGER_ACT,b.DANGER_LEVEL,b.DRIVING_CNT,b.DRIVING_DISTANCE,b.DRIVING_TIME FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym > TO_CHAR(DATEADD(YEAR,-3,SYSDATE()),'yyyy-MM') AND   b.emp_nm = '강근원' ORDER BY b.base_ym desc
 {executed in 1 msec}
2023-06-25 01:47:58.520 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@238ff6d9
2023-06-25 01:47:58.520 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_ANALIZE_emp} 
2023-06-25 01:47:58.520 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select  a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.BASE_YMD > TO_CHAR(DATEADD(MONTH,-1,SYSDATE()),'yyyy-MM') and		a.emp_nm = '강근원' ORDER BY a.base_ymd DESC,a.col003 desc
2023-06-25 01:47:58.521 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
61. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 01:47:58.523 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
61. select  a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.BASE_YMD > TO_CHAR(DATEADD(MONTH,-1,SYSDATE()),'yyyy-MM') and		a.emp_nm = '강근원' ORDER BY a.base_ymd DESC,a.col003 desc
 {executed in 2 msec}
2023-06-25 01:47:58.524 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
61. select  a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.BASE_YMD > TO_CHAR(DATEADD(MONTH,-1,SYSDATE()),'yyyy-MM') and		a.emp_nm = '강근원' ORDER BY a.base_ymd DESC,a.col003 desc
 {executed in 0 msec}
2023-06-25 01:47:59.305 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@73cff08d
2023-06-25 01:47:59.305 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - filterType={getDrivingRecord_year} 
2023-06-25 01:47:59.305 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : WITH wholeAvgInfo AS ( SELECT 	k.base_ym ,	round(avg(k.bms_km),2) AS wholeAvg_bms_km ,	round(avg(k.tot_min),2) AS wholeAvg_tot_min FROM ( SELECT	a.base_ym,a.WORK_DATE ,a.driver_id,	sum(a.BMS_KM) bms_km ,	sum(a.TOT_MIN) tot_min FROM	TBL_DRIVING_RECORD a where 	a.company_no = '100' and 	a.BASE_YM LIKE  '2023' || '%' GROUP BY	a.base_ym,a.WORK_DATE,a.driver_id ) k	GROUP BY k.base_ym ) SELECT 	k.base_ym , 	count(k.base_ym) as tot_day ,	round(sum(k.bms_km),2) AS bms_km , 	round(sum(k.tot_min),2) AS tot_min ,	round(avg(k.bms_km),2) AS avg_bms_km ,	round(avg(k.tot_min),2) AS avg_tot_min ,	m.wholeAvg_bms_km ,	m.wholeAvg_tot_min FROM ( SELECT	a.base_ym, a.WORK_DATE ,	sum(a.BMS_KM) bms_km ,	sum(a.TOT_MIN) tot_min FROM	TBL_DRIVING_RECORD a JOIN 	TBL_ISC_DRIVER_INFO b ON	a.company_no = b.COMPANY_NO  AND b.EMP_NM = '강근원'	AND b.DRIVER_ID = a.DRIVER_ID where 	a.company_no = '100' AND     a.BASE_YM LIKE  '2023' || '%' GROUP BY	a.base_ym,a.WORK_DATE ) k JOIN wholeAvgInfo m ON m.base_ym = k.base_ym GROUP BY k.base_ym
2023-06-25 01:47:59.306 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
61. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 01:47:59.490 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
61. WITH wholeAvgInfo AS ( SELECT 	k.base_ym ,	round(avg(k.bms_km),2) AS wholeAvg_bms_km ,	round(avg(k.tot_min),2) AS wholeAvg_tot_min FROM ( SELECT	a.base_ym,a.WORK_DATE ,a.driver_id,	sum(a.BMS_KM) bms_km ,	sum(a.TOT_MIN) tot_min FROM	TBL_DRIVING_RECORD a where 	a.company_no = '100' and 	a.BASE_YM LIKE  '2023' || '%' GROUP BY	a.base_ym,a.WORK_DATE,a.driver_id ) k	GROUP BY k.base_ym ) SELECT 	k.base_ym , 	count(k.base_ym) as tot_day ,	round(sum(k.bms_km),2) AS bms_km , 	round(sum(k.tot_min),2) AS tot_min ,	round(avg(k.bms_km),2) AS avg_bms_km ,	round(avg(k.tot_min),2) AS avg_tot_min ,	m.wholeAvg_bms_km ,	m.wholeAvg_tot_min FROM ( SELECT	a.base_ym, a.WORK_DATE ,	sum(a.BMS_KM) bms_km ,	sum(a.TOT_MIN) tot_min FROM	TBL_DRIVING_RECORD a JOIN 	TBL_ISC_DRIVER_INFO b ON	a.company_no = b.COMPANY_NO  AND b.EMP_NM = '강근원'	AND b.DRIVER_ID = a.DRIVER_ID where 	a.company_no = '100' AND     a.BASE_YM LIKE  '2023' || '%' GROUP BY	a.base_ym,a.WORK_DATE ) k JOIN wholeAvgInfo m ON m.base_ym = k.base_ym GROUP BY k.base_ym
 {executed in 184 msec}
2023-06-25 01:47:59.659 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
61. WITH wholeAvgInfo AS ( SELECT 	k.base_ym ,	round(avg(k.bms_km),2) AS wholeAvg_bms_km ,	round(avg(k.tot_min),2) AS wholeAvg_tot_min FROM ( SELECT	a.base_ym,a.WORK_DATE ,a.driver_id,	sum(a.BMS_KM) bms_km ,	sum(a.TOT_MIN) tot_min FROM	TBL_DRIVING_RECORD a where 	a.company_no = '100' and 	a.BASE_YM LIKE  '2023' || '%' GROUP BY	a.base_ym,a.WORK_DATE,a.driver_id ) k	GROUP BY k.base_ym ) SELECT 	k.base_ym , 	count(k.base_ym) as tot_day ,	round(sum(k.bms_km),2) AS bms_km , 	round(sum(k.tot_min),2) AS tot_min ,	round(avg(k.bms_km),2) AS avg_bms_km ,	round(avg(k.tot_min),2) AS avg_tot_min ,	m.wholeAvg_bms_km ,	m.wholeAvg_tot_min FROM ( SELECT	a.base_ym, a.WORK_DATE ,	sum(a.BMS_KM) bms_km ,	sum(a.TOT_MIN) tot_min FROM	TBL_DRIVING_RECORD a JOIN 	TBL_ISC_DRIVER_INFO b ON	a.company_no = b.COMPANY_NO  AND b.EMP_NM = '강근원'	AND b.DRIVER_ID = a.DRIVER_ID where 	a.company_no = '100' AND     a.BASE_YM LIKE  '2023' || '%' GROUP BY	a.base_ym,a.WORK_DATE ) k JOIN wholeAvgInfo m ON m.base_ym = k.base_ym GROUP BY k.base_ym
 {executed in 169 msec}
2023-06-25 01:47:59.691 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@fcaa69a3
2023-06-25 01:47:59.691 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - filterType={getDrivingRecord_month} 
2023-06-25 01:47:59.691 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT 	WORK_DATE ,	count(WORK_DATE) AS tot_cnt ,	round(sum(a.BMS_KM),2) bms_km ,	sum(a.TOT_MIN) tot_min FROM 	TBL_DRIVING_RECORD a JOIN TBL_ISC_DRIVER_INFO b ON b.EMP_NM  = '강근원' AND b.DRIVER_ID = a.DRIVER_ID where 	a.company_no = '100' AND   	a.BASE_YM = '2023-03' GROUP BY WORK_DATE
2023-06-25 01:48:00.164 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
61. SELECT 	WORK_DATE ,	count(WORK_DATE) AS tot_cnt ,	round(sum(a.BMS_KM),2) bms_km ,	sum(a.TOT_MIN) tot_min FROM 	TBL_DRIVING_RECORD a JOIN TBL_ISC_DRIVER_INFO b ON b.EMP_NM  = '강근원' AND b.DRIVER_ID = a.DRIVER_ID where 	a.company_no = '100' AND   	a.BASE_YM = '2023-03' GROUP BY WORK_DATE
 {executed in 472 msec}
2023-06-25 01:48:00.165 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
61. SELECT 	WORK_DATE ,	count(WORK_DATE) AS tot_cnt ,	round(sum(a.BMS_KM),2) bms_km ,	sum(a.TOT_MIN) tot_min FROM 	TBL_DRIVING_RECORD a JOIN TBL_ISC_DRIVER_INFO b ON b.EMP_NM  = '강근원' AND b.DRIVER_ID = a.DRIVER_ID where 	a.company_no = '100' AND   	a.BASE_YM = '2023-03' GROUP BY WORK_DATE
 {executed in 1 msec}
2023-06-25 01:48:00.198 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@b8fc5f9
2023-06-25 01:48:00.198 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - filterType={getDrivingRecord_day} 
2023-06-25 01:48:00.198 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT 	ROWNUM as no, a.CAR_REGNO ,substring(a.START_TIME,12) as START_TIME,substring(a.END_TIME,12) as END_TIME ,round(a.BMS_KM,2) as bms_km ,a.TOT_MIN FROM 	TBL_DRIVING_RECORD a JOIN TBL_ISC_DRIVER_INFO b ON b.EMP_NM  = '강근원' AND b.DRIVER_ID = a.DRIVER_ID where 	a.company_no = '100' AND   	a.WORK_DATE = '2023-03-01' ORDER BY a.START_TIME
2023-06-25 01:48:00.226 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
61. SELECT 	ROWNUM as no, a.CAR_REGNO ,substring(a.START_TIME,12) as START_TIME,substring(a.END_TIME,12) as END_TIME ,round(a.BMS_KM,2) as bms_km ,a.TOT_MIN FROM 	TBL_DRIVING_RECORD a JOIN TBL_ISC_DRIVER_INFO b ON b.EMP_NM  = '강근원' AND b.DRIVER_ID = a.DRIVER_ID where 	a.company_no = '100' AND   	a.WORK_DATE = '2023-03-01' ORDER BY a.START_TIME
 {executed in 28 msec}
2023-06-25 01:48:00.247 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
61. SELECT 	ROWNUM as no, a.CAR_REGNO ,substring(a.START_TIME,12) as START_TIME,substring(a.END_TIME,12) as END_TIME ,round(a.BMS_KM,2) as bms_km ,a.TOT_MIN FROM 	TBL_DRIVING_RECORD a JOIN TBL_ISC_DRIVER_INFO b ON b.EMP_NM  = '강근원' AND b.DRIVER_ID = a.DRIVER_ID where 	a.company_no = '100' AND   	a.WORK_DATE = '2023-03-01' ORDER BY a.START_TIME
 {executed in 21 msec}
2023-06-25 01:48:07.360 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8a0cd256
2023-06-25 01:48:07.360 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO_empNm} 
2023-06-25 01:48:07.360 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '강근원' order by a.base_year desc,a.acc_time desc
2023-06-25 01:48:07.361 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
61. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 01:48:07.362 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
61. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '강근원' order by a.base_year desc,a.acc_time desc
 {executed in 1 msec}
2023-06-25 01:48:07.363 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
61. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '강근원' order by a.base_year desc,a.acc_time desc
 {executed in 0 msec}
2023-06-25 01:48:09.404 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@67d14ecf
2023-06-25 01:48:09.404 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - filterType={danagerAnal_Employee2} 
2023-06-25 01:48:09.405 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT 	b.base_ym, b.emp_nm,b.danger_km100,b.DANGER_ACT_CNT, b.DANGER_ACT,b.DANGER_LEVEL,b.DRIVING_CNT,b.DRIVING_DISTANCE,b.DRIVING_TIME FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym > TO_CHAR(DATEADD(YEAR,-3,SYSDATE()),'yyyy-MM') AND   b.emp_nm = '강근원' ORDER BY b.base_ym desc
2023-06-25 01:48:09.406 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
61. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 01:48:09.413 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
61. SELECT 	b.base_ym, b.emp_nm,b.danger_km100,b.DANGER_ACT_CNT, b.DANGER_ACT,b.DANGER_LEVEL,b.DRIVING_CNT,b.DRIVING_DISTANCE,b.DRIVING_TIME FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym > TO_CHAR(DATEADD(YEAR,-3,SYSDATE()),'yyyy-MM') AND   b.emp_nm = '강근원' ORDER BY b.base_ym desc
 {executed in 7 msec}
2023-06-25 01:48:09.415 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
61. SELECT 	b.base_ym, b.emp_nm,b.danger_km100,b.DANGER_ACT_CNT, b.DANGER_ACT,b.DANGER_LEVEL,b.DRIVING_CNT,b.DRIVING_DISTANCE,b.DRIVING_TIME FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym > TO_CHAR(DATEADD(YEAR,-3,SYSDATE()),'yyyy-MM') AND   b.emp_nm = '강근원' ORDER BY b.base_ym desc
 {executed in 2 msec}
2023-06-25 01:48:10.617 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@fef00e72
2023-06-25 01:48:10.617 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_ANALIZE_emp} 
2023-06-25 01:48:10.618 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select  a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.BASE_YMD > TO_CHAR(DATEADD(MONTH,-1,SYSDATE()),'yyyy-MM') and		a.emp_nm = '강근원' ORDER BY a.base_ymd DESC,a.col003 desc
2023-06-25 01:48:10.619 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
61. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 01:48:10.619 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
61. select  a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.BASE_YMD > TO_CHAR(DATEADD(MONTH,-1,SYSDATE()),'yyyy-MM') and		a.emp_nm = '강근원' ORDER BY a.base_ymd DESC,a.col003 desc
 {executed in 0 msec}
2023-06-25 01:48:10.620 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
61. select  a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.BASE_YMD > TO_CHAR(DATEADD(MONTH,-1,SYSDATE()),'yyyy-MM') and		a.emp_nm = '강근원' ORDER BY a.base_ymd DESC,a.col003 desc
 {executed in 1 msec}
2023-06-25 01:48:11.162 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@7cfe2d2
2023-06-25 01:48:11.162 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - filterType={getDrivingRecord_year} 
2023-06-25 01:48:11.163 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : WITH wholeAvgInfo AS ( SELECT 	k.base_ym ,	round(avg(k.bms_km),2) AS wholeAvg_bms_km ,	round(avg(k.tot_min),2) AS wholeAvg_tot_min FROM ( SELECT	a.base_ym,a.WORK_DATE ,a.driver_id,	sum(a.BMS_KM) bms_km ,	sum(a.TOT_MIN) tot_min FROM	TBL_DRIVING_RECORD a where 	a.company_no = '100' and 	a.BASE_YM LIKE  '2023' || '%' GROUP BY	a.base_ym,a.WORK_DATE,a.driver_id ) k	GROUP BY k.base_ym ) SELECT 	k.base_ym , 	count(k.base_ym) as tot_day ,	round(sum(k.bms_km),2) AS bms_km , 	round(sum(k.tot_min),2) AS tot_min ,	round(avg(k.bms_km),2) AS avg_bms_km ,	round(avg(k.tot_min),2) AS avg_tot_min ,	m.wholeAvg_bms_km ,	m.wholeAvg_tot_min FROM ( SELECT	a.base_ym, a.WORK_DATE ,	sum(a.BMS_KM) bms_km ,	sum(a.TOT_MIN) tot_min FROM	TBL_DRIVING_RECORD a JOIN 	TBL_ISC_DRIVER_INFO b ON	a.company_no = b.COMPANY_NO  AND b.EMP_NM = '강근원'	AND b.DRIVER_ID = a.DRIVER_ID where 	a.company_no = '100' AND     a.BASE_YM LIKE  '2023' || '%' GROUP BY	a.base_ym,a.WORK_DATE ) k JOIN wholeAvgInfo m ON m.base_ym = k.base_ym GROUP BY k.base_ym
2023-06-25 01:48:11.164 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
61. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 01:48:11.313 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
61. WITH wholeAvgInfo AS ( SELECT 	k.base_ym ,	round(avg(k.bms_km),2) AS wholeAvg_bms_km ,	round(avg(k.tot_min),2) AS wholeAvg_tot_min FROM ( SELECT	a.base_ym,a.WORK_DATE ,a.driver_id,	sum(a.BMS_KM) bms_km ,	sum(a.TOT_MIN) tot_min FROM	TBL_DRIVING_RECORD a where 	a.company_no = '100' and 	a.BASE_YM LIKE  '2023' || '%' GROUP BY	a.base_ym,a.WORK_DATE,a.driver_id ) k	GROUP BY k.base_ym ) SELECT 	k.base_ym , 	count(k.base_ym) as tot_day ,	round(sum(k.bms_km),2) AS bms_km , 	round(sum(k.tot_min),2) AS tot_min ,	round(avg(k.bms_km),2) AS avg_bms_km ,	round(avg(k.tot_min),2) AS avg_tot_min ,	m.wholeAvg_bms_km ,	m.wholeAvg_tot_min FROM ( SELECT	a.base_ym, a.WORK_DATE ,	sum(a.BMS_KM) bms_km ,	sum(a.TOT_MIN) tot_min FROM	TBL_DRIVING_RECORD a JOIN 	TBL_ISC_DRIVER_INFO b ON	a.company_no = b.COMPANY_NO  AND b.EMP_NM = '강근원'	AND b.DRIVER_ID = a.DRIVER_ID where 	a.company_no = '100' AND     a.BASE_YM LIKE  '2023' || '%' GROUP BY	a.base_ym,a.WORK_DATE ) k JOIN wholeAvgInfo m ON m.base_ym = k.base_ym GROUP BY k.base_ym
 {executed in 149 msec}
2023-06-25 01:48:11.437 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
61. WITH wholeAvgInfo AS ( SELECT 	k.base_ym ,	round(avg(k.bms_km),2) AS wholeAvg_bms_km ,	round(avg(k.tot_min),2) AS wholeAvg_tot_min FROM ( SELECT	a.base_ym,a.WORK_DATE ,a.driver_id,	sum(a.BMS_KM) bms_km ,	sum(a.TOT_MIN) tot_min FROM	TBL_DRIVING_RECORD a where 	a.company_no = '100' and 	a.BASE_YM LIKE  '2023' || '%' GROUP BY	a.base_ym,a.WORK_DATE,a.driver_id ) k	GROUP BY k.base_ym ) SELECT 	k.base_ym , 	count(k.base_ym) as tot_day ,	round(sum(k.bms_km),2) AS bms_km , 	round(sum(k.tot_min),2) AS tot_min ,	round(avg(k.bms_km),2) AS avg_bms_km ,	round(avg(k.tot_min),2) AS avg_tot_min ,	m.wholeAvg_bms_km ,	m.wholeAvg_tot_min FROM ( SELECT	a.base_ym, a.WORK_DATE ,	sum(a.BMS_KM) bms_km ,	sum(a.TOT_MIN) tot_min FROM	TBL_DRIVING_RECORD a JOIN 	TBL_ISC_DRIVER_INFO b ON	a.company_no = b.COMPANY_NO  AND b.EMP_NM = '강근원'	AND b.DRIVER_ID = a.DRIVER_ID where 	a.company_no = '100' AND     a.BASE_YM LIKE  '2023' || '%' GROUP BY	a.base_ym,a.WORK_DATE ) k JOIN wholeAvgInfo m ON m.base_ym = k.base_ym GROUP BY k.base_ym
 {executed in 123 msec}
2023-06-25 01:48:11.475 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@6b7bdc45
2023-06-25 01:48:11.475 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - filterType={getDrivingRecord_month} 
2023-06-25 01:48:11.475 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT 	WORK_DATE ,	count(WORK_DATE) AS tot_cnt ,	round(sum(a.BMS_KM),2) bms_km ,	sum(a.TOT_MIN) tot_min FROM 	TBL_DRIVING_RECORD a JOIN TBL_ISC_DRIVER_INFO b ON b.EMP_NM  = '강근원' AND b.DRIVER_ID = a.DRIVER_ID where 	a.company_no = '100' AND   	a.BASE_YM = '2023-03' GROUP BY WORK_DATE
2023-06-25 01:48:11.937 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
61. SELECT 	WORK_DATE ,	count(WORK_DATE) AS tot_cnt ,	round(sum(a.BMS_KM),2) bms_km ,	sum(a.TOT_MIN) tot_min FROM 	TBL_DRIVING_RECORD a JOIN TBL_ISC_DRIVER_INFO b ON b.EMP_NM  = '강근원' AND b.DRIVER_ID = a.DRIVER_ID where 	a.company_no = '100' AND   	a.BASE_YM = '2023-03' GROUP BY WORK_DATE
 {executed in 460 msec}
2023-06-25 01:48:11.938 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
61. SELECT 	WORK_DATE ,	count(WORK_DATE) AS tot_cnt ,	round(sum(a.BMS_KM),2) bms_km ,	sum(a.TOT_MIN) tot_min FROM 	TBL_DRIVING_RECORD a JOIN TBL_ISC_DRIVER_INFO b ON b.EMP_NM  = '강근원' AND b.DRIVER_ID = a.DRIVER_ID where 	a.company_no = '100' AND   	a.BASE_YM = '2023-03' GROUP BY WORK_DATE
 {executed in 1 msec}
2023-06-25 01:48:11.975 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@b8fc5f9
2023-06-25 01:48:11.975 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - filterType={getDrivingRecord_day} 
2023-06-25 01:48:11.975 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT 	ROWNUM as no, a.CAR_REGNO ,substring(a.START_TIME,12) as START_TIME,substring(a.END_TIME,12) as END_TIME ,round(a.BMS_KM,2) as bms_km ,a.TOT_MIN FROM 	TBL_DRIVING_RECORD a JOIN TBL_ISC_DRIVER_INFO b ON b.EMP_NM  = '강근원' AND b.DRIVER_ID = a.DRIVER_ID where 	a.company_no = '100' AND   	a.WORK_DATE = '2023-03-01' ORDER BY a.START_TIME
2023-06-25 01:48:12.010 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
61. SELECT 	ROWNUM as no, a.CAR_REGNO ,substring(a.START_TIME,12) as START_TIME,substring(a.END_TIME,12) as END_TIME ,round(a.BMS_KM,2) as bms_km ,a.TOT_MIN FROM 	TBL_DRIVING_RECORD a JOIN TBL_ISC_DRIVER_INFO b ON b.EMP_NM  = '강근원' AND b.DRIVER_ID = a.DRIVER_ID where 	a.company_no = '100' AND   	a.WORK_DATE = '2023-03-01' ORDER BY a.START_TIME
 {executed in 35 msec}
2023-06-25 01:48:12.030 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
61. SELECT 	ROWNUM as no, a.CAR_REGNO ,substring(a.START_TIME,12) as START_TIME,substring(a.END_TIME,12) as END_TIME ,round(a.BMS_KM,2) as bms_km ,a.TOT_MIN FROM 	TBL_DRIVING_RECORD a JOIN TBL_ISC_DRIVER_INFO b ON b.EMP_NM  = '강근원' AND b.DRIVER_ID = a.DRIVER_ID where 	a.company_no = '100' AND   	a.WORK_DATE = '2023-03-01' ORDER BY a.START_TIME
 {executed in 20 msec}
2023-06-25 01:48:12.075 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8a0cd256
2023-06-25 01:48:12.075 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO_empNm} 
2023-06-25 01:48:12.075 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '강근원' order by a.base_year desc,a.acc_time desc
2023-06-25 01:48:12.076 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
61. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '강근원' order by a.base_year desc,a.acc_time desc
 {executed in 0 msec}
2023-06-25 01:48:12.076 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
61. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '강근원' order by a.base_year desc,a.acc_time desc
 {executed in 0 msec}
2023-06-25 01:49:35.632 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.emp_no,a.emp_nm,nvl(b.route_nm,'-') as route_nm from    TBL_employeeInfo a left outer join TBL_DRIVERINFO b on a.company_no = b.company_no and a.emp_nm = b.emp_nm where   a.company_no = '100' and	    b.sp_gb = decode('ALL','ALL',b.sp_gb,'ALL') order by a.emp_nm
2023-06-25 01:49:35.633 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
67. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 01:49:35.650 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
67. select   a.emp_no,a.emp_nm,nvl(b.route_nm,'-') as route_nm from    TBL_employeeInfo a left outer join TBL_DRIVERINFO b on a.company_no = b.company_no and a.emp_nm = b.emp_nm where   a.company_no = '100' and	    b.sp_gb = decode('ALL','ALL',b.sp_gb,'ALL') order by a.emp_nm
 {executed in 17 msec}
2023-06-25 01:49:36.501 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@9887a8b
2023-06-25 01:49:36.502 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
67. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 01:49:36.504 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
67. SELECT  5 AS seq
		,  '5' AS a0 
		,	'현주소' AS a1, 		nvl(b.address,'') AS a1_value 
		,	'' AS a2, '' AS a2_value 
		,	'' AS a3, '' AS a3_value 
		,	'' AS a4, '' AS a4_value 
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김경배' 
	union 
	SELECT  4 AS seq
		,  '4' AS a0 
		,	'이메일' AS a1, 		nvl(b.email,'')  AS a1_value 
		,	'호봉' AS a2, 		nvl(b.hobong,'') AS a2_value 
		,	'구분' AS a3, 		a.JOB_KIND AS a3_value 
		,	'급여계산' AS a4, 		'' AS a4_value 
		,	'국민연금취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김경배' 
	union 
	SELECT  3 AS seq
		,  '3' AS a0 
		,	'휴대폰' AS a1, 		a.PHONE_NO  AS a1_value 
		,	'정규직구분' AS a2, 	nvl(b.enter_gb,'')  AS a2_value 
		,	'부서' AS a3, 		a.TEAM_NM  AS a3_value  
		,	'운전면허번호' AS a4, 	nvl(b.dirver_regno,'')	  AS a4_value  
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김경배' 
	union 
	SELECT  2 AS seq
		,  '2' AS a0 
		,	'생년월일' AS a1, 		nvl(b.BIRTH_YMD,'') AS a1_value  
		,	'근속일자' AS a2, 		nvl(to_char(datediff(DAY,'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'직종' AS a3, 		a.JOB_TYPE AS a3_value  
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'건강보험취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김경배' 
	union 
	SELECT  1 AS seq
		,	'1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'고정/SP구분' AS a3, 	nvl(b.sp_gb,'') AS a3_value 
		,	'가입조합' AS a4, 		nvl(b.work_group,'') AS a4_value 
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김경배' 
	union 
	SELECT  0 AS seq
		,	a.emp_nm AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-') AS a2_value 
		,	'노선' AS a3, 		nvl(b.route_nm,'')  AS a3_value 
		,	'성별' AS a4, 		a.sex AS a4_value 
		,	'고용보험취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김경배'
	order by 1
 {executed in 1 msec}
2023-06-25 01:49:36.530 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@d097f83b
2023-06-25 01:49:36.530 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO_empNm} 
2023-06-25 01:49:36.530 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '김경배' order by a.base_year desc,a.acc_time desc
2023-06-25 01:49:36.532 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
67. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '김경배' order by a.base_year desc,a.acc_time desc
 {executed in 1 msec}
2023-06-25 01:49:36.533 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
67. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '김경배' order by a.base_year desc,a.acc_time desc
 {executed in 1 msec}
2023-06-25 01:49:36.571 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
67. select * from TBL_FILE_INFO where company_no = '100' and file_gb = 'empImage' and file_id = '김경배'
 {executed in 0 msec}
2023-06-25 01:50:24.165 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.emp_no,a.emp_nm,nvl(b.route_nm,'-') as route_nm from    TBL_employeeInfo a left outer join TBL_DRIVERINFO b on a.company_no = b.company_no and a.emp_nm = b.emp_nm where   a.company_no = '100' and	    b.sp_gb = decode('ALL','ALL',b.sp_gb,'ALL') order by a.emp_nm
2023-06-25 01:50:24.166 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 01:50:24.190 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. select   a.emp_no,a.emp_nm,nvl(b.route_nm,'-') as route_nm from    TBL_employeeInfo a left outer join TBL_DRIVERINFO b on a.company_no = b.company_no and a.emp_nm = b.emp_nm where   a.company_no = '100' and	    b.sp_gb = decode('ALL','ALL',b.sp_gb,'ALL') order by a.emp_nm
 {executed in 24 msec}
2023-06-25 01:50:25.841 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@9887a8b
2023-06-25 01:50:25.842 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 01:50:25.845 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT  5 AS seq
		,  '5' AS a0 
		,	'현주소' AS a1, 		nvl(b.address,'') AS a1_value 
		,	'' AS a2, '' AS a2_value 
		,	'' AS a3, '' AS a3_value 
		,	'' AS a4, '' AS a4_value 
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김경배' 
	union 
	SELECT  4 AS seq
		,  '4' AS a0 
		,	'이메일' AS a1, 		nvl(b.email,'')  AS a1_value 
		,	'호봉' AS a2, 		nvl(b.hobong,'') AS a2_value 
		,	'구분' AS a3, 		a.JOB_KIND AS a3_value 
		,	'급여계산' AS a4, 		'' AS a4_value 
		,	'국민연금취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김경배' 
	union 
	SELECT  3 AS seq
		,  '3' AS a0 
		,	'휴대폰' AS a1, 		a.PHONE_NO  AS a1_value 
		,	'정규직구분' AS a2, 	nvl(b.enter_gb,'')  AS a2_value 
		,	'부서' AS a3, 		a.TEAM_NM  AS a3_value  
		,	'운전면허번호' AS a4, 	nvl(b.dirver_regno,'')	  AS a4_value  
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김경배' 
	union 
	SELECT  2 AS seq
		,  '2' AS a0 
		,	'생년월일' AS a1, 		nvl(b.BIRTH_YMD,'') AS a1_value  
		,	'근속일자' AS a2, 		nvl(to_char(datediff(DAY,'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'직종' AS a3, 		a.JOB_TYPE AS a3_value  
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'건강보험취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김경배' 
	union 
	SELECT  1 AS seq
		,	'1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'고정/SP구분' AS a3, 	nvl(b.sp_gb,'') AS a3_value 
		,	'가입조합' AS a4, 		nvl(b.work_group,'') AS a4_value 
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김경배' 
	union 
	SELECT  0 AS seq
		,	a.emp_nm AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-') AS a2_value 
		,	'노선' AS a3, 		nvl(b.route_nm,'')  AS a3_value 
		,	'성별' AS a4, 		a.sex AS a4_value 
		,	'고용보험취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김경배'
	order by 1
 {executed in 2 msec}
2023-06-25 01:50:25.853 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
71. select * from TBL_FILE_INFO where company_no = '100' and file_gb = 'empImage' and file_id = '김경배'
 {executed in 0 msec}
2023-06-25 01:50:25.872 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@d097f83b
2023-06-25 01:50:25.872 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO_empNm} 
2023-06-25 01:50:25.872 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '김경배' order by a.base_year desc,a.acc_time desc
2023-06-25 01:50:25.874 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '김경배' order by a.base_year desc,a.acc_time desc
 {executed in 2 msec}
2023-06-25 01:50:25.874 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '김경배' order by a.base_year desc,a.acc_time desc
 {executed in 0 msec}
2023-06-25 01:50:52.300 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.emp_no,a.emp_nm,nvl(b.route_nm,'-') as route_nm from    TBL_employeeInfo a left outer join TBL_DRIVERINFO b on a.company_no = b.company_no and a.emp_nm = b.emp_nm where   a.company_no = '100' and	    b.sp_gb = decode('ALL','ALL',b.sp_gb,'ALL') order by a.emp_nm
2023-06-25 01:50:52.301 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 01:50:52.302 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. select   a.emp_no,a.emp_nm,nvl(b.route_nm,'-') as route_nm from    TBL_employeeInfo a left outer join TBL_DRIVERINFO b on a.company_no = b.company_no and a.emp_nm = b.emp_nm where   a.company_no = '100' and	    b.sp_gb = decode('ALL','ALL',b.sp_gb,'ALL') order by a.emp_nm
 {executed in 1 msec}
2023-06-25 01:50:53.224 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@40256eb1
2023-06-25 01:50:53.225 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 01:50:53.228 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT  5 AS seq
		,  '5' AS a0 
		,	'현주소' AS a1, 		nvl(b.address,'') AS a1_value 
		,	'' AS a2, '' AS a2_value 
		,	'' AS a3, '' AS a3_value 
		,	'' AS a4, '' AS a4_value 
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='권태종' 
	union 
	SELECT  4 AS seq
		,  '4' AS a0 
		,	'이메일' AS a1, 		nvl(b.email,'')  AS a1_value 
		,	'호봉' AS a2, 		nvl(b.hobong,'') AS a2_value 
		,	'구분' AS a3, 		a.JOB_KIND AS a3_value 
		,	'급여계산' AS a4, 		'' AS a4_value 
		,	'국민연금취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='권태종' 
	union 
	SELECT  3 AS seq
		,  '3' AS a0 
		,	'휴대폰' AS a1, 		a.PHONE_NO  AS a1_value 
		,	'정규직구분' AS a2, 	nvl(b.enter_gb,'')  AS a2_value 
		,	'부서' AS a3, 		a.TEAM_NM  AS a3_value  
		,	'운전면허번호' AS a4, 	nvl(b.dirver_regno,'')	  AS a4_value  
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='권태종' 
	union 
	SELECT  2 AS seq
		,  '2' AS a0 
		,	'생년월일' AS a1, 		nvl(b.BIRTH_YMD,'') AS a1_value  
		,	'근속일자' AS a2, 		nvl(to_char(datediff(DAY,'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'직종' AS a3, 		a.JOB_TYPE AS a3_value  
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'건강보험취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='권태종' 
	union 
	SELECT  1 AS seq
		,	'1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'고정/SP구분' AS a3, 	nvl(b.sp_gb,'') AS a3_value 
		,	'가입조합' AS a4, 		nvl(b.work_group,'') AS a4_value 
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='권태종' 
	union 
	SELECT  0 AS seq
		,	a.emp_nm AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-') AS a2_value 
		,	'노선' AS a3, 		nvl(b.route_nm,'')  AS a3_value 
		,	'성별' AS a4, 		a.sex AS a4_value 
		,	'고용보험취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='권태종'
	order by 1
 {executed in 1 msec}
2023-06-25 01:50:53.252 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@734ec61
2023-06-25 01:50:53.252 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO_empNm} 
2023-06-25 01:50:53.252 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '권태종' order by a.base_year desc,a.acc_time desc
2023-06-25 01:50:53.256 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '권태종' order by a.base_year desc,a.acc_time desc
 {executed in 3 msec}
2023-06-25 01:50:53.257 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '권태종' order by a.base_year desc,a.acc_time desc
 {executed in 0 msec}
2023-06-25 01:50:53.308 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
71. select * from TBL_FILE_INFO where company_no = '100' and file_gb = 'empImage' and file_id = '권태종'
 {executed in 1 msec}
2023-06-25 01:52:44.937 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.emp_no,a.emp_nm,nvl(b.route_nm,'-') as route_nm from    TBL_employeeInfo a left outer join TBL_DRIVERINFO b on a.company_no = b.company_no and a.emp_nm = b.emp_nm where   a.company_no = '100' and	    b.sp_gb = decode('ALL','ALL',b.sp_gb,'ALL') order by a.emp_nm
2023-06-25 01:52:44.938 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 01:52:44.939 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. select   a.emp_no,a.emp_nm,nvl(b.route_nm,'-') as route_nm from    TBL_employeeInfo a left outer join TBL_DRIVERINFO b on a.company_no = b.company_no and a.emp_nm = b.emp_nm where   a.company_no = '100' and	    b.sp_gb = decode('ALL','ALL',b.sp_gb,'ALL') order by a.emp_nm
 {executed in 1 msec}
2023-06-25 01:52:46.240 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@e79d3d0d
2023-06-25 01:52:46.242 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 01:52:46.243 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT  5 AS seq
		,  '5' AS a0 
		,	'현주소' AS a1, 		nvl(b.address,'') AS a1_value 
		,	'' AS a2, '' AS a2_value 
		,	'' AS a3, '' AS a3_value 
		,	'' AS a4, '' AS a4_value 
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='강근원' 
	union 
	SELECT  4 AS seq
		,  '4' AS a0 
		,	'이메일' AS a1, 		nvl(b.email,'')  AS a1_value 
		,	'호봉' AS a2, 		nvl(b.hobong,'') AS a2_value 
		,	'구분' AS a3, 		a.JOB_KIND AS a3_value 
		,	'급여계산' AS a4, 		'' AS a4_value 
		,	'국민연금취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='강근원' 
	union 
	SELECT  3 AS seq
		,  '3' AS a0 
		,	'휴대폰' AS a1, 		a.PHONE_NO  AS a1_value 
		,	'정규직구분' AS a2, 	nvl(b.enter_gb,'')  AS a2_value 
		,	'부서' AS a3, 		a.TEAM_NM  AS a3_value  
		,	'운전면허번호' AS a4, 	nvl(b.dirver_regno,'')	  AS a4_value  
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='강근원' 
	union 
	SELECT  2 AS seq
		,  '2' AS a0 
		,	'생년월일' AS a1, 		nvl(b.BIRTH_YMD,'') AS a1_value  
		,	'근속일자' AS a2, 		nvl(to_char(datediff(DAY,'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'직종' AS a3, 		a.JOB_TYPE AS a3_value  
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'건강보험취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='강근원' 
	union 
	SELECT  1 AS seq
		,	'1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'고정/SP구분' AS a3, 	nvl(b.sp_gb,'') AS a3_value 
		,	'가입조합' AS a4, 		nvl(b.work_group,'') AS a4_value 
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='강근원' 
	union 
	SELECT  0 AS seq
		,	a.emp_nm AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-') AS a2_value 
		,	'노선' AS a3, 		nvl(b.route_nm,'')  AS a3_value 
		,	'성별' AS a4, 		a.sex AS a4_value 
		,	'고용보험취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='강근원'
	order by 1
 {executed in 1 msec}
2023-06-25 01:52:46.268 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@aeacbabd
2023-06-25 01:52:46.268 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO_empNm} 
2023-06-25 01:52:46.268 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '강근원' order by a.base_year desc,a.acc_time desc
2023-06-25 01:52:46.269 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '강근원' order by a.base_year desc,a.acc_time desc
 {executed in 1 msec}
2023-06-25 01:52:46.270 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '강근원' order by a.base_year desc,a.acc_time desc
 {executed in 1 msec}
2023-06-25 01:52:46.309 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
71. select * from TBL_FILE_INFO where company_no = '100' and file_gb = 'empImage' and file_id = '강근원'
 {executed in 0 msec}
2023-06-25 01:52:52.640 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@d0f1a0d6
2023-06-25 01:52:52.641 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 01:52:52.644 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT  5 AS seq
		,  '5' AS a0 
		,	'현주소' AS a1, 		nvl(b.address,'') AS a1_value 
		,	'' AS a2, '' AS a2_value 
		,	'' AS a3, '' AS a3_value 
		,	'' AS a4, '' AS a4_value 
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='권오현' 
	union 
	SELECT  4 AS seq
		,  '4' AS a0 
		,	'이메일' AS a1, 		nvl(b.email,'')  AS a1_value 
		,	'호봉' AS a2, 		nvl(b.hobong,'') AS a2_value 
		,	'구분' AS a3, 		a.JOB_KIND AS a3_value 
		,	'급여계산' AS a4, 		'' AS a4_value 
		,	'국민연금취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='권오현' 
	union 
	SELECT  3 AS seq
		,  '3' AS a0 
		,	'휴대폰' AS a1, 		a.PHONE_NO  AS a1_value 
		,	'정규직구분' AS a2, 	nvl(b.enter_gb,'')  AS a2_value 
		,	'부서' AS a3, 		a.TEAM_NM  AS a3_value  
		,	'운전면허번호' AS a4, 	nvl(b.dirver_regno,'')	  AS a4_value  
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='권오현' 
	union 
	SELECT  2 AS seq
		,  '2' AS a0 
		,	'생년월일' AS a1, 		nvl(b.BIRTH_YMD,'') AS a1_value  
		,	'근속일자' AS a2, 		nvl(to_char(datediff(DAY,'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'직종' AS a3, 		a.JOB_TYPE AS a3_value  
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'건강보험취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='권오현' 
	union 
	SELECT  1 AS seq
		,	'1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'고정/SP구분' AS a3, 	nvl(b.sp_gb,'') AS a3_value 
		,	'가입조합' AS a4, 		nvl(b.work_group,'') AS a4_value 
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='권오현' 
	union 
	SELECT  0 AS seq
		,	a.emp_nm AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-') AS a2_value 
		,	'노선' AS a3, 		nvl(b.route_nm,'')  AS a3_value 
		,	'성별' AS a4, 		a.sex AS a4_value 
		,	'고용보험취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='권오현'
	order by 1
 {executed in 1 msec}
2023-06-25 01:52:52.668 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@98011e86
2023-06-25 01:52:52.668 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO_empNm} 
2023-06-25 01:52:52.668 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '권오현' order by a.base_year desc,a.acc_time desc
2023-06-25 01:52:52.669 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '권오현' order by a.base_year desc,a.acc_time desc
 {executed in 1 msec}
2023-06-25 01:52:52.670 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '권오현' order by a.base_year desc,a.acc_time desc
 {executed in 0 msec}
2023-06-25 01:52:52.716 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
71. select * from TBL_FILE_INFO where company_no = '100' and file_gb = 'empImage' and file_id = '권오현'
 {executed in 0 msec}
2023-06-25 01:52:53.357 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@40256eb1
2023-06-25 01:52:53.358 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 01:52:53.359 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT  5 AS seq
		,  '5' AS a0 
		,	'현주소' AS a1, 		nvl(b.address,'') AS a1_value 
		,	'' AS a2, '' AS a2_value 
		,	'' AS a3, '' AS a3_value 
		,	'' AS a4, '' AS a4_value 
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='권태종' 
	union 
	SELECT  4 AS seq
		,  '4' AS a0 
		,	'이메일' AS a1, 		nvl(b.email,'')  AS a1_value 
		,	'호봉' AS a2, 		nvl(b.hobong,'') AS a2_value 
		,	'구분' AS a3, 		a.JOB_KIND AS a3_value 
		,	'급여계산' AS a4, 		'' AS a4_value 
		,	'국민연금취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='권태종' 
	union 
	SELECT  3 AS seq
		,  '3' AS a0 
		,	'휴대폰' AS a1, 		a.PHONE_NO  AS a1_value 
		,	'정규직구분' AS a2, 	nvl(b.enter_gb,'')  AS a2_value 
		,	'부서' AS a3, 		a.TEAM_NM  AS a3_value  
		,	'운전면허번호' AS a4, 	nvl(b.dirver_regno,'')	  AS a4_value  
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='권태종' 
	union 
	SELECT  2 AS seq
		,  '2' AS a0 
		,	'생년월일' AS a1, 		nvl(b.BIRTH_YMD,'') AS a1_value  
		,	'근속일자' AS a2, 		nvl(to_char(datediff(DAY,'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'직종' AS a3, 		a.JOB_TYPE AS a3_value  
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'건강보험취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='권태종' 
	union 
	SELECT  1 AS seq
		,	'1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'고정/SP구분' AS a3, 	nvl(b.sp_gb,'') AS a3_value 
		,	'가입조합' AS a4, 		nvl(b.work_group,'') AS a4_value 
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='권태종' 
	union 
	SELECT  0 AS seq
		,	a.emp_nm AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-') AS a2_value 
		,	'노선' AS a3, 		nvl(b.route_nm,'')  AS a3_value 
		,	'성별' AS a4, 		a.sex AS a4_value 
		,	'고용보험취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='권태종'
	order by 1
 {executed in 1 msec}
2023-06-25 01:52:53.381 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@734ec61
2023-06-25 01:52:53.381 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO_empNm} 
2023-06-25 01:52:53.381 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '권태종' order by a.base_year desc,a.acc_time desc
2023-06-25 01:52:53.382 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '권태종' order by a.base_year desc,a.acc_time desc
 {executed in 1 msec}
2023-06-25 01:52:53.383 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '권태종' order by a.base_year desc,a.acc_time desc
 {executed in 1 msec}
2023-06-25 01:52:53.429 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
71. select * from TBL_FILE_INFO where company_no = '100' and file_gb = 'empImage' and file_id = '권태종'
 {executed in 0 msec}
2023-06-25 01:52:54.373 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@6e34dd56
2023-06-25 01:52:54.374 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 01:52:54.377 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT  5 AS seq
		,  '5' AS a0 
		,	'현주소' AS a1, 		nvl(b.address,'') AS a1_value 
		,	'' AS a2, '' AS a2_value 
		,	'' AS a3, '' AS a3_value 
		,	'' AS a4, '' AS a4_value 
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김권호' 
	union 
	SELECT  4 AS seq
		,  '4' AS a0 
		,	'이메일' AS a1, 		nvl(b.email,'')  AS a1_value 
		,	'호봉' AS a2, 		nvl(b.hobong,'') AS a2_value 
		,	'구분' AS a3, 		a.JOB_KIND AS a3_value 
		,	'급여계산' AS a4, 		'' AS a4_value 
		,	'국민연금취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김권호' 
	union 
	SELECT  3 AS seq
		,  '3' AS a0 
		,	'휴대폰' AS a1, 		a.PHONE_NO  AS a1_value 
		,	'정규직구분' AS a2, 	nvl(b.enter_gb,'')  AS a2_value 
		,	'부서' AS a3, 		a.TEAM_NM  AS a3_value  
		,	'운전면허번호' AS a4, 	nvl(b.dirver_regno,'')	  AS a4_value  
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김권호' 
	union 
	SELECT  2 AS seq
		,  '2' AS a0 
		,	'생년월일' AS a1, 		nvl(b.BIRTH_YMD,'') AS a1_value  
		,	'근속일자' AS a2, 		nvl(to_char(datediff(DAY,'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'직종' AS a3, 		a.JOB_TYPE AS a3_value  
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'건강보험취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김권호' 
	union 
	SELECT  1 AS seq
		,	'1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'고정/SP구분' AS a3, 	nvl(b.sp_gb,'') AS a3_value 
		,	'가입조합' AS a4, 		nvl(b.work_group,'') AS a4_value 
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김권호' 
	union 
	SELECT  0 AS seq
		,	a.emp_nm AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-') AS a2_value 
		,	'노선' AS a3, 		nvl(b.route_nm,'')  AS a3_value 
		,	'성별' AS a4, 		a.sex AS a4_value 
		,	'고용보험취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김권호'
	order by 1
 {executed in 2 msec}
2023-06-25 01:52:54.403 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@35445b06
2023-06-25 01:52:54.403 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO_empNm} 
2023-06-25 01:52:54.403 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '김권호' order by a.base_year desc,a.acc_time desc
2023-06-25 01:52:54.404 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '김권호' order by a.base_year desc,a.acc_time desc
 {executed in 1 msec}
2023-06-25 01:52:54.405 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '김권호' order by a.base_year desc,a.acc_time desc
 {executed in 1 msec}
2023-06-25 01:52:54.452 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
71. select * from TBL_FILE_INFO where company_no = '100' and file_gb = 'empImage' and file_id = '김권호'
 {executed in 0 msec}
2023-06-25 01:52:55.196 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@b7e87ecb
2023-06-25 01:52:55.197 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 01:52:55.199 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT  5 AS seq
		,  '5' AS a0 
		,	'현주소' AS a1, 		nvl(b.address,'') AS a1_value 
		,	'' AS a2, '' AS a2_value 
		,	'' AS a3, '' AS a3_value 
		,	'' AS a4, '' AS a4_value 
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김동회' 
	union 
	SELECT  4 AS seq
		,  '4' AS a0 
		,	'이메일' AS a1, 		nvl(b.email,'')  AS a1_value 
		,	'호봉' AS a2, 		nvl(b.hobong,'') AS a2_value 
		,	'구분' AS a3, 		a.JOB_KIND AS a3_value 
		,	'급여계산' AS a4, 		'' AS a4_value 
		,	'국민연금취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김동회' 
	union 
	SELECT  3 AS seq
		,  '3' AS a0 
		,	'휴대폰' AS a1, 		a.PHONE_NO  AS a1_value 
		,	'정규직구분' AS a2, 	nvl(b.enter_gb,'')  AS a2_value 
		,	'부서' AS a3, 		a.TEAM_NM  AS a3_value  
		,	'운전면허번호' AS a4, 	nvl(b.dirver_regno,'')	  AS a4_value  
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김동회' 
	union 
	SELECT  2 AS seq
		,  '2' AS a0 
		,	'생년월일' AS a1, 		nvl(b.BIRTH_YMD,'') AS a1_value  
		,	'근속일자' AS a2, 		nvl(to_char(datediff(DAY,'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'직종' AS a3, 		a.JOB_TYPE AS a3_value  
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'건강보험취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김동회' 
	union 
	SELECT  1 AS seq
		,	'1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'고정/SP구분' AS a3, 	nvl(b.sp_gb,'') AS a3_value 
		,	'가입조합' AS a4, 		nvl(b.work_group,'') AS a4_value 
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김동회' 
	union 
	SELECT  0 AS seq
		,	a.emp_nm AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-') AS a2_value 
		,	'노선' AS a3, 		nvl(b.route_nm,'')  AS a3_value 
		,	'성별' AS a4, 		a.sex AS a4_value 
		,	'고용보험취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김동회'
	order by 1
 {executed in 1 msec}
2023-06-25 01:52:55.221 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@7ef7fc7b
2023-06-25 01:52:55.221 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO_empNm} 
2023-06-25 01:52:55.221 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '김동회' order by a.base_year desc,a.acc_time desc
2023-06-25 01:52:55.224 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '김동회' order by a.base_year desc,a.acc_time desc
 {executed in 3 msec}
2023-06-25 01:52:55.225 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '김동회' order by a.base_year desc,a.acc_time desc
 {executed in 1 msec}
2023-06-25 01:52:55.274 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
71. select * from TBL_FILE_INFO where company_no = '100' and file_gb = 'empImage' and file_id = '김동회'
 {executed in 0 msec}
2023-06-25 01:52:57.770 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@816040f2
2023-06-25 01:52:57.771 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 01:52:57.773 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT  5 AS seq
		,  '5' AS a0 
		,	'현주소' AS a1, 		nvl(b.address,'') AS a1_value 
		,	'' AS a2, '' AS a2_value 
		,	'' AS a3, '' AS a3_value 
		,	'' AS a4, '' AS a4_value 
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김민규' 
	union 
	SELECT  4 AS seq
		,  '4' AS a0 
		,	'이메일' AS a1, 		nvl(b.email,'')  AS a1_value 
		,	'호봉' AS a2, 		nvl(b.hobong,'') AS a2_value 
		,	'구분' AS a3, 		a.JOB_KIND AS a3_value 
		,	'급여계산' AS a4, 		'' AS a4_value 
		,	'국민연금취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김민규' 
	union 
	SELECT  3 AS seq
		,  '3' AS a0 
		,	'휴대폰' AS a1, 		a.PHONE_NO  AS a1_value 
		,	'정규직구분' AS a2, 	nvl(b.enter_gb,'')  AS a2_value 
		,	'부서' AS a3, 		a.TEAM_NM  AS a3_value  
		,	'운전면허번호' AS a4, 	nvl(b.dirver_regno,'')	  AS a4_value  
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김민규' 
	union 
	SELECT  2 AS seq
		,  '2' AS a0 
		,	'생년월일' AS a1, 		nvl(b.BIRTH_YMD,'') AS a1_value  
		,	'근속일자' AS a2, 		nvl(to_char(datediff(DAY,'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'직종' AS a3, 		a.JOB_TYPE AS a3_value  
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'건강보험취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김민규' 
	union 
	SELECT  1 AS seq
		,	'1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'고정/SP구분' AS a3, 	nvl(b.sp_gb,'') AS a3_value 
		,	'가입조합' AS a4, 		nvl(b.work_group,'') AS a4_value 
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김민규' 
	union 
	SELECT  0 AS seq
		,	a.emp_nm AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-') AS a2_value 
		,	'노선' AS a3, 		nvl(b.route_nm,'')  AS a3_value 
		,	'성별' AS a4, 		a.sex AS a4_value 
		,	'고용보험취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김민규'
	order by 1
 {executed in 1 msec}
2023-06-25 01:52:57.799 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@486fbea2
2023-06-25 01:52:57.799 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO_empNm} 
2023-06-25 01:52:57.799 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '김민규' order by a.base_year desc,a.acc_time desc
2023-06-25 01:52:57.801 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '김민규' order by a.base_year desc,a.acc_time desc
 {executed in 1 msec}
2023-06-25 01:52:57.801 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '김민규' order by a.base_year desc,a.acc_time desc
 {executed in 0 msec}
2023-06-25 01:52:57.852 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
71. select * from TBL_FILE_INFO where company_no = '100' and file_gb = 'empImage' and file_id = '김민규'
 {executed in 0 msec}
2023-06-25 01:52:58.767 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@4a710b8e
2023-06-25 01:52:58.768 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 01:52:58.771 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT  5 AS seq
		,  '5' AS a0 
		,	'현주소' AS a1, 		nvl(b.address,'') AS a1_value 
		,	'' AS a2, '' AS a2_value 
		,	'' AS a3, '' AS a3_value 
		,	'' AS a4, '' AS a4_value 
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김승섭' 
	union 
	SELECT  4 AS seq
		,  '4' AS a0 
		,	'이메일' AS a1, 		nvl(b.email,'')  AS a1_value 
		,	'호봉' AS a2, 		nvl(b.hobong,'') AS a2_value 
		,	'구분' AS a3, 		a.JOB_KIND AS a3_value 
		,	'급여계산' AS a4, 		'' AS a4_value 
		,	'국민연금취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김승섭' 
	union 
	SELECT  3 AS seq
		,  '3' AS a0 
		,	'휴대폰' AS a1, 		a.PHONE_NO  AS a1_value 
		,	'정규직구분' AS a2, 	nvl(b.enter_gb,'')  AS a2_value 
		,	'부서' AS a3, 		a.TEAM_NM  AS a3_value  
		,	'운전면허번호' AS a4, 	nvl(b.dirver_regno,'')	  AS a4_value  
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김승섭' 
	union 
	SELECT  2 AS seq
		,  '2' AS a0 
		,	'생년월일' AS a1, 		nvl(b.BIRTH_YMD,'') AS a1_value  
		,	'근속일자' AS a2, 		nvl(to_char(datediff(DAY,'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'직종' AS a3, 		a.JOB_TYPE AS a3_value  
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'건강보험취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김승섭' 
	union 
	SELECT  1 AS seq
		,	'1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'고정/SP구분' AS a3, 	nvl(b.sp_gb,'') AS a3_value 
		,	'가입조합' AS a4, 		nvl(b.work_group,'') AS a4_value 
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김승섭' 
	union 
	SELECT  0 AS seq
		,	a.emp_nm AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-') AS a2_value 
		,	'노선' AS a3, 		nvl(b.route_nm,'')  AS a3_value 
		,	'성별' AS a4, 		a.sex AS a4_value 
		,	'고용보험취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김승섭'
	order by 1
 {executed in 1 msec}
2023-06-25 01:52:58.794 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1180893e
2023-06-25 01:52:58.794 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO_empNm} 
2023-06-25 01:52:58.794 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '김승섭' order by a.base_year desc,a.acc_time desc
2023-06-25 01:52:58.796 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '김승섭' order by a.base_year desc,a.acc_time desc
 {executed in 1 msec}
2023-06-25 01:52:58.796 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '김승섭' order by a.base_year desc,a.acc_time desc
 {executed in 0 msec}
2023-06-25 01:52:58.844 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
71. select * from TBL_FILE_INFO where company_no = '100' and file_gb = 'empImage' and file_id = '김승섭'
 {executed in 1 msec}
2023-06-25 01:52:59.654 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@3fc53c5f
2023-06-25 01:52:59.654 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 01:52:59.657 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT  5 AS seq
		,  '5' AS a0 
		,	'현주소' AS a1, 		nvl(b.address,'') AS a1_value 
		,	'' AS a2, '' AS a2_value 
		,	'' AS a3, '' AS a3_value 
		,	'' AS a4, '' AS a4_value 
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김용문' 
	union 
	SELECT  4 AS seq
		,  '4' AS a0 
		,	'이메일' AS a1, 		nvl(b.email,'')  AS a1_value 
		,	'호봉' AS a2, 		nvl(b.hobong,'') AS a2_value 
		,	'구분' AS a3, 		a.JOB_KIND AS a3_value 
		,	'급여계산' AS a4, 		'' AS a4_value 
		,	'국민연금취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김용문' 
	union 
	SELECT  3 AS seq
		,  '3' AS a0 
		,	'휴대폰' AS a1, 		a.PHONE_NO  AS a1_value 
		,	'정규직구분' AS a2, 	nvl(b.enter_gb,'')  AS a2_value 
		,	'부서' AS a3, 		a.TEAM_NM  AS a3_value  
		,	'운전면허번호' AS a4, 	nvl(b.dirver_regno,'')	  AS a4_value  
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김용문' 
	union 
	SELECT  2 AS seq
		,  '2' AS a0 
		,	'생년월일' AS a1, 		nvl(b.BIRTH_YMD,'') AS a1_value  
		,	'근속일자' AS a2, 		nvl(to_char(datediff(DAY,'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'직종' AS a3, 		a.JOB_TYPE AS a3_value  
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'건강보험취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김용문' 
	union 
	SELECT  1 AS seq
		,	'1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'고정/SP구분' AS a3, 	nvl(b.sp_gb,'') AS a3_value 
		,	'가입조합' AS a4, 		nvl(b.work_group,'') AS a4_value 
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김용문' 
	union 
	SELECT  0 AS seq
		,	a.emp_nm AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-') AS a2_value 
		,	'노선' AS a3, 		nvl(b.route_nm,'')  AS a3_value 
		,	'성별' AS a4, 		a.sex AS a4_value 
		,	'고용보험취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김용문'
	order by 1
 {executed in 1 msec}
2023-06-25 01:52:59.682 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@6d4ba0f
2023-06-25 01:52:59.682 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO_empNm} 
2023-06-25 01:52:59.682 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '김용문' order by a.base_year desc,a.acc_time desc
2023-06-25 01:52:59.683 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '김용문' order by a.base_year desc,a.acc_time desc
 {executed in 1 msec}
2023-06-25 01:52:59.684 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '김용문' order by a.base_year desc,a.acc_time desc
 {executed in 1 msec}
2023-06-25 01:52:59.737 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
71. select * from TBL_FILE_INFO where company_no = '100' and file_gb = 'empImage' and file_id = '김용문'
 {executed in 0 msec}
2023-06-25 01:53:00.963 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@21fe6a03
2023-06-25 01:53:00.964 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 01:53:00.966 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT  5 AS seq
		,  '5' AS a0 
		,	'현주소' AS a1, 		nvl(b.address,'') AS a1_value 
		,	'' AS a2, '' AS a2_value 
		,	'' AS a3, '' AS a3_value 
		,	'' AS a4, '' AS a4_value 
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김용진' 
	union 
	SELECT  4 AS seq
		,  '4' AS a0 
		,	'이메일' AS a1, 		nvl(b.email,'')  AS a1_value 
		,	'호봉' AS a2, 		nvl(b.hobong,'') AS a2_value 
		,	'구분' AS a3, 		a.JOB_KIND AS a3_value 
		,	'급여계산' AS a4, 		'' AS a4_value 
		,	'국민연금취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김용진' 
	union 
	SELECT  3 AS seq
		,  '3' AS a0 
		,	'휴대폰' AS a1, 		a.PHONE_NO  AS a1_value 
		,	'정규직구분' AS a2, 	nvl(b.enter_gb,'')  AS a2_value 
		,	'부서' AS a3, 		a.TEAM_NM  AS a3_value  
		,	'운전면허번호' AS a4, 	nvl(b.dirver_regno,'')	  AS a4_value  
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김용진' 
	union 
	SELECT  2 AS seq
		,  '2' AS a0 
		,	'생년월일' AS a1, 		nvl(b.BIRTH_YMD,'') AS a1_value  
		,	'근속일자' AS a2, 		nvl(to_char(datediff(DAY,'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'직종' AS a3, 		a.JOB_TYPE AS a3_value  
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'건강보험취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김용진' 
	union 
	SELECT  1 AS seq
		,	'1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'고정/SP구분' AS a3, 	nvl(b.sp_gb,'') AS a3_value 
		,	'가입조합' AS a4, 		nvl(b.work_group,'') AS a4_value 
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김용진' 
	union 
	SELECT  0 AS seq
		,	a.emp_nm AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-') AS a2_value 
		,	'노선' AS a3, 		nvl(b.route_nm,'')  AS a3_value 
		,	'성별' AS a4, 		a.sex AS a4_value 
		,	'고용보험취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김용진'
	order by 1
 {executed in 2 msec}
2023-06-25 01:53:00.986 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@e90de7b3
2023-06-25 01:53:00.986 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO_empNm} 
2023-06-25 01:53:00.986 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '김용진' order by a.base_year desc,a.acc_time desc
2023-06-25 01:53:00.988 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '김용진' order by a.base_year desc,a.acc_time desc
 {executed in 1 msec}
2023-06-25 01:53:00.989 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '김용진' order by a.base_year desc,a.acc_time desc
 {executed in 0 msec}
2023-06-25 01:53:01.040 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
71. select * from TBL_FILE_INFO where company_no = '100' and file_gb = 'empImage' and file_id = '김용진'
 {executed in 0 msec}
2023-06-25 01:53:02.130 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@e922491b
2023-06-25 01:53:02.131 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 01:53:02.133 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT  5 AS seq
		,  '5' AS a0 
		,	'현주소' AS a1, 		nvl(b.address,'') AS a1_value 
		,	'' AS a2, '' AS a2_value 
		,	'' AS a3, '' AS a3_value 
		,	'' AS a4, '' AS a4_value 
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김익수' 
	union 
	SELECT  4 AS seq
		,  '4' AS a0 
		,	'이메일' AS a1, 		nvl(b.email,'')  AS a1_value 
		,	'호봉' AS a2, 		nvl(b.hobong,'') AS a2_value 
		,	'구분' AS a3, 		a.JOB_KIND AS a3_value 
		,	'급여계산' AS a4, 		'' AS a4_value 
		,	'국민연금취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김익수' 
	union 
	SELECT  3 AS seq
		,  '3' AS a0 
		,	'휴대폰' AS a1, 		a.PHONE_NO  AS a1_value 
		,	'정규직구분' AS a2, 	nvl(b.enter_gb,'')  AS a2_value 
		,	'부서' AS a3, 		a.TEAM_NM  AS a3_value  
		,	'운전면허번호' AS a4, 	nvl(b.dirver_regno,'')	  AS a4_value  
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김익수' 
	union 
	SELECT  2 AS seq
		,  '2' AS a0 
		,	'생년월일' AS a1, 		nvl(b.BIRTH_YMD,'') AS a1_value  
		,	'근속일자' AS a2, 		nvl(to_char(datediff(DAY,'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'직종' AS a3, 		a.JOB_TYPE AS a3_value  
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'건강보험취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김익수' 
	union 
	SELECT  1 AS seq
		,	'1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'고정/SP구분' AS a3, 	nvl(b.sp_gb,'') AS a3_value 
		,	'가입조합' AS a4, 		nvl(b.work_group,'') AS a4_value 
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김익수' 
	union 
	SELECT  0 AS seq
		,	a.emp_nm AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-') AS a2_value 
		,	'노선' AS a3, 		nvl(b.route_nm,'')  AS a3_value 
		,	'성별' AS a4, 		a.sex AS a4_value 
		,	'고용보험취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김익수'
	order by 1
 {executed in 1 msec}
2023-06-25 01:53:02.155 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@b031c6cb
2023-06-25 01:53:02.155 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO_empNm} 
2023-06-25 01:53:02.155 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '김익수' order by a.base_year desc,a.acc_time desc
2023-06-25 01:53:02.156 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '김익수' order by a.base_year desc,a.acc_time desc
 {executed in 1 msec}
2023-06-25 01:53:02.157 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '김익수' order by a.base_year desc,a.acc_time desc
 {executed in 1 msec}
2023-06-25 01:53:02.215 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
71. select * from TBL_FILE_INFO where company_no = '100' and file_gb = 'empImage' and file_id = '김익수'
 {executed in 0 msec}
2023-06-25 01:53:04.535 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@da26ed01
2023-06-25 01:53:04.536 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 01:53:04.539 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT  5 AS seq
		,  '5' AS a0 
		,	'현주소' AS a1, 		nvl(b.address,'') AS a1_value 
		,	'' AS a2, '' AS a2_value 
		,	'' AS a3, '' AS a3_value 
		,	'' AS a4, '' AS a4_value 
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김재중' 
	union 
	SELECT  4 AS seq
		,  '4' AS a0 
		,	'이메일' AS a1, 		nvl(b.email,'')  AS a1_value 
		,	'호봉' AS a2, 		nvl(b.hobong,'') AS a2_value 
		,	'구분' AS a3, 		a.JOB_KIND AS a3_value 
		,	'급여계산' AS a4, 		'' AS a4_value 
		,	'국민연금취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김재중' 
	union 
	SELECT  3 AS seq
		,  '3' AS a0 
		,	'휴대폰' AS a1, 		a.PHONE_NO  AS a1_value 
		,	'정규직구분' AS a2, 	nvl(b.enter_gb,'')  AS a2_value 
		,	'부서' AS a3, 		a.TEAM_NM  AS a3_value  
		,	'운전면허번호' AS a4, 	nvl(b.dirver_regno,'')	  AS a4_value  
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김재중' 
	union 
	SELECT  2 AS seq
		,  '2' AS a0 
		,	'생년월일' AS a1, 		nvl(b.BIRTH_YMD,'') AS a1_value  
		,	'근속일자' AS a2, 		nvl(to_char(datediff(DAY,'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'직종' AS a3, 		a.JOB_TYPE AS a3_value  
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'건강보험취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김재중' 
	union 
	SELECT  1 AS seq
		,	'1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'고정/SP구분' AS a3, 	nvl(b.sp_gb,'') AS a3_value 
		,	'가입조합' AS a4, 		nvl(b.work_group,'') AS a4_value 
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김재중' 
	union 
	SELECT  0 AS seq
		,	a.emp_nm AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-') AS a2_value 
		,	'노선' AS a3, 		nvl(b.route_nm,'')  AS a3_value 
		,	'성별' AS a4, 		a.sex AS a4_value 
		,	'고용보험취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김재중'
	order by 1
 {executed in 1 msec}
2023-06-25 01:53:04.563 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@a1366ab1
2023-06-25 01:53:04.563 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO_empNm} 
2023-06-25 01:53:04.563 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '김재중' order by a.base_year desc,a.acc_time desc
2023-06-25 01:53:04.564 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '김재중' order by a.base_year desc,a.acc_time desc
 {executed in 1 msec}
2023-06-25 01:53:04.565 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '김재중' order by a.base_year desc,a.acc_time desc
 {executed in 1 msec}
2023-06-25 01:53:04.614 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
71. select * from TBL_FILE_INFO where company_no = '100' and file_gb = 'empImage' and file_id = '김재중'
 {executed in 0 msec}
2023-06-25 01:53:05.436 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@ed9a96a
2023-06-25 01:53:05.437 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 01:53:05.442 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT  5 AS seq
		,  '5' AS a0 
		,	'현주소' AS a1, 		nvl(b.address,'') AS a1_value 
		,	'' AS a2, '' AS a2_value 
		,	'' AS a3, '' AS a3_value 
		,	'' AS a4, '' AS a4_value 
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김종국' 
	union 
	SELECT  4 AS seq
		,  '4' AS a0 
		,	'이메일' AS a1, 		nvl(b.email,'')  AS a1_value 
		,	'호봉' AS a2, 		nvl(b.hobong,'') AS a2_value 
		,	'구분' AS a3, 		a.JOB_KIND AS a3_value 
		,	'급여계산' AS a4, 		'' AS a4_value 
		,	'국민연금취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김종국' 
	union 
	SELECT  3 AS seq
		,  '3' AS a0 
		,	'휴대폰' AS a1, 		a.PHONE_NO  AS a1_value 
		,	'정규직구분' AS a2, 	nvl(b.enter_gb,'')  AS a2_value 
		,	'부서' AS a3, 		a.TEAM_NM  AS a3_value  
		,	'운전면허번호' AS a4, 	nvl(b.dirver_regno,'')	  AS a4_value  
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김종국' 
	union 
	SELECT  2 AS seq
		,  '2' AS a0 
		,	'생년월일' AS a1, 		nvl(b.BIRTH_YMD,'') AS a1_value  
		,	'근속일자' AS a2, 		nvl(to_char(datediff(DAY,'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'직종' AS a3, 		a.JOB_TYPE AS a3_value  
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'건강보험취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김종국' 
	union 
	SELECT  1 AS seq
		,	'1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'고정/SP구분' AS a3, 	nvl(b.sp_gb,'') AS a3_value 
		,	'가입조합' AS a4, 		nvl(b.work_group,'') AS a4_value 
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김종국' 
	union 
	SELECT  0 AS seq
		,	a.emp_nm AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-') AS a2_value 
		,	'노선' AS a3, 		nvl(b.route_nm,'')  AS a3_value 
		,	'성별' AS a4, 		a.sex AS a4_value 
		,	'고용보험취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김종국'
	order by 1
 {executed in 3 msec}
2023-06-25 01:53:05.464 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@d5e9271a
2023-06-25 01:53:05.464 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO_empNm} 
2023-06-25 01:53:05.464 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '김종국' order by a.base_year desc,a.acc_time desc
2023-06-25 01:53:05.466 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '김종국' order by a.base_year desc,a.acc_time desc
 {executed in 1 msec}
2023-06-25 01:53:05.467 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '김종국' order by a.base_year desc,a.acc_time desc
 {executed in 1 msec}
2023-06-25 01:53:05.525 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
71. select * from TBL_FILE_INFO where company_no = '100' and file_gb = 'empImage' and file_id = '김종국'
 {executed in 0 msec}
2023-06-25 01:54:05.582 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@b3ada393
2023-06-25 01:54:05.582 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - filterType={danagerAnal_Employee2} 
2023-06-25 01:54:05.582 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT 	b.base_ym, b.emp_nm,b.danger_km100,b.DANGER_ACT_CNT, b.DANGER_ACT,b.DANGER_LEVEL,b.DRIVING_CNT,b.DRIVING_DISTANCE,b.DRIVING_TIME FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym > TO_CHAR(DATEADD(YEAR,-3,SYSDATE()),'yyyy-MM') AND   b.emp_nm = '김종국' ORDER BY b.base_ym desc
2023-06-25 01:54:05.583 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 01:54:05.591 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. SELECT 	b.base_ym, b.emp_nm,b.danger_km100,b.DANGER_ACT_CNT, b.DANGER_ACT,b.DANGER_LEVEL,b.DRIVING_CNT,b.DRIVING_DISTANCE,b.DRIVING_TIME FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym > TO_CHAR(DATEADD(YEAR,-3,SYSDATE()),'yyyy-MM') AND   b.emp_nm = '김종국' ORDER BY b.base_ym desc
 {executed in 7 msec}
2023-06-25 01:54:05.593 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. SELECT 	b.base_ym, b.emp_nm,b.danger_km100,b.DANGER_ACT_CNT, b.DANGER_ACT,b.DANGER_LEVEL,b.DRIVING_CNT,b.DRIVING_DISTANCE,b.DRIVING_TIME FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym > TO_CHAR(DATEADD(YEAR,-3,SYSDATE()),'yyyy-MM') AND   b.emp_nm = '김종국' ORDER BY b.base_ym desc
 {executed in 2 msec}
2023-06-25 01:54:26.163 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@d5e9271a
2023-06-25 01:54:26.163 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO_empNm} 
2023-06-25 01:54:26.163 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '김종국' order by a.base_year desc,a.acc_time desc
2023-06-25 01:54:26.164 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 01:54:26.165 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '김종국' order by a.base_year desc,a.acc_time desc
 {executed in 1 msec}
2023-06-25 01:54:26.166 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '김종국' order by a.base_year desc,a.acc_time desc
 {executed in 0 msec}
2023-06-25 01:54:26.250 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@d24e51fa
2023-06-25 01:54:26.253 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT  5 AS seq
		,  '5' AS a0 
		,	'현주소' AS a1, 		nvl(b.address,'') AS a1_value 
		,	'' AS a2, '' AS a2_value 
		,	'' AS a3, '' AS a3_value 
		,	'' AS a4, '' AS a4_value 
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김인기' 
	union 
	SELECT  4 AS seq
		,  '4' AS a0 
		,	'이메일' AS a1, 		nvl(b.email,'')  AS a1_value 
		,	'호봉' AS a2, 		nvl(b.hobong,'') AS a2_value 
		,	'구분' AS a3, 		a.JOB_KIND AS a3_value 
		,	'급여계산' AS a4, 		'' AS a4_value 
		,	'국민연금취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김인기' 
	union 
	SELECT  3 AS seq
		,  '3' AS a0 
		,	'휴대폰' AS a1, 		a.PHONE_NO  AS a1_value 
		,	'정규직구분' AS a2, 	nvl(b.enter_gb,'')  AS a2_value 
		,	'부서' AS a3, 		a.TEAM_NM  AS a3_value  
		,	'운전면허번호' AS a4, 	nvl(b.dirver_regno,'')	  AS a4_value  
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김인기' 
	union 
	SELECT  2 AS seq
		,  '2' AS a0 
		,	'생년월일' AS a1, 		nvl(b.BIRTH_YMD,'') AS a1_value  
		,	'근속일자' AS a2, 		nvl(to_char(datediff(DAY,'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'직종' AS a3, 		a.JOB_TYPE AS a3_value  
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'건강보험취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김인기' 
	union 
	SELECT  1 AS seq
		,	'1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'고정/SP구분' AS a3, 	nvl(b.sp_gb,'') AS a3_value 
		,	'가입조합' AS a4, 		nvl(b.work_group,'') AS a4_value 
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김인기' 
	union 
	SELECT  0 AS seq
		,	a.emp_nm AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-') AS a2_value 
		,	'노선' AS a3, 		nvl(b.route_nm,'')  AS a3_value 
		,	'성별' AS a4, 		a.sex AS a4_value 
		,	'고용보험취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김인기'
	order by 1
 {executed in 2 msec}
2023-06-25 01:54:26.276 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@995dcfaa
2023-06-25 01:54:26.276 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO_empNm} 
2023-06-25 01:54:26.276 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '김인기' order by a.base_year desc,a.acc_time desc
2023-06-25 01:54:26.277 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '김인기' order by a.base_year desc,a.acc_time desc
 {executed in 0 msec}
2023-06-25 01:54:26.278 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '김인기' order by a.base_year desc,a.acc_time desc
 {executed in 1 msec}
2023-06-25 01:54:26.361 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
71. select * from TBL_FILE_INFO where company_no = '100' and file_gb = 'empImage' and file_id = '김인기'
 {executed in 0 msec}
2023-06-25 01:54:28.368 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@77224c23
2023-06-25 01:54:28.368 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - filterType={danagerAnal_Employee2} 
2023-06-25 01:54:28.368 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT 	b.base_ym, b.emp_nm,b.danger_km100,b.DANGER_ACT_CNT, b.DANGER_ACT,b.DANGER_LEVEL,b.DRIVING_CNT,b.DRIVING_DISTANCE,b.DRIVING_TIME FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym > TO_CHAR(DATEADD(YEAR,-3,SYSDATE()),'yyyy-MM') AND   b.emp_nm = '김인기' ORDER BY b.base_ym desc
2023-06-25 01:54:28.369 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 01:54:28.372 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. SELECT 	b.base_ym, b.emp_nm,b.danger_km100,b.DANGER_ACT_CNT, b.DANGER_ACT,b.DANGER_LEVEL,b.DRIVING_CNT,b.DRIVING_DISTANCE,b.DRIVING_TIME FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym > TO_CHAR(DATEADD(YEAR,-3,SYSDATE()),'yyyy-MM') AND   b.emp_nm = '김인기' ORDER BY b.base_ym desc
 {executed in 3 msec}
2023-06-25 01:54:28.374 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. SELECT 	b.base_ym, b.emp_nm,b.danger_km100,b.DANGER_ACT_CNT, b.DANGER_ACT,b.DANGER_LEVEL,b.DRIVING_CNT,b.DRIVING_DISTANCE,b.DRIVING_TIME FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym > TO_CHAR(DATEADD(YEAR,-3,SYSDATE()),'yyyy-MM') AND   b.emp_nm = '김인기' ORDER BY b.base_ym desc
 {executed in 2 msec}
2023-06-25 01:54:29.419 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@995dcfaa
2023-06-25 01:54:29.419 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO_empNm} 
2023-06-25 01:54:29.419 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '김인기' order by a.base_year desc,a.acc_time desc
2023-06-25 01:54:29.420 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 01:54:29.420 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '김인기' order by a.base_year desc,a.acc_time desc
 {executed in 0 msec}
2023-06-25 01:54:29.421 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '김인기' order by a.base_year desc,a.acc_time desc
 {executed in 1 msec}
2023-06-25 01:54:29.493 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@ed066667
2023-06-25 01:54:29.496 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT  5 AS seq
		,  '5' AS a0 
		,	'현주소' AS a1, 		nvl(b.address,'') AS a1_value 
		,	'' AS a2, '' AS a2_value 
		,	'' AS a3, '' AS a3_value 
		,	'' AS a4, '' AS a4_value 
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김승철' 
	union 
	SELECT  4 AS seq
		,  '4' AS a0 
		,	'이메일' AS a1, 		nvl(b.email,'')  AS a1_value 
		,	'호봉' AS a2, 		nvl(b.hobong,'') AS a2_value 
		,	'구분' AS a3, 		a.JOB_KIND AS a3_value 
		,	'급여계산' AS a4, 		'' AS a4_value 
		,	'국민연금취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김승철' 
	union 
	SELECT  3 AS seq
		,  '3' AS a0 
		,	'휴대폰' AS a1, 		a.PHONE_NO  AS a1_value 
		,	'정규직구분' AS a2, 	nvl(b.enter_gb,'')  AS a2_value 
		,	'부서' AS a3, 		a.TEAM_NM  AS a3_value  
		,	'운전면허번호' AS a4, 	nvl(b.dirver_regno,'')	  AS a4_value  
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김승철' 
	union 
	SELECT  2 AS seq
		,  '2' AS a0 
		,	'생년월일' AS a1, 		nvl(b.BIRTH_YMD,'') AS a1_value  
		,	'근속일자' AS a2, 		nvl(to_char(datediff(DAY,'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'직종' AS a3, 		a.JOB_TYPE AS a3_value  
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'건강보험취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김승철' 
	union 
	SELECT  1 AS seq
		,	'1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'고정/SP구분' AS a3, 	nvl(b.sp_gb,'') AS a3_value 
		,	'가입조합' AS a4, 		nvl(b.work_group,'') AS a4_value 
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김승철' 
	union 
	SELECT  0 AS seq
		,	a.emp_nm AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-') AS a2_value 
		,	'노선' AS a3, 		nvl(b.route_nm,'')  AS a3_value 
		,	'성별' AS a4, 		a.sex AS a4_value 
		,	'고용보험취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김승철'
	order by 1
 {executed in 2 msec}
2023-06-25 01:54:29.521 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@b415e417
2023-06-25 01:54:29.521 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO_empNm} 
2023-06-25 01:54:29.521 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '김승철' order by a.base_year desc,a.acc_time desc
2023-06-25 01:54:29.521 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '김승철' order by a.base_year desc,a.acc_time desc
 {executed in 0 msec}
2023-06-25 01:54:29.522 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '김승철' order by a.base_year desc,a.acc_time desc
 {executed in 1 msec}
2023-06-25 01:54:29.586 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
71. select * from TBL_FILE_INFO where company_no = '100' and file_gb = 'empImage' and file_id = '김승철'
 {executed in 0 msec}
2023-06-25 01:54:30.978 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@91da6090
2023-06-25 01:54:30.978 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - filterType={danagerAnal_Employee2} 
2023-06-25 01:54:30.978 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT 	b.base_ym, b.emp_nm,b.danger_km100,b.DANGER_ACT_CNT, b.DANGER_ACT,b.DANGER_LEVEL,b.DRIVING_CNT,b.DRIVING_DISTANCE,b.DRIVING_TIME FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym > TO_CHAR(DATEADD(YEAR,-3,SYSDATE()),'yyyy-MM') AND   b.emp_nm = '김승철' ORDER BY b.base_ym desc
2023-06-25 01:54:30.979 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 01:54:30.982 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. SELECT 	b.base_ym, b.emp_nm,b.danger_km100,b.DANGER_ACT_CNT, b.DANGER_ACT,b.DANGER_LEVEL,b.DRIVING_CNT,b.DRIVING_DISTANCE,b.DRIVING_TIME FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym > TO_CHAR(DATEADD(YEAR,-3,SYSDATE()),'yyyy-MM') AND   b.emp_nm = '김승철' ORDER BY b.base_ym desc
 {executed in 3 msec}
2023-06-25 01:54:30.984 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. SELECT 	b.base_ym, b.emp_nm,b.danger_km100,b.DANGER_ACT_CNT, b.DANGER_ACT,b.DANGER_LEVEL,b.DRIVING_CNT,b.DRIVING_DISTANCE,b.DRIVING_TIME FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym > TO_CHAR(DATEADD(YEAR,-3,SYSDATE()),'yyyy-MM') AND   b.emp_nm = '김승철' ORDER BY b.base_ym desc
 {executed in 1 msec}
2023-06-25 01:54:33.705 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@b415e417
2023-06-25 01:54:33.705 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO_empNm} 
2023-06-25 01:54:33.705 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '김승철' order by a.base_year desc,a.acc_time desc
2023-06-25 01:54:33.706 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 01:54:33.707 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '김승철' order by a.base_year desc,a.acc_time desc
 {executed in 0 msec}
2023-06-25 01:54:33.708 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '김승철' order by a.base_year desc,a.acc_time desc
 {executed in 0 msec}
2023-06-25 01:54:33.782 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@5f566591
2023-06-25 01:54:33.784 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT  5 AS seq
		,  '5' AS a0 
		,	'현주소' AS a1, 		nvl(b.address,'') AS a1_value 
		,	'' AS a2, '' AS a2_value 
		,	'' AS a3, '' AS a3_value 
		,	'' AS a4, '' AS a4_value 
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='문준석' 
	union 
	SELECT  4 AS seq
		,  '4' AS a0 
		,	'이메일' AS a1, 		nvl(b.email,'')  AS a1_value 
		,	'호봉' AS a2, 		nvl(b.hobong,'') AS a2_value 
		,	'구분' AS a3, 		a.JOB_KIND AS a3_value 
		,	'급여계산' AS a4, 		'' AS a4_value 
		,	'국민연금취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='문준석' 
	union 
	SELECT  3 AS seq
		,  '3' AS a0 
		,	'휴대폰' AS a1, 		a.PHONE_NO  AS a1_value 
		,	'정규직구분' AS a2, 	nvl(b.enter_gb,'')  AS a2_value 
		,	'부서' AS a3, 		a.TEAM_NM  AS a3_value  
		,	'운전면허번호' AS a4, 	nvl(b.dirver_regno,'')	  AS a4_value  
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='문준석' 
	union 
	SELECT  2 AS seq
		,  '2' AS a0 
		,	'생년월일' AS a1, 		nvl(b.BIRTH_YMD,'') AS a1_value  
		,	'근속일자' AS a2, 		nvl(to_char(datediff(DAY,'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'직종' AS a3, 		a.JOB_TYPE AS a3_value  
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'건강보험취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='문준석' 
	union 
	SELECT  1 AS seq
		,	'1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'고정/SP구분' AS a3, 	nvl(b.sp_gb,'') AS a3_value 
		,	'가입조합' AS a4, 		nvl(b.work_group,'') AS a4_value 
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='문준석' 
	union 
	SELECT  0 AS seq
		,	a.emp_nm AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-') AS a2_value 
		,	'노선' AS a3, 		nvl(b.route_nm,'')  AS a3_value 
		,	'성별' AS a4, 		a.sex AS a4_value 
		,	'고용보험취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='문준석'
	order by 1
 {executed in 1 msec}
2023-06-25 01:54:33.807 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@2665e341
2023-06-25 01:54:33.807 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO_empNm} 
2023-06-25 01:54:33.807 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '문준석' order by a.base_year desc,a.acc_time desc
2023-06-25 01:54:33.808 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '문준석' order by a.base_year desc,a.acc_time desc
 {executed in 1 msec}
2023-06-25 01:54:33.809 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '문준석' order by a.base_year desc,a.acc_time desc
 {executed in 1 msec}
2023-06-25 01:54:33.878 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
71. select * from TBL_FILE_INFO where company_no = '100' and file_gb = 'empImage' and file_id = '문준석'
 {executed in 1 msec}
2023-06-25 01:54:35.029 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@42a5fba
2023-06-25 01:54:35.029 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - filterType={danagerAnal_Employee2} 
2023-06-25 01:54:35.029 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT 	b.base_ym, b.emp_nm,b.danger_km100,b.DANGER_ACT_CNT, b.DANGER_ACT,b.DANGER_LEVEL,b.DRIVING_CNT,b.DRIVING_DISTANCE,b.DRIVING_TIME FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym > TO_CHAR(DATEADD(YEAR,-3,SYSDATE()),'yyyy-MM') AND   b.emp_nm = '문준석' ORDER BY b.base_ym desc
2023-06-25 01:54:35.030 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 01:54:35.032 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. SELECT 	b.base_ym, b.emp_nm,b.danger_km100,b.DANGER_ACT_CNT, b.DANGER_ACT,b.DANGER_LEVEL,b.DRIVING_CNT,b.DRIVING_DISTANCE,b.DRIVING_TIME FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym > TO_CHAR(DATEADD(YEAR,-3,SYSDATE()),'yyyy-MM') AND   b.emp_nm = '문준석' ORDER BY b.base_ym desc
 {executed in 1 msec}
2023-06-25 01:54:35.033 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. SELECT 	b.base_ym, b.emp_nm,b.danger_km100,b.DANGER_ACT_CNT, b.DANGER_ACT,b.DANGER_LEVEL,b.DRIVING_CNT,b.DRIVING_DISTANCE,b.DRIVING_TIME FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym > TO_CHAR(DATEADD(YEAR,-3,SYSDATE()),'yyyy-MM') AND   b.emp_nm = '문준석' ORDER BY b.base_ym desc
 {executed in 1 msec}
2023-06-25 01:54:36.539 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@2665e341
2023-06-25 01:54:36.540 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO_empNm} 
2023-06-25 01:54:36.540 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '문준석' order by a.base_year desc,a.acc_time desc
2023-06-25 01:54:36.540 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 01:54:36.541 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '문준석' order by a.base_year desc,a.acc_time desc
 {executed in 1 msec}
2023-06-25 01:54:36.542 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '문준석' order by a.base_year desc,a.acc_time desc
 {executed in 1 msec}
2023-06-25 01:54:36.615 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@c254981a
2023-06-25 01:54:36.618 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT  5 AS seq
		,  '5' AS a0 
		,	'현주소' AS a1, 		nvl(b.address,'') AS a1_value 
		,	'' AS a2, '' AS a2_value 
		,	'' AS a3, '' AS a3_value 
		,	'' AS a4, '' AS a4_value 
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김환조' 
	union 
	SELECT  4 AS seq
		,  '4' AS a0 
		,	'이메일' AS a1, 		nvl(b.email,'')  AS a1_value 
		,	'호봉' AS a2, 		nvl(b.hobong,'') AS a2_value 
		,	'구분' AS a3, 		a.JOB_KIND AS a3_value 
		,	'급여계산' AS a4, 		'' AS a4_value 
		,	'국민연금취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김환조' 
	union 
	SELECT  3 AS seq
		,  '3' AS a0 
		,	'휴대폰' AS a1, 		a.PHONE_NO  AS a1_value 
		,	'정규직구분' AS a2, 	nvl(b.enter_gb,'')  AS a2_value 
		,	'부서' AS a3, 		a.TEAM_NM  AS a3_value  
		,	'운전면허번호' AS a4, 	nvl(b.dirver_regno,'')	  AS a4_value  
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김환조' 
	union 
	SELECT  2 AS seq
		,  '2' AS a0 
		,	'생년월일' AS a1, 		nvl(b.BIRTH_YMD,'') AS a1_value  
		,	'근속일자' AS a2, 		nvl(to_char(datediff(DAY,'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'직종' AS a3, 		a.JOB_TYPE AS a3_value  
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'건강보험취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김환조' 
	union 
	SELECT  1 AS seq
		,	'1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'고정/SP구분' AS a3, 	nvl(b.sp_gb,'') AS a3_value 
		,	'가입조합' AS a4, 		nvl(b.work_group,'') AS a4_value 
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김환조' 
	union 
	SELECT  0 AS seq
		,	a.emp_nm AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-') AS a2_value 
		,	'노선' AS a3, 		nvl(b.route_nm,'')  AS a3_value 
		,	'성별' AS a4, 		a.sex AS a4_value 
		,	'고용보험취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김환조'
	order by 1
 {executed in 1 msec}
2023-06-25 01:54:36.639 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@896415ca
2023-06-25 01:54:36.639 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO_empNm} 
2023-06-25 01:54:36.639 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '김환조' order by a.base_year desc,a.acc_time desc
2023-06-25 01:54:36.640 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '김환조' order by a.base_year desc,a.acc_time desc
 {executed in 1 msec}
2023-06-25 01:54:36.641 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '김환조' order by a.base_year desc,a.acc_time desc
 {executed in 1 msec}
2023-06-25 01:54:36.695 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
71. select * from TBL_FILE_INFO where company_no = '100' and file_gb = 'empImage' and file_id = '김환조'
 {executed in 0 msec}
2023-06-25 01:54:38.065 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@67289243
2023-06-25 01:54:38.066 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - filterType={danagerAnal_Employee2} 
2023-06-25 01:54:38.066 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT 	b.base_ym, b.emp_nm,b.danger_km100,b.DANGER_ACT_CNT, b.DANGER_ACT,b.DANGER_LEVEL,b.DRIVING_CNT,b.DRIVING_DISTANCE,b.DRIVING_TIME FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym > TO_CHAR(DATEADD(YEAR,-3,SYSDATE()),'yyyy-MM') AND   b.emp_nm = '김환조' ORDER BY b.base_ym desc
2023-06-25 01:54:38.067 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 01:54:38.072 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. SELECT 	b.base_ym, b.emp_nm,b.danger_km100,b.DANGER_ACT_CNT, b.DANGER_ACT,b.DANGER_LEVEL,b.DRIVING_CNT,b.DRIVING_DISTANCE,b.DRIVING_TIME FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym > TO_CHAR(DATEADD(YEAR,-3,SYSDATE()),'yyyy-MM') AND   b.emp_nm = '김환조' ORDER BY b.base_ym desc
 {executed in 4 msec}
2023-06-25 01:54:38.073 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. SELECT 	b.base_ym, b.emp_nm,b.danger_km100,b.DANGER_ACT_CNT, b.DANGER_ACT,b.DANGER_LEVEL,b.DRIVING_CNT,b.DRIVING_DISTANCE,b.DRIVING_TIME FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym > TO_CHAR(DATEADD(YEAR,-3,SYSDATE()),'yyyy-MM') AND   b.emp_nm = '김환조' ORDER BY b.base_ym desc
 {executed in 1 msec}
2023-06-25 01:54:40.051 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@896415ca
2023-06-25 01:54:40.051 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO_empNm} 
2023-06-25 01:54:40.051 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '김환조' order by a.base_year desc,a.acc_time desc
2023-06-25 01:54:40.053 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 2 msec}
2023-06-25 01:54:40.054 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '김환조' order by a.base_year desc,a.acc_time desc
 {executed in 1 msec}
2023-06-25 01:54:40.055 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '김환조' order by a.base_year desc,a.acc_time desc
 {executed in 0 msec}
2023-06-25 01:54:40.132 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@c1251907
2023-06-25 01:54:40.134 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT  5 AS seq
		,  '5' AS a0 
		,	'현주소' AS a1, 		nvl(b.address,'') AS a1_value 
		,	'' AS a2, '' AS a2_value 
		,	'' AS a3, '' AS a3_value 
		,	'' AS a4, '' AS a4_value 
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김종만' 
	union 
	SELECT  4 AS seq
		,  '4' AS a0 
		,	'이메일' AS a1, 		nvl(b.email,'')  AS a1_value 
		,	'호봉' AS a2, 		nvl(b.hobong,'') AS a2_value 
		,	'구분' AS a3, 		a.JOB_KIND AS a3_value 
		,	'급여계산' AS a4, 		'' AS a4_value 
		,	'국민연금취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김종만' 
	union 
	SELECT  3 AS seq
		,  '3' AS a0 
		,	'휴대폰' AS a1, 		a.PHONE_NO  AS a1_value 
		,	'정규직구분' AS a2, 	nvl(b.enter_gb,'')  AS a2_value 
		,	'부서' AS a3, 		a.TEAM_NM  AS a3_value  
		,	'운전면허번호' AS a4, 	nvl(b.dirver_regno,'')	  AS a4_value  
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김종만' 
	union 
	SELECT  2 AS seq
		,  '2' AS a0 
		,	'생년월일' AS a1, 		nvl(b.BIRTH_YMD,'') AS a1_value  
		,	'근속일자' AS a2, 		nvl(to_char(datediff(DAY,'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'직종' AS a3, 		a.JOB_TYPE AS a3_value  
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'건강보험취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김종만' 
	union 
	SELECT  1 AS seq
		,	'1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'고정/SP구분' AS a3, 	nvl(b.sp_gb,'') AS a3_value 
		,	'가입조합' AS a4, 		nvl(b.work_group,'') AS a4_value 
		,	'      상실' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김종만' 
	union 
	SELECT  0 AS seq
		,	a.emp_nm AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-') AS a2_value 
		,	'노선' AS a3, 		nvl(b.route_nm,'')  AS a3_value 
		,	'성별' AS a4, 		a.sex AS a4_value 
		,	'고용보험취득' AS a5,	'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김종만'
	order by 1
 {executed in 1 msec}
2023-06-25 01:54:40.156 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@883496b7
2023-06-25 01:54:40.156 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO_empNm} 
2023-06-25 01:54:40.156 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '김종만' order by a.base_year desc,a.acc_time desc
2023-06-25 01:54:40.157 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '김종만' order by a.base_year desc,a.acc_time desc
 {executed in 1 msec}
2023-06-25 01:54:40.158 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '김종만' order by a.base_year desc,a.acc_time desc
 {executed in 0 msec}
2023-06-25 01:54:40.219 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
71. select * from TBL_FILE_INFO where company_no = '100' and file_gb = 'empImage' and file_id = '김종만'
 {executed in 0 msec}
2023-06-25 01:54:41.484 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@65f91330
2023-06-25 01:54:41.484 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - filterType={danagerAnal_Employee2} 
2023-06-25 01:54:41.484 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT 	b.base_ym, b.emp_nm,b.danger_km100,b.DANGER_ACT_CNT, b.DANGER_ACT,b.DANGER_LEVEL,b.DRIVING_CNT,b.DRIVING_DISTANCE,b.DRIVING_TIME FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym > TO_CHAR(DATEADD(YEAR,-3,SYSDATE()),'yyyy-MM') AND   b.emp_nm = '김종만' ORDER BY b.base_ym desc
2023-06-25 01:54:41.485 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 01:54:41.487 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. SELECT 	b.base_ym, b.emp_nm,b.danger_km100,b.DANGER_ACT_CNT, b.DANGER_ACT,b.DANGER_LEVEL,b.DRIVING_CNT,b.DRIVING_DISTANCE,b.DRIVING_TIME FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym > TO_CHAR(DATEADD(YEAR,-3,SYSDATE()),'yyyy-MM') AND   b.emp_nm = '김종만' ORDER BY b.base_ym desc
 {executed in 2 msec}
2023-06-25 01:54:41.490 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. SELECT 	b.base_ym, b.emp_nm,b.danger_km100,b.DANGER_ACT_CNT, b.DANGER_ACT,b.DANGER_LEVEL,b.DRIVING_CNT,b.DRIVING_DISTANCE,b.DRIVING_TIME FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym > TO_CHAR(DATEADD(YEAR,-3,SYSDATE()),'yyyy-MM') AND   b.emp_nm = '김종만' ORDER BY b.base_ym desc
 {executed in 2 msec}
2023-06-25 01:55:13.835 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@883496b7
2023-06-25 01:55:13.835 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO_empNm} 
2023-06-25 01:55:13.835 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '김종만' order by a.base_year desc,a.acc_time desc
2023-06-25 01:55:13.836 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 01:55:13.837 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '김종만' order by a.base_year desc,a.acc_time desc
 {executed in 1 msec}
2023-06-25 01:55:13.838 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '김종만' order by a.base_year desc,a.acc_time desc
 {executed in 1 msec}
2023-06-25 01:55:20.035 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@65f91330
2023-06-25 01:55:20.035 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - filterType={danagerAnal_Employee2} 
2023-06-25 01:55:20.036 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT 	b.base_ym, b.emp_nm,b.danger_km100,b.DANGER_ACT_CNT, b.DANGER_ACT,b.DANGER_LEVEL,b.DRIVING_CNT,b.DRIVING_DISTANCE,b.DRIVING_TIME FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym > TO_CHAR(DATEADD(YEAR,-3,SYSDATE()),'yyyy-MM') AND   b.emp_nm = '김종만' ORDER BY b.base_ym desc
2023-06-25 01:55:20.036 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 01:55:20.039 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. SELECT 	b.base_ym, b.emp_nm,b.danger_km100,b.DANGER_ACT_CNT, b.DANGER_ACT,b.DANGER_LEVEL,b.DRIVING_CNT,b.DRIVING_DISTANCE,b.DRIVING_TIME FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym > TO_CHAR(DATEADD(YEAR,-3,SYSDATE()),'yyyy-MM') AND   b.emp_nm = '김종만' ORDER BY b.base_ym desc
 {executed in 1 msec}
2023-06-25 01:55:20.041 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. SELECT 	b.base_ym, b.emp_nm,b.danger_km100,b.DANGER_ACT_CNT, b.DANGER_ACT,b.DANGER_LEVEL,b.DRIVING_CNT,b.DRIVING_DISTANCE,b.DRIVING_TIME FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym > TO_CHAR(DATEADD(YEAR,-3,SYSDATE()),'yyyy-MM') AND   b.emp_nm = '김종만' ORDER BY b.base_ym desc
 {executed in 1 msec}
2023-06-25 01:55:27.275 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@883496b7
2023-06-25 01:55:27.275 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO_empNm} 
2023-06-25 01:55:27.276 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '김종만' order by a.base_year desc,a.acc_time desc
2023-06-25 01:55:27.276 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 01:55:27.277 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '김종만' order by a.base_year desc,a.acc_time desc
 {executed in 1 msec}
2023-06-25 01:55:27.278 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.emp_nm = '김종만' order by a.base_year desc,a.acc_time desc
 {executed in 1 msec}
2023-06-25 01:55:37.350 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@34d8d0ee
2023-06-25 01:55:37.350 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_EMPLOYEEINFO} 
2023-06-25 01:55:37.350 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
2023-06-25 01:55:37.351 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 01:55:37.353 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 2 msec}
2023-06-25 01:55:37.356 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 2 msec}
2023-06-25 01:56:50.779 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@34d8d0ee
2023-06-25 01:56:50.780 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_EMPLOYEEINFO} 
2023-06-25 01:56:50.780 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
2023-06-25 01:56:50.781 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 01:56:50.784 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 3 msec}
2023-06-25 01:56:50.786 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 2 msec}
2023-06-25 01:57:18.625 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@34d8d0ee
2023-06-25 01:57:18.625 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_EMPLOYEEINFO} 
2023-06-25 01:57:18.625 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
2023-06-25 01:57:18.626 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 01:57:18.628 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 2 msec}
2023-06-25 01:57:18.629 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 1 msec}
2023-06-25 01:58:49.982 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@34d8d0ee
2023-06-25 01:58:49.982 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_EMPLOYEEINFO} 
2023-06-25 01:58:49.982 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
2023-06-25 01:58:49.983 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 01:58:49.985 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 2 msec}
2023-06-25 01:58:49.988 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 1 msec}
2023-06-25 02:03:50.019 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@34d8d0ee
2023-06-25 02:03:50.019 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_EMPLOYEEINFO} 
2023-06-25 02:03:50.019 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
2023-06-25 02:03:50.020 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 02:03:50.022 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 2 msec}
2023-06-25 02:03:50.025 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 2 msec}
2023-06-25 02:05:07.414 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@34d8d0ee
2023-06-25 02:05:07.415 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_EMPLOYEEINFO} 
2023-06-25 02:05:07.415 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
2023-06-25 02:05:07.415 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 02:05:07.418 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 3 msec}
2023-06-25 02:05:07.422 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 3 msec}
2023-06-25 02:09:13.793 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@34d8d0ee
2023-06-25 02:09:13.793 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_EMPLOYEEINFO} 
2023-06-25 02:09:13.793 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
2023-06-25 02:09:13.794 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
74. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 02:09:13.797 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
74. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 3 msec}
2023-06-25 02:09:13.800 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
74. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 2 msec}
2023-06-25 02:09:43.243 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@34d8d0ee
2023-06-25 02:09:43.243 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_EMPLOYEEINFO} 
2023-06-25 02:09:43.243 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
2023-06-25 02:09:43.243 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
80. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 02:09:43.245 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
80. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 2 msec}
2023-06-25 02:09:43.248 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
80. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 2 msec}
2023-06-25 02:10:03.736 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@34d8d0ee
2023-06-25 02:10:03.736 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_EMPLOYEEINFO} 
2023-06-25 02:10:03.736 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
2023-06-25 02:10:03.737 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
81. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 02:10:03.740 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
81. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 3 msec}
2023-06-25 02:10:03.742 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
81. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 2 msec}
2023-06-25 02:10:18.859 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@34d8d0ee
2023-06-25 02:10:18.859 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_EMPLOYEEINFO} 
2023-06-25 02:10:18.859 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
2023-06-25 02:10:18.861 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
81. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 02:10:18.864 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
81. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 3 msec}
2023-06-25 02:10:18.867 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
81. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 2 msec}
2023-06-25 02:10:37.227 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@34d8d0ee
2023-06-25 02:10:37.228 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_EMPLOYEEINFO} 
2023-06-25 02:10:37.228 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
2023-06-25 02:10:37.229 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
81. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 02:10:37.232 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
81. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 3 msec}
2023-06-25 02:10:37.236 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
81. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 3 msec}
2023-06-25 02:10:58.624 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@34d8d0ee
2023-06-25 02:10:58.624 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_EMPLOYEEINFO} 
2023-06-25 02:10:58.624 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
2023-06-25 02:10:58.625 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
81. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 02:10:58.628 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
81. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 2 msec}
2023-06-25 02:10:58.631 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
81. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 3 msec}
2023-06-25 02:11:07.297 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@34d8d0ee
2023-06-25 02:11:07.297 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_EMPLOYEEINFO} 
2023-06-25 02:11:07.297 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
2023-06-25 02:11:07.298 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
81. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 02:11:07.301 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
81. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 3 msec}
2023-06-25 02:11:07.304 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
81. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 3 msec}
2023-06-25 02:11:21.881 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@34d8d0ee
2023-06-25 02:11:21.881 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_EMPLOYEEINFO} 
2023-06-25 02:11:21.881 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
2023-06-25 02:11:21.882 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
81. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 02:11:21.886 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
81. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 3 msec}
2023-06-25 02:11:21.889 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
81. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 3 msec}
2023-06-25 02:11:30.184 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@34d8d0ee
2023-06-25 02:11:30.184 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_EMPLOYEEINFO} 
2023-06-25 02:11:30.184 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
2023-06-25 02:11:30.185 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
81. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 02:11:30.188 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
81. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 2 msec}
2023-06-25 02:11:30.190 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
81. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 2 msec}
2023-06-25 02:12:01.132 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@34d8d0ee
2023-06-25 02:12:01.132 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_EMPLOYEEINFO} 
2023-06-25 02:12:01.132 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
2023-06-25 02:12:01.133 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
81. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 02:12:01.136 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
81. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 2 msec}
2023-06-25 02:12:01.139 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
81. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 2 msec}
2023-06-25 02:14:01.702 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@34d8d0ee
2023-06-25 02:14:01.702 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_EMPLOYEEINFO} 
2023-06-25 02:14:01.702 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
2023-06-25 02:14:01.703 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
81. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 02:14:01.706 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
81. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 2 msec}
2023-06-25 02:14:01.708 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
81. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 2 msec}
2023-06-25 02:14:12.557 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@34d8d0ee
2023-06-25 02:14:12.558 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_EMPLOYEEINFO} 
2023-06-25 02:14:12.558 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
2023-06-25 02:14:12.558 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
81. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 02:14:12.561 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
81. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 2 msec}
2023-06-25 02:14:12.565 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
81. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 2 msec}
2023-06-25 02:14:59.846 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@34d8d0ee
2023-06-25 02:14:59.847 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_EMPLOYEEINFO} 
2023-06-25 02:14:59.847 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
2023-06-25 02:14:59.848 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
81. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 02:14:59.851 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
81. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 2 msec}
2023-06-25 02:14:59.853 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
81. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 2 msec}
2023-06-25 02:15:07.989 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@34d8d0ee
2023-06-25 02:15:07.989 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_EMPLOYEEINFO} 
2023-06-25 02:15:07.989 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
2023-06-25 02:15:07.990 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
81. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 02:15:07.993 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
81. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 2 msec}
2023-06-25 02:15:07.996 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
81. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 2 msec}
2023-06-25 02:15:35.273 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@34d8d0ee
2023-06-25 02:15:35.273 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_EMPLOYEEINFO} 
2023-06-25 02:15:35.273 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
2023-06-25 02:15:35.274 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
81. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 02:15:35.277 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
81. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 2 msec}
2023-06-25 02:15:35.279 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
81. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 2 msec}
2023-06-25 02:15:52.594 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@34d8d0ee
2023-06-25 02:15:52.594 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_EMPLOYEEINFO} 
2023-06-25 02:15:52.595 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
2023-06-25 02:15:52.596 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
81. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 02:15:52.598 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
81. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 2 msec}
2023-06-25 02:15:52.601 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
81. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 2 msec}
2023-06-25 02:18:06.902 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1fa16c26
2023-06-25 02:18:06.902 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_CARINFO} 
2023-06-25 02:18:06.902 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_carInfo a where   a.company_no = '100' order by a.car_regno
2023-06-25 02:18:06.903 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
81. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 02:18:06.907 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
81. select   ROWNUM AS no,a.* from    TBL_carInfo a where   a.company_no = '100' order by a.car_regno
 {executed in 4 msec}
2023-06-25 02:18:06.909 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
81. select   ROWNUM AS no,a.* from    TBL_carInfo a where   a.company_no = '100' order by a.car_regno
 {executed in 1 msec}
2023-06-25 02:18:11.650 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1fa16c26
2023-06-25 02:18:11.650 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_CARINFO} 
2023-06-25 02:18:11.650 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_carInfo a where   a.company_no = '100' order by a.car_regno
2023-06-25 02:18:11.651 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
81. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 02:18:11.652 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
81. select   ROWNUM AS no,a.* from    TBL_carInfo a where   a.company_no = '100' order by a.car_regno
 {executed in 1 msec}
2023-06-25 02:18:11.654 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
81. select   ROWNUM AS no,a.* from    TBL_carInfo a where   a.company_no = '100' order by a.car_regno
 {executed in 1 msec}
2023-06-25 02:19:18.799 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1fa16c26
2023-06-25 02:19:18.799 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_CARINFO} 
2023-06-25 02:19:18.800 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_carInfo a where   a.company_no = '100' order by a.car_regno
2023-06-25 02:19:18.800 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
81. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 02:19:18.802 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
81. select   ROWNUM AS no,a.* from    TBL_carInfo a where   a.company_no = '100' order by a.car_regno
 {executed in 1 msec}
2023-06-25 02:19:18.803 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
81. select   ROWNUM AS no,a.* from    TBL_carInfo a where   a.company_no = '100' order by a.car_regno
 {executed in 1 msec}
2023-06-25 02:19:31.185 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1fa16c26
2023-06-25 02:19:31.185 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_CARINFO} 
2023-06-25 02:19:31.185 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_carInfo a where   a.company_no = '100' order by a.car_regno
2023-06-25 02:19:31.186 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
81. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 02:19:31.189 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
81. select   ROWNUM AS no,a.* from    TBL_carInfo a where   a.company_no = '100' order by a.car_regno
 {executed in 1 msec}
2023-06-25 02:19:31.190 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
81. select   ROWNUM AS no,a.* from    TBL_carInfo a where   a.company_no = '100' order by a.car_regno
 {executed in 1 msec}
2023-06-25 02:20:27.074 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1fa16c26
2023-06-25 02:20:27.074 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_CARINFO} 
2023-06-25 02:20:27.074 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_carInfo a where   a.company_no = '100' order by a.car_regno
2023-06-25 02:20:27.074 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
81. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 02:20:27.076 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
81. select   ROWNUM AS no,a.* from    TBL_carInfo a where   a.company_no = '100' order by a.car_regno
 {executed in 2 msec}
2023-06-25 02:20:27.077 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
81. select   ROWNUM AS no,a.* from    TBL_carInfo a where   a.company_no = '100' order by a.car_regno
 {executed in 1 msec}
2023-06-25 02:20:31.763 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1fa16c26
2023-06-25 02:20:31.763 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_CARINFO} 
2023-06-25 02:20:31.763 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_carInfo a where   a.company_no = '100' order by a.car_regno
2023-06-25 02:20:31.764 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
81. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 02:20:31.766 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
81. select   ROWNUM AS no,a.* from    TBL_carInfo a where   a.company_no = '100' order by a.car_regno
 {executed in 2 msec}
2023-06-25 02:20:31.768 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
81. select   ROWNUM AS no,a.* from    TBL_carInfo a where   a.company_no = '100' order by a.car_regno
 {executed in 2 msec}
2023-06-25 02:20:32.897 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1fa16c26
2023-06-25 02:20:32.897 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_CARINFO} 
2023-06-25 02:20:32.897 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_carInfo a where   a.company_no = '100' order by a.car_regno
2023-06-25 02:20:32.897 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
81. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 02:20:32.900 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
81. select   ROWNUM AS no,a.* from    TBL_carInfo a where   a.company_no = '100' order by a.car_regno
 {executed in 2 msec}
2023-06-25 02:20:32.902 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
81. select   ROWNUM AS no,a.* from    TBL_carInfo a where   a.company_no = '100' order by a.car_regno
 {executed in 2 msec}
2023-06-25 02:20:34.339 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1fa16c26
2023-06-25 02:20:34.339 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_CARINFO} 
2023-06-25 02:20:34.339 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_carInfo a where   a.company_no = '100' order by a.car_regno
2023-06-25 02:20:34.340 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
81. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 02:20:34.341 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
81. select   ROWNUM AS no,a.* from    TBL_carInfo a where   a.company_no = '100' order by a.car_regno
 {executed in 1 msec}
2023-06-25 02:20:34.343 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
81. select   ROWNUM AS no,a.* from    TBL_carInfo a where   a.company_no = '100' order by a.car_regno
 {executed in 2 msec}
2023-06-25 02:20:34.542 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1fa16c26
2023-06-25 02:20:34.542 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_CARINFO} 
2023-06-25 02:20:34.542 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_carInfo a where   a.company_no = '100' order by a.car_regno
2023-06-25 02:20:34.544 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
81. select   ROWNUM AS no,a.* from    TBL_carInfo a where   a.company_no = '100' order by a.car_regno
 {executed in 2 msec}
2023-06-25 02:20:34.546 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
81. select   ROWNUM AS no,a.* from    TBL_carInfo a where   a.company_no = '100' order by a.car_regno
 {executed in 2 msec}
2023-06-25 02:20:47.102 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1fa16c26
2023-06-25 02:20:47.102 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_CARINFO} 
2023-06-25 02:20:47.102 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_carInfo a where   a.company_no = '100' order by a.car_regno
2023-06-25 02:20:47.103 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
81. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 02:20:47.105 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
81. select   ROWNUM AS no,a.* from    TBL_carInfo a where   a.company_no = '100' order by a.car_regno
 {executed in 1 msec}
2023-06-25 02:20:47.106 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
81. select   ROWNUM AS no,a.* from    TBL_carInfo a where   a.company_no = '100' order by a.car_regno
 {executed in 1 msec}
2023-06-25 02:22:35.577 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1fa16c26
2023-06-25 02:22:35.577 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_CARINFO} 
2023-06-25 02:22:35.577 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_carInfo a where   a.company_no = '100' order by a.car_regno
2023-06-25 02:22:35.578 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
81. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 02:22:35.580 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
81. select   ROWNUM AS no,a.* from    TBL_carInfo a where   a.company_no = '100' order by a.car_regno
 {executed in 2 msec}
2023-06-25 02:22:35.582 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
81. select   ROWNUM AS no,a.* from    TBL_carInfo a where   a.company_no = '100' order by a.car_regno
 {executed in 2 msec}
2023-06-25 02:23:26.583 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1fa16c26
2023-06-25 02:23:26.584 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_CARINFO} 
2023-06-25 02:23:26.584 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_carInfo a where   a.company_no = '100' order by a.car_regno
2023-06-25 02:23:26.585 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
81. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 02:23:26.587 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
81. select   ROWNUM AS no,a.* from    TBL_carInfo a where   a.company_no = '100' order by a.car_regno
 {executed in 2 msec}
2023-06-25 02:23:26.589 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
81. select   ROWNUM AS no,a.* from    TBL_carInfo a where   a.company_no = '100' order by a.car_regno
 {executed in 2 msec}
2023-06-25 02:24:43.671 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1fa16c26
2023-06-25 02:24:43.671 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_CARINFO} 
2023-06-25 02:24:43.671 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_carInfo a where   a.company_no = '100' order by a.car_regno
2023-06-25 02:24:43.672 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
81. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 02:24:43.673 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
81. select   ROWNUM AS no,a.* from    TBL_carInfo a where   a.company_no = '100' order by a.car_regno
 {executed in 1 msec}
2023-06-25 02:24:43.675 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
81. select   ROWNUM AS no,a.* from    TBL_carInfo a where   a.company_no = '100' order by a.car_regno
 {executed in 1 msec}
2023-06-25 02:24:45.102 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1fa16c26
2023-06-25 02:24:45.102 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_CARINFO} 
2023-06-25 02:24:45.102 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_carInfo a where   a.company_no = '100' order by a.car_regno
2023-06-25 02:24:45.103 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
81. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 02:24:45.105 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
81. select   ROWNUM AS no,a.* from    TBL_carInfo a where   a.company_no = '100' order by a.car_regno
 {executed in 1 msec}
2023-06-25 02:24:45.106 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
81. select   ROWNUM AS no,a.* from    TBL_carInfo a where   a.company_no = '100' order by a.car_regno
 {executed in 1 msec}
2023-06-25 02:24:45.339 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1fa16c26
2023-06-25 02:24:45.339 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_CARINFO} 
2023-06-25 02:24:45.339 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_carInfo a where   a.company_no = '100' order by a.car_regno
2023-06-25 02:24:45.341 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
81. select   ROWNUM AS no,a.* from    TBL_carInfo a where   a.company_no = '100' order by a.car_regno
 {executed in 2 msec}
2023-06-25 02:24:45.343 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
81. select   ROWNUM AS no,a.* from    TBL_carInfo a where   a.company_no = '100' order by a.car_regno
 {executed in 2 msec}
2023-06-25 02:24:45.565 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1fa16c26
2023-06-25 02:24:45.565 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_CARINFO} 
2023-06-25 02:24:45.565 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_carInfo a where   a.company_no = '100' order by a.car_regno
2023-06-25 02:24:45.568 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
81. select   ROWNUM AS no,a.* from    TBL_carInfo a where   a.company_no = '100' order by a.car_regno
 {executed in 1 msec}
2023-06-25 02:24:45.570 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
81. select   ROWNUM AS no,a.* from    TBL_carInfo a where   a.company_no = '100' order by a.car_regno
 {executed in 1 msec}
2023-06-25 02:24:45.798 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1fa16c26
2023-06-25 02:24:45.798 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_CARINFO} 
2023-06-25 02:24:45.798 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_carInfo a where   a.company_no = '100' order by a.car_regno
2023-06-25 02:24:45.800 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
81. select   ROWNUM AS no,a.* from    TBL_carInfo a where   a.company_no = '100' order by a.car_regno
 {executed in 2 msec}
2023-06-25 02:24:45.802 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
81. select   ROWNUM AS no,a.* from    TBL_carInfo a where   a.company_no = '100' order by a.car_regno
 {executed in 2 msec}
2023-06-25 02:24:46.025 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1fa16c26
2023-06-25 02:24:46.025 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_CARINFO} 
2023-06-25 02:24:46.025 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_carInfo a where   a.company_no = '100' order by a.car_regno
2023-06-25 02:24:46.027 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
81. select   ROWNUM AS no,a.* from    TBL_carInfo a where   a.company_no = '100' order by a.car_regno
 {executed in 2 msec}
2023-06-25 02:24:46.029 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
81. select   ROWNUM AS no,a.* from    TBL_carInfo a where   a.company_no = '100' order by a.car_regno
 {executed in 1 msec}
2023-06-25 02:24:46.250 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1fa16c26
2023-06-25 02:24:46.250 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_CARINFO} 
2023-06-25 02:24:46.251 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_carInfo a where   a.company_no = '100' order by a.car_regno
2023-06-25 02:24:46.252 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
81. select   ROWNUM AS no,a.* from    TBL_carInfo a where   a.company_no = '100' order by a.car_regno
 {executed in 1 msec}
2023-06-25 02:24:46.254 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
81. select   ROWNUM AS no,a.* from    TBL_carInfo a where   a.company_no = '100' order by a.car_regno
 {executed in 1 msec}
2023-06-25 02:24:46.481 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1fa16c26
2023-06-25 02:24:46.482 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_CARINFO} 
2023-06-25 02:24:46.482 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_carInfo a where   a.company_no = '100' order by a.car_regno
2023-06-25 02:24:46.484 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
81. select   ROWNUM AS no,a.* from    TBL_carInfo a where   a.company_no = '100' order by a.car_regno
 {executed in 1 msec}
2023-06-25 02:24:46.486 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
81. select   ROWNUM AS no,a.* from    TBL_carInfo a where   a.company_no = '100' order by a.car_regno
 {executed in 2 msec}
2023-06-25 02:24:47.663 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1fa16c26
2023-06-25 02:24:47.663 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_CARINFO} 
2023-06-25 02:24:47.663 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_carInfo a where   a.company_no = '100' order by a.car_regno
2023-06-25 02:24:47.664 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
81. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 02:24:47.665 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
81. select   ROWNUM AS no,a.* from    TBL_carInfo a where   a.company_no = '100' order by a.car_regno
 {executed in 1 msec}
2023-06-25 02:24:47.667 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
81. select   ROWNUM AS no,a.* from    TBL_carInfo a where   a.company_no = '100' order by a.car_regno
 {executed in 2 msec}
2023-06-25 02:24:48.722 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1fa16c26
2023-06-25 02:24:48.722 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_CARINFO} 
2023-06-25 02:24:48.722 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_carInfo a where   a.company_no = '100' order by a.car_regno
2023-06-25 02:24:48.724 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
81. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 02:24:48.725 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
81. select   ROWNUM AS no,a.* from    TBL_carInfo a where   a.company_no = '100' order by a.car_regno
 {executed in 1 msec}
2023-06-25 02:24:48.726 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
81. select   ROWNUM AS no,a.* from    TBL_carInfo a where   a.company_no = '100' order by a.car_regno
 {executed in 1 msec}
2023-06-25 02:24:50.118 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1fa16c26
2023-06-25 02:24:50.118 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_CARINFO} 
2023-06-25 02:24:50.118 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_carInfo a where   a.company_no = '100' order by a.car_regno
2023-06-25 02:24:50.120 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
81. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 02:24:50.121 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
81. select   ROWNUM AS no,a.* from    TBL_carInfo a where   a.company_no = '100' order by a.car_regno
 {executed in 1 msec}
2023-06-25 02:24:50.122 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
81. select   ROWNUM AS no,a.* from    TBL_carInfo a where   a.company_no = '100' order by a.car_regno
 {executed in 1 msec}
2023-06-25 02:27:06.439 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@34d8d0ee
2023-06-25 02:27:06.439 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_EMPLOYEEINFO} 
2023-06-25 02:27:06.439 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
2023-06-25 02:27:06.440 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
81. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 02:27:06.442 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
81. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 2 msec}
2023-06-25 02:27:06.445 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
81. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 2 msec}
2023-06-25 02:29:43.374 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1fa16c26
2023-06-25 02:29:43.374 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_CARINFO} 
2023-06-25 02:29:43.374 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_carInfo a where   a.company_no = '100' order by a.car_regno
2023-06-25 02:29:43.375 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
90. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 02:29:43.378 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
90. select   ROWNUM AS no,a.* from    TBL_carInfo a where   a.company_no = '100' order by a.car_regno
 {executed in 2 msec}
2023-06-25 02:29:43.381 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
90. select   ROWNUM AS no,a.* from    TBL_carInfo a where   a.company_no = '100' order by a.car_regno
 {executed in 2 msec}
2023-06-25 02:30:12.114 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@34d8d0ee
2023-06-25 02:30:12.114 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_EMPLOYEEINFO} 
2023-06-25 02:30:12.114 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
2023-06-25 02:30:12.115 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
91. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 02:30:12.119 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
91. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 3 msec}
2023-06-25 02:30:12.122 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
91. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 3 msec}
2023-06-25 02:30:16.622 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1fa16c26
2023-06-25 02:30:16.622 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_CARINFO} 
2023-06-25 02:30:16.622 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_carInfo a where   a.company_no = '100' order by a.car_regno
2023-06-25 02:30:16.623 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
91. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 02:30:16.625 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
91. select   ROWNUM AS no,a.* from    TBL_carInfo a where   a.company_no = '100' order by a.car_regno
 {executed in 2 msec}
2023-06-25 02:30:16.627 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
91. select   ROWNUM AS no,a.* from    TBL_carInfo a where   a.company_no = '100' order by a.car_regno
 {executed in 1 msec}
2023-06-25 02:31:18.455 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1fa16c26
2023-06-25 02:31:18.455 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_CARINFO} 
2023-06-25 02:31:18.455 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_carInfo a where   a.company_no = '100' order by a.car_regno
2023-06-25 02:31:18.457 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
91. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 02:31:18.458 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
91. select   ROWNUM AS no,a.* from    TBL_carInfo a where   a.company_no = '100' order by a.car_regno
 {executed in 1 msec}
2023-06-25 02:31:18.460 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
91. select   ROWNUM AS no,a.* from    TBL_carInfo a where   a.company_no = '100' order by a.car_regno
 {executed in 2 msec}
2023-06-25 05:33:30.913 WARN  [H2 housekeeper] [com.zaxxer.hikari.pool.HikariPool] - H2 - Thread starvation or clock leap detected (housekeeper delta=3h28s594ms807µs400ns).
2023-06-25 05:33:34.223 INFO  [Catalina-utility-2] [c.pjy.dashboard.listener.SessionListener] - updateUserCloseTime p00139 
2023-06-25 05:33:34.223 INFO  [Catalina-utility-2] [c.pjy.dashboard.listener.SessionListener] - currentSessionUserList ->  false
2023-06-25 05:33:34.224 INFO  [Catalina-utility-2] [c.pjy.dashboard.listener.SessionListener] - updateUserCloseTime p00139 
2023-06-25 05:33:34.224 INFO  [Catalina-utility-2] [c.pjy.dashboard.listener.SessionListener] - currentSessionUserList ->  false
2023-06-25 09:45:34.518 WARN  [H2 housekeeper] [com.zaxxer.hikari.pool.HikariPool] - H2 - Thread starvation or clock leap detected (housekeeper delta=4h12m11s568ms918µs).
2023-06-25 09:46:51.196 INFO  [http-nio-10010-exec-5] [c.p.d.interceptor.LoggerInterceptor] - ============================== START ==============================
2023-06-25 09:46:51.196 INFO  [http-nio-10010-exec-5] [c.p.d.interceptor.LoggerInterceptor] -  Class       	:  class org.springframework.web.method.HandlerMethod
2023-06-25 09:46:51.196 INFO  [http-nio-10010-exec-5] [c.p.d.interceptor.LoggerInterceptor] -  Request URI 	:  /
2023-06-25 09:46:51.196 INFO  [http-nio-10010-exec-5] [c.p.d.interceptor.LoggerInterceptor] -  Request addr	:  0:0:0:0:0:0:0:1
2023-06-25 09:46:51.196 INFO  [http-nio-10010-exec-5] [c.p.d.interceptor.LoggerInterceptor] -  Servlet URI 	:  /
2023-06-25 09:46:51.306 ERROR [http-nio-10010-exec-5] [o.a.c.c.C.[Tomcat].[localhost].[/].[jsp]] - Servlet.service() for servlet [jsp] threw exception
java.lang.IllegalStateException: Cannot create a session after the response has been committed
	at org.apache.catalina.connector.Request.doGetSession(Request.java:2993)
	at org.apache.catalina.connector.Request.getSession(Request.java:2432)
	at org.apache.catalina.connector.RequestFacade.getSession(RequestFacade.java:908)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:244)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:582)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:527)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at org.apache.jasper.runtime.PageContextImpl.initialize(PageContextImpl.java:133)
	at org.apache.jasper.runtime.JspFactoryImpl.internalGetPageContext(JspFactoryImpl.java:109)
	at org.apache.jasper.runtime.JspFactoryImpl.getPageContext(JspFactoryImpl.java:60)
	at org.apache.jsp.WEB_002dINF.jsp.home_jsp._jspService(home_jsp.java:121)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:477)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:385)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:329)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:580)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:516)
	at org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequestDispatcher.include(HeaderWriterFilter.java:149)
	at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:163)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:317)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1372)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:97)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at jdk.internal.reflect.GeneratedMethodAccessor149.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$2728fa4.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:114)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:104)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-06-25 09:46:51.314 ERROR [http-nio-10010-exec-5] [o.a.c.c.C.[.[.[/].[dispatcherServlet]] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [javax.servlet.ServletException: java.lang.IllegalStateException: Cannot create a session after the response has been committed] with root cause
java.lang.IllegalStateException: Cannot create a session after the response has been committed
	at org.apache.catalina.connector.Request.doGetSession(Request.java:2993)
	at org.apache.catalina.connector.Request.getSession(Request.java:2432)
	at org.apache.catalina.connector.RequestFacade.getSession(RequestFacade.java:908)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:244)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:582)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:527)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at org.apache.jasper.runtime.PageContextImpl.initialize(PageContextImpl.java:133)
	at org.apache.jasper.runtime.JspFactoryImpl.internalGetPageContext(JspFactoryImpl.java:109)
	at org.apache.jasper.runtime.JspFactoryImpl.getPageContext(JspFactoryImpl.java:60)
	at org.apache.jsp.WEB_002dINF.jsp.home_jsp._jspService(home_jsp.java:121)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:477)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:385)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:329)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:580)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:516)
	at org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequestDispatcher.include(HeaderWriterFilter.java:149)
	at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:163)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:317)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1372)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:97)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at jdk.internal.reflect.GeneratedMethodAccessor149.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$2728fa4.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:114)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:104)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-06-25 09:46:51.319 INFO  [http-nio-10010-exec-5] [c.p.d.interceptor.LoggerInterceptor] - ============================== START ==============================
2023-06-25 09:46:51.319 INFO  [http-nio-10010-exec-5] [c.p.d.interceptor.LoggerInterceptor] -  Class       	:  class org.springframework.web.method.HandlerMethod
2023-06-25 09:46:51.319 INFO  [http-nio-10010-exec-5] [c.p.d.interceptor.LoggerInterceptor] -  Request URI 	:  /error
2023-06-25 09:46:51.319 INFO  [http-nio-10010-exec-5] [c.p.d.interceptor.LoggerInterceptor] -  Request addr	:  0:0:0:0:0:0:0:1
2023-06-25 09:46:51.319 INFO  [http-nio-10010-exec-5] [c.p.d.interceptor.LoggerInterceptor] -  Servlet URI 	:  /error
2023-06-25 09:46:52.288 ERROR [http-nio-10010-exec-5] [o.a.c.c.C.[Tomcat].[localhost].[/].[jsp]] - Servlet.service() for servlet [jsp] threw exception
java.lang.IllegalStateException: Cannot create a session after the response has been committed
	at org.apache.catalina.connector.Request.doGetSession(Request.java:2993)
	at org.apache.catalina.connector.Request.getSession(Request.java:2432)
	at org.apache.catalina.connector.RequestFacade.getSession(RequestFacade.java:908)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:244)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:582)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:244)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:582)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:527)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at org.apache.jasper.runtime.PageContextImpl.initialize(PageContextImpl.java:133)
	at org.apache.jasper.runtime.JspFactoryImpl.internalGetPageContext(JspFactoryImpl.java:109)
	at org.apache.jasper.runtime.JspFactoryImpl.getPageContext(JspFactoryImpl.java:60)
	at org.apache.jsp.WEB_002dINF.jsp.error_jsp._jspService(error_jsp.java:107)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:477)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:385)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:329)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:580)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:516)
	at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:163)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:317)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1372)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at jdk.internal.reflect.GeneratedMethodAccessor149.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$2728fa4.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-06-25 09:46:52.290 ERROR [http-nio-10010-exec-5] [o.a.c.c.C.[.[.[/].[dispatcherServlet]] - Servlet.service() for servlet [dispatcherServlet] threw exception
java.lang.IllegalStateException: Cannot create a session after the response has been committed
	at org.apache.catalina.connector.Request.doGetSession(Request.java:2993)
	at org.apache.catalina.connector.Request.getSession(Request.java:2432)
	at org.apache.catalina.connector.RequestFacade.getSession(RequestFacade.java:908)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:244)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:582)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:244)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:582)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:527)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at org.apache.jasper.runtime.PageContextImpl.initialize(PageContextImpl.java:133)
	at org.apache.jasper.runtime.JspFactoryImpl.internalGetPageContext(JspFactoryImpl.java:109)
	at org.apache.jasper.runtime.JspFactoryImpl.getPageContext(JspFactoryImpl.java:60)
	at org.apache.jsp.WEB_002dINF.jsp.error_jsp._jspService(error_jsp.java:107)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:477)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:385)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:329)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:580)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:516)
	at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:163)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:317)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1372)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at jdk.internal.reflect.GeneratedMethodAccessor149.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$2728fa4.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-06-25 09:46:52.291 ERROR [http-nio-10010-exec-5] [o.a.c.c.C.[Tomcat].[localhost]] - Exception Processing ErrorPage[errorCode=0, location=/error]
org.apache.jasper.JasperException: javax.servlet.ServletException: java.lang.IllegalStateException: Cannot create a session after the response has been committed
	at org.apache.jasper.servlet.JspServletWrapper.handleJspException(JspServletWrapper.java:639)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:500)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:385)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:329)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:580)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:516)
	at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:163)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:317)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1372)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at jdk.internal.reflect.GeneratedMethodAccessor149.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$2728fa4.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: javax.servlet.ServletException: java.lang.IllegalStateException: Cannot create a session after the response has been committed
	at org.apache.jsp.WEB_002dINF.jsp.error_jsp._jspService(error_jsp.java:144)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:477)
	... 97 common frames omitted
Caused by: java.lang.IllegalStateException: Cannot create a session after the response has been committed
	at org.apache.catalina.connector.Request.doGetSession(Request.java:2993)
	at org.apache.catalina.connector.Request.getSession(Request.java:2432)
	at org.apache.catalina.connector.RequestFacade.getSession(RequestFacade.java:908)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:244)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:582)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:244)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:582)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:527)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at org.apache.jasper.runtime.PageContextImpl.initialize(PageContextImpl.java:133)
	at org.apache.jasper.runtime.JspFactoryImpl.internalGetPageContext(JspFactoryImpl.java:109)
	at org.apache.jasper.runtime.JspFactoryImpl.getPageContext(JspFactoryImpl.java:60)
	at org.apache.jsp.WEB_002dINF.jsp.error_jsp._jspService(error_jsp.java:107)
	... 100 common frames omitted
2023-06-25 09:46:52.595 INFO  [http-nio-10010-exec-6] [c.p.d.interceptor.LoggerInterceptor] - ============================== START ==============================
2023-06-25 09:46:52.595 INFO  [http-nio-10010-exec-6] [c.p.d.interceptor.LoggerInterceptor] -  Class       	:  class org.springframework.web.method.HandlerMethod
2023-06-25 09:46:52.595 INFO  [http-nio-10010-exec-6] [c.p.d.interceptor.LoggerInterceptor] -  Request URI 	:  /error
2023-06-25 09:46:52.595 INFO  [http-nio-10010-exec-6] [c.p.d.interceptor.LoggerInterceptor] -  Request addr	:  0:0:0:0:0:0:0:1
2023-06-25 09:46:52.596 INFO  [http-nio-10010-exec-6] [c.p.d.interceptor.LoggerInterceptor] -  Servlet URI 	:  /error
2023-06-25 09:46:54.120 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
111. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 09:46:54.121 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
111. select * from MEMBER where userId = 'p00139'
 {executed in 1 msec}
2023-06-25 09:46:54.137 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.MemberServiceImpl] - ROLE_ADMIN
2023-06-25 09:46:54.230 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.MemberServiceImpl] - pass:$2a$10$MNrQAPw.4k9j2y08eTmYEeI7oKPuaWbA97HHog.8PYep5HsRwhbae,$2a$10$DzLjhCjdyDs1pvyCUo8MDOQ0hY1VB3bSCbeIhMrE8C.g6YGVDQz1y
2023-06-25 09:46:54.329 INFO  [http-nio-10010-exec-9] [c.p.d.configuration.SecurityConfig] - authentication:: p00139
2023-06-25 09:46:58.552 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@34d8d0ee
2023-06-25 09:46:58.552 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_EMPLOYEEINFO} 
2023-06-25 09:46:58.552 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
2023-06-25 09:46:58.553 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
111. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 09:46:58.556 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 3 msec}
2023-06-25 09:46:58.560 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 2 msec}
2023-06-25 09:48:26.118 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@34d8d0ee
2023-06-25 09:48:26.118 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_EMPLOYEEINFO} 
2023-06-25 09:48:26.118 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
2023-06-25 09:48:26.119 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
111. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 09:48:26.122 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 3 msec}
2023-06-25 09:48:26.124 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 2 msec}
2023-06-25 09:48:53.049 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@34d8d0ee
2023-06-25 09:48:53.051 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_EMPLOYEEINFO} 
2023-06-25 09:48:53.051 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
2023-06-25 09:48:53.051 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
111. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 09:48:53.057 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 6 msec}
2023-06-25 09:48:53.060 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 2 msec}
2023-06-25 09:49:30.547 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@f2a3787a
2023-06-25 09:49:30.547 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_DRIVERINFO} 
2023-06-25 09:49:30.547 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_DRIVERINFO a where   a.company_no = '100' order by a.emp_no
2023-06-25 09:49:30.548 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
111. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 09:49:30.554 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. select   ROWNUM AS no,a.* from    TBL_DRIVERINFO a where   a.company_no = '100' order by a.emp_no
 {executed in 5 msec}
2023-06-25 09:49:30.557 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. select   ROWNUM AS no,a.* from    TBL_DRIVERINFO a where   a.company_no = '100' order by a.emp_no
 {executed in 3 msec}
2023-06-25 09:50:32.084 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@f2a3787a
2023-06-25 09:50:32.084 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_DRIVERINFO} 
2023-06-25 09:50:32.084 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_DRIVERINFO a where   a.company_no = '100' order by a.emp_no
2023-06-25 09:50:32.085 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
111. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 09:50:32.089 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. select   ROWNUM AS no,a.* from    TBL_DRIVERINFO a where   a.company_no = '100' order by a.emp_no
 {executed in 4 msec}
2023-06-25 09:50:32.092 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. select   ROWNUM AS no,a.* from    TBL_DRIVERINFO a where   a.company_no = '100' order by a.emp_no
 {executed in 3 msec}
2023-06-25 09:51:41.658 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@f2a3787a
2023-06-25 09:51:41.658 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_DRIVERINFO} 
2023-06-25 09:51:41.658 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_DRIVERINFO a where   a.company_no = '100' order by a.emp_no
2023-06-25 09:51:41.659 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
111. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 09:51:41.662 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. select   ROWNUM AS no,a.* from    TBL_DRIVERINFO a where   a.company_no = '100' order by a.emp_no
 {executed in 3 msec}
2023-06-25 09:51:41.665 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. select   ROWNUM AS no,a.* from    TBL_DRIVERINFO a where   a.company_no = '100' order by a.emp_no
 {executed in 3 msec}
2023-06-25 09:51:57.347 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@6e1be03c
2023-06-25 09:51:57.347 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ROUTEINFO} 
2023-06-25 09:51:57.347 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_ROUTEINFO a where   a.company_no = '100' order by a.lno
2023-06-25 09:51:57.347 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
111. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 09:51:57.348 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. select   ROWNUM AS no,a.* from    TBL_ROUTEINFO a where   a.company_no = '100' order by a.lno
 {executed in 1 msec}
2023-06-25 09:51:57.349 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. select   ROWNUM AS no,a.* from    TBL_ROUTEINFO a where   a.company_no = '100' order by a.lno
 {executed in 0 msec}
2023-06-25 09:51:57.418 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@7b08245
2023-06-25 09:51:57.418 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - filterType={selectRouteSeqDistance} 
2023-06-25 09:51:57.418 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT ROUTE_NM ,	(SELECT max(HOLDING_CNT ) FROM   TBL_ROUTEINFO WHERE company_no= '100') AS maxcnt , 	listagg(k.seq ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS seq ,	listagg(k.DISTANCE  ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS distance FROM 	TBM_ROUTE_SEQ_DISTANCE_INFO k WHERE 	COMPANY_NO  = '100' GROUP BY ROUTE_NM ORDER BY 1
2023-06-25 09:51:57.428 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. SELECT ROUTE_NM ,	(SELECT max(HOLDING_CNT ) FROM   TBL_ROUTEINFO WHERE company_no= '100') AS maxcnt , 	listagg(k.seq ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS seq ,	listagg(k.DISTANCE  ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS distance FROM 	TBM_ROUTE_SEQ_DISTANCE_INFO k WHERE 	COMPANY_NO  = '100' GROUP BY ROUTE_NM ORDER BY 1
 {executed in 10 msec}
2023-06-25 09:51:57.429 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. SELECT ROUTE_NM ,	(SELECT max(HOLDING_CNT ) FROM   TBL_ROUTEINFO WHERE company_no= '100') AS maxcnt , 	listagg(k.seq ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS seq ,	listagg(k.DISTANCE  ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS distance FROM 	TBM_ROUTE_SEQ_DISTANCE_INFO k WHERE 	COMPANY_NO  = '100' GROUP BY ROUTE_NM ORDER BY 1
 {executed in 1 msec}
2023-06-25 09:54:31.835 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@6e1be03c
2023-06-25 09:54:31.835 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ROUTEINFO} 
2023-06-25 09:54:31.835 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_ROUTEINFO a where   a.company_no = '100' order by a.lno
2023-06-25 09:54:31.836 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
111. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 09:54:31.837 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. select   ROWNUM AS no,a.* from    TBL_ROUTEINFO a where   a.company_no = '100' order by a.lno
 {executed in 1 msec}
2023-06-25 09:54:31.838 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. select   ROWNUM AS no,a.* from    TBL_ROUTEINFO a where   a.company_no = '100' order by a.lno
 {executed in 1 msec}
2023-06-25 09:54:31.911 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@7b08245
2023-06-25 09:54:31.911 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - filterType={selectRouteSeqDistance} 
2023-06-25 09:54:31.911 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT ROUTE_NM ,	(SELECT max(HOLDING_CNT ) FROM   TBL_ROUTEINFO WHERE company_no= '100') AS maxcnt , 	listagg(k.seq ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS seq ,	listagg(k.DISTANCE  ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS distance FROM 	TBM_ROUTE_SEQ_DISTANCE_INFO k WHERE 	COMPANY_NO  = '100' GROUP BY ROUTE_NM ORDER BY 1
2023-06-25 09:54:31.912 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. SELECT ROUTE_NM ,	(SELECT max(HOLDING_CNT ) FROM   TBL_ROUTEINFO WHERE company_no= '100') AS maxcnt , 	listagg(k.seq ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS seq ,	listagg(k.DISTANCE  ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS distance FROM 	TBM_ROUTE_SEQ_DISTANCE_INFO k WHERE 	COMPANY_NO  = '100' GROUP BY ROUTE_NM ORDER BY 1
 {executed in 1 msec}
2023-06-25 09:54:31.913 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. SELECT ROUTE_NM ,	(SELECT max(HOLDING_CNT ) FROM   TBL_ROUTEINFO WHERE company_no= '100') AS maxcnt , 	listagg(k.seq ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS seq ,	listagg(k.DISTANCE  ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS distance FROM 	TBM_ROUTE_SEQ_DISTANCE_INFO k WHERE 	COMPANY_NO  = '100' GROUP BY ROUTE_NM ORDER BY 1
 {executed in 1 msec}
2023-06-25 09:55:37.735 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@6e1be03c
2023-06-25 09:55:37.735 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ROUTEINFO} 
2023-06-25 09:55:37.735 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_ROUTEINFO a where   a.company_no = '100' order by a.lno
2023-06-25 09:55:37.735 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
111. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 09:55:37.737 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. select   ROWNUM AS no,a.* from    TBL_ROUTEINFO a where   a.company_no = '100' order by a.lno
 {executed in 0 msec}
2023-06-25 09:55:37.738 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. select   ROWNUM AS no,a.* from    TBL_ROUTEINFO a where   a.company_no = '100' order by a.lno
 {executed in 0 msec}
2023-06-25 09:56:59.980 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@6e1be03c
2023-06-25 09:56:59.980 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ROUTEINFO} 
2023-06-25 09:56:59.980 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_ROUTEINFO a where   a.company_no = '100' order by a.lno
2023-06-25 09:56:59.981 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
111. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 09:56:59.982 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. select   ROWNUM AS no,a.* from    TBL_ROUTEINFO a where   a.company_no = '100' order by a.lno
 {executed in 0 msec}
2023-06-25 09:56:59.984 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. select   ROWNUM AS no,a.* from    TBL_ROUTEINFO a where   a.company_no = '100' order by a.lno
 {executed in 0 msec}
2023-06-25 09:57:01.685 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@6e1be03c
2023-06-25 09:57:01.685 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ROUTEINFO} 
2023-06-25 09:57:01.686 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_ROUTEINFO a where   a.company_no = '100' order by a.lno
2023-06-25 09:57:01.686 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
111. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 09:57:01.687 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. select   ROWNUM AS no,a.* from    TBL_ROUTEINFO a where   a.company_no = '100' order by a.lno
 {executed in 1 msec}
2023-06-25 09:57:01.688 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. select   ROWNUM AS no,a.* from    TBL_ROUTEINFO a where   a.company_no = '100' order by a.lno
 {executed in 1 msec}
2023-06-25 09:57:10.627 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@6e1be03c
2023-06-25 09:57:10.627 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ROUTEINFO} 
2023-06-25 09:57:10.627 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_ROUTEINFO a where   a.company_no = '100' order by a.lno
2023-06-25 09:57:10.628 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
111. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 09:57:10.628 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. select   ROWNUM AS no,a.* from    TBL_ROUTEINFO a where   a.company_no = '100' order by a.lno
 {executed in 0 msec}
2023-06-25 09:57:10.629 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. select   ROWNUM AS no,a.* from    TBL_ROUTEINFO a where   a.company_no = '100' order by a.lno
 {executed in 1 msec}
2023-06-25 09:57:12.173 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@6e1be03c
2023-06-25 09:57:12.173 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ROUTEINFO} 
2023-06-25 09:57:12.173 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_ROUTEINFO a where   a.company_no = '100' order by a.lno
2023-06-25 09:57:12.174 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
111. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 09:57:12.175 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. select   ROWNUM AS no,a.* from    TBL_ROUTEINFO a where   a.company_no = '100' order by a.lno
 {executed in 1 msec}
2023-06-25 09:57:12.177 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. select   ROWNUM AS no,a.* from    TBL_ROUTEINFO a where   a.company_no = '100' order by a.lno
 {executed in 0 msec}
2023-06-25 09:58:08.819 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@34d8d0ee
2023-06-25 09:58:08.820 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_EMPLOYEEINFO} 
2023-06-25 09:58:08.820 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
2023-06-25 09:58:08.820 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
111. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 09:58:08.823 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 1 msec}
2023-06-25 09:58:08.825 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 2 msec}
2023-06-25 09:59:04.887 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@6e1be03c
2023-06-25 09:59:04.887 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ROUTEINFO} 
2023-06-25 09:59:04.888 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_ROUTEINFO a where   a.company_no = '100' order by a.lno
2023-06-25 09:59:04.888 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
111. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 09:59:04.889 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. select   ROWNUM AS no,a.* from    TBL_ROUTEINFO a where   a.company_no = '100' order by a.lno
 {executed in 1 msec}
2023-06-25 09:59:04.890 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. select   ROWNUM AS no,a.* from    TBL_ROUTEINFO a where   a.company_no = '100' order by a.lno
 {executed in 0 msec}
2023-06-25 09:59:07.332 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@6e1be03c
2023-06-25 09:59:07.332 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ROUTEINFO} 
2023-06-25 09:59:07.332 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_ROUTEINFO a where   a.company_no = '100' order by a.lno
2023-06-25 09:59:07.333 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
111. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 09:59:07.334 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. select   ROWNUM AS no,a.* from    TBL_ROUTEINFO a where   a.company_no = '100' order by a.lno
 {executed in 1 msec}
2023-06-25 09:59:07.335 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. select   ROWNUM AS no,a.* from    TBL_ROUTEINFO a where   a.company_no = '100' order by a.lno
 {executed in 1 msec}
2023-06-25 09:59:27.429 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1fa16c26
2023-06-25 09:59:27.429 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_CARINFO} 
2023-06-25 09:59:27.430 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_carInfo a where   a.company_no = '100' order by a.car_regno
2023-06-25 09:59:27.431 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
111. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 09:59:27.433 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. select   ROWNUM AS no,a.* from    TBL_carInfo a where   a.company_no = '100' order by a.car_regno
 {executed in 2 msec}
2023-06-25 09:59:27.435 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. select   ROWNUM AS no,a.* from    TBL_carInfo a where   a.company_no = '100' order by a.car_regno
 {executed in 2 msec}
2023-06-25 09:59:47.664 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@6e1be03c
2023-06-25 09:59:47.665 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ROUTEINFO} 
2023-06-25 09:59:47.665 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_ROUTEINFO a where   a.company_no = '100' order by a.lno
2023-06-25 09:59:47.665 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
111. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 09:59:47.666 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. select   ROWNUM AS no,a.* from    TBL_ROUTEINFO a where   a.company_no = '100' order by a.lno
 {executed in 0 msec}
2023-06-25 09:59:47.667 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. select   ROWNUM AS no,a.* from    TBL_ROUTEINFO a where   a.company_no = '100' order by a.lno
 {executed in 1 msec}
2023-06-25 10:00:23.298 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@34d8d0ee
2023-06-25 10:00:23.298 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_EMPLOYEEINFO} 
2023-06-25 10:00:23.298 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
2023-06-25 10:00:23.299 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
111. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 10:00:23.301 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 2 msec}
2023-06-25 10:00:23.305 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 3 msec}
2023-06-25 10:00:27.159 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@34d8d0ee
2023-06-25 10:00:27.159 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_EMPLOYEEINFO} 
2023-06-25 10:00:27.159 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
2023-06-25 10:00:27.160 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
111. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 10:00:27.164 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 3 msec}
2023-06-25 10:00:27.167 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 3 msec}
2023-06-25 10:01:04.904 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1fa16c26
2023-06-25 10:01:04.904 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_CARINFO} 
2023-06-25 10:01:04.904 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_carInfo a where   a.company_no = '100' order by a.car_regno
2023-06-25 10:01:04.905 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
111. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 10:01:04.908 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. select   ROWNUM AS no,a.* from    TBL_carInfo a where   a.company_no = '100' order by a.car_regno
 {executed in 1 msec}
2023-06-25 10:01:04.909 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. select   ROWNUM AS no,a.* from    TBL_carInfo a where   a.company_no = '100' order by a.car_regno
 {executed in 1 msec}
2023-06-25 10:01:07.491 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@f2a3787a
2023-06-25 10:01:07.491 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_DRIVERINFO} 
2023-06-25 10:01:07.492 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_DRIVERINFO a where   a.company_no = '100' order by a.emp_no
2023-06-25 10:01:07.492 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
111. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 10:01:07.496 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. select   ROWNUM AS no,a.* from    TBL_DRIVERINFO a where   a.company_no = '100' order by a.emp_no
 {executed in 4 msec}
2023-06-25 10:01:07.501 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. select   ROWNUM AS no,a.* from    TBL_DRIVERINFO a where   a.company_no = '100' order by a.emp_no
 {executed in 4 msec}
2023-06-25 10:01:10.739 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@6e1be03c
2023-06-25 10:01:10.739 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ROUTEINFO} 
2023-06-25 10:01:10.739 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_ROUTEINFO a where   a.company_no = '100' order by a.lno
2023-06-25 10:01:10.739 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
111. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 10:01:10.740 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. select   ROWNUM AS no,a.* from    TBL_ROUTEINFO a where   a.company_no = '100' order by a.lno
 {executed in 1 msec}
2023-06-25 10:01:10.741 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. select   ROWNUM AS no,a.* from    TBL_ROUTEINFO a where   a.company_no = '100' order by a.lno
 {executed in 1 msec}
2023-06-25 10:01:27.002 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@b5165f00
2023-06-25 10:01:27.002 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-06-25 10:01:27.002 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.base_year = '2023' order by a.acc_date,acc_time
2023-06-25 10:01:27.003 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
111. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 10:01:27.006 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.base_year = '2023' order by a.acc_date,acc_time
 {executed in 3 msec}
2023-06-25 10:01:27.008 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.base_year = '2023' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-06-25 10:01:27.314 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@b5165f00
2023-06-25 10:01:27.314 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-06-25 10:01:27.314 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.base_year = '2023' order by a.acc_date,acc_time
2023-06-25 10:01:27.318 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.base_year = '2023' order by a.acc_date,acc_time
 {executed in 3 msec}
2023-06-25 10:01:27.321 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.base_year = '2023' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-06-25 10:04:40.593 INFO  [RMI TCP Connection(215)-127.0.0.1] [o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin] - Application shutdown requested.
2023-06-25 10:04:40.635 INFO  [RMI TCP Connection(215)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Shutting down ExecutorService 'asyncThreadPool'
2023-06-25 10:04:40.637 INFO  [RMI TCP Connection(215)-127.0.0.1] [com.zaxxer.hikari.HikariDataSource] - H2 - Shutdown initiated...
2023-06-25 10:04:40.645 INFO  [RMI TCP Connection(215)-127.0.0.1] [com.zaxxer.hikari.HikariDataSource] - H2 - Shutdown completed.
2023-06-25 10:04:40.670 INFO  [RMI TCP Connection(215)-127.0.0.1] [com.pjy.dashboard.filter.TestFilter] - destroy Pjy Filter
2023-06-25 10:07:27.867 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Starting PjyApplication on DESKTOP-QJPD93S with PID 8996 (D:\BUS\dashboard\dashboard\target\classes started by admin in D:\BUS\dashboard\dashboard)
2023-06-25 10:07:27.874 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - The following profiles are active: oauth
2023-06-25 10:07:27.930 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-06-25 10:07:27.930 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-06-25 10:07:29.283 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-25 10:07:29.283 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-06-25 10:07:29.426 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 134ms. Found 3 JPA repository interfaces.
2023-06-25 10:07:29.771 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-25 10:07:29.771 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2023-06-25 10:07:29.818 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.FileRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-06-25 10:07:29.819 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.MemberRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-06-25 10:07:29.820 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.RememberMeRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-06-25 10:07:29.820 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 49ms. Found 0 JDBC repository interfaces.
2023-06-25 10:07:30.266 INFO  [restartedMain] [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] - Post-processing PropertySource instances
2023-06-25 10:07:30.336 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2023-06-25 10:07:30.336 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource commandLineArgs [org.springframework.core.env.SimpleCommandLinePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-06-25 10:07:30.337 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-06-25 10:07:30.337 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-06-25 10:07:30.337 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-25 10:07:30.338 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
2023-06-25 10:07:30.338 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2023-06-25 10:07:30.338 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application-oauth.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-25 10:07:30.338 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-25 10:07:30.338 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-25 10:07:30.338 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [pjy.properties] [org.springframework.core.env.CompositePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-06-25 10:07:30.339 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [common.properties] [org.springframework.core.io.support.ResourcePropertySource] to EncryptableMapPropertySourceWrapper
2023-06-25 10:07:30.402 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'asyncConfiguration' of type [com.pjy.dashboard.configuration.AsyncConfiguration$$EnhancerBySpringCGLIB$$485c6469] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-25 10:07:30.459 INFO  [restartedMain] [c.u.j.filter.DefaultLazyPropertyFilter] - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2023-06-25 10:07:30.548 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$3252c896] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-25 10:07:30.627 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-25 10:07:30.630 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@56fb7313' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-25 10:07:30.635 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$57276b48] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-25 10:07:30.646 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration$$EnhancerBySpringCGLIB$$7c7c835e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-25 10:07:30.650 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-25 10:07:30.651 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-25 10:07:30.677 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$99a5005c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-25 10:07:30.706 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$19254d8e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-25 10:07:30.844 INFO  [restartedMain] [c.u.j.r.DefaultLazyPropertyResolver] - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2023-06-25 10:07:30.851 INFO  [restartedMain] [c.u.j.d.DefaultLazyPropertyDetector] - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2023-06-25 10:07:31.269 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 10010 (http)
2023-06-25 10:07:31.285 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Initializing ProtocolHandler ["http-nio-10010"]
2023-06-25 10:07:31.296 INFO  [restartedMain] [org.apache.catalina.core.StandardService] - Starting service [Tomcat]
2023-06-25 10:07:31.297 INFO  [restartedMain] [org.apache.catalina.core.StandardEngine] - Starting Servlet engine: [Apache Tomcat/9.0.29]
2023-06-25 10:07:31.669 INFO  [restartedMain] [org.apache.jasper.servlet.TldScanner] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2023-06-25 10:07:31.681 INFO  [restartedMain] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring embedded WebApplicationContext
2023-06-25 10:07:31.681 INFO  [restartedMain] [o.s.web.context.ContextLoader] - Root WebApplicationContext: initialization completed in 3751 ms
2023-06-25 10:07:32.514 INFO  [restartedMain] [c.u.j.encryptor.DefaultLazyEncryptor] - Found Custom Encryptor Bean org.jasypt.encryption.pbe.PooledPBEStringEncryptor@55a8e353 with name: jasyptStringEncryptor
2023-06-25 10:07:32.564 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Starting...
2023-06-25 10:07:32.653 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.executeSql(PoolBase.java:567)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 6 msec}
2023-06-25 10:07:32.661 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Start completed.
2023-06-25 10:07:33.428 INFO  [restartedMain] [com.pjy.dashboard.filter.TestFilter] - init Pjy Filter
2023-06-25 10:07:33.782 INFO  [restartedMain] [o.hibernate.jpa.internal.util.LogHelper] - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2023-06-25 10:07:33.857 INFO  [restartedMain] [org.hibernate.Version] - HHH000412: Hibernate Core {5.3.14.Final}
2023-06-25 10:07:33.860 INFO  [restartedMain] [org.hibernate.cfg.Environment] - HHH000206: hibernate.properties not found
2023-06-25 10:07:34.016 INFO  [restartedMain] [org.hibernate.annotations.common.Version] - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2023-06-25 10:07:34.255 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 10:07:34.272 INFO  [restartedMain] [org.hibernate.dialect.Dialect] - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2023-06-25 10:07:35.012 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 10:07:35.015 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select SEQUENCE_CATALOG, SEQUENCE_SCHEMA, SEQUENCE_NAME, INCREMENT from information_schema.sequences
 {executed in 1 msec}
2023-06-25 10:07:35.065 INFO  [restartedMain] [o.s.o.j.LocalContainerEntityManagerFactoryBean] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-06-25 10:07:35.329 INFO  [restartedMain] [o.h.h.i.QueryTranslatorFactoryInitiator] - HHH000397: Using ASTQueryTranslatorFactory
2023-06-25 10:07:36.389 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService
2023-06-25 10:07:36.399 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'asyncThreadPool'
2023-06-25 10:07:36.585 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/h2-console/**'], []
2023-06-25 10:07:36.586 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/css/**'], []
2023-06-25 10:07:36.586 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/js/**'], []
2023-06-25 10:07:36.586 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/monitor/**'], []
2023-06-25 10:07:36.586 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/img/**'], []
2023-06-25 10:07:36.586 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/lib/**'], []
2023-06-25 10:07:36.586 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/main.css'], []
2023-06-25 10:07:36.586 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/common.js'], []
2023-06-25 10:07:36.586 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/resources/**'], []
2023-06-25 10:07:36.750 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5efe8c4a, org.springframework.security.web.context.SecurityContextPersistenceFilter@708e97a5, org.springframework.security.web.header.HeaderWriterFilter@2002b0fa, org.springframework.web.filter.CorsFilter@77bcfe26, org.springframework.security.web.authentication.logout.LogoutFilter@368e1677, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@31cceb14, org.springframework.security.web.session.ConcurrentSessionFilter@c6a9884, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@6e0c1b0, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3990af5c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@c90dcd8, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3cad8dea, org.springframework.security.web.session.SessionManagementFilter@6c890302, org.springframework.security.web.access.ExceptionTranslationFilter@f386e85, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2278c1e6]
2023-06-25 10:07:36.771 INFO  [restartedMain] [o.s.aop.framework.CglibAopProxy] - Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(javax.servlet.FilterConfig) throws javax.servlet.ServletException] because it is marked as final: Consider using interface-based JDK proxies instead!
2023-06-25 10:07:37.131 WARN  [restartedMain] [o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-06-25 10:07:37.208 INFO  [restartedMain] [o.s.b.a.w.s.WelcomePageHandlerMapping] - Adding welcome page: ServletContext resource [/index.html]
2023-06-25 10:07:37.620 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 10:07:38.416 INFO  [restartedMain] [o.s.b.d.a.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2023-06-25 10:07:38.443 INFO  [restartedMain] [o.s.b.a.e.web.EndpointLinksResolver] - Exposing 16 endpoint(s) beneath base path '/actuator'
2023-06-25 10:07:38.582 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskScheduler] - Initializing ExecutorService
2023-06-25 10:07:38.584 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Starting ProtocolHandler ["http-nio-10010"]
2023-06-25 10:07:38.646 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 10010 (http) with context path ''
2023-06-25 10:07:38.651 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Started PjyApplication in 11.257 seconds (JVM running for 12.689)
2023-06-25 10:07:38.652 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-06-25 10:07:38.652 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - Application started
2023-06-25 10:07:38.652 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-06-25 10:07:40.088 INFO  [RMI TCP Connection(10)-127.0.0.1] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-25 10:07:40.088 INFO  [RMI TCP Connection(10)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Initializing Servlet 'dispatcherServlet'
2023-06-25 10:07:40.113 INFO  [RMI TCP Connection(10)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Completed initialization in 24 ms
2023-06-25 10:09:20.585 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@b5165f00
2023-06-25 10:09:20.585 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-06-25 10:09:20.653 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.base_year = '2023' order by a.acc_date,acc_time
2023-06-25 10:09:20.665 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 10:09:20.668 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.base_year = '2023' order by a.acc_date,acc_time
 {executed in 3 msec}
2023-06-25 10:09:20.676 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.base_year = '2023' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-06-25 10:10:35.991 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@b5165f00
2023-06-25 10:10:35.991 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-06-25 10:10:35.991 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.base_year = '2023' order by a.acc_date,acc_time
2023-06-25 10:10:35.992 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 10:10:35.995 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.base_year = '2023' order by a.acc_date,acc_time
 {executed in 3 msec}
2023-06-25 10:10:35.998 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.base_year = '2023' order by a.acc_date,acc_time
 {executed in 3 msec}
2023-06-25 10:11:26.757 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@b5165f00
2023-06-25 10:11:26.757 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-06-25 10:11:26.757 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.base_year = '2023' order by a.acc_date,acc_time
2023-06-25 10:11:26.758 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 10:11:26.762 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.base_year = '2023' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-06-25 10:11:26.765 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.base_year = '2023' order by a.acc_date,acc_time
 {executed in 3 msec}
2023-06-25 10:12:20.799 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@b5165f00
2023-06-25 10:12:20.799 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-06-25 10:12:20.799 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.base_year = '2023' order by a.acc_date,acc_time
2023-06-25 10:12:20.800 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 10:12:20.803 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.base_year = '2023' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-06-25 10:12:20.806 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.base_year = '2023' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-06-25 10:12:32.238 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@45e1bf5f
2023-06-25 10:12:32.238 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-06-25 10:12:32.238 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.base_year = '2022' order by a.acc_date,acc_time
2023-06-25 10:12:32.239 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 10:12:32.241 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.base_year = '2022' order by a.acc_date,acc_time
 {executed in 1 msec}
2023-06-25 10:12:32.242 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.base_year = '2022' order by a.acc_date,acc_time
 {executed in 1 msec}
2023-06-25 10:12:56.718 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@b5165f00
2023-06-25 10:12:56.718 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-06-25 10:12:56.719 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.base_year = '2023' order by a.acc_date,acc_time
2023-06-25 10:12:56.720 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 10:12:56.722 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.base_year = '2023' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-06-25 10:12:56.725 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.base_year = '2023' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-06-25 10:13:24.671 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@b5165f00
2023-06-25 10:13:24.671 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-06-25 10:13:24.671 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.base_year = '2023' order by a.acc_date,acc_time
2023-06-25 10:13:24.673 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 10:13:24.677 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.base_year = '2023' order by a.acc_date,acc_time
 {executed in 3 msec}
2023-06-25 10:13:24.680 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.base_year = '2023' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-06-25 10:15:39.423 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@b5165f00
2023-06-25 10:15:39.424 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-06-25 10:15:39.424 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.base_year = '2023' order by a.acc_date,acc_time
2023-06-25 10:15:39.425 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 10:15:39.428 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.base_year = '2023' order by a.acc_date,acc_time
 {executed in 3 msec}
2023-06-25 10:15:39.431 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.base_year = '2023' order by a.acc_date,acc_time
 {executed in 3 msec}
2023-06-25 10:16:10.848 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@b5165f00
2023-06-25 10:16:10.849 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-06-25 10:16:10.849 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.base_year = '2023' order by a.acc_date,acc_time
2023-06-25 10:16:10.850 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 10:16:10.854 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.base_year = '2023' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-06-25 10:16:10.857 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.base_year = '2023' order by a.acc_date,acc_time
 {executed in 3 msec}
2023-06-25 10:16:33.413 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@34d8d0ee
2023-06-25 10:16:33.413 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_EMPLOYEEINFO} 
2023-06-25 10:16:33.414 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
2023-06-25 10:16:33.415 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 10:16:33.419 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 4 msec}
2023-06-25 10:16:33.424 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 3 msec}
2023-06-25 10:17:21.039 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@b5165f00
2023-06-25 10:17:21.039 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-06-25 10:17:21.039 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.base_year = '2023' order by a.acc_date,acc_time
2023-06-25 10:17:21.040 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 10:17:21.044 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.base_year = '2023' order by a.acc_date,acc_time
 {executed in 3 msec}
2023-06-25 10:17:21.047 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.base_year = '2023' order by a.acc_date,acc_time
 {executed in 3 msec}
2023-06-25 10:21:12.074 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@b5165f00
2023-06-25 10:21:12.074 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-06-25 10:21:12.074 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.base_year = '2023' order by a.acc_date,acc_time
2023-06-25 10:21:12.075 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 10:21:12.078 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.base_year = '2023' order by a.acc_date,acc_time
 {executed in 3 msec}
2023-06-25 10:21:12.082 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.base_year = '2023' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-06-25 10:22:24.180 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@b5165f00
2023-06-25 10:22:24.180 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-06-25 10:22:24.181 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.base_year = '2023' order by a.acc_date,acc_time
2023-06-25 10:22:24.181 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 10:22:24.184 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.base_year = '2023' order by a.acc_date,acc_time
 {executed in 1 msec}
2023-06-25 10:22:24.187 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.base_year = '2023' order by a.acc_date,acc_time
 {executed in 3 msec}
2023-06-25 10:22:51.416 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@b5165f00
2023-06-25 10:22:51.416 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-06-25 10:22:51.416 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.base_year = '2023' order by a.acc_date,acc_time
2023-06-25 10:22:51.417 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 10:22:51.420 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.base_year = '2023' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-06-25 10:22:51.422 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.base_year = '2023' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-06-25 10:28:37.482 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@b5165f00
2023-06-25 10:28:37.482 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-06-25 10:28:37.483 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.base_year = '2023' order by a.acc_date,acc_time
2023-06-25 10:28:37.484 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
11. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 10:28:37.487 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
11. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.base_year = '2023' order by a.acc_date,acc_time
 {executed in 3 msec}
2023-06-25 10:28:37.491 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
11. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.base_year = '2023' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-06-25 10:29:09.632 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@b5165f00
2023-06-25 10:29:09.632 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-06-25 10:29:09.632 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.base_year = '2023' order by a.acc_date,acc_time
2023-06-25 10:29:09.633 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
11. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 10:29:09.637 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
11. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.base_year = '2023' order by a.acc_date,acc_time
 {executed in 3 msec}
2023-06-25 10:29:09.641 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
11. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.base_year = '2023' order by a.acc_date,acc_time
 {executed in 4 msec}
2023-06-25 10:29:49.284 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@b5165f00
2023-06-25 10:29:49.284 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-06-25 10:29:49.284 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.base_year = '2023' order by a.acc_date,acc_time
2023-06-25 10:29:49.285 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
11. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 10:29:49.288 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
11. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.base_year = '2023' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-06-25 10:29:49.292 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
11. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.base_year = '2023' order by a.acc_date,acc_time
 {executed in 3 msec}
2023-06-25 10:35:42.171 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.emp_no,a.emp_nm,nvl(b.route_nm,'-') as route_nm from    TBL_employeeInfo a left outer join TBL_DRIVERINFO b on a.company_no = b.company_no and a.emp_nm = b.emp_nm where   a.company_no = '100' and	    b.sp_gb = decode('ALL','ALL',b.sp_gb,'ALL') order by a.emp_nm
2023-06-25 10:35:42.173 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
11. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 10:35:42.198 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
11. select   a.emp_no,a.emp_nm,nvl(b.route_nm,'-') as route_nm from    TBL_employeeInfo a left outer join TBL_DRIVERINFO b on a.company_no = b.company_no and a.emp_nm = b.emp_nm where   a.company_no = '100' and	    b.sp_gb = decode('ALL','ALL',b.sp_gb,'ALL') order by a.emp_nm
 {executed in 24 msec}
2023-06-25 10:35:43.783 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@b5165f00
2023-06-25 10:35:43.783 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-06-25 10:35:43.784 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.base_year = '2023' order by a.acc_date,acc_time
2023-06-25 10:35:43.785 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
11. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 10:35:43.788 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
11. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.base_year = '2023' order by a.acc_date,acc_time
 {executed in 3 msec}
2023-06-25 10:35:43.792 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
11. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.base_year = '2023' order by a.acc_date,acc_time
 {executed in 3 msec}
2023-06-25 10:37:30.487 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@b5165f00
2023-06-25 10:37:30.487 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-06-25 10:37:30.487 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.base_year = '2023' order by a.acc_date,acc_time
2023-06-25 10:37:30.488 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
11. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 10:37:30.491 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
11. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.base_year = '2023' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-06-25 10:37:30.493 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
11. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.base_year = '2023' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-06-25 10:38:04.175 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@b5165f00
2023-06-25 10:38:04.175 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-06-25 10:38:04.175 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.base_year = '2023' order by a.acc_date,acc_time
2023-06-25 10:38:04.176 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
11. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 10:38:04.179 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
11. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.base_year = '2023' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-06-25 10:38:04.181 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
11. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.base_year = '2023' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-06-25 10:38:19.294 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@b5165f00
2023-06-25 10:38:19.294 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-06-25 10:38:19.294 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.base_year = '2023' order by a.acc_date,acc_time
2023-06-25 10:38:19.295 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
11. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 10:38:19.298 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
11. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.base_year = '2023' order by a.acc_date,acc_time
 {executed in 3 msec}
2023-06-25 10:38:19.301 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
11. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.base_year = '2023' order by a.acc_date,acc_time
 {executed in 3 msec}
2023-06-25 10:39:20.328 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@34d8d0ee
2023-06-25 10:39:20.328 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_EMPLOYEEINFO} 
2023-06-25 10:39:20.328 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
2023-06-25 10:39:20.329 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
11. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 10:39:20.332 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
11. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 3 msec}
2023-06-25 10:39:20.336 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
11. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 3 msec}
2023-06-25 10:39:23.157 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1fa16c26
2023-06-25 10:39:23.157 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_CARINFO} 
2023-06-25 10:39:23.158 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_carInfo a where   a.company_no = '100' order by a.car_regno
2023-06-25 10:39:23.158 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
11. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 10:39:23.161 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
11. select   ROWNUM AS no,a.* from    TBL_carInfo a where   a.company_no = '100' order by a.car_regno
 {executed in 1 msec}
2023-06-25 10:39:23.163 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
11. select   ROWNUM AS no,a.* from    TBL_carInfo a where   a.company_no = '100' order by a.car_regno
 {executed in 2 msec}
2023-06-25 10:39:25.373 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@f2a3787a
2023-06-25 10:39:25.373 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_DRIVERINFO} 
2023-06-25 10:39:25.373 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_DRIVERINFO a where   a.company_no = '100' order by a.emp_no
2023-06-25 10:39:25.374 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
11. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 10:39:25.379 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
11. select   ROWNUM AS no,a.* from    TBL_DRIVERINFO a where   a.company_no = '100' order by a.emp_no
 {executed in 4 msec}
2023-06-25 10:39:25.382 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
11. select   ROWNUM AS no,a.* from    TBL_DRIVERINFO a where   a.company_no = '100' order by a.emp_no
 {executed in 3 msec}
2023-06-25 10:41:26.057 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@b5165f00
2023-06-25 10:41:26.058 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-06-25 10:41:26.058 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.base_year = '2023' order by a.acc_date,acc_time
2023-06-25 10:41:26.058 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
11. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 10:41:26.061 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
11. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.base_year = '2023' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-06-25 10:41:26.063 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
11. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.base_year = '2023' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-06-25 10:41:59.393 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@b5165f00
2023-06-25 10:41:59.393 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ACCIDENT_INFO} 
2023-06-25 10:41:59.393 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.base_year = '2023' order by a.acc_date,acc_time
2023-06-25 10:41:59.394 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
11. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 10:41:59.397 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
11. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.base_year = '2023' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-06-25 10:41:59.399 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
11. select   ROWNUM AS no,a.* from    TBM_ACCIDENT_INFO a where   a.company_no = '100' and     a.base_year = '2023' order by a.acc_date,acc_time
 {executed in 2 msec}
2023-06-25 10:42:15.698 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1fa16c26
2023-06-25 10:42:15.698 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_CARINFO} 
2023-06-25 10:42:15.699 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_carInfo a where   a.company_no = '100' order by a.car_regno
2023-06-25 10:42:15.700 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
11. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 10:42:15.702 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
11. select   ROWNUM AS no,a.* from    TBL_carInfo a where   a.company_no = '100' order by a.car_regno
 {executed in 2 msec}
2023-06-25 10:42:15.704 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
11. select   ROWNUM AS no,a.* from    TBL_carInfo a where   a.company_no = '100' order by a.car_regno
 {executed in 1 msec}
2023-06-25 10:42:20.501 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@f2a3787a
2023-06-25 10:42:20.501 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_DRIVERINFO} 
2023-06-25 10:42:20.501 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_DRIVERINFO a where   a.company_no = '100' order by a.emp_no
2023-06-25 10:42:20.502 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
11. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 10:42:20.506 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
11. select   ROWNUM AS no,a.* from    TBL_DRIVERINFO a where   a.company_no = '100' order by a.emp_no
 {executed in 4 msec}
2023-06-25 10:42:20.511 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
11. select   ROWNUM AS no,a.* from    TBL_DRIVERINFO a where   a.company_no = '100' order by a.emp_no
 {executed in 4 msec}
2023-06-25 10:43:11.014 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@3d88806c
2023-06-25 10:43:11.014 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ISC_DRIVER_INFO} 
2023-06-25 10:43:11.014 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_ISC_DRIVER_INFO a where   a.company_no = '100' order by a.emp_nm
2023-06-25 10:43:11.015 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
11. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 10:43:11.019 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
11. select   ROWNUM AS no,a.* from    TBL_ISC_DRIVER_INFO a where   a.company_no = '100' order by a.emp_nm
 {executed in 3 msec}
2023-06-25 10:43:11.020 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
11. select   ROWNUM AS no,a.* from    TBL_ISC_DRIVER_INFO a where   a.company_no = '100' order by a.emp_nm
 {executed in 1 msec}
2023-06-25 10:45:00.521 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@3d88806c
2023-06-25 10:45:00.521 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ISC_DRIVER_INFO} 
2023-06-25 10:45:00.521 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_ISC_DRIVER_INFO a where   a.company_no = '100' order by a.emp_nm
2023-06-25 10:45:00.522 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
11. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 10:45:00.523 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
11. select   ROWNUM AS no,a.* from    TBL_ISC_DRIVER_INFO a where   a.company_no = '100' order by a.emp_nm
 {executed in 1 msec}
2023-06-25 10:45:00.525 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
11. select   ROWNUM AS no,a.* from    TBL_ISC_DRIVER_INFO a where   a.company_no = '100' order by a.emp_nm
 {executed in 1 msec}
2023-06-25 10:45:55.331 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@3d88806c
2023-06-25 10:45:55.331 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ISC_DRIVER_INFO} 
2023-06-25 10:45:55.331 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_ISC_DRIVER_INFO a where   a.company_no = '100' order by a.emp_nm
2023-06-25 10:45:55.332 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
11. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 10:45:55.333 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
11. select   ROWNUM AS no,a.* from    TBL_ISC_DRIVER_INFO a where   a.company_no = '100' order by a.emp_nm
 {executed in 1 msec}
2023-06-25 10:45:55.343 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
11. select   ROWNUM AS no,a.* from    TBL_ISC_DRIVER_INFO a where   a.company_no = '100' order by a.emp_nm
 {executed in 9 msec}
2023-06-25 11:14:00.068 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 11:14:00.079 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 2 msec}
2023-06-25 11:14:00.092 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 11:14:00.096 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 11:14:00.100 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 11:14:00.103 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 11:14:00.107 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 11:14:00.111 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 11:14:00.114 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d2 LIKE '%*%' or a.d2 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-25 11:14:00.116 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d2 <> '')
		AND (a.d2 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 0 msec}
2023-06-25 11:17:35.220 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 11:17:35.221 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
31. SELECT ROUTE_NM  FROM TBL_ROUTEINFO ORDER BY 1
 {executed in 1 msec}
2023-06-25 11:17:39.965 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@7274ecc
2023-06-25 11:17:39.966 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 11:17:40.004 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT /* select_getDrivingOrder : 승무지시 화면용 */ k.route_nm,k.seq,k.CAR_REGNO
		,	listagg(k.emp_nm,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as empNm
		,	listagg(k.PHONE_NO,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as PHONE
		,	listagg(k.value,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as spGb
		,	' ' as empNm_am
		,	' ' as empNm_pm
		,	' ' as phone_am
		,	' ' as phone_pm
		,	' ' as spgb_am
		,	' ' as spgb_pm
	FROM (
	SELECT	a.route_nm,
			a.CAR_REGNO ,
			a.EMP_NM ,
			b.PHONE_NO ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,
			CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a JOIN TBL_EMPLOYEEINFO b ON a.company_no = b.COMPANY_NO AND a.emp_nm = b.EMP_NM 
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT a.route_nm,
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			nvl(c.PHONE_NO,'-') AS phone_no ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		
			CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON
			a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
			AND b.d2 <> ''
			AND a.d2 LIKE b.d2 || '%'
		LEFT OUTER JOIN TBL_EMPLOYEEINFO c ON b.company_no = c.COMPANY_NO AND b.emp_nm = c.EMP_NM
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%'	OR a.d2 LIKE '%@%')
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.route_nm,k.seq,k.CAR_REGNO
 {executed in 36 msec}
2023-06-25 11:17:46.002 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
2023-06-25 11:17:46.002 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 11:17:46.004 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
31. select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
 {executed in 1 msec}
2023-06-25 11:17:58.023 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 11:17:58.024 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
31. SELECT ROUTE_NM  FROM TBL_ROUTEINFO ORDER BY 1
 {executed in 0 msec}
2023-06-25 11:18:00.353 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
2023-06-25 11:18:00.355 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 11:18:00.356 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
31. select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
 {executed in 1 msec}
2023-06-25 11:52:57.445 INFO  [RMI TCP Connection(115)-127.0.0.1] [o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin] - Application shutdown requested.
2023-06-25 11:52:57.478 INFO  [RMI TCP Connection(115)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Shutting down ExecutorService 'asyncThreadPool'
2023-06-25 11:52:57.480 INFO  [RMI TCP Connection(115)-127.0.0.1] [com.zaxxer.hikari.HikariDataSource] - H2 - Shutdown initiated...
2023-06-25 11:52:57.489 INFO  [RMI TCP Connection(115)-127.0.0.1] [com.zaxxer.hikari.HikariDataSource] - H2 - Shutdown completed.
2023-06-25 11:52:57.540 INFO  [RMI TCP Connection(115)-127.0.0.1] [com.pjy.dashboard.filter.TestFilter] - destroy Pjy Filter
2023-06-25 11:53:01.418 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Starting PjyApplication on DESKTOP-QJPD93S with PID 27392 (D:\BUS\dashboard\dashboard\target\classes started by admin in D:\BUS\dashboard\dashboard)
2023-06-25 11:53:01.423 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - The following profiles are active: oauth
2023-06-25 11:53:01.479 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-06-25 11:53:01.479 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-06-25 11:53:02.676 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-25 11:53:02.676 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-06-25 11:53:02.829 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 139ms. Found 3 JPA repository interfaces.
2023-06-25 11:53:03.181 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-25 11:53:03.181 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2023-06-25 11:53:03.230 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.FileRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-06-25 11:53:03.230 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.MemberRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-06-25 11:53:03.231 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.RememberMeRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-06-25 11:53:03.232 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 51ms. Found 0 JDBC repository interfaces.
2023-06-25 11:53:03.671 INFO  [restartedMain] [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] - Post-processing PropertySource instances
2023-06-25 11:53:03.736 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2023-06-25 11:53:03.737 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource commandLineArgs [org.springframework.core.env.SimpleCommandLinePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-06-25 11:53:03.737 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-06-25 11:53:03.737 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-06-25 11:53:03.737 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-25 11:53:03.737 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
2023-06-25 11:53:03.738 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2023-06-25 11:53:03.738 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application-oauth.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-25 11:53:03.738 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-25 11:53:03.738 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-25 11:53:03.738 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [pjy.properties] [org.springframework.core.env.CompositePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-06-25 11:53:03.738 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [common.properties] [org.springframework.core.io.support.ResourcePropertySource] to EncryptableMapPropertySourceWrapper
2023-06-25 11:53:03.799 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'asyncConfiguration' of type [com.pjy.dashboard.configuration.AsyncConfiguration$$EnhancerBySpringCGLIB$$c1634c2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-25 11:53:03.851 INFO  [restartedMain] [c.u.j.filter.DefaultLazyPropertyFilter] - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2023-06-25 11:53:03.936 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$f60c98ef] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-25 11:53:04.017 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-25 11:53:04.019 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@32918747' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-25 11:53:04.024 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$1ae13ba1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-25 11:53:04.034 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration$$EnhancerBySpringCGLIB$$403653b7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-25 11:53:04.039 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-25 11:53:04.040 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-25 11:53:04.062 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$5d5ed0b5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-25 11:53:04.098 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$dcdf1de7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-25 11:53:04.231 INFO  [restartedMain] [c.u.j.r.DefaultLazyPropertyResolver] - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2023-06-25 11:53:04.236 INFO  [restartedMain] [c.u.j.d.DefaultLazyPropertyDetector] - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2023-06-25 11:53:04.655 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 10010 (http)
2023-06-25 11:53:04.672 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Initializing ProtocolHandler ["http-nio-10010"]
2023-06-25 11:53:04.684 INFO  [restartedMain] [org.apache.catalina.core.StandardService] - Starting service [Tomcat]
2023-06-25 11:53:04.684 INFO  [restartedMain] [org.apache.catalina.core.StandardEngine] - Starting Servlet engine: [Apache Tomcat/9.0.29]
2023-06-25 11:53:05.075 INFO  [restartedMain] [org.apache.jasper.servlet.TldScanner] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2023-06-25 11:53:05.086 INFO  [restartedMain] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring embedded WebApplicationContext
2023-06-25 11:53:05.086 INFO  [restartedMain] [o.s.web.context.ContextLoader] - Root WebApplicationContext: initialization completed in 3607 ms
2023-06-25 11:53:05.937 INFO  [restartedMain] [c.u.j.encryptor.DefaultLazyEncryptor] - Found Custom Encryptor Bean org.jasypt.encryption.pbe.PooledPBEStringEncryptor@4d9752d9 with name: jasyptStringEncryptor
2023-06-25 11:53:05.985 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Starting...
2023-06-25 11:53:06.078 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.executeSql(PoolBase.java:567)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 7 msec}
2023-06-25 11:53:06.083 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Start completed.
2023-06-25 11:53:06.846 INFO  [restartedMain] [com.pjy.dashboard.filter.TestFilter] - init Pjy Filter
2023-06-25 11:53:07.163 INFO  [restartedMain] [o.hibernate.jpa.internal.util.LogHelper] - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2023-06-25 11:53:07.268 INFO  [restartedMain] [org.hibernate.Version] - HHH000412: Hibernate Core {5.3.14.Final}
2023-06-25 11:53:07.270 INFO  [restartedMain] [org.hibernate.cfg.Environment] - HHH000206: hibernate.properties not found
2023-06-25 11:53:07.435 INFO  [restartedMain] [org.hibernate.annotations.common.Version] - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2023-06-25 11:53:07.674 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 11:53:07.690 INFO  [restartedMain] [org.hibernate.dialect.Dialect] - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2023-06-25 11:53:08.415 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 11:53:08.418 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select SEQUENCE_CATALOG, SEQUENCE_SCHEMA, SEQUENCE_NAME, INCREMENT from information_schema.sequences
 {executed in 1 msec}
2023-06-25 11:53:08.469 INFO  [restartedMain] [o.s.o.j.LocalContainerEntityManagerFactoryBean] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-06-25 11:53:08.731 INFO  [restartedMain] [o.h.h.i.QueryTranslatorFactoryInitiator] - HHH000397: Using ASTQueryTranslatorFactory
2023-06-25 11:53:09.797 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService
2023-06-25 11:53:09.808 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'asyncThreadPool'
2023-06-25 11:53:09.989 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/h2-console/**'], []
2023-06-25 11:53:09.990 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/css/**'], []
2023-06-25 11:53:09.990 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/js/**'], []
2023-06-25 11:53:09.990 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/monitor/**'], []
2023-06-25 11:53:09.990 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/img/**'], []
2023-06-25 11:53:09.990 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/lib/**'], []
2023-06-25 11:53:09.990 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/main.css'], []
2023-06-25 11:53:09.990 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/common.js'], []
2023-06-25 11:53:09.990 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/resources/**'], []
2023-06-25 11:53:10.156 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2e6422c5, org.springframework.security.web.context.SecurityContextPersistenceFilter@5c6b24a2, org.springframework.security.web.header.HeaderWriterFilter@2d22f0bb, org.springframework.web.filter.CorsFilter@42aa8106, org.springframework.security.web.authentication.logout.LogoutFilter@5e435b7e, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@2a4ecaff, org.springframework.security.web.session.ConcurrentSessionFilter@54eb2114, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@6af9e36d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6b4b42da, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@207f1474, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@152803dd, org.springframework.security.web.session.SessionManagementFilter@29de5140, org.springframework.security.web.access.ExceptionTranslationFilter@7f88524e, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@336b5efb]
2023-06-25 11:53:10.178 INFO  [restartedMain] [o.s.aop.framework.CglibAopProxy] - Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(javax.servlet.FilterConfig) throws javax.servlet.ServletException] because it is marked as final: Consider using interface-based JDK proxies instead!
2023-06-25 11:53:10.528 WARN  [restartedMain] [o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-06-25 11:53:10.605 INFO  [restartedMain] [o.s.b.a.w.s.WelcomePageHandlerMapping] - Adding welcome page: ServletContext resource [/index.html]
2023-06-25 11:53:11.051 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 2 msec}
2023-06-25 11:53:11.839 INFO  [restartedMain] [o.s.b.d.a.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2023-06-25 11:53:11.866 INFO  [restartedMain] [o.s.b.a.e.web.EndpointLinksResolver] - Exposing 16 endpoint(s) beneath base path '/actuator'
2023-06-25 11:53:12.013 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskScheduler] - Initializing ExecutorService
2023-06-25 11:53:12.016 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Starting ProtocolHandler ["http-nio-10010"]
2023-06-25 11:53:12.066 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 10010 (http) with context path ''
2023-06-25 11:53:12.071 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Started PjyApplication in 11.105 seconds (JVM running for 12.5)
2023-06-25 11:53:12.072 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-06-25 11:53:12.072 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - Application started
2023-06-25 11:53:12.072 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-06-25 11:53:13.267 INFO  [RMI TCP Connection(9)-127.0.0.1] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-25 11:53:13.267 INFO  [RMI TCP Connection(9)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Initializing Servlet 'dispatcherServlet'
2023-06-25 11:53:13.290 INFO  [RMI TCP Connection(9)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Completed initialization in 22 ms
2023-06-25 11:55:18.053 INFO  [RMI TCP Connection(14)-127.0.0.1] [o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin] - Application shutdown requested.
2023-06-25 11:55:18.083 INFO  [RMI TCP Connection(14)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Shutting down ExecutorService 'asyncThreadPool'
2023-06-25 11:55:18.088 INFO  [RMI TCP Connection(14)-127.0.0.1] [com.zaxxer.hikari.HikariDataSource] - H2 - Shutdown initiated...
2023-06-25 11:55:18.095 INFO  [RMI TCP Connection(14)-127.0.0.1] [com.zaxxer.hikari.HikariDataSource] - H2 - Shutdown completed.
2023-06-25 11:55:18.129 INFO  [RMI TCP Connection(14)-127.0.0.1] [com.pjy.dashboard.filter.TestFilter] - destroy Pjy Filter
2023-06-25 11:55:21.881 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Starting PjyApplication on DESKTOP-QJPD93S with PID 19920 (D:\BUS\dashboard\dashboard\target\classes started by admin in D:\BUS\dashboard\dashboard)
2023-06-25 11:55:21.887 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - The following profiles are active: oauth
2023-06-25 11:55:21.944 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-06-25 11:55:21.944 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-06-25 11:55:23.239 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-25 11:55:23.239 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-06-25 11:55:23.385 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 136ms. Found 3 JPA repository interfaces.
2023-06-25 11:55:23.734 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-25 11:55:23.734 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2023-06-25 11:55:23.778 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.FileRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-06-25 11:55:23.779 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.MemberRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-06-25 11:55:23.780 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.RememberMeRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-06-25 11:55:23.780 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 46ms. Found 0 JDBC repository interfaces.
2023-06-25 11:55:24.231 INFO  [restartedMain] [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] - Post-processing PropertySource instances
2023-06-25 11:55:24.302 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2023-06-25 11:55:24.302 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource commandLineArgs [org.springframework.core.env.SimpleCommandLinePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-06-25 11:55:24.302 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-06-25 11:55:24.302 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-06-25 11:55:24.303 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-25 11:55:24.303 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
2023-06-25 11:55:24.303 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2023-06-25 11:55:24.303 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application-oauth.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-25 11:55:24.304 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-25 11:55:24.304 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-25 11:55:24.304 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [pjy.properties] [org.springframework.core.env.CompositePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-06-25 11:55:24.304 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [common.properties] [org.springframework.core.io.support.ResourcePropertySource] to EncryptableMapPropertySourceWrapper
2023-06-25 11:55:24.365 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'asyncConfiguration' of type [com.pjy.dashboard.configuration.AsyncConfiguration$$EnhancerBySpringCGLIB$$e21903fa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-25 11:55:24.418 INFO  [restartedMain] [c.u.j.filter.DefaultLazyPropertyFilter] - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2023-06-25 11:55:24.505 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$cc0f6827] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-25 11:55:24.591 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-25 11:55:24.594 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@42b2a282' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-25 11:55:24.599 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$f0e40ad9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-25 11:55:24.610 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration$$EnhancerBySpringCGLIB$$163922ef] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-25 11:55:24.614 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-25 11:55:24.616 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-25 11:55:24.641 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$33619fed] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-25 11:55:24.672 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$b2e1ed1f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-25 11:55:24.809 INFO  [restartedMain] [c.u.j.r.DefaultLazyPropertyResolver] - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2023-06-25 11:55:24.815 INFO  [restartedMain] [c.u.j.d.DefaultLazyPropertyDetector] - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2023-06-25 11:55:25.259 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 10010 (http)
2023-06-25 11:55:25.276 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Initializing ProtocolHandler ["http-nio-10010"]
2023-06-25 11:55:25.287 INFO  [restartedMain] [org.apache.catalina.core.StandardService] - Starting service [Tomcat]
2023-06-25 11:55:25.287 INFO  [restartedMain] [org.apache.catalina.core.StandardEngine] - Starting Servlet engine: [Apache Tomcat/9.0.29]
2023-06-25 11:55:25.658 INFO  [restartedMain] [org.apache.jasper.servlet.TldScanner] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2023-06-25 11:55:25.670 INFO  [restartedMain] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring embedded WebApplicationContext
2023-06-25 11:55:25.670 INFO  [restartedMain] [o.s.web.context.ContextLoader] - Root WebApplicationContext: initialization completed in 3725 ms
2023-06-25 11:55:26.518 INFO  [restartedMain] [c.u.j.encryptor.DefaultLazyEncryptor] - Found Custom Encryptor Bean org.jasypt.encryption.pbe.PooledPBEStringEncryptor@19c6935c with name: jasyptStringEncryptor
2023-06-25 11:55:26.563 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Starting...
2023-06-25 11:55:26.647 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.executeSql(PoolBase.java:567)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 7 msec}
2023-06-25 11:55:26.652 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Start completed.
2023-06-25 11:55:27.428 INFO  [restartedMain] [com.pjy.dashboard.filter.TestFilter] - init Pjy Filter
2023-06-25 11:55:27.753 INFO  [restartedMain] [o.hibernate.jpa.internal.util.LogHelper] - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2023-06-25 11:55:27.826 INFO  [restartedMain] [org.hibernate.Version] - HHH000412: Hibernate Core {5.3.14.Final}
2023-06-25 11:55:27.828 INFO  [restartedMain] [org.hibernate.cfg.Environment] - HHH000206: hibernate.properties not found
2023-06-25 11:55:27.979 INFO  [restartedMain] [org.hibernate.annotations.common.Version] - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2023-06-25 11:55:28.208 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 11:55:28.225 INFO  [restartedMain] [org.hibernate.dialect.Dialect] - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2023-06-25 11:55:28.931 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 11:55:28.934 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select SEQUENCE_CATALOG, SEQUENCE_SCHEMA, SEQUENCE_NAME, INCREMENT from information_schema.sequences
 {executed in 1 msec}
2023-06-25 11:55:28.988 INFO  [restartedMain] [o.s.o.j.LocalContainerEntityManagerFactoryBean] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-06-25 11:55:29.233 INFO  [restartedMain] [o.h.h.i.QueryTranslatorFactoryInitiator] - HHH000397: Using ASTQueryTranslatorFactory
2023-06-25 11:55:30.296 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService
2023-06-25 11:55:30.307 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'asyncThreadPool'
2023-06-25 11:55:30.486 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/h2-console/**'], []
2023-06-25 11:55:30.486 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/css/**'], []
2023-06-25 11:55:30.486 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/js/**'], []
2023-06-25 11:55:30.486 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/monitor/**'], []
2023-06-25 11:55:30.486 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/img/**'], []
2023-06-25 11:55:30.486 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/lib/**'], []
2023-06-25 11:55:30.487 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/main.css'], []
2023-06-25 11:55:30.487 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/common.js'], []
2023-06-25 11:55:30.487 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/resources/**'], []
2023-06-25 11:55:30.647 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5d95177f, org.springframework.security.web.context.SecurityContextPersistenceFilter@54eb2114, org.springframework.security.web.header.HeaderWriterFilter@abc0f2b, org.springframework.web.filter.CorsFilter@43223493, org.springframework.security.web.authentication.logout.LogoutFilter@70702ac8, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@57047944, org.springframework.security.web.session.ConcurrentSessionFilter@6145ac88, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@7eddd6d1, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5f59b024, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6e002525, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5e464c9b, org.springframework.security.web.session.SessionManagementFilter@1c894ea8, org.springframework.security.web.access.ExceptionTranslationFilter@662e4d48, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@510e02d0]
2023-06-25 11:55:30.668 INFO  [restartedMain] [o.s.aop.framework.CglibAopProxy] - Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(javax.servlet.FilterConfig) throws javax.servlet.ServletException] because it is marked as final: Consider using interface-based JDK proxies instead!
2023-06-25 11:55:31.032 WARN  [restartedMain] [o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-06-25 11:55:31.112 INFO  [restartedMain] [o.s.b.a.w.s.WelcomePageHandlerMapping] - Adding welcome page: ServletContext resource [/index.html]
2023-06-25 11:55:31.523 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 11:55:32.318 INFO  [restartedMain] [o.s.b.d.a.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2023-06-25 11:55:32.346 INFO  [restartedMain] [o.s.b.a.e.web.EndpointLinksResolver] - Exposing 16 endpoint(s) beneath base path '/actuator'
2023-06-25 11:55:32.492 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskScheduler] - Initializing ExecutorService
2023-06-25 11:55:32.496 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Starting ProtocolHandler ["http-nio-10010"]
2023-06-25 11:55:32.552 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 10010 (http) with context path ''
2023-06-25 11:55:32.557 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Started PjyApplication in 11.151 seconds (JVM running for 12.498)
2023-06-25 11:55:32.558 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-06-25 11:55:32.558 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - Application started
2023-06-25 11:55:32.558 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-06-25 11:55:33.689 INFO  [RMI TCP Connection(11)-127.0.0.1] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-25 11:55:33.689 INFO  [RMI TCP Connection(11)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Initializing Servlet 'dispatcherServlet'
2023-06-25 11:55:33.710 INFO  [RMI TCP Connection(11)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Completed initialization in 21 ms
2023-06-25 11:56:13.970 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@57a5f6d8
2023-06-25 11:56:13.970 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_DRIVING_RECORD} 
2023-06-25 11:56:14.011 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_DRIVING_RECORD a where   a.company_no = '100' and     a.base_ym = '2023-06' order by a.work_date   ,a.route_nm,a.start_time
2023-06-25 11:56:14.023 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 11:56:14.025 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBL_DRIVING_RECORD a where   a.company_no = '100' and     a.base_ym = '2023-06' order by a.work_date   ,a.route_nm,a.start_time
 {executed in 1 msec}
2023-06-25 11:56:14.030 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBL_DRIVING_RECORD a where   a.company_no = '100' and     a.base_ym = '2023-06' order by a.work_date   ,a.route_nm,a.start_time
 {executed in 1 msec}
2023-06-25 11:56:26.258 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@b7548f08
2023-06-25 11:56:26.258 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_DRIVING_RECORD} 
2023-06-25 11:56:26.258 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_DRIVING_RECORD a where   a.company_no = '100' and     a.base_ym = '2023-04' order by a.work_date   ,a.route_nm,a.start_time
2023-06-25 11:56:26.260 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 11:56:26.365 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBL_DRIVING_RECORD a where   a.company_no = '100' and     a.base_ym = '2023-04' order by a.work_date   ,a.route_nm,a.start_time
 {executed in 105 msec}
2023-06-25 11:56:26.415 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBL_DRIVING_RECORD a where   a.company_no = '100' and     a.base_ym = '2023-04' order by a.work_date   ,a.route_nm,a.start_time
 {executed in 48 msec}
2023-06-25 11:57:53.881 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT a.* ,a.start_date||a.emp_nm as key,rownum as id ,	b.ROUTE_NM ,b.SP_GB ,b.CAR_REGNO ,	b.EMP_NM || '/' || b.ROUTE_NM ||  '/' || b.sp_gb || '/' || b.car_regno as emp_info FROM TBM_DRIVER_Attendance_INFO a LEFT OUTER join TBL_DRIVERINFO b on 	a.COMPANY_NO  	= b.COMPANY_NO AND a.EMP_NM 		= b.EMP_NM where 	a.company_no = '100' AND 	a.start_date   between '2023-03-01' and '2023-06-25' and 	a.emp_nm like '%' AND 	a.attendance_Type  = decode ('all','all',a.attendance_Type,'all') order by a.start_date,a.emp_nm,a.attendance_type
2023-06-25 11:57:53.883 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 11:57:53.894 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. SELECT a.* ,a.start_date||a.emp_nm as key,rownum as id ,	b.ROUTE_NM ,b.SP_GB ,b.CAR_REGNO ,	b.EMP_NM || '/' || b.ROUTE_NM ||  '/' || b.sp_gb || '/' || b.car_regno as emp_info FROM TBM_DRIVER_Attendance_INFO a LEFT OUTER join TBL_DRIVERINFO b on 	a.COMPANY_NO  	= b.COMPANY_NO AND a.EMP_NM 		= b.EMP_NM where 	a.company_no = '100' AND 	a.start_date   between '2023-03-01' and '2023-06-25' and 	a.emp_nm like '%' AND 	a.attendance_Type  = decode ('all','all',a.attendance_Type,'all') order by a.start_date,a.emp_nm,a.attendance_type
 {executed in 11 msec}
2023-06-25 12:01:11.073 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT a.* ,a.start_date||a.emp_nm as key,rownum as id ,	b.ROUTE_NM ,b.SP_GB ,b.CAR_REGNO ,	b.EMP_NM || '/' || b.ROUTE_NM ||  '/' || b.sp_gb || '/' || b.car_regno as emp_info FROM TBM_DRIVER_Attendance_INFO a LEFT OUTER join TBL_DRIVERINFO b on 	a.COMPANY_NO  	= b.COMPANY_NO AND a.EMP_NM 		= b.EMP_NM where 	a.company_no = '100' AND 	a.start_date   between '2023-03-01' and '2023-06-25' and 	a.emp_nm like '%' AND 	a.attendance_Type  = decode ('all','all',a.attendance_Type,'all') order by a.start_date,a.emp_nm,a.attendance_type
2023-06-25 12:01:11.074 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 12:01:11.082 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. SELECT a.* ,a.start_date||a.emp_nm as key,rownum as id ,	b.ROUTE_NM ,b.SP_GB ,b.CAR_REGNO ,	b.EMP_NM || '/' || b.ROUTE_NM ||  '/' || b.sp_gb || '/' || b.car_regno as emp_info FROM TBM_DRIVER_Attendance_INFO a LEFT OUTER join TBL_DRIVERINFO b on 	a.COMPANY_NO  	= b.COMPANY_NO AND a.EMP_NM 		= b.EMP_NM where 	a.company_no = '100' AND 	a.start_date   between '2023-03-01' and '2023-06-25' and 	a.emp_nm like '%' AND 	a.attendance_Type  = decode ('all','all',a.attendance_Type,'all') order by a.start_date,a.emp_nm,a.attendance_type
 {executed in 7 msec}
2023-06-25 12:01:44.589 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT a.* ,a.start_date||a.emp_nm as key,rownum as id ,	b.ROUTE_NM ,b.SP_GB ,b.CAR_REGNO ,	b.EMP_NM || '/' || b.ROUTE_NM ||  '/' || b.sp_gb || '/' || b.car_regno as emp_info FROM TBM_DRIVER_Attendance_INFO a LEFT OUTER join TBL_DRIVERINFO b on 	a.COMPANY_NO  	= b.COMPANY_NO AND a.EMP_NM 		= b.EMP_NM where 	a.company_no = '100' AND 	a.start_date   between '2023-03-01' and '2023-06-25' and 	a.emp_nm like '%' AND 	a.attendance_Type  = decode ('all','all',a.attendance_Type,'all') order by a.start_date,a.emp_nm,a.attendance_type
2023-06-25 12:01:44.590 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 12:01:44.597 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. SELECT a.* ,a.start_date||a.emp_nm as key,rownum as id ,	b.ROUTE_NM ,b.SP_GB ,b.CAR_REGNO ,	b.EMP_NM || '/' || b.ROUTE_NM ||  '/' || b.sp_gb || '/' || b.car_regno as emp_info FROM TBM_DRIVER_Attendance_INFO a LEFT OUTER join TBL_DRIVERINFO b on 	a.COMPANY_NO  	= b.COMPANY_NO AND a.EMP_NM 		= b.EMP_NM where 	a.company_no = '100' AND 	a.start_date   between '2023-03-01' and '2023-06-25' and 	a.emp_nm like '%' AND 	a.attendance_Type  = decode ('all','all',a.attendance_Type,'all') order by a.start_date,a.emp_nm,a.attendance_type
 {executed in 6 msec}
2023-06-25 12:02:42.894 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT a.* ,a.start_date||a.emp_nm as key,rownum as id ,	b.ROUTE_NM ,b.SP_GB ,b.CAR_REGNO ,	b.EMP_NM || '/' || b.ROUTE_NM ||  '/' || b.sp_gb || '/' || b.car_regno as emp_info FROM TBM_DRIVER_Attendance_INFO a LEFT OUTER join TBL_DRIVERINFO b on 	a.COMPANY_NO  	= b.COMPANY_NO AND a.EMP_NM 		= b.EMP_NM where 	a.company_no = '100' AND 	a.start_date   between '2023-03-01' and '2023-06-25' and 	a.emp_nm like '%' AND 	a.attendance_Type  = decode ('all','all',a.attendance_Type,'all') order by a.start_date,a.emp_nm,a.attendance_type
2023-06-25 12:02:42.895 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 12:02:42.905 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. SELECT a.* ,a.start_date||a.emp_nm as key,rownum as id ,	b.ROUTE_NM ,b.SP_GB ,b.CAR_REGNO ,	b.EMP_NM || '/' || b.ROUTE_NM ||  '/' || b.sp_gb || '/' || b.car_regno as emp_info FROM TBM_DRIVER_Attendance_INFO a LEFT OUTER join TBL_DRIVERINFO b on 	a.COMPANY_NO  	= b.COMPANY_NO AND a.EMP_NM 		= b.EMP_NM where 	a.company_no = '100' AND 	a.start_date   between '2023-03-01' and '2023-06-25' and 	a.emp_nm like '%' AND 	a.attendance_Type  = decode ('all','all',a.attendance_Type,'all') order by a.start_date,a.emp_nm,a.attendance_type
 {executed in 9 msec}
2023-06-25 12:10:38.456 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT a.* ,a.start_date||a.emp_nm as key,rownum as id ,	b.ROUTE_NM ,b.SP_GB ,b.CAR_REGNO ,	b.EMP_NM || '/' || b.ROUTE_NM ||  '/' || b.sp_gb || '/' || b.car_regno as emp_info FROM TBM_DRIVER_Attendance_INFO a LEFT OUTER join TBL_DRIVERINFO b on 	a.COMPANY_NO  	= b.COMPANY_NO AND a.EMP_NM 		= b.EMP_NM where 	a.company_no = '100' AND 	a.start_date   between '2023-04-03' and '2023-06-25' and 	a.emp_nm like '%' AND 	a.attendance_Type  = decode ('all','all',a.attendance_Type,'all') order by a.start_date,a.emp_nm,a.attendance_type
2023-06-25 12:10:38.458 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 12:10:38.480 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. SELECT a.* ,a.start_date||a.emp_nm as key,rownum as id ,	b.ROUTE_NM ,b.SP_GB ,b.CAR_REGNO ,	b.EMP_NM || '/' || b.ROUTE_NM ||  '/' || b.sp_gb || '/' || b.car_regno as emp_info FROM TBM_DRIVER_Attendance_INFO a LEFT OUTER join TBL_DRIVERINFO b on 	a.COMPANY_NO  	= b.COMPANY_NO AND a.EMP_NM 		= b.EMP_NM where 	a.company_no = '100' AND 	a.start_date   between '2023-04-03' and '2023-06-25' and 	a.emp_nm like '%' AND 	a.attendance_Type  = decode ('all','all',a.attendance_Type,'all') order by a.start_date,a.emp_nm,a.attendance_type
 {executed in 22 msec}
2023-06-25 12:10:57.206 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT a.* ,a.start_date||a.emp_nm as key,rownum as id ,	b.ROUTE_NM ,b.SP_GB ,b.CAR_REGNO ,	b.EMP_NM || '/' || b.ROUTE_NM ||  '/' || b.sp_gb || '/' || b.car_regno as emp_info FROM TBM_DRIVER_Attendance_INFO a LEFT OUTER join TBL_DRIVERINFO b on 	a.COMPANY_NO  	= b.COMPANY_NO AND a.EMP_NM 		= b.EMP_NM where 	a.company_no = '100' AND 	a.start_date   between '2023-04-03' and '2023-06-25' and 	a.emp_nm like '%' AND 	a.attendance_Type  = decode ('all','all',a.attendance_Type,'all') order by a.start_date,a.emp_nm,a.attendance_type
2023-06-25 12:10:57.207 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 12:10:57.219 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. SELECT a.* ,a.start_date||a.emp_nm as key,rownum as id ,	b.ROUTE_NM ,b.SP_GB ,b.CAR_REGNO ,	b.EMP_NM || '/' || b.ROUTE_NM ||  '/' || b.sp_gb || '/' || b.car_regno as emp_info FROM TBM_DRIVER_Attendance_INFO a LEFT OUTER join TBL_DRIVERINFO b on 	a.COMPANY_NO  	= b.COMPANY_NO AND a.EMP_NM 		= b.EMP_NM where 	a.company_no = '100' AND 	a.start_date   between '2023-04-03' and '2023-06-25' and 	a.emp_nm like '%' AND 	a.attendance_Type  = decode ('all','all',a.attendance_Type,'all') order by a.start_date,a.emp_nm,a.attendance_type
 {executed in 12 msec}
2023-06-25 12:11:24.662 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT a.* ,a.start_date||a.emp_nm as key,rownum as id ,	b.ROUTE_NM ,b.SP_GB ,b.CAR_REGNO ,	b.EMP_NM || '/' || b.ROUTE_NM ||  '/' || b.sp_gb || '/' || b.car_regno as emp_info FROM TBM_DRIVER_Attendance_INFO a LEFT OUTER join TBL_DRIVERINFO b on 	a.COMPANY_NO  	= b.COMPANY_NO AND a.EMP_NM 		= b.EMP_NM where 	a.company_no = '100' AND 	a.start_date   between '2023-04-03' and '2023-06-25' and 	a.emp_nm like '%' AND 	a.attendance_Type  = decode ('all','all',a.attendance_Type,'all') order by a.start_date,a.emp_nm,a.attendance_type
2023-06-25 12:11:24.663 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 12:11:24.676 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. SELECT a.* ,a.start_date||a.emp_nm as key,rownum as id ,	b.ROUTE_NM ,b.SP_GB ,b.CAR_REGNO ,	b.EMP_NM || '/' || b.ROUTE_NM ||  '/' || b.sp_gb || '/' || b.car_regno as emp_info FROM TBM_DRIVER_Attendance_INFO a LEFT OUTER join TBL_DRIVERINFO b on 	a.COMPANY_NO  	= b.COMPANY_NO AND a.EMP_NM 		= b.EMP_NM where 	a.company_no = '100' AND 	a.start_date   between '2023-04-03' and '2023-06-25' and 	a.emp_nm like '%' AND 	a.attendance_Type  = decode ('all','all',a.attendance_Type,'all') order by a.start_date,a.emp_nm,a.attendance_type
 {executed in 11 msec}
2023-06-25 12:11:49.994 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT a.* ,a.work_date as key,rownum as id FROM TBM_Holiday_INFO a where 	a.company_no = '100' AND 	a.work_date   like substr('2023',1,4) || '%' order by a.work_date
2023-06-25 12:11:49.995 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 12:11:49.998 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. SELECT a.* ,a.work_date as key,rownum as id FROM TBM_Holiday_INFO a where 	a.company_no = '100' AND 	a.work_date   like substr('2023',1,4) || '%' order by a.work_date
 {executed in 3 msec}
2023-06-25 12:13:50.627 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT a.* ,a.work_date as key,rownum as id FROM TBM_Holiday_INFO a where 	a.company_no = '100' AND 	a.work_date   like substr('2023',1,4) || '%' order by a.work_date
2023-06-25 12:13:50.629 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 12:13:50.630 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. SELECT a.* ,a.work_date as key,rownum as id FROM TBM_Holiday_INFO a where 	a.company_no = '100' AND 	a.work_date   like substr('2023',1,4) || '%' order by a.work_date
 {executed in 1 msec}
2023-06-25 12:14:33.361 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 12:14:33.368 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. update  TBM_Holiday_INFO a
	set	    a.holiday_nm	= '대체공휴일'
		,	a.Holiday_yn 	= 'Y'
		,	a.memo			= 'api'
		,	a.last_chg_user = 'p00139'
		,	a.LAST_CHG_DATE = TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss')
    where   a.company_no 		= '100'
    and     a.work_date    		= '2023-01-24'
 {executed in 1 msec}
2023-06-25 12:14:54.606 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT a.* ,a.start_date||a.emp_nm as key,rownum as id ,	b.ROUTE_NM ,b.SP_GB ,b.CAR_REGNO ,	b.EMP_NM || '/' || b.ROUTE_NM ||  '/' || b.sp_gb || '/' || b.car_regno as emp_info FROM TBM_DRIVER_Attendance_INFO a LEFT OUTER join TBL_DRIVERINFO b on 	a.COMPANY_NO  	= b.COMPANY_NO AND a.EMP_NM 		= b.EMP_NM where 	a.company_no = '100' AND 	a.start_date   between '2023-05-02' and '2023-06-25' and 	a.emp_nm like '%' AND 	a.attendance_Type  = decode ('all','all',a.attendance_Type,'all') order by a.start_date,a.emp_nm,a.attendance_type
2023-06-25 12:14:54.607 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 12:14:54.615 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. SELECT a.* ,a.start_date||a.emp_nm as key,rownum as id ,	b.ROUTE_NM ,b.SP_GB ,b.CAR_REGNO ,	b.EMP_NM || '/' || b.ROUTE_NM ||  '/' || b.sp_gb || '/' || b.car_regno as emp_info FROM TBM_DRIVER_Attendance_INFO a LEFT OUTER join TBL_DRIVERINFO b on 	a.COMPANY_NO  	= b.COMPANY_NO AND a.EMP_NM 		= b.EMP_NM where 	a.company_no = '100' AND 	a.start_date   between '2023-05-02' and '2023-06-25' and 	a.emp_nm like '%' AND 	a.attendance_Type  = decode ('all','all',a.attendance_Type,'all') order by a.start_date,a.emp_nm,a.attendance_type
 {executed in 7 msec}
2023-06-25 12:14:56.528 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT	DISTINCT(b.EMP_NM) || '/' || b.ROUTE_NM ||  '/' || b.sp_gb || '/' || b.car_regno as emp_info ,b.EMP_NM,b.route_nm,b.sp_gb FROM	TBL_DRIVERINFO b WHERE	b.company_no = '100' AND     b.emp_nm like ('박정배' || '%') order by b.route_nm desc,b.sp_gb desc,b.EMP_NM
2023-06-25 12:14:56.529 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 12:14:56.530 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. SELECT	DISTINCT(b.EMP_NM) || '/' || b.ROUTE_NM ||  '/' || b.sp_gb || '/' || b.car_regno as emp_info ,b.EMP_NM,b.route_nm,b.sp_gb FROM	TBL_DRIVERINFO b WHERE	b.company_no = '100' AND     b.emp_nm like ('박정배' || '%') order by b.route_nm desc,b.sp_gb desc,b.EMP_NM
 {executed in 1 msec}
2023-06-25 12:14:56.945 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT	DISTINCT(b.EMP_NM) || '/' || b.ROUTE_NM ||  '/' || b.sp_gb || '/' || b.car_regno as emp_info ,b.EMP_NM,b.route_nm,b.sp_gb FROM	TBL_DRIVERINFO b WHERE	b.company_no = '100' AND     b.emp_nm like ('박정배' || '%') order by b.route_nm desc,b.sp_gb desc,b.EMP_NM
2023-06-25 12:14:56.946 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. SELECT	DISTINCT(b.EMP_NM) || '/' || b.ROUTE_NM ||  '/' || b.sp_gb || '/' || b.car_regno as emp_info ,b.EMP_NM,b.route_nm,b.sp_gb FROM	TBL_DRIVERINFO b WHERE	b.company_no = '100' AND     b.emp_nm like ('박정배' || '%') order by b.route_nm desc,b.sp_gb desc,b.EMP_NM
 {executed in 1 msec}
2023-06-25 12:18:06.305 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT a.* ,a.start_date||a.emp_nm as key,rownum as id ,	b.ROUTE_NM ,b.SP_GB ,b.CAR_REGNO ,	b.EMP_NM || '/' || b.ROUTE_NM ||  '/' || b.sp_gb || '/' || b.car_regno as emp_info FROM TBM_DRIVER_Attendance_INFO a LEFT OUTER join TBL_DRIVERINFO b on 	a.COMPANY_NO  	= b.COMPANY_NO AND a.EMP_NM 		= b.EMP_NM where 	a.company_no = '100' AND 	a.start_date   between '2023-05-02' and '2023-06-25' and 	a.emp_nm like '%' AND 	a.attendance_Type  = decode ('all','all',a.attendance_Type,'all') order by a.start_date,a.emp_nm,a.attendance_type
2023-06-25 12:18:06.306 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
12. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 12:18:06.314 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
12. SELECT a.* ,a.start_date||a.emp_nm as key,rownum as id ,	b.ROUTE_NM ,b.SP_GB ,b.CAR_REGNO ,	b.EMP_NM || '/' || b.ROUTE_NM ||  '/' || b.sp_gb || '/' || b.car_regno as emp_info FROM TBM_DRIVER_Attendance_INFO a LEFT OUTER join TBL_DRIVERINFO b on 	a.COMPANY_NO  	= b.COMPANY_NO AND a.EMP_NM 		= b.EMP_NM where 	a.company_no = '100' AND 	a.start_date   between '2023-05-02' and '2023-06-25' and 	a.emp_nm like '%' AND 	a.attendance_Type  = decode ('all','all',a.attendance_Type,'all') order by a.start_date,a.emp_nm,a.attendance_type
 {executed in 7 msec}
2023-06-25 12:27:37.516 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Starting PjyApplication on DESKTOP-QJPD93S with PID 7848 (D:\BUS\dashboard\dashboard\target\classes started by admin in D:\BUS\dashboard\dashboard)
2023-06-25 12:27:37.521 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - The following profiles are active: oauth
2023-06-25 12:27:37.582 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-06-25 12:27:37.582 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-06-25 12:27:38.882 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-25 12:27:38.883 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-06-25 12:27:39.059 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 164ms. Found 3 JPA repository interfaces.
2023-06-25 12:27:39.423 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-25 12:27:39.424 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2023-06-25 12:27:39.471 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.FileRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-06-25 12:27:39.472 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.MemberRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-06-25 12:27:39.472 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.RememberMeRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-06-25 12:27:39.473 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 49ms. Found 0 JDBC repository interfaces.
2023-06-25 12:27:39.915 INFO  [restartedMain] [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] - Post-processing PropertySource instances
2023-06-25 12:27:39.987 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2023-06-25 12:27:39.988 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource commandLineArgs [org.springframework.core.env.SimpleCommandLinePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-06-25 12:27:39.988 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-06-25 12:27:39.988 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-06-25 12:27:39.988 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-25 12:27:39.989 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
2023-06-25 12:27:39.989 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2023-06-25 12:27:39.990 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application-oauth.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-25 12:27:39.990 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-25 12:27:39.990 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-25 12:27:39.990 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [pjy.properties] [org.springframework.core.env.CompositePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-06-25 12:27:39.990 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [common.properties] [org.springframework.core.io.support.ResourcePropertySource] to EncryptableMapPropertySourceWrapper
2023-06-25 12:27:40.061 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'asyncConfiguration' of type [com.pjy.dashboard.configuration.AsyncConfiguration$$EnhancerBySpringCGLIB$$ebefff7d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-25 12:27:40.119 INFO  [restartedMain] [c.u.j.filter.DefaultLazyPropertyFilter] - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2023-06-25 12:27:40.220 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$d5e663aa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-25 12:27:40.308 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-25 12:27:40.310 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@2c1c2fb2' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-25 12:27:40.312 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$fabb065c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-25 12:27:40.323 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration$$EnhancerBySpringCGLIB$$20101e72] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-25 12:27:40.328 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-25 12:27:40.329 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-25 12:27:40.352 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$3d389b70] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-25 12:27:40.383 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$bcb8e8a2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-25 12:27:40.522 INFO  [restartedMain] [c.u.j.r.DefaultLazyPropertyResolver] - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2023-06-25 12:27:40.528 INFO  [restartedMain] [c.u.j.d.DefaultLazyPropertyDetector] - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2023-06-25 12:27:40.999 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 10010 (http)
2023-06-25 12:27:41.019 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Initializing ProtocolHandler ["http-nio-10010"]
2023-06-25 12:27:41.032 INFO  [restartedMain] [org.apache.catalina.core.StandardService] - Starting service [Tomcat]
2023-06-25 12:27:41.033 INFO  [restartedMain] [org.apache.catalina.core.StandardEngine] - Starting Servlet engine: [Apache Tomcat/9.0.29]
2023-06-25 12:27:41.445 INFO  [restartedMain] [org.apache.jasper.servlet.TldScanner] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2023-06-25 12:27:41.456 INFO  [restartedMain] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring embedded WebApplicationContext
2023-06-25 12:27:41.457 INFO  [restartedMain] [o.s.web.context.ContextLoader] - Root WebApplicationContext: initialization completed in 3875 ms
2023-06-25 12:27:42.310 INFO  [restartedMain] [c.u.j.encryptor.DefaultLazyEncryptor] - Found Custom Encryptor Bean org.jasypt.encryption.pbe.PooledPBEStringEncryptor@78095ea8 with name: jasyptStringEncryptor
2023-06-25 12:27:42.355 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Starting...
2023-06-25 12:27:42.440 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.executeSql(PoolBase.java:567)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 7 msec}
2023-06-25 12:27:42.446 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Start completed.
2023-06-25 12:27:43.189 INFO  [restartedMain] [com.pjy.dashboard.filter.TestFilter] - init Pjy Filter
2023-06-25 12:27:43.520 INFO  [restartedMain] [o.hibernate.jpa.internal.util.LogHelper] - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2023-06-25 12:27:43.593 INFO  [restartedMain] [org.hibernate.Version] - HHH000412: Hibernate Core {5.3.14.Final}
2023-06-25 12:27:43.596 INFO  [restartedMain] [org.hibernate.cfg.Environment] - HHH000206: hibernate.properties not found
2023-06-25 12:27:43.750 INFO  [restartedMain] [org.hibernate.annotations.common.Version] - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2023-06-25 12:27:43.985 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 12:27:44.003 INFO  [restartedMain] [org.hibernate.dialect.Dialect] - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2023-06-25 12:27:44.703 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 12:27:44.706 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select SEQUENCE_CATALOG, SEQUENCE_SCHEMA, SEQUENCE_NAME, INCREMENT from information_schema.sequences
 {executed in 1 msec}
2023-06-25 12:27:44.756 INFO  [restartedMain] [o.s.o.j.LocalContainerEntityManagerFactoryBean] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-06-25 12:27:45.002 INFO  [restartedMain] [o.h.h.i.QueryTranslatorFactoryInitiator] - HHH000397: Using ASTQueryTranslatorFactory
2023-06-25 12:27:46.073 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService
2023-06-25 12:27:46.083 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'asyncThreadPool'
2023-06-25 12:27:46.270 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/h2-console/**'], []
2023-06-25 12:27:46.270 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/css/**'], []
2023-06-25 12:27:46.270 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/js/**'], []
2023-06-25 12:27:46.270 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/monitor/**'], []
2023-06-25 12:27:46.270 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/img/**'], []
2023-06-25 12:27:46.271 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/lib/**'], []
2023-06-25 12:27:46.271 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/main.css'], []
2023-06-25 12:27:46.271 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/common.js'], []
2023-06-25 12:27:46.271 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/resources/**'], []
2023-06-25 12:27:46.431 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@64e8279c, org.springframework.security.web.context.SecurityContextPersistenceFilter@35540183, org.springframework.security.web.header.HeaderWriterFilter@44592095, org.springframework.web.filter.CorsFilter@70e1071a, org.springframework.security.web.authentication.logout.LogoutFilter@6b49a4a6, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@3549a31c, org.springframework.security.web.session.ConcurrentSessionFilter@6effd26f, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@52b7d95a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@20f2ec1a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@208e0955, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@6faa4af1, org.springframework.security.web.session.SessionManagementFilter@3db1a865, org.springframework.security.web.access.ExceptionTranslationFilter@2f702cb7, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@54eb2114]
2023-06-25 12:27:46.453 INFO  [restartedMain] [o.s.aop.framework.CglibAopProxy] - Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(javax.servlet.FilterConfig) throws javax.servlet.ServletException] because it is marked as final: Consider using interface-based JDK proxies instead!
2023-06-25 12:27:46.827 WARN  [restartedMain] [o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-06-25 12:27:46.906 INFO  [restartedMain] [o.s.b.a.w.s.WelcomePageHandlerMapping] - Adding welcome page: ServletContext resource [/index.html]
2023-06-25 12:27:47.321 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 12:27:48.126 INFO  [restartedMain] [o.s.b.d.a.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2023-06-25 12:27:48.154 INFO  [restartedMain] [o.s.b.a.e.web.EndpointLinksResolver] - Exposing 16 endpoint(s) beneath base path '/actuator'
2023-06-25 12:27:48.300 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskScheduler] - Initializing ExecutorService
2023-06-25 12:27:48.304 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Starting ProtocolHandler ["http-nio-10010"]
2023-06-25 12:27:48.357 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 10010 (http) with context path ''
2023-06-25 12:27:48.361 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Started PjyApplication in 11.328 seconds (JVM running for 12.725)
2023-06-25 12:27:48.363 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-06-25 12:27:48.363 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - Application started
2023-06-25 12:27:48.363 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-06-25 12:27:49.551 INFO  [RMI TCP Connection(9)-127.0.0.1] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-25 12:27:49.551 INFO  [RMI TCP Connection(9)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Initializing Servlet 'dispatcherServlet'
2023-06-25 12:27:49.573 INFO  [RMI TCP Connection(9)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Completed initialization in 22 ms
2023-06-25 12:31:29.228 INFO  [http-nio-10010-exec-3] [c.p.d.interceptor.LoggerInterceptor] - ============================== START ==============================
2023-06-25 12:31:29.230 INFO  [http-nio-10010-exec-3] [c.p.d.interceptor.LoggerInterceptor] -  Class       	:  class org.springframework.web.method.HandlerMethod
2023-06-25 12:31:29.230 INFO  [http-nio-10010-exec-3] [c.p.d.interceptor.LoggerInterceptor] -  Request URI 	:  /error
2023-06-25 12:31:29.231 INFO  [http-nio-10010-exec-3] [c.p.d.interceptor.LoggerInterceptor] -  Request addr	:  0:0:0:0:0:0:0:1
2023-06-25 12:31:29.232 INFO  [http-nio-10010-exec-3] [c.p.d.interceptor.LoggerInterceptor] -  Servlet URI 	:  /error
2023-06-25 12:31:30.716 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 12:31:30.724 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select * from MEMBER where userId = 'p00139'
 {executed in 1 msec}
2023-06-25 12:31:30.746 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.MemberServiceImpl] - ROLE_ADMIN
2023-06-25 12:31:30.836 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.MemberServiceImpl] - pass:$2a$10$MNrQAPw.4k9j2y08eTmYEeI7oKPuaWbA97HHog.8PYep5HsRwhbae,$2a$10$iBjUza69Cc36.rGn2CuO2O8wYR9FN7FZXi9HT7DRpbCjycBMOsop2
2023-06-25 12:31:30.924 INFO  [http-nio-10010-exec-5] [c.p.d.configuration.SecurityConfig] - authentication:: p00139
2023-06-25 12:31:41.308 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT a.* ,a.start_date||a.emp_nm as key,rownum as id ,	b.ROUTE_NM ,b.SP_GB ,b.CAR_REGNO ,	b.EMP_NM || '/' || b.ROUTE_NM ||  '/' || b.sp_gb || '/' || b.car_regno as emp_info FROM TBM_DRIVER_Attendance_INFO a LEFT OUTER join TBL_DRIVERINFO b on 	a.COMPANY_NO  	= b.COMPANY_NO AND a.EMP_NM 		= b.EMP_NM where 	a.company_no = '100' AND 	a.start_date   between '2023-04-04' and '2023-06-25' and 	a.emp_nm like '%' AND 	a.attendance_Type  = decode ('all','all',a.attendance_Type,'all') order by a.start_date,a.emp_nm,a.attendance_type
2023-06-25 12:31:41.321 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 12:31:41.331 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. SELECT a.* ,a.start_date||a.emp_nm as key,rownum as id ,	b.ROUTE_NM ,b.SP_GB ,b.CAR_REGNO ,	b.EMP_NM || '/' || b.ROUTE_NM ||  '/' || b.sp_gb || '/' || b.car_regno as emp_info FROM TBM_DRIVER_Attendance_INFO a LEFT OUTER join TBL_DRIVERINFO b on 	a.COMPANY_NO  	= b.COMPANY_NO AND a.EMP_NM 		= b.EMP_NM where 	a.company_no = '100' AND 	a.start_date   between '2023-04-04' and '2023-06-25' and 	a.emp_nm like '%' AND 	a.attendance_Type  = decode ('all','all',a.attendance_Type,'all') order by a.start_date,a.emp_nm,a.attendance_type
 {executed in 9 msec}
2023-06-25 12:35:57.698 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 12:35:57.699 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. SELECT ROUTE_NM  FROM TBL_ROUTEINFO ORDER BY 1
 {executed in 1 msec}
2023-06-25 13:26:45.709 INFO  [Catalina-utility-1] [c.pjy.dashboard.listener.SessionListener] - updateUserCloseTime p00139 
2023-06-25 13:26:45.709 INFO  [Catalina-utility-1] [c.pjy.dashboard.listener.SessionListener] - currentSessionUserList ->  false
2023-06-25 13:26:45.710 INFO  [Catalina-utility-1] [c.pjy.dashboard.listener.SessionListener] - updateUserCloseTime p00139 
2023-06-25 13:26:45.710 INFO  [Catalina-utility-1] [c.pjy.dashboard.listener.SessionListener] - currentSessionUserList ->  false
2023-06-25 13:28:02.253 INFO  [http-nio-10010-exec-1] [c.p.d.interceptor.LoggerInterceptor] - ============================== START ==============================
2023-06-25 13:28:02.254 INFO  [http-nio-10010-exec-1] [c.p.d.interceptor.LoggerInterceptor] -  Class       	:  class org.springframework.web.method.HandlerMethod
2023-06-25 13:28:02.254 INFO  [http-nio-10010-exec-1] [c.p.d.interceptor.LoggerInterceptor] -  Request URI 	:  /error
2023-06-25 13:28:02.254 INFO  [http-nio-10010-exec-1] [c.p.d.interceptor.LoggerInterceptor] -  Request addr	:  0:0:0:0:0:0:0:1
2023-06-25 13:28:02.254 INFO  [http-nio-10010-exec-1] [c.p.d.interceptor.LoggerInterceptor] -  Servlet URI 	:  /error
2023-06-25 13:28:04.491 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 13:28:04.492 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
31. select * from MEMBER where userId = 'p00139'
 {executed in 0 msec}
2023-06-25 13:28:04.494 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.MemberServiceImpl] - ROLE_ADMIN
2023-06-25 13:28:04.590 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.MemberServiceImpl] - pass:$2a$10$MNrQAPw.4k9j2y08eTmYEeI7oKPuaWbA97HHog.8PYep5HsRwhbae,$2a$10$MYnBh9v3XjPK6dwIMa6GSusFl4BMkLee7qSdJqoWGr4ScFyan6zbO
2023-06-25 13:28:04.679 INFO  [http-nio-10010-exec-10] [c.p.d.configuration.SecurityConfig] - authentication:: p00139
2023-06-25 13:28:08.582 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 13:28:08.583 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
31. SELECT ROUTE_NM  FROM TBL_ROUTEINFO ORDER BY 1
 {executed in 0 msec}
2023-06-25 13:28:19.729 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 13:28:19.731 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
31. SELECT ROUTE_NM  FROM TBL_ROUTEINFO ORDER BY 1
 {executed in 0 msec}
2023-06-25 13:29:45.291 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 13:29:45.292 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
31. SELECT ROUTE_NM  FROM TBL_ROUTEINFO ORDER BY 1
 {executed in 0 msec}
2023-06-25 13:29:51.340 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT 	a.ROUTE_NM,b.STATUS,b.LAST_CHG_USER,b.LAST_CHG_DATE FROM 	TBL_ROUTEINFO a left outer join TBM_MONTH_ARRANGE_STATUS b on	a.company_no = b.company_no and a.route_nm   = b.route_nm AND b.BASE_YM = '2023-05' AND	b.ROUTE_NM like '' || '%' WHERE 	a.company_no = '100' ORDER BY 1
2023-06-25 13:29:51.341 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 13:29:51.343 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
31. SELECT 	a.ROUTE_NM,b.STATUS,b.LAST_CHG_USER,b.LAST_CHG_DATE FROM 	TBL_ROUTEINFO a left outer join TBM_MONTH_ARRANGE_STATUS b on	a.company_no = b.company_no and a.route_nm   = b.route_nm AND b.BASE_YM = '2023-05' AND	b.ROUTE_NM like '' || '%' WHERE 	a.company_no = '100' ORDER BY 1
 {executed in 0 msec}
2023-06-25 13:29:56.957 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - WITH carInfo AS ( SELECT '감차후 총 차량댓수' as CAR_REGNO,'' AS AMPM_GUBUN ,b.emp_nm,0 AS tot_work_date , b.D1    , b.D2    , b.D3    , b.D4    , b.D5    , b.D6    , b.D7    , b.D8    , b.D9    , b.D10 , b.D11    , b.D12    , b.D13    , b.D14    , b.D15    , b.D16    , b.D17    , b.D18    , b.D19    , b.D20 , b.D21    , b.D22    , b.D23    , b.D24    , b.D25    , b.D26    , b.D27    , b.D28    , b.D29    , b.D30 , b.D31 FROM 	TBL_MONTH_ARRANGE_BASIC b WHERE 	b.company_no = '100' AND 	b.route_nm = '20번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-05' AND    b.DISPATCH_SEQ = 2  AND	b.CAR_REGNO  = '-' ), allocateInfo AS ( SELECT  decode(AMPM_GUBUN,'p','오전','오후') || ' 배정 건수' AS CAR_REGNO,ampm_gubun,'-' emp_nm,0 AS tot_work_date ,0 D1 ,0 D2 ,0 D3 ,0 D4 ,0 D5 ,0 D6 ,0 D7 ,0 D8 ,0 D9 ,0 D10 ,0 D11 ,0 D12 ,0 D13 ,0 D14 ,0 D15 ,0 D16 ,0 D17 ,0 D18 ,0 D19 ,0 D20 ,0 D21 ,0 D22 ,0 D23 ,0 D24 ,0 D25 ,0 D26 ,0 D27 ,0 D28 ,0 d29 ,0 d30 ,0 d31 FROM 	TBL_MONTH_ARRANGE_DETAIL b WHERE 	b.company_no = '100' AND 	b.route_nm = '20번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-05' AND    b.DISPATCH_SEQ = 6  AND    b.PREV_DAILY_SEQ = 1 AND    b.AMPM_GUBUN IN ('a','p') ) SELECT * FROM carInfo union all SELECT '감차후 총 운행횟수' as CAR_REGNO,' ' AMPM_GUBUN ,b.emp_nm,0 AS tot_work_date , b.D1 *2   , b.D2 *2    , b.D3  *2   , b.D4 *2    , b.D5 *2    , b.D6 *2    , b.D7 *2    , b.D8 *2    , b.D9 *2    , b.D10 *2 , b.D11 *2    , b.D12 *2    , b.D13 *2    , b.D14 *2    , b.D15 *2    , b.D16 *2    , b.D17 *2    , b.D18 *2    , b.D19 *2    , b.D20 *2 , b.D21 *2    , b.D22 *2    , b.D23 *2    , b.D24 *2    , b.D25 *2    , b.D26 *2    , b.D27 *2    , b.D28 *2    , b.D29 *2    , b.D30 *2 , b.D31 *2 FROM 	carInfo b union all SELECT  * FROM 	allocateInfo b union all SELECT  decode(b.AMPM_GUBUN,'p','오전','오후') || ' 미배정 건수' AS CAR_REGNO,b.AMPM_GUBUN ,'-' emp_nm,0 AS tot_work_date ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  FROM 	allocateInfo b,carInfo a
2023-06-25 13:29:56.958 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 13:29:56.963 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
31. WITH carInfo AS ( SELECT '감차후 총 차량댓수' as CAR_REGNO,'' AS AMPM_GUBUN ,b.emp_nm,0 AS tot_work_date , b.D1    , b.D2    , b.D3    , b.D4    , b.D5    , b.D6    , b.D7    , b.D8    , b.D9    , b.D10 , b.D11    , b.D12    , b.D13    , b.D14    , b.D15    , b.D16    , b.D17    , b.D18    , b.D19    , b.D20 , b.D21    , b.D22    , b.D23    , b.D24    , b.D25    , b.D26    , b.D27    , b.D28    , b.D29    , b.D30 , b.D31 FROM 	TBL_MONTH_ARRANGE_BASIC b WHERE 	b.company_no = '100' AND 	b.route_nm = '20번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-05' AND    b.DISPATCH_SEQ = 2  AND	b.CAR_REGNO  = '-' ), allocateInfo AS ( SELECT  decode(AMPM_GUBUN,'p','오전','오후') || ' 배정 건수' AS CAR_REGNO,ampm_gubun,'-' emp_nm,0 AS tot_work_date ,0 D1 ,0 D2 ,0 D3 ,0 D4 ,0 D5 ,0 D6 ,0 D7 ,0 D8 ,0 D9 ,0 D10 ,0 D11 ,0 D12 ,0 D13 ,0 D14 ,0 D15 ,0 D16 ,0 D17 ,0 D18 ,0 D19 ,0 D20 ,0 D21 ,0 D22 ,0 D23 ,0 D24 ,0 D25 ,0 D26 ,0 D27 ,0 D28 ,0 d29 ,0 d30 ,0 d31 FROM 	TBL_MONTH_ARRANGE_DETAIL b WHERE 	b.company_no = '100' AND 	b.route_nm = '20번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-05' AND    b.DISPATCH_SEQ = 6  AND    b.PREV_DAILY_SEQ = 1 AND    b.AMPM_GUBUN IN ('a','p') ) SELECT * FROM carInfo union all SELECT '감차후 총 운행횟수' as CAR_REGNO,' ' AMPM_GUBUN ,b.emp_nm,0 AS tot_work_date , b.D1 *2   , b.D2 *2    , b.D3  *2   , b.D4 *2    , b.D5 *2    , b.D6 *2    , b.D7 *2    , b.D8 *2    , b.D9 *2    , b.D10 *2 , b.D11 *2    , b.D12 *2    , b.D13 *2    , b.D14 *2    , b.D15 *2    , b.D16 *2    , b.D17 *2    , b.D18 *2    , b.D19 *2    , b.D20 *2 , b.D21 *2    , b.D22 *2    , b.D23 *2    , b.D24 *2    , b.D25 *2    , b.D26 *2    , b.D27 *2    , b.D28 *2    , b.D29 *2    , b.D30 *2 , b.D31 *2 FROM 	carInfo b union all SELECT  * FROM 	allocateInfo b union all SELECT  decode(b.AMPM_GUBUN,'p','오전','오후') || ' 미배정 건수' AS CAR_REGNO,b.AMPM_GUBUN ,'-' emp_nm,0 AS tot_work_date ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  FROM 	allocateInfo b,carInfo a
 {executed in 5 msec}
2023-06-25 13:29:56.964 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - SELECT '[20번] 2023-05월' as CAR_REGNO,b.emp_nm,0 AS tot_work_date , b.D1    , b.D2    , b.D3    , b.D4    , b.D5    , b.D6    , b.D7    , b.D8    , b.D9    , b.D10 , b.D11    , b.D12    , b.D13    , b.D14    , b.D15    , b.D16    , b.D17    , b.D18    , b.D19    , b.D20 , b.D21    , b.D22    , b.D23    , b.D24    , b.D25    , b.D26    , b.D27    , b.D28    , b.D29    , b.D30 , b.D31 ,'N' as bit FROM 	TBL_MONTH_ARRANGE_DETAIL b WHERE 	b.company_no = '100' AND 	b.route_nm = '20번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-05' AND    b.DISPATCH_SEQ = 1
2023-06-25 13:29:56.965 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
31. SELECT '[20번] 2023-05월' as CAR_REGNO,b.emp_nm,0 AS tot_work_date , b.D1    , b.D2    , b.D3    , b.D4    , b.D5    , b.D6    , b.D7    , b.D8    , b.D9    , b.D10 , b.D11    , b.D12    , b.D13    , b.D14    , b.D15    , b.D16    , b.D17    , b.D18    , b.D19    , b.D20 , b.D21    , b.D22    , b.D23    , b.D24    , b.D25    , b.D26    , b.D27    , b.D28    , b.D29    , b.D30 , b.D31 ,'N' as bit FROM 	TBL_MONTH_ARRANGE_DETAIL b WHERE 	b.company_no = '100' AND 	b.route_nm = '20번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-05' AND    b.DISPATCH_SEQ = 1
 {executed in 1 msec}
2023-06-25 13:29:56.965 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - SELECT b.CAR_REGNO,b.emp_nm , 0 AS tot_work_date ,b.D1  ,b.D2  ,b.D3  ,b.D4  ,b.D5  ,b.D6  ,b.D7  ,b.D8  ,b.D9  ,b.D10 ,b.D11 ,b.D12 ,b.D13 ,b.D14 ,b.D15 ,b.D16 ,b.D17 ,b.D18 ,b.D19 ,b.D20 ,b.D21 ,b.D22 ,b.D23 ,b.D24 ,b.D25 ,b.D26 ,b.D27 ,b.D28 ,b.D29 ,b.D30 ,b.D31 ,'N' AS bit FROM 	TBL_MONTH_ARRANGE_DETAIL b WHERE 	b.company_no = '100' AND 	b.route_nm = '20번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-05' AND    b.DISPATCH_SEQ = 6 AND    b.CAR_REGNO not like 'SP%' order by b.dispatch_seq,b.CAR_REGNO ,b.ampm_gubun,b.prev_daily_seq
2023-06-25 13:29:56.967 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
31. SELECT b.CAR_REGNO,b.emp_nm , 0 AS tot_work_date ,b.D1  ,b.D2  ,b.D3  ,b.D4  ,b.D5  ,b.D6  ,b.D7  ,b.D8  ,b.D9  ,b.D10 ,b.D11 ,b.D12 ,b.D13 ,b.D14 ,b.D15 ,b.D16 ,b.D17 ,b.D18 ,b.D19 ,b.D20 ,b.D21 ,b.D22 ,b.D23 ,b.D24 ,b.D25 ,b.D26 ,b.D27 ,b.D28 ,b.D29 ,b.D30 ,b.D31 ,'N' AS bit FROM 	TBL_MONTH_ARRANGE_DETAIL b WHERE 	b.company_no = '100' AND 	b.route_nm = '20번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-05' AND    b.DISPATCH_SEQ = 6 AND    b.CAR_REGNO not like 'SP%' order by b.dispatch_seq,b.CAR_REGNO ,b.ampm_gubun,b.prev_daily_seq
 {executed in 1 msec}
2023-06-25 13:29:56.969 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - WITH sp_maxinfo AS ( SELECT  b.CAR_REGNO,b.EMP_NM ,nvl(max(CASE WHEN nvl(b.D1 ,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D1   ELSE '#' || b.D1  end),' ') as D1 ,nvl(max(CASE WHEN nvl(b.D2 ,'') = '' THEN '' WHEN b.route_nm = '20번' tHEN b.D2   ELSE '#' || b.D2  end),' ') as D2 ,nvl(max(CASE WHEN nvl(b.D3 ,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D3   ELSE '#' || b.D3   end),' ') as D3 ,nvl(max(CASE WHEN nvl(b.D4 ,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D4   ELSE '#' || b.D4   end),' ') as D4 ,nvl(max(CASE WHEN nvl(b.D5 ,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D5   ELSE '#' || b.D5   end),' ') as D5 ,nvl(max(CASE WHEN nvl(b.D6 ,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D6   ELSE '#' || b.D6   end),' ') as D6 ,nvl(max(CASE WHEN nvl(b.D7 ,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D7   ELSE '#' || b.D7   end),' ') as D7 ,nvl(max(CASE WHEN nvl(b.D8 ,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D8   ELSE '#' || b.D8   end),' ') as D8 ,nvl(max(CASE WHEN nvl(b.D9 ,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D9   ELSE '#' || b.D9   end),' ') as D9 ,nvl(max(CASE WHEN nvl(b.D10,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D10  ELSE '#' || b.D10  end),' ') as D10 ,nvl(max(CASE WHEN nvl(b.D11,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D11  ELSE '#' || b.D11  end),' ') as D11 ,nvl(max(CASE WHEN nvl(b.D12,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D12  ELSE '#' || b.D12  end),' ') as D12 ,nvl(max(CASE WHEN nvl(b.D13,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D13  ELSE '#' || b.D13  end),' ') as D13 ,nvl(max(CASE WHEN nvl(b.D14,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D14  ELSE '#' || b.D14  end),' ') as D14 ,nvl(max(CASE WHEN nvl(b.D15,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D15  ELSE '#' || b.D15  end),' ') as D15 ,nvl(max(CASE WHEN nvl(b.D16,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D16  ELSE '#' || b.D16  end),' ') as D16 ,nvl(max(CASE WHEN nvl(b.D17,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D17  ELSE '#' || b.D17  end),' ') as D17 ,nvl(max(CASE WHEN nvl(b.D18,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D18  ELSE '#' || b.D18  end),' ') as D18 ,nvl(max(CASE WHEN nvl(b.D19,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D19  ELSE '#' || b.D19  end),' ') as D19 ,nvl(max(CASE WHEN nvl(b.D20,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D20  ELSE '#' || b.D20  end),' ') as D20 ,nvl(max(CASE WHEN nvl(b.D21,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D21  ELSE '#' || b.D21  end),' ') as D21 ,nvl(max(CASE WHEN nvl(b.D22,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D22  ELSE '#' || b.D22  end),' ') as D22 ,nvl(max(CASE WHEN nvl(b.D23,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D23  ELSE '#' || b.D23  end),' ') as D23 ,nvl(max(CASE WHEN nvl(b.D24,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D24  ELSE '#' || b.D24  end),' ') as D24 ,nvl(max(CASE WHEN nvl(b.D25,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D25  ELSE '#' || b.D25  end),' ') as D25 ,nvl(max(CASE WHEN nvl(b.D26,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D26  ELSE '#' || b.D26  end),' ') as D26 ,nvl(max(CASE WHEN nvl(b.D27,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D27  ELSE '#' || b.D27  end),' ') as D27 ,nvl(max(CASE WHEN nvl(b.D28,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D28  ELSE '#' || b.D28  end),' ') as D28 ,nvl(max(CASE WHEN nvl(b.D29,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D29  ELSE '#' || b.D29  end),' ') as D29 ,nvl(max(CASE WHEN nvl(b.D30,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D30  ELSE '#' || b.D30  end),' ') as D30 ,nvl(max(CASE WHEN nvl(b.D31,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D31  ELSE '#' || b.D31  end),' ') as D31 FROM 	TBL_MONTH_ARRANGE_DETAIL b where 	b.company_no = '100' AND b.BASE_YM = '2023-05' and b.DISPATCH_SEQ = 6 and b.init_seq = 0 AND b.CAR_REGNO LIKE  'SP%' GROUP BY b.CAR_REGNO,b.emp_nm ) SELECT b.*,'N' as bit ,	LENGTH (REGEXP_REPLACE(b.D1||b.D2||b.D3||b.D4||b.D5||b.D6||b.D7||b.D8||b.D9||b.D10||b.D11||b.D12||b.D13||b.D14||b.D15||b.D16||b.D17||b.D18||b.D19||b.D20||b.D21||b.D22||b.D23||b.D24||b.D25||b.D26||b.D27||b.D28||b.D29||b.D30||b.D31,'[0-9# ]','') ) AS tot_work_date FROM ( SELECT  a.prev_daily_seq,b.* FROM 	TBL_MONTH_ARRANGE_DETAIL a LEFT OUTER JOIN sp_maxinfo b ON	a.emp_nm = b.EMP_NM AND  a.car_regno = b.CAR_REGNO where 	a.company_no = '100' AND a.BASE_YM = '2023-05' and a.DISPATCH_SEQ = 6 and a.init_seq = 0 AND a.CAR_REGNO LIKE  'SP%' AND a.emp_nm = decode('','',a.emp_nm,'') AND a.route_nm = '20번' ) b ORDER BY b.prev_daily_seq
2023-06-25 13:29:56.985 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
31. WITH sp_maxinfo AS ( SELECT  b.CAR_REGNO,b.EMP_NM ,nvl(max(CASE WHEN nvl(b.D1 ,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D1   ELSE '#' || b.D1  end),' ') as D1 ,nvl(max(CASE WHEN nvl(b.D2 ,'') = '' THEN '' WHEN b.route_nm = '20번' tHEN b.D2   ELSE '#' || b.D2  end),' ') as D2 ,nvl(max(CASE WHEN nvl(b.D3 ,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D3   ELSE '#' || b.D3   end),' ') as D3 ,nvl(max(CASE WHEN nvl(b.D4 ,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D4   ELSE '#' || b.D4   end),' ') as D4 ,nvl(max(CASE WHEN nvl(b.D5 ,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D5   ELSE '#' || b.D5   end),' ') as D5 ,nvl(max(CASE WHEN nvl(b.D6 ,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D6   ELSE '#' || b.D6   end),' ') as D6 ,nvl(max(CASE WHEN nvl(b.D7 ,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D7   ELSE '#' || b.D7   end),' ') as D7 ,nvl(max(CASE WHEN nvl(b.D8 ,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D8   ELSE '#' || b.D8   end),' ') as D8 ,nvl(max(CASE WHEN nvl(b.D9 ,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D9   ELSE '#' || b.D9   end),' ') as D9 ,nvl(max(CASE WHEN nvl(b.D10,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D10  ELSE '#' || b.D10  end),' ') as D10 ,nvl(max(CASE WHEN nvl(b.D11,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D11  ELSE '#' || b.D11  end),' ') as D11 ,nvl(max(CASE WHEN nvl(b.D12,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D12  ELSE '#' || b.D12  end),' ') as D12 ,nvl(max(CASE WHEN nvl(b.D13,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D13  ELSE '#' || b.D13  end),' ') as D13 ,nvl(max(CASE WHEN nvl(b.D14,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D14  ELSE '#' || b.D14  end),' ') as D14 ,nvl(max(CASE WHEN nvl(b.D15,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D15  ELSE '#' || b.D15  end),' ') as D15 ,nvl(max(CASE WHEN nvl(b.D16,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D16  ELSE '#' || b.D16  end),' ') as D16 ,nvl(max(CASE WHEN nvl(b.D17,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D17  ELSE '#' || b.D17  end),' ') as D17 ,nvl(max(CASE WHEN nvl(b.D18,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D18  ELSE '#' || b.D18  end),' ') as D18 ,nvl(max(CASE WHEN nvl(b.D19,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D19  ELSE '#' || b.D19  end),' ') as D19 ,nvl(max(CASE WHEN nvl(b.D20,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D20  ELSE '#' || b.D20  end),' ') as D20 ,nvl(max(CASE WHEN nvl(b.D21,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D21  ELSE '#' || b.D21  end),' ') as D21 ,nvl(max(CASE WHEN nvl(b.D22,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D22  ELSE '#' || b.D22  end),' ') as D22 ,nvl(max(CASE WHEN nvl(b.D23,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D23  ELSE '#' || b.D23  end),' ') as D23 ,nvl(max(CASE WHEN nvl(b.D24,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D24  ELSE '#' || b.D24  end),' ') as D24 ,nvl(max(CASE WHEN nvl(b.D25,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D25  ELSE '#' || b.D25  end),' ') as D25 ,nvl(max(CASE WHEN nvl(b.D26,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D26  ELSE '#' || b.D26  end),' ') as D26 ,nvl(max(CASE WHEN nvl(b.D27,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D27  ELSE '#' || b.D27  end),' ') as D27 ,nvl(max(CASE WHEN nvl(b.D28,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D28  ELSE '#' || b.D28  end),' ') as D28 ,nvl(max(CASE WHEN nvl(b.D29,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D29  ELSE '#' || b.D29  end),' ') as D29 ,nvl(max(CASE WHEN nvl(b.D30,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D30  ELSE '#' || b.D30  end),' ') as D30 ,nvl(max(CASE WHEN nvl(b.D31,'') = '' THEN '' WHEN b.route_nm = '20번' THEN b.D31  ELSE '#' || b.D31  end),' ') as D31 FROM 	TBL_MONTH_ARRANGE_DETAIL b where 	b.company_no = '100' AND b.BASE_YM = '2023-05' and b.DISPATCH_SEQ = 6 and b.init_seq = 0 AND b.CAR_REGNO LIKE  'SP%' GROUP BY b.CAR_REGNO,b.emp_nm ) SELECT b.*,'N' as bit ,	LENGTH (REGEXP_REPLACE(b.D1||b.D2||b.D3||b.D4||b.D5||b.D6||b.D7||b.D8||b.D9||b.D10||b.D11||b.D12||b.D13||b.D14||b.D15||b.D16||b.D17||b.D18||b.D19||b.D20||b.D21||b.D22||b.D23||b.D24||b.D25||b.D26||b.D27||b.D28||b.D29||b.D30||b.D31,'[0-9# ]','') ) AS tot_work_date FROM ( SELECT  a.prev_daily_seq,b.* FROM 	TBL_MONTH_ARRANGE_DETAIL a LEFT OUTER JOIN sp_maxinfo b ON	a.emp_nm = b.EMP_NM AND  a.car_regno = b.CAR_REGNO where 	a.company_no = '100' AND a.BASE_YM = '2023-05' and a.DISPATCH_SEQ = 6 and a.init_seq = 0 AND a.CAR_REGNO LIKE  'SP%' AND a.emp_nm = decode('','',a.emp_nm,'') AND a.route_nm = '20번' ) b ORDER BY b.prev_daily_seq
 {executed in 16 msec}
2023-06-25 13:32:55.030 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 13:32:55.032 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
31. SELECT ROUTE_NM  FROM TBL_ROUTEINFO ORDER BY 1
 {executed in 0 msec}
2023-06-25 13:33:02.508 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - WITH carInfo AS ( SELECT '감차후 총 차량댓수' as CAR_REGNO,'' AS AMPM_GUBUN ,b.emp_nm,0 AS tot_work_date , b.D1    , b.D2    , b.D3    , b.D4    , b.D5    , b.D6    , b.D7    , b.D8    , b.D9    , b.D10 , b.D11    , b.D12    , b.D13    , b.D14    , b.D15    , b.D16    , b.D17    , b.D18    , b.D19    , b.D20 , b.D21    , b.D22    , b.D23    , b.D24    , b.D25    , b.D26    , b.D27    , b.D28    , b.D29    , b.D30 , b.D31 FROM 	TBL_MONTH_ARRANGE_BASIC b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-05' AND    b.DISPATCH_SEQ = 2  AND	b.CAR_REGNO  = '-' ), allocateInfo AS ( SELECT  decode(AMPM_GUBUN,'p','오전','오후') || ' 배정 건수' AS CAR_REGNO,ampm_gubun,'-' emp_nm,0 AS tot_work_date ,0 D1 ,0 D2 ,0 D3 ,0 D4 ,0 D5 ,0 D6 ,0 D7 ,0 D8 ,0 D9 ,0 D10 ,0 D11 ,0 D12 ,0 D13 ,0 D14 ,0 D15 ,0 D16 ,0 D17 ,0 D18 ,0 D19 ,0 D20 ,0 D21 ,0 D22 ,0 D23 ,0 D24 ,0 D25 ,0 D26 ,0 D27 ,0 D28 ,0 d29 ,0 d30 ,0 d31 FROM 	TBL_MONTH_ARRANGE_DETAIL b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-05' AND    b.DISPATCH_SEQ = 6  AND    b.PREV_DAILY_SEQ = 1 AND    b.AMPM_GUBUN IN ('a','p') ) SELECT * FROM carInfo union all SELECT '감차후 총 운행횟수' as CAR_REGNO,' ' AMPM_GUBUN ,b.emp_nm,0 AS tot_work_date , b.D1 *2   , b.D2 *2    , b.D3  *2   , b.D4 *2    , b.D5 *2    , b.D6 *2    , b.D7 *2    , b.D8 *2    , b.D9 *2    , b.D10 *2 , b.D11 *2    , b.D12 *2    , b.D13 *2    , b.D14 *2    , b.D15 *2    , b.D16 *2    , b.D17 *2    , b.D18 *2    , b.D19 *2    , b.D20 *2 , b.D21 *2    , b.D22 *2    , b.D23 *2    , b.D24 *2    , b.D25 *2    , b.D26 *2    , b.D27 *2    , b.D28 *2    , b.D29 *2    , b.D30 *2 , b.D31 *2 FROM 	carInfo b union all SELECT  * FROM 	allocateInfo b union all SELECT  decode(b.AMPM_GUBUN,'p','오전','오후') || ' 미배정 건수' AS CAR_REGNO,b.AMPM_GUBUN ,'-' emp_nm,0 AS tot_work_date ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  FROM 	allocateInfo b,carInfo a
2023-06-25 13:33:02.509 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 13:33:02.512 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
31. WITH carInfo AS ( SELECT '감차후 총 차량댓수' as CAR_REGNO,'' AS AMPM_GUBUN ,b.emp_nm,0 AS tot_work_date , b.D1    , b.D2    , b.D3    , b.D4    , b.D5    , b.D6    , b.D7    , b.D8    , b.D9    , b.D10 , b.D11    , b.D12    , b.D13    , b.D14    , b.D15    , b.D16    , b.D17    , b.D18    , b.D19    , b.D20 , b.D21    , b.D22    , b.D23    , b.D24    , b.D25    , b.D26    , b.D27    , b.D28    , b.D29    , b.D30 , b.D31 FROM 	TBL_MONTH_ARRANGE_BASIC b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-05' AND    b.DISPATCH_SEQ = 2  AND	b.CAR_REGNO  = '-' ), allocateInfo AS ( SELECT  decode(AMPM_GUBUN,'p','오전','오후') || ' 배정 건수' AS CAR_REGNO,ampm_gubun,'-' emp_nm,0 AS tot_work_date ,0 D1 ,0 D2 ,0 D3 ,0 D4 ,0 D5 ,0 D6 ,0 D7 ,0 D8 ,0 D9 ,0 D10 ,0 D11 ,0 D12 ,0 D13 ,0 D14 ,0 D15 ,0 D16 ,0 D17 ,0 D18 ,0 D19 ,0 D20 ,0 D21 ,0 D22 ,0 D23 ,0 D24 ,0 D25 ,0 D26 ,0 D27 ,0 D28 ,0 d29 ,0 d30 ,0 d31 FROM 	TBL_MONTH_ARRANGE_DETAIL b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-05' AND    b.DISPATCH_SEQ = 6  AND    b.PREV_DAILY_SEQ = 1 AND    b.AMPM_GUBUN IN ('a','p') ) SELECT * FROM carInfo union all SELECT '감차후 총 운행횟수' as CAR_REGNO,' ' AMPM_GUBUN ,b.emp_nm,0 AS tot_work_date , b.D1 *2   , b.D2 *2    , b.D3  *2   , b.D4 *2    , b.D5 *2    , b.D6 *2    , b.D7 *2    , b.D8 *2    , b.D9 *2    , b.D10 *2 , b.D11 *2    , b.D12 *2    , b.D13 *2    , b.D14 *2    , b.D15 *2    , b.D16 *2    , b.D17 *2    , b.D18 *2    , b.D19 *2    , b.D20 *2 , b.D21 *2    , b.D22 *2    , b.D23 *2    , b.D24 *2    , b.D25 *2    , b.D26 *2    , b.D27 *2    , b.D28 *2    , b.D29 *2    , b.D30 *2 , b.D31 *2 FROM 	carInfo b union all SELECT  * FROM 	allocateInfo b union all SELECT  decode(b.AMPM_GUBUN,'p','오전','오후') || ' 미배정 건수' AS CAR_REGNO,b.AMPM_GUBUN ,'-' emp_nm,0 AS tot_work_date ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  FROM 	allocateInfo b,carInfo a
 {executed in 2 msec}
2023-06-25 13:33:02.513 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - SELECT '[38번] 2023-05월' as CAR_REGNO,b.emp_nm,0 AS tot_work_date , b.D1    , b.D2    , b.D3    , b.D4    , b.D5    , b.D6    , b.D7    , b.D8    , b.D9    , b.D10 , b.D11    , b.D12    , b.D13    , b.D14    , b.D15    , b.D16    , b.D17    , b.D18    , b.D19    , b.D20 , b.D21    , b.D22    , b.D23    , b.D24    , b.D25    , b.D26    , b.D27    , b.D28    , b.D29    , b.D30 , b.D31 ,'N' as bit FROM 	TBL_MONTH_ARRANGE_DETAIL b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-05' AND    b.DISPATCH_SEQ = 1
2023-06-25 13:33:02.514 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
31. SELECT '[38번] 2023-05월' as CAR_REGNO,b.emp_nm,0 AS tot_work_date , b.D1    , b.D2    , b.D3    , b.D4    , b.D5    , b.D6    , b.D7    , b.D8    , b.D9    , b.D10 , b.D11    , b.D12    , b.D13    , b.D14    , b.D15    , b.D16    , b.D17    , b.D18    , b.D19    , b.D20 , b.D21    , b.D22    , b.D23    , b.D24    , b.D25    , b.D26    , b.D27    , b.D28    , b.D29    , b.D30 , b.D31 ,'N' as bit FROM 	TBL_MONTH_ARRANGE_DETAIL b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-05' AND    b.DISPATCH_SEQ = 1
 {executed in 1 msec}
2023-06-25 13:33:02.515 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - SELECT b.CAR_REGNO,b.emp_nm , 0 AS tot_work_date ,b.D1  ,b.D2  ,b.D3  ,b.D4  ,b.D5  ,b.D6  ,b.D7  ,b.D8  ,b.D9  ,b.D10 ,b.D11 ,b.D12 ,b.D13 ,b.D14 ,b.D15 ,b.D16 ,b.D17 ,b.D18 ,b.D19 ,b.D20 ,b.D21 ,b.D22 ,b.D23 ,b.D24 ,b.D25 ,b.D26 ,b.D27 ,b.D28 ,b.D29 ,b.D30 ,b.D31 ,'N' AS bit FROM 	TBL_MONTH_ARRANGE_DETAIL b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-05' AND    b.DISPATCH_SEQ = 6 AND    b.CAR_REGNO not like 'SP%' order by b.dispatch_seq,b.CAR_REGNO ,b.ampm_gubun,b.prev_daily_seq
2023-06-25 13:33:02.516 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
31. SELECT b.CAR_REGNO,b.emp_nm , 0 AS tot_work_date ,b.D1  ,b.D2  ,b.D3  ,b.D4  ,b.D5  ,b.D6  ,b.D7  ,b.D8  ,b.D9  ,b.D10 ,b.D11 ,b.D12 ,b.D13 ,b.D14 ,b.D15 ,b.D16 ,b.D17 ,b.D18 ,b.D19 ,b.D20 ,b.D21 ,b.D22 ,b.D23 ,b.D24 ,b.D25 ,b.D26 ,b.D27 ,b.D28 ,b.D29 ,b.D30 ,b.D31 ,'N' AS bit FROM 	TBL_MONTH_ARRANGE_DETAIL b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-05' AND    b.DISPATCH_SEQ = 6 AND    b.CAR_REGNO not like 'SP%' order by b.dispatch_seq,b.CAR_REGNO ,b.ampm_gubun,b.prev_daily_seq
 {executed in 1 msec}
2023-06-25 13:33:02.518 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - WITH sp_maxinfo AS ( SELECT  b.CAR_REGNO,b.EMP_NM ,nvl(max(CASE WHEN nvl(b.D1 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D1   ELSE '#' || b.D1  end),' ') as D1 ,nvl(max(CASE WHEN nvl(b.D2 ,'') = '' THEN '' WHEN b.route_nm = '38번' tHEN b.D2   ELSE '#' || b.D2  end),' ') as D2 ,nvl(max(CASE WHEN nvl(b.D3 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D3   ELSE '#' || b.D3   end),' ') as D3 ,nvl(max(CASE WHEN nvl(b.D4 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D4   ELSE '#' || b.D4   end),' ') as D4 ,nvl(max(CASE WHEN nvl(b.D5 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D5   ELSE '#' || b.D5   end),' ') as D5 ,nvl(max(CASE WHEN nvl(b.D6 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D6   ELSE '#' || b.D6   end),' ') as D6 ,nvl(max(CASE WHEN nvl(b.D7 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D7   ELSE '#' || b.D7   end),' ') as D7 ,nvl(max(CASE WHEN nvl(b.D8 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D8   ELSE '#' || b.D8   end),' ') as D8 ,nvl(max(CASE WHEN nvl(b.D9 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D9   ELSE '#' || b.D9   end),' ') as D9 ,nvl(max(CASE WHEN nvl(b.D10,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D10  ELSE '#' || b.D10  end),' ') as D10 ,nvl(max(CASE WHEN nvl(b.D11,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D11  ELSE '#' || b.D11  end),' ') as D11 ,nvl(max(CASE WHEN nvl(b.D12,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D12  ELSE '#' || b.D12  end),' ') as D12 ,nvl(max(CASE WHEN nvl(b.D13,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D13  ELSE '#' || b.D13  end),' ') as D13 ,nvl(max(CASE WHEN nvl(b.D14,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D14  ELSE '#' || b.D14  end),' ') as D14 ,nvl(max(CASE WHEN nvl(b.D15,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D15  ELSE '#' || b.D15  end),' ') as D15 ,nvl(max(CASE WHEN nvl(b.D16,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D16  ELSE '#' || b.D16  end),' ') as D16 ,nvl(max(CASE WHEN nvl(b.D17,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D17  ELSE '#' || b.D17  end),' ') as D17 ,nvl(max(CASE WHEN nvl(b.D18,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D18  ELSE '#' || b.D18  end),' ') as D18 ,nvl(max(CASE WHEN nvl(b.D19,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D19  ELSE '#' || b.D19  end),' ') as D19 ,nvl(max(CASE WHEN nvl(b.D20,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D20  ELSE '#' || b.D20  end),' ') as D20 ,nvl(max(CASE WHEN nvl(b.D21,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D21  ELSE '#' || b.D21  end),' ') as D21 ,nvl(max(CASE WHEN nvl(b.D22,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D22  ELSE '#' || b.D22  end),' ') as D22 ,nvl(max(CASE WHEN nvl(b.D23,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D23  ELSE '#' || b.D23  end),' ') as D23 ,nvl(max(CASE WHEN nvl(b.D24,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D24  ELSE '#' || b.D24  end),' ') as D24 ,nvl(max(CASE WHEN nvl(b.D25,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D25  ELSE '#' || b.D25  end),' ') as D25 ,nvl(max(CASE WHEN nvl(b.D26,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D26  ELSE '#' || b.D26  end),' ') as D26 ,nvl(max(CASE WHEN nvl(b.D27,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D27  ELSE '#' || b.D27  end),' ') as D27 ,nvl(max(CASE WHEN nvl(b.D28,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D28  ELSE '#' || b.D28  end),' ') as D28 ,nvl(max(CASE WHEN nvl(b.D29,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D29  ELSE '#' || b.D29  end),' ') as D29 ,nvl(max(CASE WHEN nvl(b.D30,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D30  ELSE '#' || b.D30  end),' ') as D30 ,nvl(max(CASE WHEN nvl(b.D31,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D31  ELSE '#' || b.D31  end),' ') as D31 FROM 	TBL_MONTH_ARRANGE_DETAIL b where 	b.company_no = '100' AND b.BASE_YM = '2023-05' and b.DISPATCH_SEQ = 6 and b.init_seq = 0 AND b.CAR_REGNO LIKE  'SP%' GROUP BY b.CAR_REGNO,b.emp_nm ) SELECT b.*,'N' as bit ,	LENGTH (REGEXP_REPLACE(b.D1||b.D2||b.D3||b.D4||b.D5||b.D6||b.D7||b.D8||b.D9||b.D10||b.D11||b.D12||b.D13||b.D14||b.D15||b.D16||b.D17||b.D18||b.D19||b.D20||b.D21||b.D22||b.D23||b.D24||b.D25||b.D26||b.D27||b.D28||b.D29||b.D30||b.D31,'[0-9# ]','') ) AS tot_work_date FROM ( SELECT  a.prev_daily_seq,b.* FROM 	TBL_MONTH_ARRANGE_DETAIL a LEFT OUTER JOIN sp_maxinfo b ON	a.emp_nm = b.EMP_NM AND  a.car_regno = b.CAR_REGNO where 	a.company_no = '100' AND a.BASE_YM = '2023-05' and a.DISPATCH_SEQ = 6 and a.init_seq = 0 AND a.CAR_REGNO LIKE  'SP%' AND a.emp_nm = decode('','',a.emp_nm,'') AND a.route_nm = '38번' ) b ORDER BY b.prev_daily_seq
2023-06-25 13:33:02.535 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
31. WITH sp_maxinfo AS ( SELECT  b.CAR_REGNO,b.EMP_NM ,nvl(max(CASE WHEN nvl(b.D1 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D1   ELSE '#' || b.D1  end),' ') as D1 ,nvl(max(CASE WHEN nvl(b.D2 ,'') = '' THEN '' WHEN b.route_nm = '38번' tHEN b.D2   ELSE '#' || b.D2  end),' ') as D2 ,nvl(max(CASE WHEN nvl(b.D3 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D3   ELSE '#' || b.D3   end),' ') as D3 ,nvl(max(CASE WHEN nvl(b.D4 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D4   ELSE '#' || b.D4   end),' ') as D4 ,nvl(max(CASE WHEN nvl(b.D5 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D5   ELSE '#' || b.D5   end),' ') as D5 ,nvl(max(CASE WHEN nvl(b.D6 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D6   ELSE '#' || b.D6   end),' ') as D6 ,nvl(max(CASE WHEN nvl(b.D7 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D7   ELSE '#' || b.D7   end),' ') as D7 ,nvl(max(CASE WHEN nvl(b.D8 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D8   ELSE '#' || b.D8   end),' ') as D8 ,nvl(max(CASE WHEN nvl(b.D9 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D9   ELSE '#' || b.D9   end),' ') as D9 ,nvl(max(CASE WHEN nvl(b.D10,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D10  ELSE '#' || b.D10  end),' ') as D10 ,nvl(max(CASE WHEN nvl(b.D11,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D11  ELSE '#' || b.D11  end),' ') as D11 ,nvl(max(CASE WHEN nvl(b.D12,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D12  ELSE '#' || b.D12  end),' ') as D12 ,nvl(max(CASE WHEN nvl(b.D13,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D13  ELSE '#' || b.D13  end),' ') as D13 ,nvl(max(CASE WHEN nvl(b.D14,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D14  ELSE '#' || b.D14  end),' ') as D14 ,nvl(max(CASE WHEN nvl(b.D15,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D15  ELSE '#' || b.D15  end),' ') as D15 ,nvl(max(CASE WHEN nvl(b.D16,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D16  ELSE '#' || b.D16  end),' ') as D16 ,nvl(max(CASE WHEN nvl(b.D17,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D17  ELSE '#' || b.D17  end),' ') as D17 ,nvl(max(CASE WHEN nvl(b.D18,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D18  ELSE '#' || b.D18  end),' ') as D18 ,nvl(max(CASE WHEN nvl(b.D19,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D19  ELSE '#' || b.D19  end),' ') as D19 ,nvl(max(CASE WHEN nvl(b.D20,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D20  ELSE '#' || b.D20  end),' ') as D20 ,nvl(max(CASE WHEN nvl(b.D21,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D21  ELSE '#' || b.D21  end),' ') as D21 ,nvl(max(CASE WHEN nvl(b.D22,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D22  ELSE '#' || b.D22  end),' ') as D22 ,nvl(max(CASE WHEN nvl(b.D23,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D23  ELSE '#' || b.D23  end),' ') as D23 ,nvl(max(CASE WHEN nvl(b.D24,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D24  ELSE '#' || b.D24  end),' ') as D24 ,nvl(max(CASE WHEN nvl(b.D25,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D25  ELSE '#' || b.D25  end),' ') as D25 ,nvl(max(CASE WHEN nvl(b.D26,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D26  ELSE '#' || b.D26  end),' ') as D26 ,nvl(max(CASE WHEN nvl(b.D27,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D27  ELSE '#' || b.D27  end),' ') as D27 ,nvl(max(CASE WHEN nvl(b.D28,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D28  ELSE '#' || b.D28  end),' ') as D28 ,nvl(max(CASE WHEN nvl(b.D29,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D29  ELSE '#' || b.D29  end),' ') as D29 ,nvl(max(CASE WHEN nvl(b.D30,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D30  ELSE '#' || b.D30  end),' ') as D30 ,nvl(max(CASE WHEN nvl(b.D31,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D31  ELSE '#' || b.D31  end),' ') as D31 FROM 	TBL_MONTH_ARRANGE_DETAIL b where 	b.company_no = '100' AND b.BASE_YM = '2023-05' and b.DISPATCH_SEQ = 6 and b.init_seq = 0 AND b.CAR_REGNO LIKE  'SP%' GROUP BY b.CAR_REGNO,b.emp_nm ) SELECT b.*,'N' as bit ,	LENGTH (REGEXP_REPLACE(b.D1||b.D2||b.D3||b.D4||b.D5||b.D6||b.D7||b.D8||b.D9||b.D10||b.D11||b.D12||b.D13||b.D14||b.D15||b.D16||b.D17||b.D18||b.D19||b.D20||b.D21||b.D22||b.D23||b.D24||b.D25||b.D26||b.D27||b.D28||b.D29||b.D30||b.D31,'[0-9# ]','') ) AS tot_work_date FROM ( SELECT  a.prev_daily_seq,b.* FROM 	TBL_MONTH_ARRANGE_DETAIL a LEFT OUTER JOIN sp_maxinfo b ON	a.emp_nm = b.EMP_NM AND  a.car_regno = b.CAR_REGNO where 	a.company_no = '100' AND a.BASE_YM = '2023-05' and a.DISPATCH_SEQ = 6 and a.init_seq = 0 AND a.CAR_REGNO LIKE  'SP%' AND a.emp_nm = decode('','',a.emp_nm,'') AND a.route_nm = '38번' ) b ORDER BY b.prev_daily_seq
 {executed in 16 msec}
2023-06-25 13:33:20.022 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - WITH carInfo AS ( SELECT '감차후 총 차량댓수' as CAR_REGNO,'' AS AMPM_GUBUN ,b.emp_nm,0 AS tot_work_date , b.D1    , b.D2    , b.D3    , b.D4    , b.D5    , b.D6    , b.D7    , b.D8    , b.D9    , b.D10 , b.D11    , b.D12    , b.D13    , b.D14    , b.D15    , b.D16    , b.D17    , b.D18    , b.D19    , b.D20 , b.D21    , b.D22    , b.D23    , b.D24    , b.D25    , b.D26    , b.D27    , b.D28    , b.D29    , b.D30 , b.D31 FROM 	TBL_MONTH_ARRANGE_BASIC b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-05' AND    b.DISPATCH_SEQ = 2  AND	b.CAR_REGNO  = '-' ), allocateInfo AS ( SELECT  decode(AMPM_GUBUN,'p','오전','오후') || ' 배정 건수' AS CAR_REGNO,ampm_gubun,'-' emp_nm,0 AS tot_work_date ,0 D1 ,0 D2 ,0 D3 ,0 D4 ,0 D5 ,0 D6 ,0 D7 ,0 D8 ,0 D9 ,0 D10 ,0 D11 ,0 D12 ,0 D13 ,0 D14 ,0 D15 ,0 D16 ,0 D17 ,0 D18 ,0 D19 ,0 D20 ,0 D21 ,0 D22 ,0 D23 ,0 D24 ,0 D25 ,0 D26 ,0 D27 ,0 D28 ,0 d29 ,0 d30 ,0 d31 FROM 	TBL_MONTH_ARRANGE_DETAIL b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-05' AND    b.DISPATCH_SEQ = 6  AND    b.PREV_DAILY_SEQ = 1 AND    b.AMPM_GUBUN IN ('a','p') ) SELECT * FROM carInfo union all SELECT '감차후 총 운행횟수' as CAR_REGNO,' ' AMPM_GUBUN ,b.emp_nm,0 AS tot_work_date , b.D1 *2   , b.D2 *2    , b.D3  *2   , b.D4 *2    , b.D5 *2    , b.D6 *2    , b.D7 *2    , b.D8 *2    , b.D9 *2    , b.D10 *2 , b.D11 *2    , b.D12 *2    , b.D13 *2    , b.D14 *2    , b.D15 *2    , b.D16 *2    , b.D17 *2    , b.D18 *2    , b.D19 *2    , b.D20 *2 , b.D21 *2    , b.D22 *2    , b.D23 *2    , b.D24 *2    , b.D25 *2    , b.D26 *2    , b.D27 *2    , b.D28 *2    , b.D29 *2    , b.D30 *2 , b.D31 *2 FROM 	carInfo b union all SELECT  * FROM 	allocateInfo b union all SELECT  decode(b.AMPM_GUBUN,'p','오전','오후') || ' 미배정 건수' AS CAR_REGNO,b.AMPM_GUBUN ,'-' emp_nm,0 AS tot_work_date ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  FROM 	allocateInfo b,carInfo a
2023-06-25 13:33:20.023 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 13:33:20.026 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
31. WITH carInfo AS ( SELECT '감차후 총 차량댓수' as CAR_REGNO,'' AS AMPM_GUBUN ,b.emp_nm,0 AS tot_work_date , b.D1    , b.D2    , b.D3    , b.D4    , b.D5    , b.D6    , b.D7    , b.D8    , b.D9    , b.D10 , b.D11    , b.D12    , b.D13    , b.D14    , b.D15    , b.D16    , b.D17    , b.D18    , b.D19    , b.D20 , b.D21    , b.D22    , b.D23    , b.D24    , b.D25    , b.D26    , b.D27    , b.D28    , b.D29    , b.D30 , b.D31 FROM 	TBL_MONTH_ARRANGE_BASIC b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-05' AND    b.DISPATCH_SEQ = 2  AND	b.CAR_REGNO  = '-' ), allocateInfo AS ( SELECT  decode(AMPM_GUBUN,'p','오전','오후') || ' 배정 건수' AS CAR_REGNO,ampm_gubun,'-' emp_nm,0 AS tot_work_date ,0 D1 ,0 D2 ,0 D3 ,0 D4 ,0 D5 ,0 D6 ,0 D7 ,0 D8 ,0 D9 ,0 D10 ,0 D11 ,0 D12 ,0 D13 ,0 D14 ,0 D15 ,0 D16 ,0 D17 ,0 D18 ,0 D19 ,0 D20 ,0 D21 ,0 D22 ,0 D23 ,0 D24 ,0 D25 ,0 D26 ,0 D27 ,0 D28 ,0 d29 ,0 d30 ,0 d31 FROM 	TBL_MONTH_ARRANGE_DETAIL b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-05' AND    b.DISPATCH_SEQ = 6  AND    b.PREV_DAILY_SEQ = 1 AND    b.AMPM_GUBUN IN ('a','p') ) SELECT * FROM carInfo union all SELECT '감차후 총 운행횟수' as CAR_REGNO,' ' AMPM_GUBUN ,b.emp_nm,0 AS tot_work_date , b.D1 *2   , b.D2 *2    , b.D3  *2   , b.D4 *2    , b.D5 *2    , b.D6 *2    , b.D7 *2    , b.D8 *2    , b.D9 *2    , b.D10 *2 , b.D11 *2    , b.D12 *2    , b.D13 *2    , b.D14 *2    , b.D15 *2    , b.D16 *2    , b.D17 *2    , b.D18 *2    , b.D19 *2    , b.D20 *2 , b.D21 *2    , b.D22 *2    , b.D23 *2    , b.D24 *2    , b.D25 *2    , b.D26 *2    , b.D27 *2    , b.D28 *2    , b.D29 *2    , b.D30 *2 , b.D31 *2 FROM 	carInfo b union all SELECT  * FROM 	allocateInfo b union all SELECT  decode(b.AMPM_GUBUN,'p','오전','오후') || ' 미배정 건수' AS CAR_REGNO,b.AMPM_GUBUN ,'-' emp_nm,0 AS tot_work_date ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  FROM 	allocateInfo b,carInfo a
 {executed in 3 msec}
2023-06-25 13:33:20.027 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - SELECT '[38번] 2023-05월' as CAR_REGNO,b.emp_nm,0 AS tot_work_date , b.D1    , b.D2    , b.D3    , b.D4    , b.D5    , b.D6    , b.D7    , b.D8    , b.D9    , b.D10 , b.D11    , b.D12    , b.D13    , b.D14    , b.D15    , b.D16    , b.D17    , b.D18    , b.D19    , b.D20 , b.D21    , b.D22    , b.D23    , b.D24    , b.D25    , b.D26    , b.D27    , b.D28    , b.D29    , b.D30 , b.D31 ,'N' as bit FROM 	TBL_MONTH_ARRANGE_DETAIL b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-05' AND    b.DISPATCH_SEQ = 1
2023-06-25 13:33:20.028 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
31. SELECT '[38번] 2023-05월' as CAR_REGNO,b.emp_nm,0 AS tot_work_date , b.D1    , b.D2    , b.D3    , b.D4    , b.D5    , b.D6    , b.D7    , b.D8    , b.D9    , b.D10 , b.D11    , b.D12    , b.D13    , b.D14    , b.D15    , b.D16    , b.D17    , b.D18    , b.D19    , b.D20 , b.D21    , b.D22    , b.D23    , b.D24    , b.D25    , b.D26    , b.D27    , b.D28    , b.D29    , b.D30 , b.D31 ,'N' as bit FROM 	TBL_MONTH_ARRANGE_DETAIL b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-05' AND    b.DISPATCH_SEQ = 1
 {executed in 0 msec}
2023-06-25 13:33:20.028 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - WITH RECURSIVE countera(n) AS ( WITH routeCount AS ( SELECT 'a' ampm_gubun, a.AUTO_CNT FROM TBL_ROUTEINFO a WHERE 	a.COMPANY_NO  = '100' AND 	a.ROUTE_NM    = '38번'	 union SELECT 'p' ampm_gubun, a.AUTO_CNT FROM TBL_ROUTEINFO a WHERE 	a.COMPANY_NO  = '100' AND 	a.ROUTE_NM    = '38번' ) SELECT t.n+1,t.n as no,c.ampm_gubun,to_char(t.n,'00') || c.ampm_gubun AS gubun ,  CASE WHEN a.ampm_gubun = '' AND a.d1 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d1 ,'[*@?]') and a.d1  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d1        ,  CASE WHEN a.ampm_gubun = '' AND a.d2  like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d2  ,'[*@?]') and a.d2   like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d2     ,  CASE WHEN a.ampm_gubun = '' AND a.d3  like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d3  ,'[*@?]') and a.d3   like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d3     ,  CASE WHEN a.ampm_gubun = '' AND a.d4  like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d4  ,'[*@?]') and a.d4   like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d4     ,  CASE WHEN a.ampm_gubun = '' AND a.d5  like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d5  ,'[*@?]') and a.d5   like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d5     ,  CASE WHEN a.ampm_gubun = '' AND a.d6  like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d6  ,'[*@?]') and a.d6   like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d6     ,  CASE WHEN a.ampm_gubun = '' AND a.d7  like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d7  ,'[*@?]') and a.d7   like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d7     ,  CASE WHEN a.ampm_gubun = '' AND a.d8  like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d8  ,'[*@?]') and a.d8   like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d8     ,  CASE WHEN a.ampm_gubun = '' AND a.d9  like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d9  ,'[*@?]') and a.d9   like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d9     ,  CASE WHEN a.ampm_gubun = '' AND a.d10 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d10 ,'[*@?]') and a.d10  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d10    ,  CASE WHEN a.ampm_gubun = '' AND a.d11 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d11 ,'[*@?]') and a.d11  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d11    ,  CASE WHEN a.ampm_gubun = '' AND a.d12 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d12 ,'[*@?]') and a.d12  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d12    ,  CASE WHEN a.ampm_gubun = '' AND a.d13 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d13 ,'[*@?]') and a.d13  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d13    ,  CASE WHEN a.ampm_gubun = '' AND a.d14 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d14 ,'[*@?]') and a.d14  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d14    ,  CASE WHEN a.ampm_gubun = '' AND a.d15 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d15 ,'[*@?]') and a.d15  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d15    ,  CASE WHEN a.ampm_gubun = '' AND a.d16 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d16 ,'[*@?]') and a.d16  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d16    ,  CASE WHEN a.ampm_gubun = '' AND a.d17 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d17 ,'[*@?]') and a.d17  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d17    ,  CASE WHEN a.ampm_gubun = '' AND a.d18 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d18 ,'[*@?]') and a.d18  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d18    ,  CASE WHEN a.ampm_gubun = '' AND a.d19 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d19 ,'[*@?]') and a.d19  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d19    ,  CASE WHEN a.ampm_gubun = '' AND a.d20 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d20 ,'[*@?]') and a.d20  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d20    ,  CASE WHEN a.ampm_gubun = '' AND a.d21 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d21 ,'[*@?]') and a.d21  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d21    ,  CASE WHEN a.ampm_gubun = '' AND a.d22 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d22 ,'[*@?]') and a.d22  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d22    ,  CASE WHEN a.ampm_gubun = '' AND a.d23 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d23 ,'[*@?]') and a.d23  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d23    ,  CASE WHEN a.ampm_gubun = '' AND a.d24 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d24 ,'[*@?]') and a.d24  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d24    ,  CASE WHEN a.ampm_gubun = '' AND a.d25 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d25 ,'[*@?]') and a.d25  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d25    ,  CASE WHEN a.ampm_gubun = '' AND a.d26 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d26 ,'[*@?]') and a.d26  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d26    ,  CASE WHEN a.ampm_gubun = '' AND a.d27 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d27 ,'[*@?]') and a.d27  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d27    ,  CASE WHEN a.ampm_gubun = '' AND a.d28 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d28 ,'[*@?]') and a.d28  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d28    ,  CASE WHEN a.ampm_gubun = '' AND a.d29 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d29 ,'[*@?]') and a.d29  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d29    ,  CASE WHEN a.ampm_gubun = '' AND a.d30 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d30 ,'[*@?]') and a.d30  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d30    ,  CASE WHEN a.ampm_gubun = '' AND a.d31 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d31 ,'[*@?]') and a.d31  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d31    FROM t ,TBL_MONTH_ARRANGE_DETAIL a , routeCount c WHERE 	a.COMPANY_NO  = '100' AND 	a.ROUTE_NM    = '38번' AND 	a.BASE_YM = '2023-05' AND 	a.dispatch_seq = 6 AND     a.init_seq = 0 AND     t.n <= c.auto_cnt ) SELECT 	decode(ampm_gubun,'a','오전','오후') as ampm_gubun , no as seq,0 as cnt ,	max(d1 ) as d1 ,	max(d2 ) as d2 ,	max(d3 ) as d3 ,	max(d4 ) as d4 ,	max(d5 ) as d5 ,	max(d6 ) as d6 ,	max(d7 ) as d7 ,	max(d8 ) as d8 ,	max(d9 ) as d9 ,	max(d10) as d10 ,	max(d11) as d11 ,	max(d12) as d12 ,	max(d13) as d13 ,	max(d14) as d14 ,	max(d15) as d15 ,	max(d16) as d16 ,	max(d17) as d17 ,	max(d18) as d18 ,	max(d19) as d19 ,	max(d20) as d20 ,	max(d21) as d21 ,	max(d22) as d22 ,	max(d23) as d23 ,	max(d24) as d24 ,	max(d25) as d25 ,	max(d26) as d26 ,	max(d27) as d27 ,	max(d28) as d28 ,	max(d29) as d29 ,	max(d30) as d30 ,	max(d31) as d31 from countera GROUP BY ampm_gubun,gubun
2023-06-25 13:33:20.147 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
31. WITH RECURSIVE countera(n) AS ( WITH routeCount AS ( SELECT 'a' ampm_gubun, a.AUTO_CNT FROM TBL_ROUTEINFO a WHERE 	a.COMPANY_NO  = '100' AND 	a.ROUTE_NM    = '38번'	 union SELECT 'p' ampm_gubun, a.AUTO_CNT FROM TBL_ROUTEINFO a WHERE 	a.COMPANY_NO  = '100' AND 	a.ROUTE_NM    = '38번' ) SELECT t.n+1,t.n as no,c.ampm_gubun,to_char(t.n,'00') || c.ampm_gubun AS gubun ,  CASE WHEN a.ampm_gubun = '' AND a.d1 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d1 ,'[*@?]') and a.d1  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d1        ,  CASE WHEN a.ampm_gubun = '' AND a.d2  like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d2  ,'[*@?]') and a.d2   like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d2     ,  CASE WHEN a.ampm_gubun = '' AND a.d3  like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d3  ,'[*@?]') and a.d3   like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d3     ,  CASE WHEN a.ampm_gubun = '' AND a.d4  like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d4  ,'[*@?]') and a.d4   like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d4     ,  CASE WHEN a.ampm_gubun = '' AND a.d5  like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d5  ,'[*@?]') and a.d5   like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d5     ,  CASE WHEN a.ampm_gubun = '' AND a.d6  like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d6  ,'[*@?]') and a.d6   like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d6     ,  CASE WHEN a.ampm_gubun = '' AND a.d7  like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d7  ,'[*@?]') and a.d7   like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d7     ,  CASE WHEN a.ampm_gubun = '' AND a.d8  like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d8  ,'[*@?]') and a.d8   like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d8     ,  CASE WHEN a.ampm_gubun = '' AND a.d9  like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d9  ,'[*@?]') and a.d9   like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d9     ,  CASE WHEN a.ampm_gubun = '' AND a.d10 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d10 ,'[*@?]') and a.d10  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d10    ,  CASE WHEN a.ampm_gubun = '' AND a.d11 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d11 ,'[*@?]') and a.d11  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d11    ,  CASE WHEN a.ampm_gubun = '' AND a.d12 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d12 ,'[*@?]') and a.d12  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d12    ,  CASE WHEN a.ampm_gubun = '' AND a.d13 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d13 ,'[*@?]') and a.d13  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d13    ,  CASE WHEN a.ampm_gubun = '' AND a.d14 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d14 ,'[*@?]') and a.d14  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d14    ,  CASE WHEN a.ampm_gubun = '' AND a.d15 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d15 ,'[*@?]') and a.d15  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d15    ,  CASE WHEN a.ampm_gubun = '' AND a.d16 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d16 ,'[*@?]') and a.d16  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d16    ,  CASE WHEN a.ampm_gubun = '' AND a.d17 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d17 ,'[*@?]') and a.d17  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d17    ,  CASE WHEN a.ampm_gubun = '' AND a.d18 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d18 ,'[*@?]') and a.d18  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d18    ,  CASE WHEN a.ampm_gubun = '' AND a.d19 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d19 ,'[*@?]') and a.d19  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d19    ,  CASE WHEN a.ampm_gubun = '' AND a.d20 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d20 ,'[*@?]') and a.d20  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d20    ,  CASE WHEN a.ampm_gubun = '' AND a.d21 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d21 ,'[*@?]') and a.d21  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d21    ,  CASE WHEN a.ampm_gubun = '' AND a.d22 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d22 ,'[*@?]') and a.d22  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d22    ,  CASE WHEN a.ampm_gubun = '' AND a.d23 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d23 ,'[*@?]') and a.d23  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d23    ,  CASE WHEN a.ampm_gubun = '' AND a.d24 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d24 ,'[*@?]') and a.d24  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d24    ,  CASE WHEN a.ampm_gubun = '' AND a.d25 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d25 ,'[*@?]') and a.d25  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d25    ,  CASE WHEN a.ampm_gubun = '' AND a.d26 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d26 ,'[*@?]') and a.d26  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d26    ,  CASE WHEN a.ampm_gubun = '' AND a.d27 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d27 ,'[*@?]') and a.d27  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d27    ,  CASE WHEN a.ampm_gubun = '' AND a.d28 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d28 ,'[*@?]') and a.d28  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d28    ,  CASE WHEN a.ampm_gubun = '' AND a.d29 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d29 ,'[*@?]') and a.d29  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d29    ,  CASE WHEN a.ampm_gubun = '' AND a.d30 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d30 ,'[*@?]') and a.d30  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d30    ,  CASE WHEN a.ampm_gubun = '' AND a.d31 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d31 ,'[*@?]') and a.d31  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d31    FROM t ,TBL_MONTH_ARRANGE_DETAIL a , routeCount c WHERE 	a.COMPANY_NO  = '100' AND 	a.ROUTE_NM    = '38번' AND 	a.BASE_YM = '2023-05' AND 	a.dispatch_seq = 6 AND     a.init_seq = 0 AND     t.n <= c.auto_cnt ) SELECT 	decode(ampm_gubun,'a','오전','오후') as ampm_gubun , no as seq,0 as cnt ,	max(d1 ) as d1 ,	max(d2 ) as d2 ,	max(d3 ) as d3 ,	max(d4 ) as d4 ,	max(d5 ) as d5 ,	max(d6 ) as d6 ,	max(d7 ) as d7 ,	max(d8 ) as d8 ,	max(d9 ) as d9 ,	max(d10) as d10 ,	max(d11) as d11 ,	max(d12) as d12 ,	max(d13) as d13 ,	max(d14) as d14 ,	max(d15) as d15 ,	max(d16) as d16 ,	max(d17) as d17 ,	max(d18) as d18 ,	max(d19) as d19 ,	max(d20) as d20 ,	max(d21) as d21 ,	max(d22) as d22 ,	max(d23) as d23 ,	max(d24) as d24 ,	max(d25) as d25 ,	max(d26) as d26 ,	max(d27) as d27 ,	max(d28) as d28 ,	max(d29) as d29 ,	max(d30) as d30 ,	max(d31) as d31 from countera GROUP BY ampm_gubun,gubun
 {executed in 118 msec}
2023-06-25 13:33:23.367 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - WITH carInfo AS ( SELECT '감차후 총 차량댓수' as CAR_REGNO,'' AS AMPM_GUBUN ,b.emp_nm,0 AS tot_work_date , b.D1    , b.D2    , b.D3    , b.D4    , b.D5    , b.D6    , b.D7    , b.D8    , b.D9    , b.D10 , b.D11    , b.D12    , b.D13    , b.D14    , b.D15    , b.D16    , b.D17    , b.D18    , b.D19    , b.D20 , b.D21    , b.D22    , b.D23    , b.D24    , b.D25    , b.D26    , b.D27    , b.D28    , b.D29    , b.D30 , b.D31 FROM 	TBL_MONTH_ARRANGE_BASIC b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-05' AND    b.DISPATCH_SEQ = 2  AND	b.CAR_REGNO  = '-' ), allocateInfo AS ( SELECT  decode(AMPM_GUBUN,'p','오전','오후') || ' 배정 건수' AS CAR_REGNO,ampm_gubun,'-' emp_nm,0 AS tot_work_date ,0 D1 ,0 D2 ,0 D3 ,0 D4 ,0 D5 ,0 D6 ,0 D7 ,0 D8 ,0 D9 ,0 D10 ,0 D11 ,0 D12 ,0 D13 ,0 D14 ,0 D15 ,0 D16 ,0 D17 ,0 D18 ,0 D19 ,0 D20 ,0 D21 ,0 D22 ,0 D23 ,0 D24 ,0 D25 ,0 D26 ,0 D27 ,0 D28 ,0 d29 ,0 d30 ,0 d31 FROM 	TBL_MONTH_ARRANGE_DETAIL b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-05' AND    b.DISPATCH_SEQ = 6  AND    b.PREV_DAILY_SEQ = 1 AND    b.AMPM_GUBUN IN ('a','p') ) SELECT * FROM carInfo union all SELECT '감차후 총 운행횟수' as CAR_REGNO,' ' AMPM_GUBUN ,b.emp_nm,0 AS tot_work_date , b.D1 *2   , b.D2 *2    , b.D3  *2   , b.D4 *2    , b.D5 *2    , b.D6 *2    , b.D7 *2    , b.D8 *2    , b.D9 *2    , b.D10 *2 , b.D11 *2    , b.D12 *2    , b.D13 *2    , b.D14 *2    , b.D15 *2    , b.D16 *2    , b.D17 *2    , b.D18 *2    , b.D19 *2    , b.D20 *2 , b.D21 *2    , b.D22 *2    , b.D23 *2    , b.D24 *2    , b.D25 *2    , b.D26 *2    , b.D27 *2    , b.D28 *2    , b.D29 *2    , b.D30 *2 , b.D31 *2 FROM 	carInfo b union all SELECT  * FROM 	allocateInfo b union all SELECT  decode(b.AMPM_GUBUN,'p','오전','오후') || ' 미배정 건수' AS CAR_REGNO,b.AMPM_GUBUN ,'-' emp_nm,0 AS tot_work_date ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  FROM 	allocateInfo b,carInfo a
2023-06-25 13:33:23.369 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 13:33:23.372 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
31. WITH carInfo AS ( SELECT '감차후 총 차량댓수' as CAR_REGNO,'' AS AMPM_GUBUN ,b.emp_nm,0 AS tot_work_date , b.D1    , b.D2    , b.D3    , b.D4    , b.D5    , b.D6    , b.D7    , b.D8    , b.D9    , b.D10 , b.D11    , b.D12    , b.D13    , b.D14    , b.D15    , b.D16    , b.D17    , b.D18    , b.D19    , b.D20 , b.D21    , b.D22    , b.D23    , b.D24    , b.D25    , b.D26    , b.D27    , b.D28    , b.D29    , b.D30 , b.D31 FROM 	TBL_MONTH_ARRANGE_BASIC b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-05' AND    b.DISPATCH_SEQ = 2  AND	b.CAR_REGNO  = '-' ), allocateInfo AS ( SELECT  decode(AMPM_GUBUN,'p','오전','오후') || ' 배정 건수' AS CAR_REGNO,ampm_gubun,'-' emp_nm,0 AS tot_work_date ,0 D1 ,0 D2 ,0 D3 ,0 D4 ,0 D5 ,0 D6 ,0 D7 ,0 D8 ,0 D9 ,0 D10 ,0 D11 ,0 D12 ,0 D13 ,0 D14 ,0 D15 ,0 D16 ,0 D17 ,0 D18 ,0 D19 ,0 D20 ,0 D21 ,0 D22 ,0 D23 ,0 D24 ,0 D25 ,0 D26 ,0 D27 ,0 D28 ,0 d29 ,0 d30 ,0 d31 FROM 	TBL_MONTH_ARRANGE_DETAIL b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-05' AND    b.DISPATCH_SEQ = 6  AND    b.PREV_DAILY_SEQ = 1 AND    b.AMPM_GUBUN IN ('a','p') ) SELECT * FROM carInfo union all SELECT '감차후 총 운행횟수' as CAR_REGNO,' ' AMPM_GUBUN ,b.emp_nm,0 AS tot_work_date , b.D1 *2   , b.D2 *2    , b.D3  *2   , b.D4 *2    , b.D5 *2    , b.D6 *2    , b.D7 *2    , b.D8 *2    , b.D9 *2    , b.D10 *2 , b.D11 *2    , b.D12 *2    , b.D13 *2    , b.D14 *2    , b.D15 *2    , b.D16 *2    , b.D17 *2    , b.D18 *2    , b.D19 *2    , b.D20 *2 , b.D21 *2    , b.D22 *2    , b.D23 *2    , b.D24 *2    , b.D25 *2    , b.D26 *2    , b.D27 *2    , b.D28 *2    , b.D29 *2    , b.D30 *2 , b.D31 *2 FROM 	carInfo b union all SELECT  * FROM 	allocateInfo b union all SELECT  decode(b.AMPM_GUBUN,'p','오전','오후') || ' 미배정 건수' AS CAR_REGNO,b.AMPM_GUBUN ,'-' emp_nm,0 AS tot_work_date ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  FROM 	allocateInfo b,carInfo a
 {executed in 3 msec}
2023-06-25 13:33:23.373 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - SELECT '[38번] 2023-05월' as CAR_REGNO,b.emp_nm,0 AS tot_work_date , b.D1    , b.D2    , b.D3    , b.D4    , b.D5    , b.D6    , b.D7    , b.D8    , b.D9    , b.D10 , b.D11    , b.D12    , b.D13    , b.D14    , b.D15    , b.D16    , b.D17    , b.D18    , b.D19    , b.D20 , b.D21    , b.D22    , b.D23    , b.D24    , b.D25    , b.D26    , b.D27    , b.D28    , b.D29    , b.D30 , b.D31 ,'N' as bit FROM 	TBL_MONTH_ARRANGE_DETAIL b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-05' AND    b.DISPATCH_SEQ = 1
2023-06-25 13:33:23.374 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
31. SELECT '[38번] 2023-05월' as CAR_REGNO,b.emp_nm,0 AS tot_work_date , b.D1    , b.D2    , b.D3    , b.D4    , b.D5    , b.D6    , b.D7    , b.D8    , b.D9    , b.D10 , b.D11    , b.D12    , b.D13    , b.D14    , b.D15    , b.D16    , b.D17    , b.D18    , b.D19    , b.D20 , b.D21    , b.D22    , b.D23    , b.D24    , b.D25    , b.D26    , b.D27    , b.D28    , b.D29    , b.D30 , b.D31 ,'N' as bit FROM 	TBL_MONTH_ARRANGE_DETAIL b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-05' AND    b.DISPATCH_SEQ = 1
 {executed in 1 msec}
2023-06-25 13:33:23.375 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - SELECT b.CAR_REGNO,b.emp_nm , 0 AS tot_work_date ,b.D1  ,b.D2  ,b.D3  ,b.D4  ,b.D5  ,b.D6  ,b.D7  ,b.D8  ,b.D9  ,b.D10 ,b.D11 ,b.D12 ,b.D13 ,b.D14 ,b.D15 ,b.D16 ,b.D17 ,b.D18 ,b.D19 ,b.D20 ,b.D21 ,b.D22 ,b.D23 ,b.D24 ,b.D25 ,b.D26 ,b.D27 ,b.D28 ,b.D29 ,b.D30 ,b.D31 ,'N' AS bit FROM 	TBL_MONTH_ARRANGE_DETAIL b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-05' AND    b.DISPATCH_SEQ = 6 AND    b.CAR_REGNO not like 'SP%' order by b.dispatch_seq,b.CAR_REGNO ,b.ampm_gubun,b.prev_daily_seq
2023-06-25 13:33:23.376 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
31. SELECT b.CAR_REGNO,b.emp_nm , 0 AS tot_work_date ,b.D1  ,b.D2  ,b.D3  ,b.D4  ,b.D5  ,b.D6  ,b.D7  ,b.D8  ,b.D9  ,b.D10 ,b.D11 ,b.D12 ,b.D13 ,b.D14 ,b.D15 ,b.D16 ,b.D17 ,b.D18 ,b.D19 ,b.D20 ,b.D21 ,b.D22 ,b.D23 ,b.D24 ,b.D25 ,b.D26 ,b.D27 ,b.D28 ,b.D29 ,b.D30 ,b.D31 ,'N' AS bit FROM 	TBL_MONTH_ARRANGE_DETAIL b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-05' AND    b.DISPATCH_SEQ = 6 AND    b.CAR_REGNO not like 'SP%' order by b.dispatch_seq,b.CAR_REGNO ,b.ampm_gubun,b.prev_daily_seq
 {executed in 1 msec}
2023-06-25 13:33:23.378 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - WITH sp_maxinfo AS ( SELECT  b.CAR_REGNO,b.EMP_NM ,nvl(max(CASE WHEN nvl(b.D1 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D1   ELSE '#' || b.D1  end),' ') as D1 ,nvl(max(CASE WHEN nvl(b.D2 ,'') = '' THEN '' WHEN b.route_nm = '38번' tHEN b.D2   ELSE '#' || b.D2  end),' ') as D2 ,nvl(max(CASE WHEN nvl(b.D3 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D3   ELSE '#' || b.D3   end),' ') as D3 ,nvl(max(CASE WHEN nvl(b.D4 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D4   ELSE '#' || b.D4   end),' ') as D4 ,nvl(max(CASE WHEN nvl(b.D5 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D5   ELSE '#' || b.D5   end),' ') as D5 ,nvl(max(CASE WHEN nvl(b.D6 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D6   ELSE '#' || b.D6   end),' ') as D6 ,nvl(max(CASE WHEN nvl(b.D7 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D7   ELSE '#' || b.D7   end),' ') as D7 ,nvl(max(CASE WHEN nvl(b.D8 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D8   ELSE '#' || b.D8   end),' ') as D8 ,nvl(max(CASE WHEN nvl(b.D9 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D9   ELSE '#' || b.D9   end),' ') as D9 ,nvl(max(CASE WHEN nvl(b.D10,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D10  ELSE '#' || b.D10  end),' ') as D10 ,nvl(max(CASE WHEN nvl(b.D11,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D11  ELSE '#' || b.D11  end),' ') as D11 ,nvl(max(CASE WHEN nvl(b.D12,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D12  ELSE '#' || b.D12  end),' ') as D12 ,nvl(max(CASE WHEN nvl(b.D13,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D13  ELSE '#' || b.D13  end),' ') as D13 ,nvl(max(CASE WHEN nvl(b.D14,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D14  ELSE '#' || b.D14  end),' ') as D14 ,nvl(max(CASE WHEN nvl(b.D15,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D15  ELSE '#' || b.D15  end),' ') as D15 ,nvl(max(CASE WHEN nvl(b.D16,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D16  ELSE '#' || b.D16  end),' ') as D16 ,nvl(max(CASE WHEN nvl(b.D17,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D17  ELSE '#' || b.D17  end),' ') as D17 ,nvl(max(CASE WHEN nvl(b.D18,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D18  ELSE '#' || b.D18  end),' ') as D18 ,nvl(max(CASE WHEN nvl(b.D19,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D19  ELSE '#' || b.D19  end),' ') as D19 ,nvl(max(CASE WHEN nvl(b.D20,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D20  ELSE '#' || b.D20  end),' ') as D20 ,nvl(max(CASE WHEN nvl(b.D21,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D21  ELSE '#' || b.D21  end),' ') as D21 ,nvl(max(CASE WHEN nvl(b.D22,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D22  ELSE '#' || b.D22  end),' ') as D22 ,nvl(max(CASE WHEN nvl(b.D23,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D23  ELSE '#' || b.D23  end),' ') as D23 ,nvl(max(CASE WHEN nvl(b.D24,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D24  ELSE '#' || b.D24  end),' ') as D24 ,nvl(max(CASE WHEN nvl(b.D25,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D25  ELSE '#' || b.D25  end),' ') as D25 ,nvl(max(CASE WHEN nvl(b.D26,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D26  ELSE '#' || b.D26  end),' ') as D26 ,nvl(max(CASE WHEN nvl(b.D27,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D27  ELSE '#' || b.D27  end),' ') as D27 ,nvl(max(CASE WHEN nvl(b.D28,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D28  ELSE '#' || b.D28  end),' ') as D28 ,nvl(max(CASE WHEN nvl(b.D29,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D29  ELSE '#' || b.D29  end),' ') as D29 ,nvl(max(CASE WHEN nvl(b.D30,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D30  ELSE '#' || b.D30  end),' ') as D30 ,nvl(max(CASE WHEN nvl(b.D31,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D31  ELSE '#' || b.D31  end),' ') as D31 FROM 	TBL_MONTH_ARRANGE_DETAIL b where 	b.company_no = '100' AND b.BASE_YM = '2023-05' and b.DISPATCH_SEQ = 6 and b.init_seq = 0 AND b.CAR_REGNO LIKE  'SP%' GROUP BY b.CAR_REGNO,b.emp_nm ) SELECT b.*,'N' as bit ,	LENGTH (REGEXP_REPLACE(b.D1||b.D2||b.D3||b.D4||b.D5||b.D6||b.D7||b.D8||b.D9||b.D10||b.D11||b.D12||b.D13||b.D14||b.D15||b.D16||b.D17||b.D18||b.D19||b.D20||b.D21||b.D22||b.D23||b.D24||b.D25||b.D26||b.D27||b.D28||b.D29||b.D30||b.D31,'[0-9# ]','') ) AS tot_work_date FROM ( SELECT  a.prev_daily_seq,b.* FROM 	TBL_MONTH_ARRANGE_DETAIL a LEFT OUTER JOIN sp_maxinfo b ON	a.emp_nm = b.EMP_NM AND  a.car_regno = b.CAR_REGNO where 	a.company_no = '100' AND a.BASE_YM = '2023-05' and a.DISPATCH_SEQ = 6 and a.init_seq = 0 AND a.CAR_REGNO LIKE  'SP%' AND a.emp_nm = decode('','',a.emp_nm,'') AND a.route_nm = '38번' ) b ORDER BY b.prev_daily_seq
2023-06-25 13:33:23.393 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
31. WITH sp_maxinfo AS ( SELECT  b.CAR_REGNO,b.EMP_NM ,nvl(max(CASE WHEN nvl(b.D1 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D1   ELSE '#' || b.D1  end),' ') as D1 ,nvl(max(CASE WHEN nvl(b.D2 ,'') = '' THEN '' WHEN b.route_nm = '38번' tHEN b.D2   ELSE '#' || b.D2  end),' ') as D2 ,nvl(max(CASE WHEN nvl(b.D3 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D3   ELSE '#' || b.D3   end),' ') as D3 ,nvl(max(CASE WHEN nvl(b.D4 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D4   ELSE '#' || b.D4   end),' ') as D4 ,nvl(max(CASE WHEN nvl(b.D5 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D5   ELSE '#' || b.D5   end),' ') as D5 ,nvl(max(CASE WHEN nvl(b.D6 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D6   ELSE '#' || b.D6   end),' ') as D6 ,nvl(max(CASE WHEN nvl(b.D7 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D7   ELSE '#' || b.D7   end),' ') as D7 ,nvl(max(CASE WHEN nvl(b.D8 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D8   ELSE '#' || b.D8   end),' ') as D8 ,nvl(max(CASE WHEN nvl(b.D9 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D9   ELSE '#' || b.D9   end),' ') as D9 ,nvl(max(CASE WHEN nvl(b.D10,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D10  ELSE '#' || b.D10  end),' ') as D10 ,nvl(max(CASE WHEN nvl(b.D11,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D11  ELSE '#' || b.D11  end),' ') as D11 ,nvl(max(CASE WHEN nvl(b.D12,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D12  ELSE '#' || b.D12  end),' ') as D12 ,nvl(max(CASE WHEN nvl(b.D13,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D13  ELSE '#' || b.D13  end),' ') as D13 ,nvl(max(CASE WHEN nvl(b.D14,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D14  ELSE '#' || b.D14  end),' ') as D14 ,nvl(max(CASE WHEN nvl(b.D15,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D15  ELSE '#' || b.D15  end),' ') as D15 ,nvl(max(CASE WHEN nvl(b.D16,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D16  ELSE '#' || b.D16  end),' ') as D16 ,nvl(max(CASE WHEN nvl(b.D17,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D17  ELSE '#' || b.D17  end),' ') as D17 ,nvl(max(CASE WHEN nvl(b.D18,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D18  ELSE '#' || b.D18  end),' ') as D18 ,nvl(max(CASE WHEN nvl(b.D19,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D19  ELSE '#' || b.D19  end),' ') as D19 ,nvl(max(CASE WHEN nvl(b.D20,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D20  ELSE '#' || b.D20  end),' ') as D20 ,nvl(max(CASE WHEN nvl(b.D21,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D21  ELSE '#' || b.D21  end),' ') as D21 ,nvl(max(CASE WHEN nvl(b.D22,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D22  ELSE '#' || b.D22  end),' ') as D22 ,nvl(max(CASE WHEN nvl(b.D23,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D23  ELSE '#' || b.D23  end),' ') as D23 ,nvl(max(CASE WHEN nvl(b.D24,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D24  ELSE '#' || b.D24  end),' ') as D24 ,nvl(max(CASE WHEN nvl(b.D25,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D25  ELSE '#' || b.D25  end),' ') as D25 ,nvl(max(CASE WHEN nvl(b.D26,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D26  ELSE '#' || b.D26  end),' ') as D26 ,nvl(max(CASE WHEN nvl(b.D27,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D27  ELSE '#' || b.D27  end),' ') as D27 ,nvl(max(CASE WHEN nvl(b.D28,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D28  ELSE '#' || b.D28  end),' ') as D28 ,nvl(max(CASE WHEN nvl(b.D29,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D29  ELSE '#' || b.D29  end),' ') as D29 ,nvl(max(CASE WHEN nvl(b.D30,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D30  ELSE '#' || b.D30  end),' ') as D30 ,nvl(max(CASE WHEN nvl(b.D31,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D31  ELSE '#' || b.D31  end),' ') as D31 FROM 	TBL_MONTH_ARRANGE_DETAIL b where 	b.company_no = '100' AND b.BASE_YM = '2023-05' and b.DISPATCH_SEQ = 6 and b.init_seq = 0 AND b.CAR_REGNO LIKE  'SP%' GROUP BY b.CAR_REGNO,b.emp_nm ) SELECT b.*,'N' as bit ,	LENGTH (REGEXP_REPLACE(b.D1||b.D2||b.D3||b.D4||b.D5||b.D6||b.D7||b.D8||b.D9||b.D10||b.D11||b.D12||b.D13||b.D14||b.D15||b.D16||b.D17||b.D18||b.D19||b.D20||b.D21||b.D22||b.D23||b.D24||b.D25||b.D26||b.D27||b.D28||b.D29||b.D30||b.D31,'[0-9# ]','') ) AS tot_work_date FROM ( SELECT  a.prev_daily_seq,b.* FROM 	TBL_MONTH_ARRANGE_DETAIL a LEFT OUTER JOIN sp_maxinfo b ON	a.emp_nm = b.EMP_NM AND  a.car_regno = b.CAR_REGNO where 	a.company_no = '100' AND a.BASE_YM = '2023-05' and a.DISPATCH_SEQ = 6 and a.init_seq = 0 AND a.CAR_REGNO LIKE  'SP%' AND a.emp_nm = decode('','',a.emp_nm,'') AND a.route_nm = '38번' ) b ORDER BY b.prev_daily_seq
 {executed in 15 msec}
2023-06-25 13:33:31.839 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - WITH carInfo AS ( SELECT '감차후 총 차량댓수' as CAR_REGNO,'' AS AMPM_GUBUN ,b.emp_nm,0 AS tot_work_date , b.D1    , b.D2    , b.D3    , b.D4    , b.D5    , b.D6    , b.D7    , b.D8    , b.D9    , b.D10 , b.D11    , b.D12    , b.D13    , b.D14    , b.D15    , b.D16    , b.D17    , b.D18    , b.D19    , b.D20 , b.D21    , b.D22    , b.D23    , b.D24    , b.D25    , b.D26    , b.D27    , b.D28    , b.D29    , b.D30 , b.D31 FROM 	TBL_MONTH_ARRANGE_BASIC b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-05' AND    b.DISPATCH_SEQ = 2  AND	b.CAR_REGNO  = '-' ), allocateInfo AS ( SELECT  decode(AMPM_GUBUN,'p','오전','오후') || ' 배정 건수' AS CAR_REGNO,ampm_gubun,'-' emp_nm,0 AS tot_work_date ,0 D1 ,0 D2 ,0 D3 ,0 D4 ,0 D5 ,0 D6 ,0 D7 ,0 D8 ,0 D9 ,0 D10 ,0 D11 ,0 D12 ,0 D13 ,0 D14 ,0 D15 ,0 D16 ,0 D17 ,0 D18 ,0 D19 ,0 D20 ,0 D21 ,0 D22 ,0 D23 ,0 D24 ,0 D25 ,0 D26 ,0 D27 ,0 D28 ,0 d29 ,0 d30 ,0 d31 FROM 	TBL_MONTH_ARRANGE_DETAIL b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-05' AND    b.DISPATCH_SEQ = 6  AND    b.PREV_DAILY_SEQ = 1 AND    b.AMPM_GUBUN IN ('a','p') ) SELECT * FROM carInfo union all SELECT '감차후 총 운행횟수' as CAR_REGNO,' ' AMPM_GUBUN ,b.emp_nm,0 AS tot_work_date , b.D1 *2   , b.D2 *2    , b.D3  *2   , b.D4 *2    , b.D5 *2    , b.D6 *2    , b.D7 *2    , b.D8 *2    , b.D9 *2    , b.D10 *2 , b.D11 *2    , b.D12 *2    , b.D13 *2    , b.D14 *2    , b.D15 *2    , b.D16 *2    , b.D17 *2    , b.D18 *2    , b.D19 *2    , b.D20 *2 , b.D21 *2    , b.D22 *2    , b.D23 *2    , b.D24 *2    , b.D25 *2    , b.D26 *2    , b.D27 *2    , b.D28 *2    , b.D29 *2    , b.D30 *2 , b.D31 *2 FROM 	carInfo b union all SELECT  * FROM 	allocateInfo b union all SELECT  decode(b.AMPM_GUBUN,'p','오전','오후') || ' 미배정 건수' AS CAR_REGNO,b.AMPM_GUBUN ,'-' emp_nm,0 AS tot_work_date ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  FROM 	allocateInfo b,carInfo a
2023-06-25 13:33:31.840 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 13:33:31.842 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
31. WITH carInfo AS ( SELECT '감차후 총 차량댓수' as CAR_REGNO,'' AS AMPM_GUBUN ,b.emp_nm,0 AS tot_work_date , b.D1    , b.D2    , b.D3    , b.D4    , b.D5    , b.D6    , b.D7    , b.D8    , b.D9    , b.D10 , b.D11    , b.D12    , b.D13    , b.D14    , b.D15    , b.D16    , b.D17    , b.D18    , b.D19    , b.D20 , b.D21    , b.D22    , b.D23    , b.D24    , b.D25    , b.D26    , b.D27    , b.D28    , b.D29    , b.D30 , b.D31 FROM 	TBL_MONTH_ARRANGE_BASIC b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-05' AND    b.DISPATCH_SEQ = 2  AND	b.CAR_REGNO  = '-' ), allocateInfo AS ( SELECT  decode(AMPM_GUBUN,'p','오전','오후') || ' 배정 건수' AS CAR_REGNO,ampm_gubun,'-' emp_nm,0 AS tot_work_date ,0 D1 ,0 D2 ,0 D3 ,0 D4 ,0 D5 ,0 D6 ,0 D7 ,0 D8 ,0 D9 ,0 D10 ,0 D11 ,0 D12 ,0 D13 ,0 D14 ,0 D15 ,0 D16 ,0 D17 ,0 D18 ,0 D19 ,0 D20 ,0 D21 ,0 D22 ,0 D23 ,0 D24 ,0 D25 ,0 D26 ,0 D27 ,0 D28 ,0 d29 ,0 d30 ,0 d31 FROM 	TBL_MONTH_ARRANGE_DETAIL b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-05' AND    b.DISPATCH_SEQ = 6  AND    b.PREV_DAILY_SEQ = 1 AND    b.AMPM_GUBUN IN ('a','p') ) SELECT * FROM carInfo union all SELECT '감차후 총 운행횟수' as CAR_REGNO,' ' AMPM_GUBUN ,b.emp_nm,0 AS tot_work_date , b.D1 *2   , b.D2 *2    , b.D3  *2   , b.D4 *2    , b.D5 *2    , b.D6 *2    , b.D7 *2    , b.D8 *2    , b.D9 *2    , b.D10 *2 , b.D11 *2    , b.D12 *2    , b.D13 *2    , b.D14 *2    , b.D15 *2    , b.D16 *2    , b.D17 *2    , b.D18 *2    , b.D19 *2    , b.D20 *2 , b.D21 *2    , b.D22 *2    , b.D23 *2    , b.D24 *2    , b.D25 *2    , b.D26 *2    , b.D27 *2    , b.D28 *2    , b.D29 *2    , b.D30 *2 , b.D31 *2 FROM 	carInfo b union all SELECT  * FROM 	allocateInfo b union all SELECT  decode(b.AMPM_GUBUN,'p','오전','오후') || ' 미배정 건수' AS CAR_REGNO,b.AMPM_GUBUN ,'-' emp_nm,0 AS tot_work_date ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  FROM 	allocateInfo b,carInfo a
 {executed in 2 msec}
2023-06-25 13:33:31.843 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - SELECT '[38번] 2023-05월' as CAR_REGNO,b.emp_nm,0 AS tot_work_date , b.D1    , b.D2    , b.D3    , b.D4    , b.D5    , b.D6    , b.D7    , b.D8    , b.D9    , b.D10 , b.D11    , b.D12    , b.D13    , b.D14    , b.D15    , b.D16    , b.D17    , b.D18    , b.D19    , b.D20 , b.D21    , b.D22    , b.D23    , b.D24    , b.D25    , b.D26    , b.D27    , b.D28    , b.D29    , b.D30 , b.D31 ,'N' as bit FROM 	TBL_MONTH_ARRANGE_DETAIL b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-05' AND    b.DISPATCH_SEQ = 1
2023-06-25 13:33:31.844 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
31. SELECT '[38번] 2023-05월' as CAR_REGNO,b.emp_nm,0 AS tot_work_date , b.D1    , b.D2    , b.D3    , b.D4    , b.D5    , b.D6    , b.D7    , b.D8    , b.D9    , b.D10 , b.D11    , b.D12    , b.D13    , b.D14    , b.D15    , b.D16    , b.D17    , b.D18    , b.D19    , b.D20 , b.D21    , b.D22    , b.D23    , b.D24    , b.D25    , b.D26    , b.D27    , b.D28    , b.D29    , b.D30 , b.D31 ,'N' as bit FROM 	TBL_MONTH_ARRANGE_DETAIL b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-05' AND    b.DISPATCH_SEQ = 1
 {executed in 0 msec}
2023-06-25 13:33:31.844 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - WITH RECURSIVE countera(n) AS ( WITH routeCount AS ( SELECT 'a' ampm_gubun, a.AUTO_CNT FROM TBL_ROUTEINFO a WHERE 	a.COMPANY_NO  = '100' AND 	a.ROUTE_NM    = '38번'	 union SELECT 'p' ampm_gubun, a.AUTO_CNT FROM TBL_ROUTEINFO a WHERE 	a.COMPANY_NO  = '100' AND 	a.ROUTE_NM    = '38번' ) SELECT t.n+1,t.n as no,c.ampm_gubun,to_char(t.n,'00') || c.ampm_gubun AS gubun ,  CASE WHEN a.ampm_gubun = '' AND a.d1 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d1 ,'[*@?]') and a.d1  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d1        ,  CASE WHEN a.ampm_gubun = '' AND a.d2  like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d2  ,'[*@?]') and a.d2   like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d2     ,  CASE WHEN a.ampm_gubun = '' AND a.d3  like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d3  ,'[*@?]') and a.d3   like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d3     ,  CASE WHEN a.ampm_gubun = '' AND a.d4  like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d4  ,'[*@?]') and a.d4   like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d4     ,  CASE WHEN a.ampm_gubun = '' AND a.d5  like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d5  ,'[*@?]') and a.d5   like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d5     ,  CASE WHEN a.ampm_gubun = '' AND a.d6  like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d6  ,'[*@?]') and a.d6   like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d6     ,  CASE WHEN a.ampm_gubun = '' AND a.d7  like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d7  ,'[*@?]') and a.d7   like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d7     ,  CASE WHEN a.ampm_gubun = '' AND a.d8  like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d8  ,'[*@?]') and a.d8   like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d8     ,  CASE WHEN a.ampm_gubun = '' AND a.d9  like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d9  ,'[*@?]') and a.d9   like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d9     ,  CASE WHEN a.ampm_gubun = '' AND a.d10 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d10 ,'[*@?]') and a.d10  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d10    ,  CASE WHEN a.ampm_gubun = '' AND a.d11 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d11 ,'[*@?]') and a.d11  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d11    ,  CASE WHEN a.ampm_gubun = '' AND a.d12 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d12 ,'[*@?]') and a.d12  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d12    ,  CASE WHEN a.ampm_gubun = '' AND a.d13 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d13 ,'[*@?]') and a.d13  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d13    ,  CASE WHEN a.ampm_gubun = '' AND a.d14 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d14 ,'[*@?]') and a.d14  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d14    ,  CASE WHEN a.ampm_gubun = '' AND a.d15 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d15 ,'[*@?]') and a.d15  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d15    ,  CASE WHEN a.ampm_gubun = '' AND a.d16 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d16 ,'[*@?]') and a.d16  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d16    ,  CASE WHEN a.ampm_gubun = '' AND a.d17 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d17 ,'[*@?]') and a.d17  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d17    ,  CASE WHEN a.ampm_gubun = '' AND a.d18 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d18 ,'[*@?]') and a.d18  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d18    ,  CASE WHEN a.ampm_gubun = '' AND a.d19 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d19 ,'[*@?]') and a.d19  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d19    ,  CASE WHEN a.ampm_gubun = '' AND a.d20 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d20 ,'[*@?]') and a.d20  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d20    ,  CASE WHEN a.ampm_gubun = '' AND a.d21 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d21 ,'[*@?]') and a.d21  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d21    ,  CASE WHEN a.ampm_gubun = '' AND a.d22 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d22 ,'[*@?]') and a.d22  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d22    ,  CASE WHEN a.ampm_gubun = '' AND a.d23 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d23 ,'[*@?]') and a.d23  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d23    ,  CASE WHEN a.ampm_gubun = '' AND a.d24 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d24 ,'[*@?]') and a.d24  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d24    ,  CASE WHEN a.ampm_gubun = '' AND a.d25 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d25 ,'[*@?]') and a.d25  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d25    ,  CASE WHEN a.ampm_gubun = '' AND a.d26 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d26 ,'[*@?]') and a.d26  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d26    ,  CASE WHEN a.ampm_gubun = '' AND a.d27 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d27 ,'[*@?]') and a.d27  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d27    ,  CASE WHEN a.ampm_gubun = '' AND a.d28 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d28 ,'[*@?]') and a.d28  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d28    ,  CASE WHEN a.ampm_gubun = '' AND a.d29 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d29 ,'[*@?]') and a.d29  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d29    ,  CASE WHEN a.ampm_gubun = '' AND a.d30 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d30 ,'[*@?]') and a.d30  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d30    ,  CASE WHEN a.ampm_gubun = '' AND a.d31 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d31 ,'[*@?]') and a.d31  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d31    FROM t ,TBL_MONTH_ARRANGE_DETAIL a , routeCount c WHERE 	a.COMPANY_NO  = '100' AND 	a.ROUTE_NM    = '38번' AND 	a.BASE_YM = '2023-05' AND 	a.dispatch_seq = 6 AND     a.init_seq = 0 AND     t.n <= c.auto_cnt ) SELECT 	decode(ampm_gubun,'a','오전','오후') as ampm_gubun , no as seq,0 as cnt ,	max(d1 ) as d1 ,	max(d2 ) as d2 ,	max(d3 ) as d3 ,	max(d4 ) as d4 ,	max(d5 ) as d5 ,	max(d6 ) as d6 ,	max(d7 ) as d7 ,	max(d8 ) as d8 ,	max(d9 ) as d9 ,	max(d10) as d10 ,	max(d11) as d11 ,	max(d12) as d12 ,	max(d13) as d13 ,	max(d14) as d14 ,	max(d15) as d15 ,	max(d16) as d16 ,	max(d17) as d17 ,	max(d18) as d18 ,	max(d19) as d19 ,	max(d20) as d20 ,	max(d21) as d21 ,	max(d22) as d22 ,	max(d23) as d23 ,	max(d24) as d24 ,	max(d25) as d25 ,	max(d26) as d26 ,	max(d27) as d27 ,	max(d28) as d28 ,	max(d29) as d29 ,	max(d30) as d30 ,	max(d31) as d31 from countera GROUP BY ampm_gubun,gubun
2023-06-25 13:33:31.906 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
31. WITH RECURSIVE countera(n) AS ( WITH routeCount AS ( SELECT 'a' ampm_gubun, a.AUTO_CNT FROM TBL_ROUTEINFO a WHERE 	a.COMPANY_NO  = '100' AND 	a.ROUTE_NM    = '38번'	 union SELECT 'p' ampm_gubun, a.AUTO_CNT FROM TBL_ROUTEINFO a WHERE 	a.COMPANY_NO  = '100' AND 	a.ROUTE_NM    = '38번' ) SELECT t.n+1,t.n as no,c.ampm_gubun,to_char(t.n,'00') || c.ampm_gubun AS gubun ,  CASE WHEN a.ampm_gubun = '' AND a.d1 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d1 ,'[*@?]') and a.d1  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d1        ,  CASE WHEN a.ampm_gubun = '' AND a.d2  like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d2  ,'[*@?]') and a.d2   like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d2     ,  CASE WHEN a.ampm_gubun = '' AND a.d3  like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d3  ,'[*@?]') and a.d3   like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d3     ,  CASE WHEN a.ampm_gubun = '' AND a.d4  like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d4  ,'[*@?]') and a.d4   like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d4     ,  CASE WHEN a.ampm_gubun = '' AND a.d5  like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d5  ,'[*@?]') and a.d5   like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d5     ,  CASE WHEN a.ampm_gubun = '' AND a.d6  like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d6  ,'[*@?]') and a.d6   like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d6     ,  CASE WHEN a.ampm_gubun = '' AND a.d7  like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d7  ,'[*@?]') and a.d7   like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d7     ,  CASE WHEN a.ampm_gubun = '' AND a.d8  like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d8  ,'[*@?]') and a.d8   like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d8     ,  CASE WHEN a.ampm_gubun = '' AND a.d9  like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d9  ,'[*@?]') and a.d9   like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d9     ,  CASE WHEN a.ampm_gubun = '' AND a.d10 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d10 ,'[*@?]') and a.d10  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d10    ,  CASE WHEN a.ampm_gubun = '' AND a.d11 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d11 ,'[*@?]') and a.d11  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d11    ,  CASE WHEN a.ampm_gubun = '' AND a.d12 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d12 ,'[*@?]') and a.d12  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d12    ,  CASE WHEN a.ampm_gubun = '' AND a.d13 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d13 ,'[*@?]') and a.d13  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d13    ,  CASE WHEN a.ampm_gubun = '' AND a.d14 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d14 ,'[*@?]') and a.d14  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d14    ,  CASE WHEN a.ampm_gubun = '' AND a.d15 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d15 ,'[*@?]') and a.d15  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d15    ,  CASE WHEN a.ampm_gubun = '' AND a.d16 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d16 ,'[*@?]') and a.d16  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d16    ,  CASE WHEN a.ampm_gubun = '' AND a.d17 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d17 ,'[*@?]') and a.d17  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d17    ,  CASE WHEN a.ampm_gubun = '' AND a.d18 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d18 ,'[*@?]') and a.d18  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d18    ,  CASE WHEN a.ampm_gubun = '' AND a.d19 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d19 ,'[*@?]') and a.d19  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d19    ,  CASE WHEN a.ampm_gubun = '' AND a.d20 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d20 ,'[*@?]') and a.d20  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d20    ,  CASE WHEN a.ampm_gubun = '' AND a.d21 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d21 ,'[*@?]') and a.d21  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d21    ,  CASE WHEN a.ampm_gubun = '' AND a.d22 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d22 ,'[*@?]') and a.d22  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d22    ,  CASE WHEN a.ampm_gubun = '' AND a.d23 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d23 ,'[*@?]') and a.d23  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d23    ,  CASE WHEN a.ampm_gubun = '' AND a.d24 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d24 ,'[*@?]') and a.d24  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d24    ,  CASE WHEN a.ampm_gubun = '' AND a.d25 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d25 ,'[*@?]') and a.d25  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d25    ,  CASE WHEN a.ampm_gubun = '' AND a.d26 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d26 ,'[*@?]') and a.d26  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d26    ,  CASE WHEN a.ampm_gubun = '' AND a.d27 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d27 ,'[*@?]') and a.d27  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d27    ,  CASE WHEN a.ampm_gubun = '' AND a.d28 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d28 ,'[*@?]') and a.d28  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d28    ,  CASE WHEN a.ampm_gubun = '' AND a.d29 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d29 ,'[*@?]') and a.d29  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d29    ,  CASE WHEN a.ampm_gubun = '' AND a.d30 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d30 ,'[*@?]') and a.d30  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d30    ,  CASE WHEN a.ampm_gubun = '' AND a.d31 like t.n || c.ampm_gubun ||'%' THEN emp_nm ||'*' WHEN not REGEXP_LIKE(a.d31 ,'[*@?]') and a.d31  like t.n || c.ampm_gubun  THEN EMP_NM ELSE '' END d31    FROM t ,TBL_MONTH_ARRANGE_DETAIL a , routeCount c WHERE 	a.COMPANY_NO  = '100' AND 	a.ROUTE_NM    = '38번' AND 	a.BASE_YM = '2023-05' AND 	a.dispatch_seq = 6 AND     a.init_seq = 0 AND     t.n <= c.auto_cnt ) SELECT 	decode(ampm_gubun,'a','오전','오후') as ampm_gubun , no as seq,0 as cnt ,	max(d1 ) as d1 ,	max(d2 ) as d2 ,	max(d3 ) as d3 ,	max(d4 ) as d4 ,	max(d5 ) as d5 ,	max(d6 ) as d6 ,	max(d7 ) as d7 ,	max(d8 ) as d8 ,	max(d9 ) as d9 ,	max(d10) as d10 ,	max(d11) as d11 ,	max(d12) as d12 ,	max(d13) as d13 ,	max(d14) as d14 ,	max(d15) as d15 ,	max(d16) as d16 ,	max(d17) as d17 ,	max(d18) as d18 ,	max(d19) as d19 ,	max(d20) as d20 ,	max(d21) as d21 ,	max(d22) as d22 ,	max(d23) as d23 ,	max(d24) as d24 ,	max(d25) as d25 ,	max(d26) as d26 ,	max(d27) as d27 ,	max(d28) as d28 ,	max(d29) as d29 ,	max(d30) as d30 ,	max(d31) as d31 from countera GROUP BY ampm_gubun,gubun
 {executed in 61 msec}
2023-06-25 13:34:07.044 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 13:34:07.045 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
31. SELECT ROUTE_NM  FROM TBL_ROUTEINFO ORDER BY 1
 {executed in 0 msec}
2023-06-25 13:34:20.180 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   'N' as bit, a.* from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' and		a.code = '휴가종류' order by a.route_nm
2023-06-25 13:34:20.181 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
32. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 13:34:20.181 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 13:34:20.182 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
31. SELECT ROUTE_NM  FROM TBL_ROUTEINFO ORDER BY 1
 {executed in 1 msec}
2023-06-25 13:34:20.182 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
32. select   'N' as bit, a.* from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' and		a.code = '휴가종류' order by a.route_nm
 {executed in 1 msec}
2023-06-25 13:35:00.665 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT 	DISTINCT INIT_SEQ  FROM 	TBL_MONTH_ARRANGE_BASIC a WHERE	a.COMPANY_NO = '100' AND 	a.BASE_YM = '2023-05' AND 	a.route_nm = '38번' AND 	a.INIT_SEQ > 0
2023-06-25 13:35:00.666 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - WITH carInfo AS ( SELECT '감차후 총 차량댓수' as CAR_REGNO,'' AS AMPM_GUBUN ,b.emp_nm,0 AS tot_work_date , b.D1    , b.D2    , b.D3    , b.D4    , b.D5    , b.D6    , b.D7    , b.D8    , b.D9    , b.D10 , b.D11    , b.D12    , b.D13    , b.D14    , b.D15    , b.D16    , b.D17    , b.D18    , b.D19    , b.D20 , b.D21    , b.D22    , b.D23    , b.D24    , b.D25    , b.D26    , b.D27    , b.D28    , b.D29    , b.D30 , b.D31 FROM 	TBL_MONTH_ARRANGE_BASIC b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-05' AND    b.DISPATCH_SEQ = 2  AND	b.CAR_REGNO  = '-' ), allocateInfo AS ( SELECT  decode(AMPM_GUBUN,'p','오전','오후') || ' 배정 건수' AS CAR_REGNO,ampm_gubun,'-' emp_nm,0 AS tot_work_date ,0 D1 ,0 D2 ,0 D3 ,0 D4 ,0 D5 ,0 D6 ,0 D7 ,0 D8 ,0 D9 ,0 D10 ,0 D11 ,0 D12 ,0 D13 ,0 D14 ,0 D15 ,0 D16 ,0 D17 ,0 D18 ,0 D19 ,0 D20 ,0 D21 ,0 D22 ,0 D23 ,0 D24 ,0 D25 ,0 D26 ,0 D27 ,0 D28 ,0 d29 ,0 d30 ,0 d31 FROM 	TBL_MONTH_ARRANGE_DETAIL b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-05' AND    b.DISPATCH_SEQ = 6  AND    b.PREV_DAILY_SEQ = 1 AND    b.AMPM_GUBUN IN ('a','p') ) SELECT * FROM carInfo union all SELECT '감차후 총 운행횟수' as CAR_REGNO,' ' AMPM_GUBUN ,b.emp_nm,0 AS tot_work_date , b.D1 *2   , b.D2 *2    , b.D3  *2   , b.D4 *2    , b.D5 *2    , b.D6 *2    , b.D7 *2    , b.D8 *2    , b.D9 *2    , b.D10 *2 , b.D11 *2    , b.D12 *2    , b.D13 *2    , b.D14 *2    , b.D15 *2    , b.D16 *2    , b.D17 *2    , b.D18 *2    , b.D19 *2    , b.D20 *2 , b.D21 *2    , b.D22 *2    , b.D23 *2    , b.D24 *2    , b.D25 *2    , b.D26 *2    , b.D27 *2    , b.D28 *2    , b.D29 *2    , b.D30 *2 , b.D31 *2 FROM 	carInfo b union all SELECT  * FROM 	allocateInfo b union all SELECT  decode(b.AMPM_GUBUN,'p','오전','오후') || ' 미배정 건수' AS CAR_REGNO,b.AMPM_GUBUN ,'-' emp_nm,0 AS tot_work_date ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  FROM 	allocateInfo b,carInfo a
2023-06-25 13:35:00.666 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 13:35:00.667 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
32. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 13:35:00.667 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
31. SELECT 	DISTINCT INIT_SEQ  FROM 	TBL_MONTH_ARRANGE_BASIC a WHERE	a.COMPANY_NO = '100' AND 	a.BASE_YM = '2023-05' AND 	a.route_nm = '38번' AND 	a.INIT_SEQ > 0
 {executed in 1 msec}
2023-06-25 13:35:00.670 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
32. WITH carInfo AS ( SELECT '감차후 총 차량댓수' as CAR_REGNO,'' AS AMPM_GUBUN ,b.emp_nm,0 AS tot_work_date , b.D1    , b.D2    , b.D3    , b.D4    , b.D5    , b.D6    , b.D7    , b.D8    , b.D9    , b.D10 , b.D11    , b.D12    , b.D13    , b.D14    , b.D15    , b.D16    , b.D17    , b.D18    , b.D19    , b.D20 , b.D21    , b.D22    , b.D23    , b.D24    , b.D25    , b.D26    , b.D27    , b.D28    , b.D29    , b.D30 , b.D31 FROM 	TBL_MONTH_ARRANGE_BASIC b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-05' AND    b.DISPATCH_SEQ = 2  AND	b.CAR_REGNO  = '-' ), allocateInfo AS ( SELECT  decode(AMPM_GUBUN,'p','오전','오후') || ' 배정 건수' AS CAR_REGNO,ampm_gubun,'-' emp_nm,0 AS tot_work_date ,0 D1 ,0 D2 ,0 D3 ,0 D4 ,0 D5 ,0 D6 ,0 D7 ,0 D8 ,0 D9 ,0 D10 ,0 D11 ,0 D12 ,0 D13 ,0 D14 ,0 D15 ,0 D16 ,0 D17 ,0 D18 ,0 D19 ,0 D20 ,0 D21 ,0 D22 ,0 D23 ,0 D24 ,0 D25 ,0 D26 ,0 D27 ,0 D28 ,0 d29 ,0 d30 ,0 d31 FROM 	TBL_MONTH_ARRANGE_DETAIL b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-05' AND    b.DISPATCH_SEQ = 6  AND    b.PREV_DAILY_SEQ = 1 AND    b.AMPM_GUBUN IN ('a','p') ) SELECT * FROM carInfo union all SELECT '감차후 총 운행횟수' as CAR_REGNO,' ' AMPM_GUBUN ,b.emp_nm,0 AS tot_work_date , b.D1 *2   , b.D2 *2    , b.D3  *2   , b.D4 *2    , b.D5 *2    , b.D6 *2    , b.D7 *2    , b.D8 *2    , b.D9 *2    , b.D10 *2 , b.D11 *2    , b.D12 *2    , b.D13 *2    , b.D14 *2    , b.D15 *2    , b.D16 *2    , b.D17 *2    , b.D18 *2    , b.D19 *2    , b.D20 *2 , b.D21 *2    , b.D22 *2    , b.D23 *2    , b.D24 *2    , b.D25 *2    , b.D26 *2    , b.D27 *2    , b.D28 *2    , b.D29 *2    , b.D30 *2 , b.D31 *2 FROM 	carInfo b union all SELECT  * FROM 	allocateInfo b union all SELECT  decode(b.AMPM_GUBUN,'p','오전','오후') || ' 미배정 건수' AS CAR_REGNO,b.AMPM_GUBUN ,'-' emp_nm,0 AS tot_work_date ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0 ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  ,0  FROM 	allocateInfo b,carInfo a
 {executed in 2 msec}
2023-06-25 13:35:00.670 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - SELECT '[38번] 2023-05월' as CAR_REGNO,b.emp_nm,0 AS tot_work_date , b.D1    , b.D2    , b.D3    , b.D4    , b.D5    , b.D6    , b.D7    , b.D8    , b.D9    , b.D10 , b.D11    , b.D12    , b.D13    , b.D14    , b.D15    , b.D16    , b.D17    , b.D18    , b.D19    , b.D20 , b.D21    , b.D22    , b.D23    , b.D24    , b.D25    , b.D26    , b.D27    , b.D28    , b.D29    , b.D30 , b.D31 ,'N' as bit FROM 	TBL_MONTH_ARRANGE_DETAIL b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-05' AND    b.DISPATCH_SEQ = 1
2023-06-25 13:35:00.671 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
32. SELECT '[38번] 2023-05월' as CAR_REGNO,b.emp_nm,0 AS tot_work_date , b.D1    , b.D2    , b.D3    , b.D4    , b.D5    , b.D6    , b.D7    , b.D8    , b.D9    , b.D10 , b.D11    , b.D12    , b.D13    , b.D14    , b.D15    , b.D16    , b.D17    , b.D18    , b.D19    , b.D20 , b.D21    , b.D22    , b.D23    , b.D24    , b.D25    , b.D26    , b.D27    , b.D28    , b.D29    , b.D30 , b.D31 ,'N' as bit FROM 	TBL_MONTH_ARRANGE_DETAIL b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-05' AND    b.DISPATCH_SEQ = 1
 {executed in 1 msec}
2023-06-25 13:35:00.672 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - SELECT b.CAR_REGNO,b.emp_nm , 0 AS tot_work_date ,b.D1  ,b.D2  ,b.D3  ,b.D4  ,b.D5  ,b.D6  ,b.D7  ,b.D8  ,b.D9  ,b.D10 ,b.D11 ,b.D12 ,b.D13 ,b.D14 ,b.D15 ,b.D16 ,b.D17 ,b.D18 ,b.D19 ,b.D20 ,b.D21 ,b.D22 ,b.D23 ,b.D24 ,b.D25 ,b.D26 ,b.D27 ,b.D28 ,b.D29 ,b.D30 ,b.D31 ,'N' AS bit FROM 	TBL_MONTH_ARRANGE_DETAIL b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-05' AND    b.DISPATCH_SEQ = 6 AND    b.CAR_REGNO not like 'SP%' order by b.dispatch_seq,b.CAR_REGNO ,b.ampm_gubun,b.prev_daily_seq
2023-06-25 13:35:00.673 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
32. SELECT b.CAR_REGNO,b.emp_nm , 0 AS tot_work_date ,b.D1  ,b.D2  ,b.D3  ,b.D4  ,b.D5  ,b.D6  ,b.D7  ,b.D8  ,b.D9  ,b.D10 ,b.D11 ,b.D12 ,b.D13 ,b.D14 ,b.D15 ,b.D16 ,b.D17 ,b.D18 ,b.D19 ,b.D20 ,b.D21 ,b.D22 ,b.D23 ,b.D24 ,b.D25 ,b.D26 ,b.D27 ,b.D28 ,b.D29 ,b.D30 ,b.D31 ,'N' AS bit FROM 	TBL_MONTH_ARRANGE_DETAIL b WHERE 	b.company_no = '100' AND 	b.route_nm = '38번' AND    b.init_seq = 0 AND    b.BASE_YM = '2023-05' AND    b.DISPATCH_SEQ = 6 AND    b.CAR_REGNO not like 'SP%' order by b.dispatch_seq,b.CAR_REGNO ,b.ampm_gubun,b.prev_daily_seq
 {executed in 1 msec}
2023-06-25 13:35:00.674 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - WITH sp_maxinfo AS ( SELECT  b.CAR_REGNO,b.EMP_NM ,nvl(max(CASE WHEN nvl(b.D1 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D1   ELSE '#' || b.D1  end),' ') as D1 ,nvl(max(CASE WHEN nvl(b.D2 ,'') = '' THEN '' WHEN b.route_nm = '38번' tHEN b.D2   ELSE '#' || b.D2  end),' ') as D2 ,nvl(max(CASE WHEN nvl(b.D3 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D3   ELSE '#' || b.D3   end),' ') as D3 ,nvl(max(CASE WHEN nvl(b.D4 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D4   ELSE '#' || b.D4   end),' ') as D4 ,nvl(max(CASE WHEN nvl(b.D5 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D5   ELSE '#' || b.D5   end),' ') as D5 ,nvl(max(CASE WHEN nvl(b.D6 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D6   ELSE '#' || b.D6   end),' ') as D6 ,nvl(max(CASE WHEN nvl(b.D7 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D7   ELSE '#' || b.D7   end),' ') as D7 ,nvl(max(CASE WHEN nvl(b.D8 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D8   ELSE '#' || b.D8   end),' ') as D8 ,nvl(max(CASE WHEN nvl(b.D9 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D9   ELSE '#' || b.D9   end),' ') as D9 ,nvl(max(CASE WHEN nvl(b.D10,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D10  ELSE '#' || b.D10  end),' ') as D10 ,nvl(max(CASE WHEN nvl(b.D11,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D11  ELSE '#' || b.D11  end),' ') as D11 ,nvl(max(CASE WHEN nvl(b.D12,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D12  ELSE '#' || b.D12  end),' ') as D12 ,nvl(max(CASE WHEN nvl(b.D13,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D13  ELSE '#' || b.D13  end),' ') as D13 ,nvl(max(CASE WHEN nvl(b.D14,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D14  ELSE '#' || b.D14  end),' ') as D14 ,nvl(max(CASE WHEN nvl(b.D15,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D15  ELSE '#' || b.D15  end),' ') as D15 ,nvl(max(CASE WHEN nvl(b.D16,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D16  ELSE '#' || b.D16  end),' ') as D16 ,nvl(max(CASE WHEN nvl(b.D17,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D17  ELSE '#' || b.D17  end),' ') as D17 ,nvl(max(CASE WHEN nvl(b.D18,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D18  ELSE '#' || b.D18  end),' ') as D18 ,nvl(max(CASE WHEN nvl(b.D19,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D19  ELSE '#' || b.D19  end),' ') as D19 ,nvl(max(CASE WHEN nvl(b.D20,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D20  ELSE '#' || b.D20  end),' ') as D20 ,nvl(max(CASE WHEN nvl(b.D21,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D21  ELSE '#' || b.D21  end),' ') as D21 ,nvl(max(CASE WHEN nvl(b.D22,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D22  ELSE '#' || b.D22  end),' ') as D22 ,nvl(max(CASE WHEN nvl(b.D23,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D23  ELSE '#' || b.D23  end),' ') as D23 ,nvl(max(CASE WHEN nvl(b.D24,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D24  ELSE '#' || b.D24  end),' ') as D24 ,nvl(max(CASE WHEN nvl(b.D25,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D25  ELSE '#' || b.D25  end),' ') as D25 ,nvl(max(CASE WHEN nvl(b.D26,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D26  ELSE '#' || b.D26  end),' ') as D26 ,nvl(max(CASE WHEN nvl(b.D27,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D27  ELSE '#' || b.D27  end),' ') as D27 ,nvl(max(CASE WHEN nvl(b.D28,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D28  ELSE '#' || b.D28  end),' ') as D28 ,nvl(max(CASE WHEN nvl(b.D29,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D29  ELSE '#' || b.D29  end),' ') as D29 ,nvl(max(CASE WHEN nvl(b.D30,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D30  ELSE '#' || b.D30  end),' ') as D30 ,nvl(max(CASE WHEN nvl(b.D31,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D31  ELSE '#' || b.D31  end),' ') as D31 FROM 	TBL_MONTH_ARRANGE_DETAIL b where 	b.company_no = '100' AND b.BASE_YM = '2023-05' and b.DISPATCH_SEQ = 6 and b.init_seq = 0 AND b.CAR_REGNO LIKE  'SP%' GROUP BY b.CAR_REGNO,b.emp_nm ) SELECT b.*,'N' as bit ,	LENGTH (REGEXP_REPLACE(b.D1||b.D2||b.D3||b.D4||b.D5||b.D6||b.D7||b.D8||b.D9||b.D10||b.D11||b.D12||b.D13||b.D14||b.D15||b.D16||b.D17||b.D18||b.D19||b.D20||b.D21||b.D22||b.D23||b.D24||b.D25||b.D26||b.D27||b.D28||b.D29||b.D30||b.D31,'[0-9# ]','') ) AS tot_work_date FROM ( SELECT  a.prev_daily_seq,b.* FROM 	TBL_MONTH_ARRANGE_DETAIL a LEFT OUTER JOIN sp_maxinfo b ON	a.emp_nm = b.EMP_NM AND  a.car_regno = b.CAR_REGNO where 	a.company_no = '100' AND a.BASE_YM = '2023-05' and a.DISPATCH_SEQ = 6 and a.init_seq = 0 AND a.CAR_REGNO LIKE  'SP%' AND a.emp_nm = decode('','',a.emp_nm,'') AND a.route_nm = '38번' ) b ORDER BY b.prev_daily_seq
2023-06-25 13:35:00.701 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
32. WITH sp_maxinfo AS ( SELECT  b.CAR_REGNO,b.EMP_NM ,nvl(max(CASE WHEN nvl(b.D1 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D1   ELSE '#' || b.D1  end),' ') as D1 ,nvl(max(CASE WHEN nvl(b.D2 ,'') = '' THEN '' WHEN b.route_nm = '38번' tHEN b.D2   ELSE '#' || b.D2  end),' ') as D2 ,nvl(max(CASE WHEN nvl(b.D3 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D3   ELSE '#' || b.D3   end),' ') as D3 ,nvl(max(CASE WHEN nvl(b.D4 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D4   ELSE '#' || b.D4   end),' ') as D4 ,nvl(max(CASE WHEN nvl(b.D5 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D5   ELSE '#' || b.D5   end),' ') as D5 ,nvl(max(CASE WHEN nvl(b.D6 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D6   ELSE '#' || b.D6   end),' ') as D6 ,nvl(max(CASE WHEN nvl(b.D7 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D7   ELSE '#' || b.D7   end),' ') as D7 ,nvl(max(CASE WHEN nvl(b.D8 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D8   ELSE '#' || b.D8   end),' ') as D8 ,nvl(max(CASE WHEN nvl(b.D9 ,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D9   ELSE '#' || b.D9   end),' ') as D9 ,nvl(max(CASE WHEN nvl(b.D10,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D10  ELSE '#' || b.D10  end),' ') as D10 ,nvl(max(CASE WHEN nvl(b.D11,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D11  ELSE '#' || b.D11  end),' ') as D11 ,nvl(max(CASE WHEN nvl(b.D12,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D12  ELSE '#' || b.D12  end),' ') as D12 ,nvl(max(CASE WHEN nvl(b.D13,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D13  ELSE '#' || b.D13  end),' ') as D13 ,nvl(max(CASE WHEN nvl(b.D14,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D14  ELSE '#' || b.D14  end),' ') as D14 ,nvl(max(CASE WHEN nvl(b.D15,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D15  ELSE '#' || b.D15  end),' ') as D15 ,nvl(max(CASE WHEN nvl(b.D16,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D16  ELSE '#' || b.D16  end),' ') as D16 ,nvl(max(CASE WHEN nvl(b.D17,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D17  ELSE '#' || b.D17  end),' ') as D17 ,nvl(max(CASE WHEN nvl(b.D18,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D18  ELSE '#' || b.D18  end),' ') as D18 ,nvl(max(CASE WHEN nvl(b.D19,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D19  ELSE '#' || b.D19  end),' ') as D19 ,nvl(max(CASE WHEN nvl(b.D20,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D20  ELSE '#' || b.D20  end),' ') as D20 ,nvl(max(CASE WHEN nvl(b.D21,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D21  ELSE '#' || b.D21  end),' ') as D21 ,nvl(max(CASE WHEN nvl(b.D22,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D22  ELSE '#' || b.D22  end),' ') as D22 ,nvl(max(CASE WHEN nvl(b.D23,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D23  ELSE '#' || b.D23  end),' ') as D23 ,nvl(max(CASE WHEN nvl(b.D24,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D24  ELSE '#' || b.D24  end),' ') as D24 ,nvl(max(CASE WHEN nvl(b.D25,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D25  ELSE '#' || b.D25  end),' ') as D25 ,nvl(max(CASE WHEN nvl(b.D26,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D26  ELSE '#' || b.D26  end),' ') as D26 ,nvl(max(CASE WHEN nvl(b.D27,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D27  ELSE '#' || b.D27  end),' ') as D27 ,nvl(max(CASE WHEN nvl(b.D28,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D28  ELSE '#' || b.D28  end),' ') as D28 ,nvl(max(CASE WHEN nvl(b.D29,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D29  ELSE '#' || b.D29  end),' ') as D29 ,nvl(max(CASE WHEN nvl(b.D30,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D30  ELSE '#' || b.D30  end),' ') as D30 ,nvl(max(CASE WHEN nvl(b.D31,'') = '' THEN '' WHEN b.route_nm = '38번' THEN b.D31  ELSE '#' || b.D31  end),' ') as D31 FROM 	TBL_MONTH_ARRANGE_DETAIL b where 	b.company_no = '100' AND b.BASE_YM = '2023-05' and b.DISPATCH_SEQ = 6 and b.init_seq = 0 AND b.CAR_REGNO LIKE  'SP%' GROUP BY b.CAR_REGNO,b.emp_nm ) SELECT b.*,'N' as bit ,	LENGTH (REGEXP_REPLACE(b.D1||b.D2||b.D3||b.D4||b.D5||b.D6||b.D7||b.D8||b.D9||b.D10||b.D11||b.D12||b.D13||b.D14||b.D15||b.D16||b.D17||b.D18||b.D19||b.D20||b.D21||b.D22||b.D23||b.D24||b.D25||b.D26||b.D27||b.D28||b.D29||b.D30||b.D31,'[0-9# ]','') ) AS tot_work_date FROM ( SELECT  a.prev_daily_seq,b.* FROM 	TBL_MONTH_ARRANGE_DETAIL a LEFT OUTER JOIN sp_maxinfo b ON	a.emp_nm = b.EMP_NM AND  a.car_regno = b.CAR_REGNO where 	a.company_no = '100' AND a.BASE_YM = '2023-05' and a.DISPATCH_SEQ = 6 and a.init_seq = 0 AND a.CAR_REGNO LIKE  'SP%' AND a.emp_nm = decode('','',a.emp_nm,'') AND a.route_nm = '38번' ) b ORDER BY b.prev_daily_seq
 {executed in 25 msec}
2023-06-25 13:35:01.267 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@93382024
2023-06-25 13:35:01.268 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_DRIVERINFO_DETAIL} 
2023-06-25 13:35:01.268 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT  'N' as bit,CAR_REGNO ,EMP_NM ,prev_daily_seq ,PREV_WORK_PATTERN ,ampm_gubun, off_group, CAR_REGNO||EMP_NM as key FROM TBM_DRIVERINFO_DETAIL where   company_no = '100' AND 	route_nm = '38번' AND     BASE_YM = '2023-05'
2023-06-25 13:35:01.269 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 13:35:01.270 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
31. SELECT  'N' as bit,CAR_REGNO ,EMP_NM ,prev_daily_seq ,PREV_WORK_PATTERN ,ampm_gubun, off_group, CAR_REGNO||EMP_NM as key FROM TBM_DRIVERINFO_DETAIL where   company_no = '100' AND 	route_nm = '38번' AND     BASE_YM = '2023-05'
 {executed in 1 msec}
2023-06-25 13:35:01.307 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT 	a.ROUTE_NM,b.STATUS,b.LAST_CHG_USER,b.LAST_CHG_DATE FROM 	TBL_ROUTEINFO a left outer join TBM_MONTH_ARRANGE_STATUS b on	a.company_no = b.company_no and a.route_nm   = b.route_nm AND b.BASE_YM = '2023-05' AND	b.ROUTE_NM like '' || '%' WHERE 	a.company_no = '100' ORDER BY 1
2023-06-25 13:35:01.309 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
31. SELECT 	a.ROUTE_NM,b.STATUS,b.LAST_CHG_USER,b.LAST_CHG_DATE FROM 	TBL_ROUTEINFO a left outer join TBM_MONTH_ARRANGE_STATUS b on	a.company_no = b.company_no and a.route_nm   = b.route_nm AND b.BASE_YM = '2023-05' AND	b.ROUTE_NM like '' || '%' WHERE 	a.company_no = '100' ORDER BY 1
 {executed in 1 msec}
2023-06-25 13:35:32.643 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 13:35:32.644 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
31. SELECT ROUTE_NM  FROM TBL_ROUTEINFO ORDER BY 1
 {executed in 1 msec}
2023-06-25 14:25:48.034 INFO  [Catalina-utility-1] [c.pjy.dashboard.listener.SessionListener] - updateUserCloseTime p00139 
2023-06-25 14:25:48.034 INFO  [Catalina-utility-1] [c.pjy.dashboard.listener.SessionListener] - currentSessionUserList ->  false
2023-06-25 14:25:48.034 INFO  [Catalina-utility-1] [c.pjy.dashboard.listener.SessionListener] - updateUserCloseTime p00139 
2023-06-25 14:25:48.034 INFO  [Catalina-utility-1] [c.pjy.dashboard.listener.SessionListener] - currentSessionUserList ->  false
2023-06-25 15:57:24.561 WARN  [H2 housekeeper] [com.zaxxer.hikari.pool.HikariPool] - H2 - Thread starvation or clock leap detected (housekeeper delta=1h30m40s319ms115µs400ns).
2023-06-25 15:58:44.215 INFO  [http-nio-10010-exec-8] [c.p.d.interceptor.LoggerInterceptor] - ============================== START ==============================
2023-06-25 15:58:44.215 INFO  [http-nio-10010-exec-8] [c.p.d.interceptor.LoggerInterceptor] -  Class       	:  class org.springframework.web.method.HandlerMethod
2023-06-25 15:58:44.215 INFO  [http-nio-10010-exec-8] [c.p.d.interceptor.LoggerInterceptor] -  Request URI 	:  /error
2023-06-25 15:58:44.215 INFO  [http-nio-10010-exec-8] [c.p.d.interceptor.LoggerInterceptor] -  Request addr	:  0:0:0:0:0:0:0:1
2023-06-25 15:58:44.215 INFO  [http-nio-10010-exec-8] [c.p.d.interceptor.LoggerInterceptor] -  Servlet URI 	:  /error
2023-06-25 15:58:55.966 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 15:58:55.967 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
71. select * from MEMBER where userId = 'p00139'
 {executed in 0 msec}
2023-06-25 15:58:55.970 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.MemberServiceImpl] - ROLE_ADMIN
2023-06-25 15:58:56.066 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.MemberServiceImpl] - pass:$2a$10$MNrQAPw.4k9j2y08eTmYEeI7oKPuaWbA97HHog.8PYep5HsRwhbae,$2a$10$IHuJzPFVMlM1TYWAvMQdSuLAYrsfJx9P9ySIYBxVzG87AU7TKjuw6
2023-06-25 15:58:56.159 INFO  [http-nio-10010-exec-2] [c.p.d.configuration.SecurityConfig] - authentication:: p00139
2023-06-25 16:03:56.611 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 16:03:56.613 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. SELECT ROUTE_NM  FROM TBL_ROUTEINFO ORDER BY 1
 {executed in 0 msec}
2023-06-25 16:08:21.829 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 16:08:21.830 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. SELECT ROUTE_NM  FROM TBL_ROUTEINFO ORDER BY 1
 {executed in 1 msec}
2023-06-25 16:08:27.596 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@7274ecc
2023-06-25 16:08:27.669 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 16:08:27.690 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT /* select_getDrivingOrder : 승무지시 화면용 */ k.route_nm,k.seq,k.CAR_REGNO
		,	listagg(k.emp_nm,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as empNm
		,	listagg(k.PHONE_NO,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as PHONE
		,	listagg(k.value,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as spGb
		,	' ' as empNm_am
		,	' ' as empNm_pm
		,	' ' as phone_am
		,	' ' as phone_pm
		,	' ' as spgb_am
		,	' ' as spgb_pm
	FROM (
	SELECT	a.route_nm,
			a.CAR_REGNO ,
			a.EMP_NM ,
			b.PHONE_NO ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,
			CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a JOIN TBL_EMPLOYEEINFO b ON a.company_no = b.COMPANY_NO AND a.emp_nm = b.EMP_NM 
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT a.route_nm,
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			nvl(c.PHONE_NO,'-') AS phone_no ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		
			CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON
			a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
			AND b.d2 <> ''
			AND a.d2 LIKE b.d2 || '%'
		LEFT OUTER JOIN TBL_EMPLOYEEINFO c ON b.company_no = c.COMPANY_NO AND b.emp_nm = c.EMP_NM
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%'	OR a.d2 LIKE '%@%')
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.route_nm,k.seq,k.CAR_REGNO
 {executed in 18 msec}
2023-06-25 16:09:17.554 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 16:09:17.555 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. SELECT ROUTE_NM  FROM TBL_ROUTEINFO ORDER BY 1
 {executed in 1 msec}
2023-06-25 16:09:20.954 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@7274ecc
2023-06-25 16:09:20.956 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 16:09:20.968 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT /* select_getDrivingOrder : 승무지시 화면용 */ k.route_nm,k.seq,k.CAR_REGNO
		,	listagg(k.emp_nm,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as empNm
		,	listagg(k.PHONE_NO,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as PHONE
		,	listagg(k.value,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as spGb
		,	' ' as empNm_am
		,	' ' as empNm_pm
		,	' ' as phone_am
		,	' ' as phone_pm
		,	' ' as spgb_am
		,	' ' as spgb_pm
	FROM (
	SELECT	a.route_nm,
			a.CAR_REGNO ,
			a.EMP_NM ,
			b.PHONE_NO ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,
			CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a JOIN TBL_EMPLOYEEINFO b ON a.company_no = b.COMPANY_NO AND a.emp_nm = b.EMP_NM 
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT a.route_nm,
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			nvl(c.PHONE_NO,'-') AS phone_no ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		
			CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON
			a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
			AND b.d2 <> ''
			AND a.d2 LIKE b.d2 || '%'
		LEFT OUTER JOIN TBL_EMPLOYEEINFO c ON b.company_no = c.COMPANY_NO AND b.emp_nm = c.EMP_NM
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%'	OR a.d2 LIKE '%@%')
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.route_nm,k.seq,k.CAR_REGNO
 {executed in 11 msec}
2023-06-25 16:10:50.372 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 16:10:50.373 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. SELECT ROUTE_NM  FROM TBL_ROUTEINFO ORDER BY 1
 {executed in 0 msec}
2023-06-25 16:10:53.278 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@7274ecc
2023-06-25 16:10:53.279 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 16:10:53.290 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT /* select_getDrivingOrder : 승무지시 화면용 */ k.route_nm,k.seq,k.CAR_REGNO
		,	listagg(k.emp_nm,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as empNm
		,	listagg(k.PHONE_NO,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as PHONE
		,	listagg(k.value,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as spGb
		,	' ' as empNm_am
		,	' ' as empNm_pm
		,	' ' as phone_am
		,	' ' as phone_pm
		,	' ' as spgb_am
		,	' ' as spgb_pm
	FROM (
	SELECT	a.route_nm,
			a.CAR_REGNO ,
			a.EMP_NM ,
			b.PHONE_NO ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,
			CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a JOIN TBL_EMPLOYEEINFO b ON a.company_no = b.COMPANY_NO AND a.emp_nm = b.EMP_NM 
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT a.route_nm,
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			nvl(c.PHONE_NO,'-') AS phone_no ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		
			CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON
			a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
			AND b.d2 <> ''
			AND a.d2 LIKE b.d2 || '%'
		LEFT OUTER JOIN TBL_EMPLOYEEINFO c ON b.company_no = c.COMPANY_NO AND b.emp_nm = c.EMP_NM
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%'	OR a.d2 LIKE '%@%')
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.route_nm,k.seq,k.CAR_REGNO
 {executed in 10 msec}
2023-06-25 16:11:25.534 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 16:11:25.535 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. SELECT ROUTE_NM  FROM TBL_ROUTEINFO ORDER BY 1
 {executed in 1 msec}
2023-06-25 16:11:27.600 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@7274ecc
2023-06-25 16:11:27.601 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 16:11:27.612 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT /* select_getDrivingOrder : 승무지시 화면용 */ k.route_nm,k.seq,k.CAR_REGNO
		,	listagg(k.emp_nm,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as empNm
		,	listagg(k.PHONE_NO,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as PHONE
		,	listagg(k.value,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as spGb
		,	' ' as empNm_am
		,	' ' as empNm_pm
		,	' ' as phone_am
		,	' ' as phone_pm
		,	' ' as spgb_am
		,	' ' as spgb_pm
	FROM (
	SELECT	a.route_nm,
			a.CAR_REGNO ,
			a.EMP_NM ,
			b.PHONE_NO ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,
			CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a JOIN TBL_EMPLOYEEINFO b ON a.company_no = b.COMPANY_NO AND a.emp_nm = b.EMP_NM 
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT a.route_nm,
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			nvl(c.PHONE_NO,'-') AS phone_no ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		
			CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON
			a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
			AND b.d2 <> ''
			AND a.d2 LIKE b.d2 || '%'
		LEFT OUTER JOIN TBL_EMPLOYEEINFO c ON b.company_no = c.COMPANY_NO AND b.emp_nm = c.EMP_NM
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%'	OR a.d2 LIKE '%@%')
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.route_nm,k.seq,k.CAR_REGNO
 {executed in 9 msec}
2023-06-25 16:11:50.106 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 16:11:50.107 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. SELECT ROUTE_NM  FROM TBL_ROUTEINFO ORDER BY 1
 {executed in 1 msec}
2023-06-25 16:11:52.135 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@7274ecc
2023-06-25 16:11:52.136 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 16:11:52.147 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT /* select_getDrivingOrder : 승무지시 화면용 */ k.route_nm,k.seq,k.CAR_REGNO
		,	listagg(k.emp_nm,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as empNm
		,	listagg(k.PHONE_NO,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as PHONE
		,	listagg(k.value,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as spGb
		,	' ' as empNm_am
		,	' ' as empNm_pm
		,	' ' as phone_am
		,	' ' as phone_pm
		,	' ' as spgb_am
		,	' ' as spgb_pm
	FROM (
	SELECT	a.route_nm,
			a.CAR_REGNO ,
			a.EMP_NM ,
			b.PHONE_NO ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,
			CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a JOIN TBL_EMPLOYEEINFO b ON a.company_no = b.COMPANY_NO AND a.emp_nm = b.EMP_NM 
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT a.route_nm,
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			nvl(c.PHONE_NO,'-') AS phone_no ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		
			CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON
			a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
			AND b.d2 <> ''
			AND a.d2 LIKE b.d2 || '%'
		LEFT OUTER JOIN TBL_EMPLOYEEINFO c ON b.company_no = c.COMPANY_NO AND b.emp_nm = c.EMP_NM
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%'	OR a.d2 LIKE '%@%')
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.route_nm,k.seq,k.CAR_REGNO
 {executed in 10 msec}
2023-06-25 16:13:31.237 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 16:13:31.238 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. SELECT ROUTE_NM  FROM TBL_ROUTEINFO ORDER BY 1
 {executed in 1 msec}
2023-06-25 16:13:34.882 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@7274ecc
2023-06-25 16:13:34.884 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 16:13:34.897 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT /* select_getDrivingOrder : 승무지시 화면용 */ k.route_nm,k.seq,k.CAR_REGNO
		,	listagg(k.emp_nm,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as empNm
		,	listagg(k.PHONE_NO,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as PHONE
		,	listagg(k.value,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as spGb
		,	' ' as empNm_am
		,	' ' as empNm_pm
		,	' ' as phone_am
		,	' ' as phone_pm
		,	' ' as spgb_am
		,	' ' as spgb_pm
	FROM (
	SELECT	a.route_nm,
			a.CAR_REGNO ,
			a.EMP_NM ,
			b.PHONE_NO ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,
			CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a JOIN TBL_EMPLOYEEINFO b ON a.company_no = b.COMPANY_NO AND a.emp_nm = b.EMP_NM 
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT a.route_nm,
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			nvl(c.PHONE_NO,'-') AS phone_no ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		
			CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON
			a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
			AND b.d2 <> ''
			AND a.d2 LIKE b.d2 || '%'
		LEFT OUTER JOIN TBL_EMPLOYEEINFO c ON b.company_no = c.COMPANY_NO AND b.emp_nm = c.EMP_NM
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%'	OR a.d2 LIKE '%@%')
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.route_nm,k.seq,k.CAR_REGNO
 {executed in 13 msec}
2023-06-25 16:13:59.975 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 16:13:59.976 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. SELECT ROUTE_NM  FROM TBL_ROUTEINFO ORDER BY 1
 {executed in 1 msec}
2023-06-25 16:14:02.345 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@7274ecc
2023-06-25 16:14:02.346 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 16:14:02.359 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT /* select_getDrivingOrder : 승무지시 화면용 */ k.route_nm,k.seq,k.CAR_REGNO
		,	listagg(k.emp_nm,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as empNm
		,	listagg(k.PHONE_NO,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as PHONE
		,	listagg(k.value,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as spGb
		,	' ' as empNm_am
		,	' ' as empNm_pm
		,	' ' as phone_am
		,	' ' as phone_pm
		,	' ' as spgb_am
		,	' ' as spgb_pm
	FROM (
	SELECT	a.route_nm,
			a.CAR_REGNO ,
			a.EMP_NM ,
			b.PHONE_NO ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,
			CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a JOIN TBL_EMPLOYEEINFO b ON a.company_no = b.COMPANY_NO AND a.emp_nm = b.EMP_NM 
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT a.route_nm,
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			nvl(c.PHONE_NO,'-') AS phone_no ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		
			CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON
			a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
			AND b.d2 <> ''
			AND a.d2 LIKE b.d2 || '%'
		LEFT OUTER JOIN TBL_EMPLOYEEINFO c ON b.company_no = c.COMPANY_NO AND b.emp_nm = c.EMP_NM
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%'	OR a.d2 LIKE '%@%')
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.route_nm,k.seq,k.CAR_REGNO
 {executed in 11 msec}
2023-06-25 16:15:47.658 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 16:15:47.658 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. SELECT ROUTE_NM  FROM TBL_ROUTEINFO ORDER BY 1
 {executed in 0 msec}
2023-06-25 16:15:51.487 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@7274ecc
2023-06-25 16:15:51.489 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 16:15:51.509 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT /* select_getDrivingOrder : 승무지시 화면용 */ k.route_nm,k.seq,k.CAR_REGNO
		,	listagg(k.emp_nm,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as empNm
		,	listagg(k.PHONE_NO,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as PHONE
		,	listagg(k.value,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as spGb
		,	' ' as empNm_am
		,	' ' as empNm_pm
		,	' ' as phone_am
		,	' ' as phone_pm
		,	' ' as spgb_am
		,	' ' as spgb_pm
	FROM (
	SELECT	a.route_nm,
			a.CAR_REGNO ,
			a.EMP_NM ,
			b.PHONE_NO ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,
			CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a JOIN TBL_EMPLOYEEINFO b ON a.company_no = b.COMPANY_NO AND a.emp_nm = b.EMP_NM 
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT a.route_nm,
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			nvl(c.PHONE_NO,'-') AS phone_no ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		
			CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON
			a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
			AND b.d2 <> ''
			AND a.d2 LIKE b.d2 || '%'
		LEFT OUTER JOIN TBL_EMPLOYEEINFO c ON b.company_no = c.COMPANY_NO AND b.emp_nm = c.EMP_NM
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%'	OR a.d2 LIKE '%@%')
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.route_nm,k.seq,k.CAR_REGNO
 {executed in 19 msec}
2023-06-25 16:16:19.711 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 16:16:19.712 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. SELECT ROUTE_NM  FROM TBL_ROUTEINFO ORDER BY 1
 {executed in 1 msec}
2023-06-25 16:16:23.134 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@7274ecc
2023-06-25 16:16:23.136 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 16:16:23.157 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT /* select_getDrivingOrder : 승무지시 화면용 */ k.route_nm,k.seq,k.CAR_REGNO
		,	listagg(k.emp_nm,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as empNm
		,	listagg(k.PHONE_NO,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as PHONE
		,	listagg(k.value,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as spGb
		,	' ' as empNm_am
		,	' ' as empNm_pm
		,	' ' as phone_am
		,	' ' as phone_pm
		,	' ' as spgb_am
		,	' ' as spgb_pm
	FROM (
	SELECT	a.route_nm,
			a.CAR_REGNO ,
			a.EMP_NM ,
			b.PHONE_NO ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,
			CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a JOIN TBL_EMPLOYEEINFO b ON a.company_no = b.COMPANY_NO AND a.emp_nm = b.EMP_NM 
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT a.route_nm,
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			nvl(c.PHONE_NO,'-') AS phone_no ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		
			CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON
			a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
			AND b.d2 <> ''
			AND a.d2 LIKE b.d2 || '%'
		LEFT OUTER JOIN TBL_EMPLOYEEINFO c ON b.company_no = c.COMPANY_NO AND b.emp_nm = c.EMP_NM
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%'	OR a.d2 LIKE '%@%')
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.route_nm,k.seq,k.CAR_REGNO
 {executed in 21 msec}
2023-06-25 16:17:13.826 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
73. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 16:17:13.827 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
73. SELECT ROUTE_NM  FROM TBL_ROUTEINFO ORDER BY 1
 {executed in 1 msec}
2023-06-25 16:17:16.432 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@7274ecc
2023-06-25 16:17:16.433 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
73. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 16:17:16.444 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
73. SELECT /* select_getDrivingOrder : 승무지시 화면용 */ k.route_nm,k.seq,k.CAR_REGNO
		,	listagg(k.emp_nm,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as empNm
		,	listagg(k.PHONE_NO,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as PHONE
		,	listagg(k.value,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as spGb
		,	' ' as empNm_am
		,	' ' as empNm_pm
		,	' ' as phone_am
		,	' ' as phone_pm
		,	' ' as spgb_am
		,	' ' as spgb_pm
	FROM (
	SELECT	a.route_nm,
			a.CAR_REGNO ,
			a.EMP_NM ,
			b.PHONE_NO ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,
			CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a JOIN TBL_EMPLOYEEINFO b ON a.company_no = b.COMPANY_NO AND a.emp_nm = b.EMP_NM 
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT a.route_nm,
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			nvl(c.PHONE_NO,'-') AS phone_no ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		
			CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON
			a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
			AND b.d2 <> ''
			AND a.d2 LIKE b.d2 || '%'
		LEFT OUTER JOIN TBL_EMPLOYEEINFO c ON b.company_no = c.COMPANY_NO AND b.emp_nm = c.EMP_NM
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%'	OR a.d2 LIKE '%@%')
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.route_nm,k.seq,k.CAR_REGNO
 {executed in 9 msec}
2023-06-25 16:17:31.954 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@e00ae152
2023-06-25 16:17:31.955 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
81. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 16:17:31.966 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDrivingOrder : 승무지시 화면용 */ k.route_nm,k.seq,k.CAR_REGNO
		,	listagg(k.emp_nm,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as empNm
		,	listagg(k.PHONE_NO,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as PHONE
		,	listagg(k.value,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as spGb
		,	' ' as empNm_am
		,	' ' as empNm_pm
		,	' ' as phone_am
		,	' ' as phone_pm
		,	' ' as spgb_am
		,	' ' as spgb_pm
	FROM (
	SELECT	a.route_nm,
			a.CAR_REGNO ,
			a.EMP_NM ,
			b.PHONE_NO ,
			'-' AS value,
			REGEXP_REPLACE(a.d4, '[*0-9@]', '') AS ampm,
			CONVERT(REGEXP_REPLACE(a.d4, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a JOIN TBL_EMPLOYEEINFO b ON a.company_no = b.COMPANY_NO AND a.emp_nm = b.EMP_NM 
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d4 NOT LIKE '%*%'
			AND a.d4 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT a.route_nm,
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			nvl(c.PHONE_NO,'-') AS phone_no ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d4, '[*0-9@-]', '') AS ampm,		
			CONVERT(REGEXP_REPLACE(a.d4, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON
			a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
			AND b.d4 <> ''
			AND a.d4 LIKE b.d4 || '%'
		LEFT OUTER JOIN TBL_EMPLOYEEINFO c ON b.company_no = c.COMPANY_NO AND b.emp_nm = c.EMP_NM
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d4 LIKE '%*%'	OR a.d4 LIKE '%@%')
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.route_nm,k.seq,k.CAR_REGNO
 {executed in 10 msec}
2023-06-25 16:17:42.714 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
81. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 16:17:42.717 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-04') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-04'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-04' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 1 msec}
2023-06-25 16:17:42.720 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfo : excel 승무지시서 rawdata 용 */
			SUBSTRING('2023-05-04',1,4) || '년' || SUBSTRING('2023-05-04',6,2) || '월' || SUBSTRING('2023-05-04',9,2) ||'일 '
					|| decode(DAY_OF_WEEK('2023-05-04') ,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') || '요일' as baseYmd
		,	RIGHT(k.car_regno,4) as car_regno
		,	max(decode(k.ampm,'a',k.emp_nm,'') ) AS am_nm
		,	max(decode(k.ampm,'p',k.emp_nm)) AS pm_nm
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d4, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d4, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d4 NOT LIKE '%*%'
			AND a.d4 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d4, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d4, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d4 <> ''
		    AND a.d4 LIKE b.d4 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d4 LIKE '%*%' OR a.d4 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 16:17:42.723 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfo : excel 승무지시서 rawdata 용 */
			SUBSTRING('2023-05-04',1,4) || '년' || SUBSTRING('2023-05-04',6,2) || '월' || SUBSTRING('2023-05-04',9,2) ||'일 '
					|| decode(DAY_OF_WEEK('2023-05-04') ,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') || '요일' as baseYmd
		,	RIGHT(k.car_regno,4) as car_regno
		,	max(decode(k.ampm,'a',k.emp_nm,'') ) AS am_nm
		,	max(decode(k.ampm,'p',k.emp_nm)) AS pm_nm
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d4, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d4, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d4 NOT LIKE '%*%'
			AND a.d4 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d4, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d4, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d4 <> ''
		    AND a.d4 LIKE b.d4 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d4 LIKE '%*%' OR a.d4 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 16:17:43.726 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
81. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 16:17:43.729 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfo : excel 승무지시서 rawdata 용 */
			SUBSTRING('2023-05-04',1,4) || '년' || SUBSTRING('2023-05-04',6,2) || '월' || SUBSTRING('2023-05-04',9,2) ||'일 '
					|| decode(DAY_OF_WEEK('2023-05-04') ,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') || '요일' as baseYmd
		,	RIGHT(k.car_regno,4) as car_regno
		,	max(decode(k.ampm,'a',k.emp_nm,'') ) AS am_nm
		,	max(decode(k.ampm,'p',k.emp_nm)) AS pm_nm
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d4, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d4, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d4 NOT LIKE '%*%'
			AND a.d4 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d4, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d4, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d4 <> ''
		    AND a.d4 LIKE b.d4 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d4 LIKE '%*%' OR a.d4 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 16:17:43.949 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfo : excel 승무지시서 rawdata 용 */
			SUBSTRING('2023-05-04',1,4) || '년' || SUBSTRING('2023-05-04',6,2) || '월' || SUBSTRING('2023-05-04',9,2) ||'일 '
					|| decode(DAY_OF_WEEK('2023-05-04') ,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') || '요일' as baseYmd
		,	RIGHT(k.car_regno,4) as car_regno
		,	max(decode(k.ampm,'a',k.emp_nm,'') ) AS am_nm
		,	max(decode(k.ampm,'p',k.emp_nm)) AS pm_nm
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d4, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d4, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d4 NOT LIKE '%*%'
			AND a.d4 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d4, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d4, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d4 <> ''
		    AND a.d4 LIKE b.d4 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d4 LIKE '%*%' OR a.d4 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 16:17:44.113 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfo : excel 승무지시서 rawdata 용 */
			SUBSTRING('2023-05-04',1,4) || '년' || SUBSTRING('2023-05-04',6,2) || '월' || SUBSTRING('2023-05-04',9,2) ||'일 '
					|| decode(DAY_OF_WEEK('2023-05-04') ,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') || '요일' as baseYmd
		,	RIGHT(k.car_regno,4) as car_regno
		,	max(decode(k.ampm,'a',k.emp_nm,'') ) AS am_nm
		,	max(decode(k.ampm,'p',k.emp_nm)) AS pm_nm
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d4, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d4, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d4 NOT LIKE '%*%'
			AND a.d4 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d4, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d4, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d4 <> ''
		    AND a.d4 LIKE b.d4 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d4 LIKE '%*%' OR a.d4 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 16:17:44.293 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfo : excel 승무지시서 rawdata 용 */
			SUBSTRING('2023-05-04',1,4) || '년' || SUBSTRING('2023-05-04',6,2) || '월' || SUBSTRING('2023-05-04',9,2) ||'일 '
					|| decode(DAY_OF_WEEK('2023-05-04') ,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') || '요일' as baseYmd
		,	RIGHT(k.car_regno,4) as car_regno
		,	max(decode(k.ampm,'a',k.emp_nm,'') ) AS am_nm
		,	max(decode(k.ampm,'p',k.emp_nm)) AS pm_nm
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d4, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d4, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d4 NOT LIKE '%*%'
			AND a.d4 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d4, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d4, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d4 <> ''
		    AND a.d4 LIKE b.d4 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d4 LIKE '%*%' OR a.d4 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 16:19:22.795 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
81. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 16:19:22.796 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
81. SELECT ROUTE_NM  FROM TBL_ROUTEINFO ORDER BY 1
 {executed in 1 msec}
2023-06-25 16:19:25.826 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@7274ecc
2023-06-25 16:19:25.827 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
81. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 16:19:25.838 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDrivingOrder : 승무지시 화면용 */ k.route_nm,k.seq,k.CAR_REGNO
		,	listagg(k.emp_nm,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as empNm
		,	listagg(k.PHONE_NO,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as PHONE
		,	listagg(k.value,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as spGb
		,	' ' as empNm_am
		,	' ' as empNm_pm
		,	' ' as phone_am
		,	' ' as phone_pm
		,	' ' as spgb_am
		,	' ' as spgb_pm
	FROM (
	SELECT	a.route_nm,
			a.CAR_REGNO ,
			a.EMP_NM ,
			b.PHONE_NO ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,
			CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a JOIN TBL_EMPLOYEEINFO b ON a.company_no = b.COMPANY_NO AND a.emp_nm = b.EMP_NM 
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT a.route_nm,
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			nvl(c.PHONE_NO,'-') AS phone_no ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		
			CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON
			a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
			AND b.d2 <> ''
			AND a.d2 LIKE b.d2 || '%'
		LEFT OUTER JOIN TBL_EMPLOYEEINFO c ON b.company_no = c.COMPANY_NO AND b.emp_nm = c.EMP_NM
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%'	OR a.d2 LIKE '%@%')
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.route_nm,k.seq,k.CAR_REGNO
 {executed in 9 msec}
2023-06-25 16:19:50.238 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
81. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 16:19:50.239 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
81. SELECT ROUTE_NM  FROM TBL_ROUTEINFO ORDER BY 1
 {executed in 0 msec}
2023-06-25 16:19:52.815 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@15993529
2023-06-25 16:19:52.816 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
81. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 16:19:52.827 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDrivingOrder : 승무지시 화면용 */ k.route_nm,k.seq,k.CAR_REGNO
		,	listagg(k.emp_nm,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as empNm
		,	listagg(k.PHONE_NO,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as PHONE
		,	listagg(k.value,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as spGb
		,	' ' as empNm_am
		,	' ' as empNm_pm
		,	' ' as phone_am
		,	' ' as phone_pm
		,	' ' as spgb_am
		,	' ' as spgb_pm
	FROM (
	SELECT	a.route_nm,
			a.CAR_REGNO ,
			a.EMP_NM ,
			b.PHONE_NO ,
			'-' AS value,
			REGEXP_REPLACE(a.d9, '[*0-9@]', '') AS ampm,
			CONVERT(REGEXP_REPLACE(a.d9, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a JOIN TBL_EMPLOYEEINFO b ON a.company_no = b.COMPANY_NO AND a.emp_nm = b.EMP_NM 
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d9 NOT LIKE '%*%'
			AND a.d9 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT a.route_nm,
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			nvl(c.PHONE_NO,'-') AS phone_no ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d9, '[*0-9@-]', '') AS ampm,		
			CONVERT(REGEXP_REPLACE(a.d9, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON
			a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
			AND b.d9 <> ''
			AND a.d9 LIKE b.d9 || '%'
		LEFT OUTER JOIN TBL_EMPLOYEEINFO c ON b.company_no = c.COMPANY_NO AND b.emp_nm = c.EMP_NM
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d9 LIKE '%*%'	OR a.d9 LIKE '%@%')
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.route_nm,k.seq,k.CAR_REGNO
 {executed in 9 msec}
2023-06-25 16:20:01.254 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@4764dfb8
2023-06-25 16:20:01.255 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
81. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 16:20:01.266 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDrivingOrder : 승무지시 화면용 */ k.route_nm,k.seq,k.CAR_REGNO
		,	listagg(k.emp_nm,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as empNm
		,	listagg(k.PHONE_NO,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as PHONE
		,	listagg(k.value,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as spGb
		,	' ' as empNm_am
		,	' ' as empNm_pm
		,	' ' as phone_am
		,	' ' as phone_pm
		,	' ' as spgb_am
		,	' ' as spgb_pm
	FROM (
	SELECT	a.route_nm,
			a.CAR_REGNO ,
			a.EMP_NM ,
			b.PHONE_NO ,
			'-' AS value,
			REGEXP_REPLACE(a.d9, '[*0-9@]', '') AS ampm,
			CONVERT(REGEXP_REPLACE(a.d9, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a JOIN TBL_EMPLOYEEINFO b ON a.company_no = b.COMPANY_NO AND a.emp_nm = b.EMP_NM 
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d9 NOT LIKE '%*%'
			AND a.d9 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT a.route_nm,
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			nvl(c.PHONE_NO,'-') AS phone_no ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d9, '[*0-9@-]', '') AS ampm,		
			CONVERT(REGEXP_REPLACE(a.d9, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON
			a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
			AND b.d9 <> ''
			AND a.d9 LIKE b.d9 || '%'
		LEFT OUTER JOIN TBL_EMPLOYEEINFO c ON b.company_no = c.COMPANY_NO AND b.emp_nm = c.EMP_NM
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d9 LIKE '%*%'	OR a.d9 LIKE '%@%')
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.route_nm,k.seq,k.CAR_REGNO
 {executed in 10 msec}
2023-06-25 16:20:04.314 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@38f2f95b
2023-06-25 16:20:04.315 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
81. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 16:20:04.327 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDrivingOrder : 승무지시 화면용 */ k.route_nm,k.seq,k.CAR_REGNO
		,	listagg(k.emp_nm,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as empNm
		,	listagg(k.PHONE_NO,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as PHONE
		,	listagg(k.value,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as spGb
		,	' ' as empNm_am
		,	' ' as empNm_pm
		,	' ' as phone_am
		,	' ' as phone_pm
		,	' ' as spgb_am
		,	' ' as spgb_pm
	FROM (
	SELECT	a.route_nm,
			a.CAR_REGNO ,
			a.EMP_NM ,
			b.PHONE_NO ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,
			CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a JOIN TBL_EMPLOYEEINFO b ON a.company_no = b.COMPANY_NO AND a.emp_nm = b.EMP_NM 
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT a.route_nm,
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			nvl(c.PHONE_NO,'-') AS phone_no ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		
			CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON
			a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
			AND b.d2 <> ''
			AND a.d2 LIKE b.d2 || '%'
		LEFT OUTER JOIN TBL_EMPLOYEEINFO c ON b.company_no = c.COMPANY_NO AND b.emp_nm = c.EMP_NM
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%'	OR a.d2 LIKE '%@%')
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.route_nm,k.seq,k.CAR_REGNO
 {executed in 11 msec}
2023-06-25 16:20:07.047 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@ddfa9bd7
2023-06-25 16:20:07.048 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
81. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 16:20:07.059 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDrivingOrder : 승무지시 화면용 */ k.route_nm,k.seq,k.CAR_REGNO
		,	listagg(k.emp_nm,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as empNm
		,	listagg(k.PHONE_NO,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as PHONE
		,	listagg(k.value,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as spGb
		,	' ' as empNm_am
		,	' ' as empNm_pm
		,	' ' as phone_am
		,	' ' as phone_pm
		,	' ' as spgb_am
		,	' ' as spgb_pm
	FROM (
	SELECT	a.route_nm,
			a.CAR_REGNO ,
			a.EMP_NM ,
			b.PHONE_NO ,
			'-' AS value,
			REGEXP_REPLACE(a.d3, '[*0-9@]', '') AS ampm,
			CONVERT(REGEXP_REPLACE(a.d3, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a JOIN TBL_EMPLOYEEINFO b ON a.company_no = b.COMPANY_NO AND a.emp_nm = b.EMP_NM 
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d3 NOT LIKE '%*%'
			AND a.d3 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT a.route_nm,
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			nvl(c.PHONE_NO,'-') AS phone_no ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d3, '[*0-9@-]', '') AS ampm,		
			CONVERT(REGEXP_REPLACE(a.d3, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON
			a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
			AND b.d3 <> ''
			AND a.d3 LIKE b.d3 || '%'
		LEFT OUTER JOIN TBL_EMPLOYEEINFO c ON b.company_no = c.COMPANY_NO AND b.emp_nm = c.EMP_NM
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d3 LIKE '%*%'	OR a.d3 LIKE '%@%')
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.route_nm,k.seq,k.CAR_REGNO
 {executed in 9 msec}
2023-06-25 16:20:09.151 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@c8c2f89b
2023-06-25 16:20:09.153 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
81. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 16:20:09.165 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDrivingOrder : 승무지시 화면용 */ k.route_nm,k.seq,k.CAR_REGNO
		,	listagg(k.emp_nm,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as empNm
		,	listagg(k.PHONE_NO,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as PHONE
		,	listagg(k.value,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as spGb
		,	' ' as empNm_am
		,	' ' as empNm_pm
		,	' ' as phone_am
		,	' ' as phone_pm
		,	' ' as spgb_am
		,	' ' as spgb_pm
	FROM (
	SELECT	a.route_nm,
			a.CAR_REGNO ,
			a.EMP_NM ,
			b.PHONE_NO ,
			'-' AS value,
			REGEXP_REPLACE(a.d4, '[*0-9@]', '') AS ampm,
			CONVERT(REGEXP_REPLACE(a.d4, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a JOIN TBL_EMPLOYEEINFO b ON a.company_no = b.COMPANY_NO AND a.emp_nm = b.EMP_NM 
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d4 NOT LIKE '%*%'
			AND a.d4 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT a.route_nm,
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			nvl(c.PHONE_NO,'-') AS phone_no ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d4, '[*0-9@-]', '') AS ampm,		
			CONVERT(REGEXP_REPLACE(a.d4, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON
			a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
			AND b.d4 <> ''
			AND a.d4 LIKE b.d4 || '%'
		LEFT OUTER JOIN TBL_EMPLOYEEINFO c ON b.company_no = c.COMPANY_NO AND b.emp_nm = c.EMP_NM
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d4 LIKE '%*%'	OR a.d4 LIKE '%@%')
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.route_nm,k.seq,k.CAR_REGNO
 {executed in 11 msec}
2023-06-25 16:20:13.450 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@b38b555f
2023-06-25 16:20:13.451 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
81. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 16:20:13.463 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDrivingOrder : 승무지시 화면용 */ k.route_nm,k.seq,k.CAR_REGNO
		,	listagg(k.emp_nm,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as empNm
		,	listagg(k.PHONE_NO,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as PHONE
		,	listagg(k.value,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as spGb
		,	' ' as empNm_am
		,	' ' as empNm_pm
		,	' ' as phone_am
		,	' ' as phone_pm
		,	' ' as spgb_am
		,	' ' as spgb_pm
	FROM (
	SELECT	a.route_nm,
			a.CAR_REGNO ,
			a.EMP_NM ,
			b.PHONE_NO ,
			'-' AS value,
			REGEXP_REPLACE(a.d5, '[*0-9@]', '') AS ampm,
			CONVERT(REGEXP_REPLACE(a.d5, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a JOIN TBL_EMPLOYEEINFO b ON a.company_no = b.COMPANY_NO AND a.emp_nm = b.EMP_NM 
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d5 NOT LIKE '%*%'
			AND a.d5 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT a.route_nm,
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			nvl(c.PHONE_NO,'-') AS phone_no ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d5, '[*0-9@-]', '') AS ampm,		
			CONVERT(REGEXP_REPLACE(a.d5, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON
			a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
			AND b.d5 <> ''
			AND a.d5 LIKE b.d5 || '%'
		LEFT OUTER JOIN TBL_EMPLOYEEINFO c ON b.company_no = c.COMPANY_NO AND b.emp_nm = c.EMP_NM
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d5 LIKE '%*%'	OR a.d5 LIKE '%@%')
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.route_nm,k.seq,k.CAR_REGNO
 {executed in 11 msec}
2023-06-25 16:20:15.555 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@a2743d19
2023-06-25 16:20:15.556 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
81. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 16:20:15.567 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDrivingOrder : 승무지시 화면용 */ k.route_nm,k.seq,k.CAR_REGNO
		,	listagg(k.emp_nm,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as empNm
		,	listagg(k.PHONE_NO,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as PHONE
		,	listagg(k.value,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as spGb
		,	' ' as empNm_am
		,	' ' as empNm_pm
		,	' ' as phone_am
		,	' ' as phone_pm
		,	' ' as spgb_am
		,	' ' as spgb_pm
	FROM (
	SELECT	a.route_nm,
			a.CAR_REGNO ,
			a.EMP_NM ,
			b.PHONE_NO ,
			'-' AS value,
			REGEXP_REPLACE(a.d8, '[*0-9@]', '') AS ampm,
			CONVERT(REGEXP_REPLACE(a.d8, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a JOIN TBL_EMPLOYEEINFO b ON a.company_no = b.COMPANY_NO AND a.emp_nm = b.EMP_NM 
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d8 NOT LIKE '%*%'
			AND a.d8 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT a.route_nm,
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			nvl(c.PHONE_NO,'-') AS phone_no ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d8, '[*0-9@-]', '') AS ampm,		
			CONVERT(REGEXP_REPLACE(a.d8, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON
			a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
			AND b.d8 <> ''
			AND a.d8 LIKE b.d8 || '%'
		LEFT OUTER JOIN TBL_EMPLOYEEINFO c ON b.company_no = c.COMPANY_NO AND b.emp_nm = c.EMP_NM
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d8 LIKE '%*%'	OR a.d8 LIKE '%@%')
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.route_nm,k.seq,k.CAR_REGNO
 {executed in 10 msec}
2023-06-25 16:20:17.499 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@5eacc86f
2023-06-25 16:20:17.500 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
81. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 16:20:17.511 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDrivingOrder : 승무지시 화면용 */ k.route_nm,k.seq,k.CAR_REGNO
		,	listagg(k.emp_nm,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as empNm
		,	listagg(k.PHONE_NO,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as PHONE
		,	listagg(k.value,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as spGb
		,	' ' as empNm_am
		,	' ' as empNm_pm
		,	' ' as phone_am
		,	' ' as phone_pm
		,	' ' as spgb_am
		,	' ' as spgb_pm
	FROM (
	SELECT	a.route_nm,
			a.CAR_REGNO ,
			a.EMP_NM ,
			b.PHONE_NO ,
			'-' AS value,
			REGEXP_REPLACE(a.d9, '[*0-9@]', '') AS ampm,
			CONVERT(REGEXP_REPLACE(a.d9, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a JOIN TBL_EMPLOYEEINFO b ON a.company_no = b.COMPANY_NO AND a.emp_nm = b.EMP_NM 
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d9 NOT LIKE '%*%'
			AND a.d9 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT a.route_nm,
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			nvl(c.PHONE_NO,'-') AS phone_no ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d9, '[*0-9@-]', '') AS ampm,		
			CONVERT(REGEXP_REPLACE(a.d9, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON
			a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
			AND b.d9 <> ''
			AND a.d9 LIKE b.d9 || '%'
		LEFT OUTER JOIN TBL_EMPLOYEEINFO c ON b.company_no = c.COMPANY_NO AND b.emp_nm = c.EMP_NM
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d9 LIKE '%*%'	OR a.d9 LIKE '%@%')
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.route_nm,k.seq,k.CAR_REGNO
 {executed in 10 msec}
2023-06-25 16:20:19.336 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1a77a6d2
2023-06-25 16:20:19.337 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
81. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 16:20:19.348 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDrivingOrder : 승무지시 화면용 */ k.route_nm,k.seq,k.CAR_REGNO
		,	listagg(k.emp_nm,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as empNm
		,	listagg(k.PHONE_NO,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as PHONE
		,	listagg(k.value,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as spGb
		,	' ' as empNm_am
		,	' ' as empNm_pm
		,	' ' as phone_am
		,	' ' as phone_pm
		,	' ' as spgb_am
		,	' ' as spgb_pm
	FROM (
	SELECT	a.route_nm,
			a.CAR_REGNO ,
			a.EMP_NM ,
			b.PHONE_NO ,
			'-' AS value,
			REGEXP_REPLACE(a.d10, '[*0-9@]', '') AS ampm,
			CONVERT(REGEXP_REPLACE(a.d10, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a JOIN TBL_EMPLOYEEINFO b ON a.company_no = b.COMPANY_NO AND a.emp_nm = b.EMP_NM 
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d10 NOT LIKE '%*%'
			AND a.d10 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT a.route_nm,
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			nvl(c.PHONE_NO,'-') AS phone_no ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d10, '[*0-9@-]', '') AS ampm,		
			CONVERT(REGEXP_REPLACE(a.d10, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON
			a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
			AND b.d10 <> ''
			AND a.d10 LIKE b.d10 || '%'
		LEFT OUTER JOIN TBL_EMPLOYEEINFO c ON b.company_no = c.COMPANY_NO AND b.emp_nm = c.EMP_NM
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d10 LIKE '%*%'	OR a.d10 LIKE '%@%')
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.route_nm,k.seq,k.CAR_REGNO
 {executed in 9 msec}
2023-06-25 16:20:21.408 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1c59ec93
2023-06-25 16:20:21.409 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
81. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 16:20:21.420 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDrivingOrder : 승무지시 화면용 */ k.route_nm,k.seq,k.CAR_REGNO
		,	listagg(k.emp_nm,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as empNm
		,	listagg(k.PHONE_NO,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as PHONE
		,	listagg(k.value,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as spGb
		,	' ' as empNm_am
		,	' ' as empNm_pm
		,	' ' as phone_am
		,	' ' as phone_pm
		,	' ' as spgb_am
		,	' ' as spgb_pm
	FROM (
	SELECT	a.route_nm,
			a.CAR_REGNO ,
			a.EMP_NM ,
			b.PHONE_NO ,
			'-' AS value,
			REGEXP_REPLACE(a.d11, '[*0-9@]', '') AS ampm,
			CONVERT(REGEXP_REPLACE(a.d11, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a JOIN TBL_EMPLOYEEINFO b ON a.company_no = b.COMPANY_NO AND a.emp_nm = b.EMP_NM 
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d11 NOT LIKE '%*%'
			AND a.d11 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT a.route_nm,
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			nvl(c.PHONE_NO,'-') AS phone_no ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d11, '[*0-9@-]', '') AS ampm,		
			CONVERT(REGEXP_REPLACE(a.d11, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON
			a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
			AND b.d11 <> ''
			AND a.d11 LIKE b.d11 || '%'
		LEFT OUTER JOIN TBL_EMPLOYEEINFO c ON b.company_no = c.COMPANY_NO AND b.emp_nm = c.EMP_NM
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d11 LIKE '%*%'	OR a.d11 LIKE '%@%')
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.route_nm,k.seq,k.CAR_REGNO
 {executed in 9 msec}
2023-06-25 16:20:23.268 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@7224957
2023-06-25 16:20:23.269 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
81. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 16:20:23.280 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDrivingOrder : 승무지시 화면용 */ k.route_nm,k.seq,k.CAR_REGNO
		,	listagg(k.emp_nm,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as empNm
		,	listagg(k.PHONE_NO,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as PHONE
		,	listagg(k.value,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as spGb
		,	' ' as empNm_am
		,	' ' as empNm_pm
		,	' ' as phone_am
		,	' ' as phone_pm
		,	' ' as spgb_am
		,	' ' as spgb_pm
	FROM (
	SELECT	a.route_nm,
			a.CAR_REGNO ,
			a.EMP_NM ,
			b.PHONE_NO ,
			'-' AS value,
			REGEXP_REPLACE(a.d12, '[*0-9@]', '') AS ampm,
			CONVERT(REGEXP_REPLACE(a.d12, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a JOIN TBL_EMPLOYEEINFO b ON a.company_no = b.COMPANY_NO AND a.emp_nm = b.EMP_NM 
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d12 NOT LIKE '%*%'
			AND a.d12 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT a.route_nm,
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			nvl(c.PHONE_NO,'-') AS phone_no ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d12, '[*0-9@-]', '') AS ampm,		
			CONVERT(REGEXP_REPLACE(a.d12, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON
			a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
			AND b.d12 <> ''
			AND a.d12 LIKE b.d12 || '%'
		LEFT OUTER JOIN TBL_EMPLOYEEINFO c ON b.company_no = c.COMPANY_NO AND b.emp_nm = c.EMP_NM
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d12 LIKE '%*%'	OR a.d12 LIKE '%@%')
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.route_nm,k.seq,k.CAR_REGNO
 {executed in 10 msec}
2023-06-25 16:20:25.411 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@f60b3111
2023-06-25 16:20:25.412 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
81. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 16:20:25.423 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDrivingOrder : 승무지시 화면용 */ k.route_nm,k.seq,k.CAR_REGNO
		,	listagg(k.emp_nm,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as empNm
		,	listagg(k.PHONE_NO,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as PHONE
		,	listagg(k.value,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as spGb
		,	' ' as empNm_am
		,	' ' as empNm_pm
		,	' ' as phone_am
		,	' ' as phone_pm
		,	' ' as spgb_am
		,	' ' as spgb_pm
	FROM (
	SELECT	a.route_nm,
			a.CAR_REGNO ,
			a.EMP_NM ,
			b.PHONE_NO ,
			'-' AS value,
			REGEXP_REPLACE(a.d15, '[*0-9@]', '') AS ampm,
			CONVERT(REGEXP_REPLACE(a.d15, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a JOIN TBL_EMPLOYEEINFO b ON a.company_no = b.COMPANY_NO AND a.emp_nm = b.EMP_NM 
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d15 NOT LIKE '%*%'
			AND a.d15 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT a.route_nm,
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			nvl(c.PHONE_NO,'-') AS phone_no ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d15, '[*0-9@-]', '') AS ampm,		
			CONVERT(REGEXP_REPLACE(a.d15, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON
			a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
			AND b.d15 <> ''
			AND a.d15 LIKE b.d15 || '%'
		LEFT OUTER JOIN TBL_EMPLOYEEINFO c ON b.company_no = c.COMPANY_NO AND b.emp_nm = c.EMP_NM
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d15 LIKE '%*%'	OR a.d15 LIKE '%@%')
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.route_nm,k.seq,k.CAR_REGNO
 {executed in 10 msec}
2023-06-25 16:20:27.282 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@b243bc67
2023-06-25 16:20:27.283 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
81. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 16:20:27.298 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDrivingOrder : 승무지시 화면용 */ k.route_nm,k.seq,k.CAR_REGNO
		,	listagg(k.emp_nm,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as empNm
		,	listagg(k.PHONE_NO,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as PHONE
		,	listagg(k.value,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as spGb
		,	' ' as empNm_am
		,	' ' as empNm_pm
		,	' ' as phone_am
		,	' ' as phone_pm
		,	' ' as spgb_am
		,	' ' as spgb_pm
	FROM (
	SELECT	a.route_nm,
			a.CAR_REGNO ,
			a.EMP_NM ,
			b.PHONE_NO ,
			'-' AS value,
			REGEXP_REPLACE(a.d16, '[*0-9@]', '') AS ampm,
			CONVERT(REGEXP_REPLACE(a.d16, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a JOIN TBL_EMPLOYEEINFO b ON a.company_no = b.COMPANY_NO AND a.emp_nm = b.EMP_NM 
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d16 NOT LIKE '%*%'
			AND a.d16 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT a.route_nm,
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			nvl(c.PHONE_NO,'-') AS phone_no ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d16, '[*0-9@-]', '') AS ampm,		
			CONVERT(REGEXP_REPLACE(a.d16, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON
			a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
			AND b.d16 <> ''
			AND a.d16 LIKE b.d16 || '%'
		LEFT OUTER JOIN TBL_EMPLOYEEINFO c ON b.company_no = c.COMPANY_NO AND b.emp_nm = c.EMP_NM
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d16 LIKE '%*%'	OR a.d16 LIKE '%@%')
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.route_nm,k.seq,k.CAR_REGNO
 {executed in 13 msec}
2023-06-25 16:20:29.080 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@9d0c192b
2023-06-25 16:20:29.082 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
81. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 16:20:29.094 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDrivingOrder : 승무지시 화면용 */ k.route_nm,k.seq,k.CAR_REGNO
		,	listagg(k.emp_nm,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as empNm
		,	listagg(k.PHONE_NO,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as PHONE
		,	listagg(k.value,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as spGb
		,	' ' as empNm_am
		,	' ' as empNm_pm
		,	' ' as phone_am
		,	' ' as phone_pm
		,	' ' as spgb_am
		,	' ' as spgb_pm
	FROM (
	SELECT	a.route_nm,
			a.CAR_REGNO ,
			a.EMP_NM ,
			b.PHONE_NO ,
			'-' AS value,
			REGEXP_REPLACE(a.d17, '[*0-9@]', '') AS ampm,
			CONVERT(REGEXP_REPLACE(a.d17, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a JOIN TBL_EMPLOYEEINFO b ON a.company_no = b.COMPANY_NO AND a.emp_nm = b.EMP_NM 
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d17 NOT LIKE '%*%'
			AND a.d17 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT a.route_nm,
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			nvl(c.PHONE_NO,'-') AS phone_no ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d17, '[*0-9@-]', '') AS ampm,		
			CONVERT(REGEXP_REPLACE(a.d17, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON
			a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
			AND b.d17 <> ''
			AND a.d17 LIKE b.d17 || '%'
		LEFT OUTER JOIN TBL_EMPLOYEEINFO c ON b.company_no = c.COMPANY_NO AND b.emp_nm = c.EMP_NM
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d17 LIKE '%*%'	OR a.d17 LIKE '%@%')
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.route_nm,k.seq,k.CAR_REGNO
 {executed in 11 msec}
2023-06-25 16:20:30.820 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@87d475ef
2023-06-25 16:20:30.821 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
81. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 16:20:30.835 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDrivingOrder : 승무지시 화면용 */ k.route_nm,k.seq,k.CAR_REGNO
		,	listagg(k.emp_nm,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as empNm
		,	listagg(k.PHONE_NO,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as PHONE
		,	listagg(k.value,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as spGb
		,	' ' as empNm_am
		,	' ' as empNm_pm
		,	' ' as phone_am
		,	' ' as phone_pm
		,	' ' as spgb_am
		,	' ' as spgb_pm
	FROM (
	SELECT	a.route_nm,
			a.CAR_REGNO ,
			a.EMP_NM ,
			b.PHONE_NO ,
			'-' AS value,
			REGEXP_REPLACE(a.d18, '[*0-9@]', '') AS ampm,
			CONVERT(REGEXP_REPLACE(a.d18, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a JOIN TBL_EMPLOYEEINFO b ON a.company_no = b.COMPANY_NO AND a.emp_nm = b.EMP_NM 
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d18 NOT LIKE '%*%'
			AND a.d18 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT a.route_nm,
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			nvl(c.PHONE_NO,'-') AS phone_no ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d18, '[*0-9@-]', '') AS ampm,		
			CONVERT(REGEXP_REPLACE(a.d18, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON
			a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
			AND b.d18 <> ''
			AND a.d18 LIKE b.d18 || '%'
		LEFT OUTER JOIN TBL_EMPLOYEEINFO c ON b.company_no = c.COMPANY_NO AND b.emp_nm = c.EMP_NM
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d18 LIKE '%*%'	OR a.d18 LIKE '%@%')
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.route_nm,k.seq,k.CAR_REGNO
 {executed in 12 msec}
2023-06-25 16:20:33.642 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@729cd2b3
2023-06-25 16:20:33.643 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
81. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 16:20:33.656 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDrivingOrder : 승무지시 화면용 */ k.route_nm,k.seq,k.CAR_REGNO
		,	listagg(k.emp_nm,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as empNm
		,	listagg(k.PHONE_NO,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as PHONE
		,	listagg(k.value,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as spGb
		,	' ' as empNm_am
		,	' ' as empNm_pm
		,	' ' as phone_am
		,	' ' as phone_pm
		,	' ' as spgb_am
		,	' ' as spgb_pm
	FROM (
	SELECT	a.route_nm,
			a.CAR_REGNO ,
			a.EMP_NM ,
			b.PHONE_NO ,
			'-' AS value,
			REGEXP_REPLACE(a.d19, '[*0-9@]', '') AS ampm,
			CONVERT(REGEXP_REPLACE(a.d19, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a JOIN TBL_EMPLOYEEINFO b ON a.company_no = b.COMPANY_NO AND a.emp_nm = b.EMP_NM 
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d19 NOT LIKE '%*%'
			AND a.d19 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT a.route_nm,
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			nvl(c.PHONE_NO,'-') AS phone_no ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d19, '[*0-9@-]', '') AS ampm,		
			CONVERT(REGEXP_REPLACE(a.d19, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON
			a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
			AND b.d19 <> ''
			AND a.d19 LIKE b.d19 || '%'
		LEFT OUTER JOIN TBL_EMPLOYEEINFO c ON b.company_no = c.COMPANY_NO AND b.emp_nm = c.EMP_NM
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d19 LIKE '%*%'	OR a.d19 LIKE '%@%')
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.route_nm,k.seq,k.CAR_REGNO
 {executed in 11 msec}
2023-06-25 16:27:37.984 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   'N' as bit, a.* from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' and		a.code = '휴가종류' order by a.route_nm
2023-06-25 16:27:37.985 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
81. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 16:27:37.985 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
82. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 16:27:37.986 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
81. SELECT ROUTE_NM  FROM TBL_ROUTEINFO ORDER BY 1
 {executed in 1 msec}
2023-06-25 16:27:37.986 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
82. select   'N' as bit, a.* from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' and		a.code = '휴가종류' order by a.route_nm
 {executed in 1 msec}
2023-06-25 16:27:45.851 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
81. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 16:27:45.852 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
81. SELECT ROUTE_NM  FROM TBL_ROUTEINFO ORDER BY 1
 {executed in 1 msec}
2023-06-25 16:27:48.889 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@7274ecc
2023-06-25 16:27:48.890 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
81. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 16:27:48.901 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDrivingOrder : 승무지시 화면용 */ k.route_nm,k.seq,k.CAR_REGNO
		,	listagg(k.emp_nm,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as empNm
		,	listagg(k.PHONE_NO,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as PHONE
		,	listagg(k.value,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as spGb
		,	' ' as empNm_am
		,	' ' as empNm_pm
		,	' ' as phone_am
		,	' ' as phone_pm
		,	' ' as spgb_am
		,	' ' as spgb_pm
	FROM (
	SELECT	a.route_nm,
			a.CAR_REGNO ,
			a.EMP_NM ,
			b.PHONE_NO ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,
			CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a JOIN TBL_EMPLOYEEINFO b ON a.company_no = b.COMPANY_NO AND a.emp_nm = b.EMP_NM 
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT a.route_nm,
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			nvl(c.PHONE_NO,'-') AS phone_no ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		
			CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON
			a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
			AND b.d2 <> ''
			AND a.d2 LIKE b.d2 || '%'
		LEFT OUTER JOIN TBL_EMPLOYEEINFO c ON b.company_no = c.COMPANY_NO AND b.emp_nm = c.EMP_NM
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%'	OR a.d2 LIKE '%@%')
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.route_nm,k.seq,k.CAR_REGNO
 {executed in 10 msec}
2023-06-25 16:30:12.615 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
81. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 16:30:12.618 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 1 msec}
2023-06-25 16:30:12.621 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 16:30:12.624 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 0 msec}
2023-06-25 16:30:12.626 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 16:30:12.629 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 16:30:12.632 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 16:30:12.635 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 16:30:12.637 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d2 LIKE '%*%' or a.d2 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 2 msec}
2023-06-25 16:30:12.641 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d2 <> '')
		AND (a.d2 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-25 16:31:22.243 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
2023-06-25 16:31:22.244 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
81. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 16:31:22.246 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
81. select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
 {executed in 1 msec}
2023-06-25 16:31:42.801 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
2023-06-25 16:31:42.802 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
81. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 16:31:42.803 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
81. select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
 {executed in 1 msec}
2023-06-25 16:33:03.457 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
81. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 16:33:03.458 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
81. SELECT ROUTE_NM  FROM TBL_ROUTEINFO ORDER BY 1
 {executed in 0 msec}
2023-06-25 16:33:06.147 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
2023-06-25 16:33:06.148 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
81. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 16:33:06.149 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
81. select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
 {executed in 1 msec}
2023-06-25 16:33:34.161 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
81. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 16:33:34.162 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
81. SELECT ROUTE_NM  FROM TBL_ROUTEINFO ORDER BY 1
 {executed in 1 msec}
2023-06-25 16:33:36.216 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
2023-06-25 16:33:36.217 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
81. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 16:33:36.218 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
81. select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
 {executed in 1 msec}
2023-06-25 16:36:43.445 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
83. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 16:36:43.446 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
83. SELECT ROUTE_NM  FROM TBL_ROUTEINFO ORDER BY 1
 {executed in 1 msec}
2023-06-25 16:36:45.014 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
2023-06-25 16:36:45.015 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
83. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 16:36:45.016 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
83. select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
 {executed in 1 msec}
2023-06-25 16:38:11.968 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
2023-06-25 16:38:11.969 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
91. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 16:38:11.970 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
91. select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
 {executed in 1 msec}
2023-06-25 16:38:35.812 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
91. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 16:38:35.813 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
91. SELECT ROUTE_NM  FROM TBL_ROUTEINFO ORDER BY 1
 {executed in 1 msec}
2023-06-25 16:38:37.514 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
2023-06-25 16:38:37.515 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
91. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 16:38:37.516 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
91. select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
 {executed in 1 msec}
2023-06-25 16:39:09.948 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
91. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 16:39:09.949 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
91. SELECT ROUTE_NM  FROM TBL_ROUTEINFO ORDER BY 1
 {executed in 0 msec}
2023-06-25 16:39:10.890 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
2023-06-25 16:39:10.891 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
91. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 16:39:10.892 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
91. select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
 {executed in 0 msec}
2023-06-25 16:40:02.655 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
91. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 16:40:02.656 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
91. SELECT ROUTE_NM  FROM TBL_ROUTEINFO ORDER BY 1
 {executed in 1 msec}
2023-06-25 16:40:04.080 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
2023-06-25 16:40:04.081 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
91. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 16:40:04.083 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
91. select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
 {executed in 1 msec}
2023-06-25 16:41:22.619 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
91. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 16:41:22.620 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
91. SELECT ROUTE_NM  FROM TBL_ROUTEINFO ORDER BY 1
 {executed in 1 msec}
2023-06-25 16:41:23.714 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
2023-06-25 16:41:23.715 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
91. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 16:41:23.716 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
91. select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
 {executed in 0 msec}
2023-06-25 17:12:11.578 WARN  [H2 housekeeper] [com.zaxxer.hikari.pool.HikariPool] - H2 - Thread starvation or clock leap detected (housekeeper delta=29m16s398ms451µs200ns).
2023-06-25 17:14:45.815 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
101. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 17:14:45.816 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
101. SELECT ROUTE_NM  FROM TBL_ROUTEINFO ORDER BY 1
 {executed in 1 msec}
2023-06-25 17:14:46.936 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
2023-06-25 17:14:46.937 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
101. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 17:14:46.939 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
101. select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
 {executed in 1 msec}
2023-06-25 17:15:28.391 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
101. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 17:15:28.392 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
101. SELECT ROUTE_NM  FROM TBL_ROUTEINFO ORDER BY 1
 {executed in 1 msec}
2023-06-25 17:15:29.441 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
2023-06-25 17:15:29.442 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
101. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 17:15:29.442 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
101. select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
 {executed in 0 msec}
2023-06-25 17:15:49.035 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
101. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 17:15:49.036 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
101. SELECT ROUTE_NM  FROM TBL_ROUTEINFO ORDER BY 1
 {executed in 1 msec}
2023-06-25 17:15:53.619 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
2023-06-25 17:15:53.619 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
101. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 17:15:53.620 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
101. select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
 {executed in 0 msec}
2023-06-25 17:17:08.139 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
101. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 17:17:08.140 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
101. SELECT ROUTE_NM  FROM TBL_ROUTEINFO ORDER BY 1
 {executed in 0 msec}
2023-06-25 17:17:08.792 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
2023-06-25 17:17:08.794 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
101. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 17:17:08.795 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
101. select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
 {executed in 0 msec}
2023-06-25 17:19:30.940 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
101. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 17:19:30.944 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
101. WITH weekInfo AS ( /* select_getListRouteDrivingOrder : excel 승무지시 노선별 템플릿 정보 */
		SELECT decode(k.holiday_yn,'Y','공',k.week) AS week_gb
		FROM (
			SELECT CASE DAY_OF_WEEK('2023-05-02') WHEN 1 THEN '공' WHEN 7 THEN '토' ELSE '평' END week
			,	nvl((SELECT HOLIDAY_YN 	FROM 	TBM_HOLIDAY_INFO a 	WHERE 	COMPANY_NO ='100'	AND 	WORK_DATE = '2023-05-02'),'N') AS HOLIDAY_YN 
		) k	
	)
		SELECT 	a.route_nm ,a.start_point || '---' || a.end_point as title
			,	b.*
			,	'(' || '2023-05-02' || '_' || c.week_gb || ')승무지시서_' || '_' || b.file_id || '.xlsx' AS newFileNm
			,	c.week_gb
		FROM TBL_ROUTEINFO a ,tbl_file_info b,weekInfo c
		WHERE a.COMPANY_NO = '100'
		and a.route_nm = decode('','',a.route_nm,'')
		AND a.COMPANY_NO = b.COMPANY_NO
		AND b.file_gb = 'templete' 
		AND a.route_nm = b.FILE_ID
 {executed in 1 msec}
2023-06-25 17:19:30.947 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
101. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 17:19:30.951 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
101. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '5-1번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 17:19:30.954 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
101. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '20번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 17:19:30.959 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
101. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '21번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 17:19:30.962 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
101. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '27번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 2 msec}
2023-06-25 17:19:30.965 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
101. SELECT /* select_getDailyArrangeInfoAll : 일일 전체배차현황표 화면용 */
		'' AS temp1
		,	k.seq as seq1
		,	nvl(max(decode(k.ampm,'a',k.emp_nm,'')),'-') AS am_nm
		,	RIGHT(k.car_regno,4) as car_regno
		,	nvl(max(decode(k.ampm,'p',k.emp_nm)),'-') AS pm_nm
		,	k.seq as seq2
		,'' AS temp2
	FROM (
	SELECT
			a.CAR_REGNO ,
			a.EMP_NM ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		WHERE	a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
		    AND b.d2 <> ''
		    AND a.d2 LIKE b.d2 || '%'
		WHERE a.company_no = '100'
			AND a.route_nm = '38번'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%' OR a.d2 LIKE '%@%') 
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.car_regno,k.seq
	ORDER BY k.seq
 {executed in 1 msec}
2023-06-25 17:19:30.967 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
101. SELECT	/* select_getDailyOffList : 노선별 휴가자 */
			a.route_nm
		,	listagg(a.EMP_NM ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO NOT LIKE 'SP%'
		AND (a.d2 LIKE '%*%' or a.d2 LIKE '%@%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
		GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-25 17:19:30.969 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
101. SELECT	/* select_getDailyOtherSPList : 노선별 타노선 근무자 */
			a.ROUTE_NM 
		,	listagg(a.EMP_NM||a.CAR_REGNO ,',') WITHIN GROUP (ORDER BY a.PREV_DAILY_SEQ) AS name
	FROM	TBL_MONTH_ARRANGE_DETAIL a
	WHERE	a.company_no = '100'
		AND a.BASE_Ym = '2023-05'
		AND a.CAR_REGNO  LIKE 'SP%'
		AND a.CAR_REGNO not LIKE '%' || a.ROUTE_NM || '%'
		AND (a.d2 <> '')
		AND (a.d2 NOT LIKE '%#%')
		AND a.DISPATCH_SEQ = 6
		AND a.INIT_SEQ = 0
	 GROUP BY a.ROUTE_NM
 {executed in 1 msec}
2023-06-25 17:19:40.730 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
101. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 17:19:40.731 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
101. SELECT ROUTE_NM  FROM TBL_ROUTEINFO ORDER BY 1
 {executed in 0 msec}
2023-06-25 17:19:45.238 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
2023-06-25 17:19:45.239 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
101. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 17:19:45.241 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
101. select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
 {executed in 0 msec}
2023-06-25 17:20:50.130 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
101. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 17:20:50.131 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
101. SELECT ROUTE_NM  FROM TBL_ROUTEINFO ORDER BY 1
 {executed in 1 msec}
2023-06-25 17:20:54.667 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
2023-06-25 17:20:54.669 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
101. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 17:20:54.670 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
101. select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
 {executed in 1 msec}
2023-06-25 17:23:13.359 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
2023-06-25 17:23:13.364 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
101. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 17:23:13.365 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
101. select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
 {executed in 1 msec}
2023-06-25 17:23:33.340 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@7274ecc
2023-06-25 17:23:33.341 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
101. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 17:23:33.354 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
101. SELECT /* select_getDrivingOrder : 승무지시 화면용 */ k.route_nm,k.seq,k.CAR_REGNO
		,	listagg(k.emp_nm,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as empNm
		,	listagg(k.PHONE_NO,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as PHONE
		,	listagg(k.value,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as spGb
		,	' ' as empNm_am
		,	' ' as empNm_pm
		,	' ' as phone_am
		,	' ' as phone_pm
		,	' ' as spgb_am
		,	' ' as spgb_pm
	FROM (
	SELECT	a.route_nm,
			a.CAR_REGNO ,
			a.EMP_NM ,
			b.PHONE_NO ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,
			CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a JOIN TBL_EMPLOYEEINFO b ON a.company_no = b.COMPANY_NO AND a.emp_nm = b.EMP_NM 
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT a.route_nm,
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			nvl(c.PHONE_NO,'-') AS phone_no ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		
			CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON
			a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
			AND b.d2 <> ''
			AND a.d2 LIKE b.d2 || '%'
		LEFT OUTER JOIN TBL_EMPLOYEEINFO c ON b.company_no = c.COMPANY_NO AND b.emp_nm = c.EMP_NM
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%'	OR a.d2 LIKE '%@%')
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.route_nm,k.seq,k.CAR_REGNO
 {executed in 12 msec}
2023-06-25 17:23:37.469 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
101. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 17:23:37.470 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
101. SELECT ROUTE_NM  FROM TBL_ROUTEINFO ORDER BY 1
 {executed in 1 msec}
2023-06-25 17:23:40.647 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@7274ecc
2023-06-25 17:23:40.648 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
101. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 17:23:40.661 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
101. SELECT /* select_getDrivingOrder : 승무지시 화면용 */ k.route_nm,k.seq,k.CAR_REGNO
		,	listagg(k.emp_nm,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as empNm
		,	listagg(k.PHONE_NO,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as PHONE
		,	listagg(k.value,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as spGb
		,	' ' as empNm_am
		,	' ' as empNm_pm
		,	' ' as phone_am
		,	' ' as phone_pm
		,	' ' as spgb_am
		,	' ' as spgb_pm
	FROM (
	SELECT	a.route_nm,
			a.CAR_REGNO ,
			a.EMP_NM ,
			b.PHONE_NO ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,
			CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a JOIN TBL_EMPLOYEEINFO b ON a.company_no = b.COMPANY_NO AND a.emp_nm = b.EMP_NM 
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT a.route_nm,
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			nvl(c.PHONE_NO,'-') AS phone_no ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		
			CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON
			a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
			AND b.d2 <> ''
			AND a.d2 LIKE b.d2 || '%'
		LEFT OUTER JOIN TBL_EMPLOYEEINFO c ON b.company_no = c.COMPANY_NO AND b.emp_nm = c.EMP_NM
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%'	OR a.d2 LIKE '%@%')
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.route_nm,k.seq,k.CAR_REGNO
 {executed in 12 msec}
2023-06-25 17:24:05.440 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
101. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 17:24:05.441 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
101. SELECT ROUTE_NM  FROM TBL_ROUTEINFO ORDER BY 1
 {executed in 1 msec}
2023-06-25 17:24:08.238 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@7274ecc
2023-06-25 17:24:08.239 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
101. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 17:24:08.251 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
101. SELECT /* select_getDrivingOrder : 승무지시 화면용 */ k.route_nm,k.seq,k.CAR_REGNO
		,	listagg(k.emp_nm,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as empNm
		,	listagg(k.PHONE_NO,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as PHONE
		,	listagg(k.value,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as spGb
		,	' ' as empNm_am
		,	' ' as empNm_pm
		,	' ' as phone_am
		,	' ' as phone_pm
		,	' ' as spgb_am
		,	' ' as spgb_pm
	FROM (
	SELECT	a.route_nm,
			a.CAR_REGNO ,
			a.EMP_NM ,
			b.PHONE_NO ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,
			CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a JOIN TBL_EMPLOYEEINFO b ON a.company_no = b.COMPANY_NO AND a.emp_nm = b.EMP_NM 
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT a.route_nm,
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			nvl(c.PHONE_NO,'-') AS phone_no ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		
			CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON
			a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
			AND b.d2 <> ''
			AND a.d2 LIKE b.d2 || '%'
		LEFT OUTER JOIN TBL_EMPLOYEEINFO c ON b.company_no = c.COMPANY_NO AND b.emp_nm = c.EMP_NM
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%'	OR a.d2 LIKE '%@%')
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.route_nm,k.seq,k.CAR_REGNO
 {executed in 12 msec}
2023-06-25 17:24:21.079 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@e00ae152
2023-06-25 17:24:21.080 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
101. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 17:24:21.095 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
101. SELECT /* select_getDrivingOrder : 승무지시 화면용 */ k.route_nm,k.seq,k.CAR_REGNO
		,	listagg(k.emp_nm,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as empNm
		,	listagg(k.PHONE_NO,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as PHONE
		,	listagg(k.value,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as spGb
		,	' ' as empNm_am
		,	' ' as empNm_pm
		,	' ' as phone_am
		,	' ' as phone_pm
		,	' ' as spgb_am
		,	' ' as spgb_pm
	FROM (
	SELECT	a.route_nm,
			a.CAR_REGNO ,
			a.EMP_NM ,
			b.PHONE_NO ,
			'-' AS value,
			REGEXP_REPLACE(a.d4, '[*0-9@]', '') AS ampm,
			CONVERT(REGEXP_REPLACE(a.d4, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a JOIN TBL_EMPLOYEEINFO b ON a.company_no = b.COMPANY_NO AND a.emp_nm = b.EMP_NM 
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d4 NOT LIKE '%*%'
			AND a.d4 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT a.route_nm,
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			nvl(c.PHONE_NO,'-') AS phone_no ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d4, '[*0-9@-]', '') AS ampm,		
			CONVERT(REGEXP_REPLACE(a.d4, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON
			a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
			AND b.d4 <> ''
			AND a.d4 LIKE b.d4 || '%'
		LEFT OUTER JOIN TBL_EMPLOYEEINFO c ON b.company_no = c.COMPANY_NO AND b.emp_nm = c.EMP_NM
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d4 LIKE '%*%'	OR a.d4 LIKE '%@%')
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.route_nm,k.seq,k.CAR_REGNO
 {executed in 13 msec}
2023-06-25 17:24:23.068 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@b38b555f
2023-06-25 17:24:23.069 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
101. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 17:24:23.081 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
101. SELECT /* select_getDrivingOrder : 승무지시 화면용 */ k.route_nm,k.seq,k.CAR_REGNO
		,	listagg(k.emp_nm,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as empNm
		,	listagg(k.PHONE_NO,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as PHONE
		,	listagg(k.value,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as spGb
		,	' ' as empNm_am
		,	' ' as empNm_pm
		,	' ' as phone_am
		,	' ' as phone_pm
		,	' ' as spgb_am
		,	' ' as spgb_pm
	FROM (
	SELECT	a.route_nm,
			a.CAR_REGNO ,
			a.EMP_NM ,
			b.PHONE_NO ,
			'-' AS value,
			REGEXP_REPLACE(a.d5, '[*0-9@]', '') AS ampm,
			CONVERT(REGEXP_REPLACE(a.d5, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a JOIN TBL_EMPLOYEEINFO b ON a.company_no = b.COMPANY_NO AND a.emp_nm = b.EMP_NM 
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d5 NOT LIKE '%*%'
			AND a.d5 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT a.route_nm,
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			nvl(c.PHONE_NO,'-') AS phone_no ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d5, '[*0-9@-]', '') AS ampm,		
			CONVERT(REGEXP_REPLACE(a.d5, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON
			a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
			AND b.d5 <> ''
			AND a.d5 LIKE b.d5 || '%'
		LEFT OUTER JOIN TBL_EMPLOYEEINFO c ON b.company_no = c.COMPANY_NO AND b.emp_nm = c.EMP_NM
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d5 LIKE '%*%'	OR a.d5 LIKE '%@%')
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.route_nm,k.seq,k.CAR_REGNO
 {executed in 11 msec}
2023-06-25 17:24:25.409 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@9822e1b2
2023-06-25 17:24:25.410 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
101. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 17:24:25.422 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
101. SELECT /* select_getDrivingOrder : 승무지시 화면용 */ k.route_nm,k.seq,k.CAR_REGNO
		,	listagg(k.emp_nm,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as empNm
		,	listagg(k.PHONE_NO,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as PHONE
		,	listagg(k.value,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as spGb
		,	' ' as empNm_am
		,	' ' as empNm_pm
		,	' ' as phone_am
		,	' ' as phone_pm
		,	' ' as spgb_am
		,	' ' as spgb_pm
	FROM (
	SELECT	a.route_nm,
			a.CAR_REGNO ,
			a.EMP_NM ,
			b.PHONE_NO ,
			'-' AS value,
			REGEXP_REPLACE(a.d3, '[*0-9@]', '') AS ampm,
			CONVERT(REGEXP_REPLACE(a.d3, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a JOIN TBL_EMPLOYEEINFO b ON a.company_no = b.COMPANY_NO AND a.emp_nm = b.EMP_NM 
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d3 NOT LIKE '%*%'
			AND a.d3 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT a.route_nm,
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			nvl(c.PHONE_NO,'-') AS phone_no ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d3, '[*0-9@-]', '') AS ampm,		
			CONVERT(REGEXP_REPLACE(a.d3, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON
			a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
			AND b.d3 <> ''
			AND a.d3 LIKE b.d3 || '%'
		LEFT OUTER JOIN TBL_EMPLOYEEINFO c ON b.company_no = c.COMPANY_NO AND b.emp_nm = c.EMP_NM
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d3 LIKE '%*%'	OR a.d3 LIKE '%@%')
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.route_nm,k.seq,k.CAR_REGNO
 {executed in 9 msec}
2023-06-25 17:24:27.935 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@c4a26da5
2023-06-25 17:24:27.935 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
101. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 17:24:27.948 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
101. SELECT /* select_getDrivingOrder : 승무지시 화면용 */ k.route_nm,k.seq,k.CAR_REGNO
		,	listagg(k.emp_nm,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as empNm
		,	listagg(k.PHONE_NO,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as PHONE
		,	listagg(k.value,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as spGb
		,	' ' as empNm_am
		,	' ' as empNm_pm
		,	' ' as phone_am
		,	' ' as phone_pm
		,	' ' as spgb_am
		,	' ' as spgb_pm
	FROM (
	SELECT	a.route_nm,
			a.CAR_REGNO ,
			a.EMP_NM ,
			b.PHONE_NO ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,
			CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a JOIN TBL_EMPLOYEEINFO b ON a.company_no = b.COMPANY_NO AND a.emp_nm = b.EMP_NM 
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT a.route_nm,
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			nvl(c.PHONE_NO,'-') AS phone_no ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		
			CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON
			a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
			AND b.d2 <> ''
			AND a.d2 LIKE b.d2 || '%'
		LEFT OUTER JOIN TBL_EMPLOYEEINFO c ON b.company_no = c.COMPANY_NO AND b.emp_nm = c.EMP_NM
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%'	OR a.d2 LIKE '%@%')
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.route_nm,k.seq,k.CAR_REGNO
 {executed in 12 msec}
2023-06-25 17:24:36.801 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
2023-06-25 17:24:36.801 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
101. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 17:24:36.802 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
101. select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
 {executed in 1 msec}
2023-06-25 17:24:57.020 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
101. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 17:24:57.021 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
101. SELECT ROUTE_NM  FROM TBL_ROUTEINFO ORDER BY 1
 {executed in 0 msec}
2023-06-25 17:24:57.810 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
2023-06-25 17:24:57.811 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
101. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 17:24:57.813 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
101. select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
 {executed in 0 msec}
2023-06-25 17:25:07.588 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
101. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 17:25:07.589 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
101. SELECT ROUTE_NM  FROM TBL_ROUTEINFO ORDER BY 1
 {executed in 1 msec}
2023-06-25 17:25:10.820 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@7274ecc
2023-06-25 17:25:10.821 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
101. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 17:25:10.834 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
101. SELECT /* select_getDrivingOrder : 승무지시 화면용 */ k.route_nm,k.seq,k.CAR_REGNO
		,	listagg(k.emp_nm,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as empNm
		,	listagg(k.PHONE_NO,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as PHONE
		,	listagg(k.value,',') WITHIN GROUP (ORDER BY to_char(k.seq,'00') ||k.ampm) as spGb
		,	' ' as empNm_am
		,	' ' as empNm_pm
		,	' ' as phone_am
		,	' ' as phone_pm
		,	' ' as spgb_am
		,	' ' as spgb_pm
	FROM (
	SELECT	a.route_nm,
			a.CAR_REGNO ,
			a.EMP_NM ,
			b.PHONE_NO ,
			'-' AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm,
			CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a JOIN TBL_EMPLOYEEINFO b ON a.company_no = b.COMPANY_NO AND a.emp_nm = b.EMP_NM 
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND a.d2 NOT LIKE '%*%'
			AND a.d2 NOT LIKE '%@%'
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
	UNION ALL
		SELECT a.route_nm,
			a.CAR_REGNO ,
			nvl(b.EMP_NM,'-') AS emp_nm ,
			nvl(c.PHONE_NO,'-') AS phone_no ,
			decode(b.EMP_NM, NULL, '-', 'SP') AS value,
			REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm,		
			CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),		int) AS seq
		FROM	TBL_MONTH_ARRANGE_DETAIL a
		LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON
			a.COMPANY_NO = b.COMPANY_NO
			AND a.ROUTE_NM = b.ROUTE_NM
			AND a.BASE_YM = b.BASE_YM
			AND a.DISPATCH_SEQ = b.DISPATCH_SEQ
			AND a.INIT_SEQ = b.INIT_SEQ
			AND b.CAR_REGNO LIKE 'SP%'
			AND b.d2 <> ''
			AND a.d2 LIKE b.d2 || '%'
		LEFT OUTER JOIN TBL_EMPLOYEEINFO c ON b.company_no = c.COMPANY_NO AND b.emp_nm = c.EMP_NM
		WHERE	a.company_no = '100'
			AND a.BASE_Ym = '2023-05'
			AND a.CAR_REGNO NOT LIKE 'SP%'
			AND (a.d2 LIKE '%*%'	OR a.d2 LIKE '%@%')
			AND a.DISPATCH_SEQ = 6
			AND a.INIT_SEQ = 0
		ORDER BY 5,4
	) k
	GROUP BY k.route_nm,k.seq,k.CAR_REGNO
 {executed in 12 msec}
2023-06-25 17:25:12.239 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
2023-06-25 17:25:12.240 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
101. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 17:25:12.241 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
101. select   a.*,'' as excelFile,'N' as bit from    TBL_FILE_INFO a where   a.company_no = '100' and     a.orgnm like 'templete%' order by a.file_gb,a.file_id
 {executed in 1 msec}
2023-06-25 17:26:12.520 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@6eb507c9
2023-06-25 17:26:12.520 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_DANGER_DRIVING_INFO} 
2023-06-25 17:26:12.520 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_DANGER_DRIVING_INFO a where   a.company_no = '100' AND     a.BASE_YM   = '2023-03' order by a.emp_nm
2023-06-25 17:26:12.523 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
101. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 17:26:12.526 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
101. select   ROWNUM AS no,a.* from    TBL_DANGER_DRIVING_INFO a where   a.company_no = '100' AND     a.BASE_YM   = '2023-03' order by a.emp_nm
 {executed in 3 msec}
2023-06-25 17:26:12.529 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
101. select   ROWNUM AS no,a.* from    TBL_DANGER_DRIVING_INFO a where   a.company_no = '100' AND     a.BASE_YM   = '2023-03' order by a.emp_nm
 {executed in 2 msec}
2023-06-25 17:27:22.004 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@6eb507c9
2023-06-25 17:27:22.004 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_DANGER_DRIVING_INFO} 
2023-06-25 17:27:22.004 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_DANGER_DRIVING_INFO a where   a.company_no = '100' AND     a.BASE_YM   = '2023-03' order by a.emp_nm
2023-06-25 17:27:22.005 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
101. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 17:27:22.007 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
101. select   ROWNUM AS no,a.* from    TBL_DANGER_DRIVING_INFO a where   a.company_no = '100' AND     a.BASE_YM   = '2023-03' order by a.emp_nm
 {executed in 2 msec}
2023-06-25 17:27:22.009 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
101. select   ROWNUM AS no,a.* from    TBL_DANGER_DRIVING_INFO a where   a.company_no = '100' AND     a.BASE_YM   = '2023-03' order by a.emp_nm
 {executed in 1 msec}
2023-06-25 17:31:55.808 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@6eb507c9
2023-06-25 17:31:55.809 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_DANGER_DRIVING_INFO} 
2023-06-25 17:31:55.809 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_DANGER_DRIVING_INFO a where   a.company_no = '100' AND     a.BASE_YM   = '2023-03' order by a.emp_nm
2023-06-25 17:31:55.809 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
102. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 17:31:55.811 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
102. select   ROWNUM AS no,a.* from    TBL_DANGER_DRIVING_INFO a where   a.company_no = '100' AND     a.BASE_YM   = '2023-03' order by a.emp_nm
 {executed in 1 msec}
2023-06-25 17:31:55.814 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
102. select   ROWNUM AS no,a.* from    TBL_DANGER_DRIVING_INFO a where   a.company_no = '100' AND     a.BASE_YM   = '2023-03' order by a.emp_nm
 {executed in 1 msec}
2023-06-25 17:32:26.104 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@6eb507c9
2023-06-25 17:32:26.105 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_DANGER_DRIVING_INFO} 
2023-06-25 17:32:26.105 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_DANGER_DRIVING_INFO a where   a.company_no = '100' AND     a.BASE_YM   = '2023-03' order by a.emp_nm
2023-06-25 17:32:26.106 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
111. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 17:32:26.108 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. select   ROWNUM AS no,a.* from    TBL_DANGER_DRIVING_INFO a where   a.company_no = '100' AND     a.BASE_YM   = '2023-03' order by a.emp_nm
 {executed in 2 msec}
2023-06-25 17:32:26.111 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. select   ROWNUM AS no,a.* from    TBL_DANGER_DRIVING_INFO a where   a.company_no = '100' AND     a.BASE_YM   = '2023-03' order by a.emp_nm
 {executed in 1 msec}
2023-06-25 17:33:13.983 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@6eb507c9
2023-06-25 17:33:13.983 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_DANGER_DRIVING_INFO} 
2023-06-25 17:33:13.983 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_DANGER_DRIVING_INFO a where   a.company_no = '100' AND     a.BASE_YM   = '2023-03' order by a.emp_nm
2023-06-25 17:33:13.984 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
111. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 17:33:13.986 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. select   ROWNUM AS no,a.* from    TBL_DANGER_DRIVING_INFO a where   a.company_no = '100' AND     a.BASE_YM   = '2023-03' order by a.emp_nm
 {executed in 2 msec}
2023-06-25 17:33:13.988 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. select   ROWNUM AS no,a.* from    TBL_DANGER_DRIVING_INFO a where   a.company_no = '100' AND     a.BASE_YM   = '2023-03' order by a.emp_nm
 {executed in 2 msec}
2023-06-25 17:33:52.302 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
111. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 17:33:52.303 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. SELECT ROUTE_NM  FROM TBL_ROUTEINFO ORDER BY 1
 {executed in 1 msec}
2023-06-25 17:33:56.494 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@e1d18cff
2023-06-25 17:33:56.494 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - filterType={danagerAnal_Step} 
2023-06-25 17:33:56.494 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT a.danger_level ,	decode(a.danger_level,'매우위험',5,'위험',4,'주의',3,'보통',2,'양호',1,0)  AS danger_level_no ,	listagg(a.base_ym,',') WITHIN group(ORDER BY base_ym) AS base_ym ,	listagg(a.danger_cnt||'(' || a.rate || '%)',',') WITHIN group(ORDER BY base_ym) AS rate ,	sum(danger_cnt)  AS total FROM ( SELECT a.* ,	ROUND( (danger_cnt / SUM(danger_cnt) OVER (PARTITION BY base_ym)),2) RATe FROM (	SELECT 	b.base_ym ,	b.danger_level ,	count(b.danger_level) AS danger_cnt FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym between '2023-01' and '2023-06' GROUP BY b.base_ym,b.danger_level ) a union	 SELECT 	b.base_ym ,	'합계' ,	count(b.danger_level) AS danger_cnt ,	0 FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym between '2023-01' and '2023-06' GROUP BY b.base_ym ) a GROUP BY a.danger_level ORDER BY 2 desc
2023-06-25 17:33:56.495 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
111. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 17:33:56.512 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. SELECT a.danger_level ,	decode(a.danger_level,'매우위험',5,'위험',4,'주의',3,'보통',2,'양호',1,0)  AS danger_level_no ,	listagg(a.base_ym,',') WITHIN group(ORDER BY base_ym) AS base_ym ,	listagg(a.danger_cnt||'(' || a.rate || '%)',',') WITHIN group(ORDER BY base_ym) AS rate ,	sum(danger_cnt)  AS total FROM ( SELECT a.* ,	ROUND( (danger_cnt / SUM(danger_cnt) OVER (PARTITION BY base_ym)),2) RATe FROM (	SELECT 	b.base_ym ,	b.danger_level ,	count(b.danger_level) AS danger_cnt FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym between '2023-01' and '2023-06' GROUP BY b.base_ym,b.danger_level ) a union	 SELECT 	b.base_ym ,	'합계' ,	count(b.danger_level) AS danger_cnt ,	0 FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym between '2023-01' and '2023-06' GROUP BY b.base_ym ) a GROUP BY a.danger_level ORDER BY 2 desc
 {executed in 17 msec}
2023-06-25 17:33:56.514 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. SELECT a.danger_level ,	decode(a.danger_level,'매우위험',5,'위험',4,'주의',3,'보통',2,'양호',1,0)  AS danger_level_no ,	listagg(a.base_ym,',') WITHIN group(ORDER BY base_ym) AS base_ym ,	listagg(a.danger_cnt||'(' || a.rate || '%)',',') WITHIN group(ORDER BY base_ym) AS rate ,	sum(danger_cnt)  AS total FROM ( SELECT a.* ,	ROUND( (danger_cnt / SUM(danger_cnt) OVER (PARTITION BY base_ym)),2) RATe FROM (	SELECT 	b.base_ym ,	b.danger_level ,	count(b.danger_level) AS danger_cnt FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym between '2023-01' and '2023-06' GROUP BY b.base_ym,b.danger_level ) a union	 SELECT 	b.base_ym ,	'합계' ,	count(b.danger_level) AS danger_cnt ,	0 FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym between '2023-01' and '2023-06' GROUP BY b.base_ym ) a GROUP BY a.danger_level ORDER BY 2 desc
 {executed in 1 msec}
2023-06-25 17:33:56.547 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@83653cf3
2023-06-25 17:33:56.547 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - filterType={danagerAnal_Driver} 
2023-06-25 17:33:56.547 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : WITH ymInfo AS ( SELECT DISTINCT base_ym FROM TBL_DANGER_DRIVING_INFO a WHERE a.company_no = '100' AND   a.base_ym between '2023-01' and '2023-06' ),empinfo AS ( SELECT  DISTINCT emp_nm FROM TBL_DANGER_DRIVING_INFO a WHERE a.company_no = '100' AND   a.base_ym between '2023-01' and '2023-06' ),targetInfo AS ( SELECT a.*,b.* FROM ymInfo a JOIN empinfo b )	 SELECT a.emp_nm, b.sp_gb ,	listagg(a.base_ym,',') WITHIN group(ORDER BY base_ym) AS base_ym ,	listagg(a.danger_level,',') WITHIN group(ORDER BY base_ym) AS rate ,	listagg(a.danger_level_no,',') WITHIN group(ORDER BY base_ym) AS danger_level_no ,	sum(danger_level_no)  AS total FROM (	SELECT 	x.base_ym ,	x.emp_nm ,	nvl(b.danger_level,'-')  AS danger_level ,	decode(b.danger_level,'매우위험',5,'위험',4,'주의',3,'보통',2,'양호',1,0)  AS danger_level_no FROM targetInfo x  LEFT OUTER join TBL_DANGER_DRIVING_INFO b on x.emp_nm = b.emp_nm AND x.base_ym = b.base_ym and b.company_no = '100' ) a,TBL_DRIVERINFO b where a.emp_nm = b.emp_nm and   b.company_no = '100' and	  b.route_nm like  '' || '%' GROUP BY a.emp_nm ORDER BY 1
2023-06-25 17:33:56.585 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. WITH ymInfo AS ( SELECT DISTINCT base_ym FROM TBL_DANGER_DRIVING_INFO a WHERE a.company_no = '100' AND   a.base_ym between '2023-01' and '2023-06' ),empinfo AS ( SELECT  DISTINCT emp_nm FROM TBL_DANGER_DRIVING_INFO a WHERE a.company_no = '100' AND   a.base_ym between '2023-01' and '2023-06' ),targetInfo AS ( SELECT a.*,b.* FROM ymInfo a JOIN empinfo b )	 SELECT a.emp_nm, b.sp_gb ,	listagg(a.base_ym,',') WITHIN group(ORDER BY base_ym) AS base_ym ,	listagg(a.danger_level,',') WITHIN group(ORDER BY base_ym) AS rate ,	listagg(a.danger_level_no,',') WITHIN group(ORDER BY base_ym) AS danger_level_no ,	sum(danger_level_no)  AS total FROM (	SELECT 	x.base_ym ,	x.emp_nm ,	nvl(b.danger_level,'-')  AS danger_level ,	decode(b.danger_level,'매우위험',5,'위험',4,'주의',3,'보통',2,'양호',1,0)  AS danger_level_no FROM targetInfo x  LEFT OUTER join TBL_DANGER_DRIVING_INFO b on x.emp_nm = b.emp_nm AND x.base_ym = b.base_ym and b.company_no = '100' ) a,TBL_DRIVERINFO b where a.emp_nm = b.emp_nm and   b.company_no = '100' and	  b.route_nm like  '' || '%' GROUP BY a.emp_nm ORDER BY 1
 {executed in 38 msec}
2023-06-25 17:33:56.616 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. WITH ymInfo AS ( SELECT DISTINCT base_ym FROM TBL_DANGER_DRIVING_INFO a WHERE a.company_no = '100' AND   a.base_ym between '2023-01' and '2023-06' ),empinfo AS ( SELECT  DISTINCT emp_nm FROM TBL_DANGER_DRIVING_INFO a WHERE a.company_no = '100' AND   a.base_ym between '2023-01' and '2023-06' ),targetInfo AS ( SELECT a.*,b.* FROM ymInfo a JOIN empinfo b )	 SELECT a.emp_nm, b.sp_gb ,	listagg(a.base_ym,',') WITHIN group(ORDER BY base_ym) AS base_ym ,	listagg(a.danger_level,',') WITHIN group(ORDER BY base_ym) AS rate ,	listagg(a.danger_level_no,',') WITHIN group(ORDER BY base_ym) AS danger_level_no ,	sum(danger_level_no)  AS total FROM (	SELECT 	x.base_ym ,	x.emp_nm ,	nvl(b.danger_level,'-')  AS danger_level ,	decode(b.danger_level,'매우위험',5,'위험',4,'주의',3,'보통',2,'양호',1,0)  AS danger_level_no FROM targetInfo x  LEFT OUTER join TBL_DANGER_DRIVING_INFO b on x.emp_nm = b.emp_nm AND x.base_ym = b.base_ym and b.company_no = '100' ) a,TBL_DRIVERINFO b where a.emp_nm = b.emp_nm and   b.company_no = '100' and	  b.route_nm like  '' || '%' GROUP BY a.emp_nm ORDER BY 1
 {executed in 31 msec}
2023-06-25 17:33:56.801 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@7897038f
2023-06-25 17:33:56.801 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - filterType={danagerAnal_Employee} 
2023-06-25 17:33:56.801 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT 	b.base_ym, b.emp_nm,b.danger_km100,b.DANGER_ACT_CNT, b.DANGER_ACT,b.DANGER_LEVEL,b.DRIVING_CNT,b.DRIVING_DISTANCE,b.DRIVING_TIME FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym between '2023-01' and '2023-06' AND   b.emp_nm = '강근원' ORDER BY b.base_ym desc
2023-06-25 17:33:56.802 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. SELECT 	b.base_ym, b.emp_nm,b.danger_km100,b.DANGER_ACT_CNT, b.DANGER_ACT,b.DANGER_LEVEL,b.DRIVING_CNT,b.DRIVING_DISTANCE,b.DRIVING_TIME FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym between '2023-01' and '2023-06' AND   b.emp_nm = '강근원' ORDER BY b.base_ym desc
 {executed in 1 msec}
2023-06-25 17:33:56.803 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. SELECT 	b.base_ym, b.emp_nm,b.danger_km100,b.DANGER_ACT_CNT, b.DANGER_ACT,b.DANGER_LEVEL,b.DRIVING_CNT,b.DRIVING_DISTANCE,b.DRIVING_TIME FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym between '2023-01' and '2023-06' AND   b.emp_nm = '강근원' ORDER BY b.base_ym desc
 {executed in 0 msec}
2023-06-25 17:34:37.650 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@fb482a07
2023-06-25 17:34:37.650 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - filterType={danagerAnal_Step} 
2023-06-25 17:34:37.650 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT a.danger_level ,	decode(a.danger_level,'매우위험',5,'위험',4,'주의',3,'보통',2,'양호',1,0)  AS danger_level_no ,	listagg(a.base_ym,',') WITHIN group(ORDER BY base_ym) AS base_ym ,	listagg(a.danger_cnt||'(' || a.rate || '%)',',') WITHIN group(ORDER BY base_ym) AS rate ,	sum(danger_cnt)  AS total FROM ( SELECT a.* ,	ROUND( (danger_cnt / SUM(danger_cnt) OVER (PARTITION BY base_ym)),2) RATe FROM (	SELECT 	b.base_ym ,	b.danger_level ,	count(b.danger_level) AS danger_cnt FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym between '2023-01' and '2023-06' GROUP BY b.base_ym,b.danger_level ) a union	 SELECT 	b.base_ym ,	'합계' ,	count(b.danger_level) AS danger_cnt ,	0 FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym between '2023-01' and '2023-06' GROUP BY b.base_ym ) a GROUP BY a.danger_level ORDER BY 2 desc
2023-06-25 17:34:37.651 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
111. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 17:34:37.654 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. SELECT a.danger_level ,	decode(a.danger_level,'매우위험',5,'위험',4,'주의',3,'보통',2,'양호',1,0)  AS danger_level_no ,	listagg(a.base_ym,',') WITHIN group(ORDER BY base_ym) AS base_ym ,	listagg(a.danger_cnt||'(' || a.rate || '%)',',') WITHIN group(ORDER BY base_ym) AS rate ,	sum(danger_cnt)  AS total FROM ( SELECT a.* ,	ROUND( (danger_cnt / SUM(danger_cnt) OVER (PARTITION BY base_ym)),2) RATe FROM (	SELECT 	b.base_ym ,	b.danger_level ,	count(b.danger_level) AS danger_cnt FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym between '2023-01' and '2023-06' GROUP BY b.base_ym,b.danger_level ) a union	 SELECT 	b.base_ym ,	'합계' ,	count(b.danger_level) AS danger_cnt ,	0 FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym between '2023-01' and '2023-06' GROUP BY b.base_ym ) a GROUP BY a.danger_level ORDER BY 2 desc
 {executed in 3 msec}
2023-06-25 17:34:37.656 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. SELECT a.danger_level ,	decode(a.danger_level,'매우위험',5,'위험',4,'주의',3,'보통',2,'양호',1,0)  AS danger_level_no ,	listagg(a.base_ym,',') WITHIN group(ORDER BY base_ym) AS base_ym ,	listagg(a.danger_cnt||'(' || a.rate || '%)',',') WITHIN group(ORDER BY base_ym) AS rate ,	sum(danger_cnt)  AS total FROM ( SELECT a.* ,	ROUND( (danger_cnt / SUM(danger_cnt) OVER (PARTITION BY base_ym)),2) RATe FROM (	SELECT 	b.base_ym ,	b.danger_level ,	count(b.danger_level) AS danger_cnt FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym between '2023-01' and '2023-06' GROUP BY b.base_ym,b.danger_level ) a union	 SELECT 	b.base_ym ,	'합계' ,	count(b.danger_level) AS danger_cnt ,	0 FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym between '2023-01' and '2023-06' GROUP BY b.base_ym ) a GROUP BY a.danger_level ORDER BY 2 desc
 {executed in 1 msec}
2023-06-25 17:34:37.697 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@9cdbd9fb
2023-06-25 17:34:37.697 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - filterType={danagerAnal_Driver} 
2023-06-25 17:34:37.698 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : WITH ymInfo AS ( SELECT DISTINCT base_ym FROM TBL_DANGER_DRIVING_INFO a WHERE a.company_no = '100' AND   a.base_ym between '2023-01' and '2023-06' ),empinfo AS ( SELECT  DISTINCT emp_nm FROM TBL_DANGER_DRIVING_INFO a WHERE a.company_no = '100' AND   a.base_ym between '2023-01' and '2023-06' ),targetInfo AS ( SELECT a.*,b.* FROM ymInfo a JOIN empinfo b )	 SELECT a.emp_nm, b.sp_gb ,	listagg(a.base_ym,',') WITHIN group(ORDER BY base_ym) AS base_ym ,	listagg(a.danger_level,',') WITHIN group(ORDER BY base_ym) AS rate ,	listagg(a.danger_level_no,',') WITHIN group(ORDER BY base_ym) AS danger_level_no ,	sum(danger_level_no)  AS total FROM (	SELECT 	x.base_ym ,	x.emp_nm ,	nvl(b.danger_level,'-')  AS danger_level ,	decode(b.danger_level,'매우위험',5,'위험',4,'주의',3,'보통',2,'양호',1,0)  AS danger_level_no FROM targetInfo x  LEFT OUTER join TBL_DANGER_DRIVING_INFO b on x.emp_nm = b.emp_nm AND x.base_ym = b.base_ym and b.company_no = '100' ) a,TBL_DRIVERINFO b where a.emp_nm = b.emp_nm and   b.company_no = '100' and	  b.route_nm like  '20번' || '%' GROUP BY a.emp_nm ORDER BY 1
2023-06-25 17:34:37.710 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. WITH ymInfo AS ( SELECT DISTINCT base_ym FROM TBL_DANGER_DRIVING_INFO a WHERE a.company_no = '100' AND   a.base_ym between '2023-01' and '2023-06' ),empinfo AS ( SELECT  DISTINCT emp_nm FROM TBL_DANGER_DRIVING_INFO a WHERE a.company_no = '100' AND   a.base_ym between '2023-01' and '2023-06' ),targetInfo AS ( SELECT a.*,b.* FROM ymInfo a JOIN empinfo b )	 SELECT a.emp_nm, b.sp_gb ,	listagg(a.base_ym,',') WITHIN group(ORDER BY base_ym) AS base_ym ,	listagg(a.danger_level,',') WITHIN group(ORDER BY base_ym) AS rate ,	listagg(a.danger_level_no,',') WITHIN group(ORDER BY base_ym) AS danger_level_no ,	sum(danger_level_no)  AS total FROM (	SELECT 	x.base_ym ,	x.emp_nm ,	nvl(b.danger_level,'-')  AS danger_level ,	decode(b.danger_level,'매우위험',5,'위험',4,'주의',3,'보통',2,'양호',1,0)  AS danger_level_no FROM targetInfo x  LEFT OUTER join TBL_DANGER_DRIVING_INFO b on x.emp_nm = b.emp_nm AND x.base_ym = b.base_ym and b.company_no = '100' ) a,TBL_DRIVERINFO b where a.emp_nm = b.emp_nm and   b.company_no = '100' and	  b.route_nm like  '20번' || '%' GROUP BY a.emp_nm ORDER BY 1
 {executed in 11 msec}
2023-06-25 17:34:37.726 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. WITH ymInfo AS ( SELECT DISTINCT base_ym FROM TBL_DANGER_DRIVING_INFO a WHERE a.company_no = '100' AND   a.base_ym between '2023-01' and '2023-06' ),empinfo AS ( SELECT  DISTINCT emp_nm FROM TBL_DANGER_DRIVING_INFO a WHERE a.company_no = '100' AND   a.base_ym between '2023-01' and '2023-06' ),targetInfo AS ( SELECT a.*,b.* FROM ymInfo a JOIN empinfo b )	 SELECT a.emp_nm, b.sp_gb ,	listagg(a.base_ym,',') WITHIN group(ORDER BY base_ym) AS base_ym ,	listagg(a.danger_level,',') WITHIN group(ORDER BY base_ym) AS rate ,	listagg(a.danger_level_no,',') WITHIN group(ORDER BY base_ym) AS danger_level_no ,	sum(danger_level_no)  AS total FROM (	SELECT 	x.base_ym ,	x.emp_nm ,	nvl(b.danger_level,'-')  AS danger_level ,	decode(b.danger_level,'매우위험',5,'위험',4,'주의',3,'보통',2,'양호',1,0)  AS danger_level_no FROM targetInfo x  LEFT OUTER join TBL_DANGER_DRIVING_INFO b on x.emp_nm = b.emp_nm AND x.base_ym = b.base_ym and b.company_no = '100' ) a,TBL_DRIVERINFO b where a.emp_nm = b.emp_nm and   b.company_no = '100' and	  b.route_nm like  '20번' || '%' GROUP BY a.emp_nm ORDER BY 1
 {executed in 16 msec}
2023-06-25 17:34:37.788 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@9ac79666
2023-06-25 17:34:37.788 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - filterType={danagerAnal_Employee} 
2023-06-25 17:34:37.788 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT 	b.base_ym, b.emp_nm,b.danger_km100,b.DANGER_ACT_CNT, b.DANGER_ACT,b.DANGER_LEVEL,b.DRIVING_CNT,b.DRIVING_DISTANCE,b.DRIVING_TIME FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym between '2023-01' and '2023-06' AND   b.emp_nm = '권오현' ORDER BY b.base_ym desc
2023-06-25 17:34:37.789 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. SELECT 	b.base_ym, b.emp_nm,b.danger_km100,b.DANGER_ACT_CNT, b.DANGER_ACT,b.DANGER_LEVEL,b.DRIVING_CNT,b.DRIVING_DISTANCE,b.DRIVING_TIME FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym between '2023-01' and '2023-06' AND   b.emp_nm = '권오현' ORDER BY b.base_ym desc
 {executed in 1 msec}
2023-06-25 17:34:37.790 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. SELECT 	b.base_ym, b.emp_nm,b.danger_km100,b.DANGER_ACT_CNT, b.DANGER_ACT,b.DANGER_LEVEL,b.DRIVING_CNT,b.DRIVING_DISTANCE,b.DRIVING_TIME FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym between '2023-01' and '2023-06' AND   b.emp_nm = '권오현' ORDER BY b.base_ym desc
 {executed in 0 msec}
2023-06-25 17:34:44.815 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@977db21
2023-06-25 17:34:44.815 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - filterType={danagerAnal_Employee} 
2023-06-25 17:34:44.815 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT 	b.base_ym, b.emp_nm,b.danger_km100,b.DANGER_ACT_CNT, b.DANGER_ACT,b.DANGER_LEVEL,b.DRIVING_CNT,b.DRIVING_DISTANCE,b.DRIVING_TIME FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym between '2023-01' and '2023-06' AND   b.emp_nm = '윤희석' ORDER BY b.base_ym desc
2023-06-25 17:34:44.816 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
111. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 17:34:44.817 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. SELECT 	b.base_ym, b.emp_nm,b.danger_km100,b.DANGER_ACT_CNT, b.DANGER_ACT,b.DANGER_LEVEL,b.DRIVING_CNT,b.DRIVING_DISTANCE,b.DRIVING_TIME FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym between '2023-01' and '2023-06' AND   b.emp_nm = '윤희석' ORDER BY b.base_ym desc
 {executed in 1 msec}
2023-06-25 17:34:44.818 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. SELECT 	b.base_ym, b.emp_nm,b.danger_km100,b.DANGER_ACT_CNT, b.DANGER_ACT,b.DANGER_LEVEL,b.DRIVING_CNT,b.DRIVING_DISTANCE,b.DRIVING_TIME FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym between '2023-01' and '2023-06' AND   b.emp_nm = '윤희석' ORDER BY b.base_ym desc
 {executed in 1 msec}
2023-06-25 17:34:46.968 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@daa4c3aa
2023-06-25 17:34:46.968 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - filterType={danagerAnal_Employee} 
2023-06-25 17:34:46.968 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT 	b.base_ym, b.emp_nm,b.danger_km100,b.DANGER_ACT_CNT, b.DANGER_ACT,b.DANGER_LEVEL,b.DRIVING_CNT,b.DRIVING_DISTANCE,b.DRIVING_TIME FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym between '2023-01' and '2023-06' AND   b.emp_nm = '임재준' ORDER BY b.base_ym desc
2023-06-25 17:34:46.969 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
111. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 17:34:46.970 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. SELECT 	b.base_ym, b.emp_nm,b.danger_km100,b.DANGER_ACT_CNT, b.DANGER_ACT,b.DANGER_LEVEL,b.DRIVING_CNT,b.DRIVING_DISTANCE,b.DRIVING_TIME FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym between '2023-01' and '2023-06' AND   b.emp_nm = '임재준' ORDER BY b.base_ym desc
 {executed in 1 msec}
2023-06-25 17:34:46.971 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. SELECT 	b.base_ym, b.emp_nm,b.danger_km100,b.DANGER_ACT_CNT, b.DANGER_ACT,b.DANGER_LEVEL,b.DRIVING_CNT,b.DRIVING_DISTANCE,b.DRIVING_TIME FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym between '2023-01' and '2023-06' AND   b.emp_nm = '임재준' ORDER BY b.base_ym desc
 {executed in 1 msec}
2023-06-25 17:34:47.809 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@f1b4efa0
2023-06-25 17:34:47.809 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - filterType={danagerAnal_Employee} 
2023-06-25 17:34:47.809 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT 	b.base_ym, b.emp_nm,b.danger_km100,b.DANGER_ACT_CNT, b.DANGER_ACT,b.DANGER_LEVEL,b.DRIVING_CNT,b.DRIVING_DISTANCE,b.DRIVING_TIME FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym between '2023-01' and '2023-06' AND   b.emp_nm = '정규성' ORDER BY b.base_ym desc
2023-06-25 17:34:47.810 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
111. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 17:34:47.811 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. SELECT 	b.base_ym, b.emp_nm,b.danger_km100,b.DANGER_ACT_CNT, b.DANGER_ACT,b.DANGER_LEVEL,b.DRIVING_CNT,b.DRIVING_DISTANCE,b.DRIVING_TIME FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym between '2023-01' and '2023-06' AND   b.emp_nm = '정규성' ORDER BY b.base_ym desc
 {executed in 1 msec}
2023-06-25 17:34:47.813 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. SELECT 	b.base_ym, b.emp_nm,b.danger_km100,b.DANGER_ACT_CNT, b.DANGER_ACT,b.DANGER_LEVEL,b.DRIVING_CNT,b.DRIVING_DISTANCE,b.DRIVING_TIME FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym between '2023-01' and '2023-06' AND   b.emp_nm = '정규성' ORDER BY b.base_ym desc
 {executed in 1 msec}
2023-06-25 17:34:48.503 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@f1b4efa0
2023-06-25 17:34:48.504 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - filterType={danagerAnal_Employee} 
2023-06-25 17:34:48.504 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT 	b.base_ym, b.emp_nm,b.danger_km100,b.DANGER_ACT_CNT, b.DANGER_ACT,b.DANGER_LEVEL,b.DRIVING_CNT,b.DRIVING_DISTANCE,b.DRIVING_TIME FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym between '2023-01' and '2023-06' AND   b.emp_nm = '정규성' ORDER BY b.base_ym desc
2023-06-25 17:34:48.504 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
111. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 17:34:48.505 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. SELECT 	b.base_ym, b.emp_nm,b.danger_km100,b.DANGER_ACT_CNT, b.DANGER_ACT,b.DANGER_LEVEL,b.DRIVING_CNT,b.DRIVING_DISTANCE,b.DRIVING_TIME FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym between '2023-01' and '2023-06' AND   b.emp_nm = '정규성' ORDER BY b.base_ym desc
 {executed in 0 msec}
2023-06-25 17:34:48.506 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. SELECT 	b.base_ym, b.emp_nm,b.danger_km100,b.DANGER_ACT_CNT, b.DANGER_ACT,b.DANGER_LEVEL,b.DRIVING_CNT,b.DRIVING_DISTANCE,b.DRIVING_TIME FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym between '2023-01' and '2023-06' AND   b.emp_nm = '정규성' ORDER BY b.base_ym desc
 {executed in 1 msec}
2023-06-25 17:34:52.077 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@7d550213
2023-06-25 17:34:52.077 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - filterType={danagerAnal_Employee} 
2023-06-25 17:34:52.078 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT 	b.base_ym, b.emp_nm,b.danger_km100,b.DANGER_ACT_CNT, b.DANGER_ACT,b.DANGER_LEVEL,b.DRIVING_CNT,b.DRIVING_DISTANCE,b.DRIVING_TIME FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym between '2023-01' and '2023-06' AND   b.emp_nm = '안성진' ORDER BY b.base_ym desc
2023-06-25 17:34:52.078 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
111. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 17:34:52.079 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. SELECT 	b.base_ym, b.emp_nm,b.danger_km100,b.DANGER_ACT_CNT, b.DANGER_ACT,b.DANGER_LEVEL,b.DRIVING_CNT,b.DRIVING_DISTANCE,b.DRIVING_TIME FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym between '2023-01' and '2023-06' AND   b.emp_nm = '안성진' ORDER BY b.base_ym desc
 {executed in 1 msec}
2023-06-25 17:34:52.081 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. SELECT 	b.base_ym, b.emp_nm,b.danger_km100,b.DANGER_ACT_CNT, b.DANGER_ACT,b.DANGER_LEVEL,b.DRIVING_CNT,b.DRIVING_DISTANCE,b.DRIVING_TIME FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym between '2023-01' and '2023-06' AND   b.emp_nm = '안성진' ORDER BY b.base_ym desc
 {executed in 1 msec}
2023-06-25 17:35:13.332 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@6eb507c9
2023-06-25 17:35:13.332 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_DANGER_DRIVING_INFO} 
2023-06-25 17:35:13.332 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_DANGER_DRIVING_INFO a where   a.company_no = '100' AND     a.BASE_YM   = '2023-03' order by a.emp_nm
2023-06-25 17:35:13.332 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
111. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 17:35:13.334 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. select   ROWNUM AS no,a.* from    TBL_DANGER_DRIVING_INFO a where   a.company_no = '100' AND     a.BASE_YM   = '2023-03' order by a.emp_nm
 {executed in 1 msec}
2023-06-25 17:35:13.337 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. select   ROWNUM AS no,a.* from    TBL_DANGER_DRIVING_INFO a where   a.company_no = '100' AND     a.BASE_YM   = '2023-03' order by a.emp_nm
 {executed in 2 msec}
2023-06-25 17:37:03.407 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@7756fabc
2023-06-25 17:37:03.407 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - filterType={selectMonthlyPunctuality} 
2023-06-25 17:37:03.407 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
2023-06-25 17:37:03.408 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
111. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 17:37:03.432 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
 {executed in 23 msec}
2023-06-25 17:37:03.449 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
 {executed in 17 msec}
2023-06-25 17:37:05.325 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@3afba261
2023-06-25 17:37:05.325 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - filterType={getRouteCommonInfo} 
2023-06-25 17:37:05.325 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
2023-06-25 17:37:05.326 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
111. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 17:37:05.327 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 1 msec}
2023-06-25 17:37:05.328 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 1 msec}
2023-06-25 17:37:05.339 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@831c5585
2023-06-25 17:37:05.339 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_ANALIZE} 
2023-06-25 17:37:05.339 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.BASE_YMD   = '2023-06-01'
2023-06-25 17:37:05.341 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.BASE_YMD   = '2023-06-01'
 {executed in 2 msec}
2023-06-25 17:37:05.343 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.BASE_YMD   = '2023-06-01'
 {executed in 1 msec}
2023-06-25 17:41:26.803 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@86dd07cf
2023-06-25 17:41:26.803 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - filterType={selectMonthlyPunctuality} 
2023-06-25 17:41:26.803 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-03%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-03%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230301')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230301'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230301') <= DATE'20230401' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
2023-06-25 17:41:26.804 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
111. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 17:41:26.814 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-03%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-03%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230301')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230301'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230301') <= DATE'20230401' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
 {executed in 9 msec}
2023-06-25 17:41:26.822 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-03%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-03%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230301')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230301'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230301') <= DATE'20230401' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
 {executed in 8 msec}
2023-06-25 17:41:31.162 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@7756fabc
2023-06-25 17:41:31.162 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - filterType={selectMonthlyPunctuality} 
2023-06-25 17:41:31.162 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
2023-06-25 17:41:31.163 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
111. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 17:41:31.177 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
 {executed in 14 msec}
2023-06-25 17:41:31.192 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
 {executed in 14 msec}
2023-06-25 17:42:57.086 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@7756fabc
2023-06-25 17:42:57.086 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - filterType={selectMonthlyPunctuality} 
2023-06-25 17:42:57.086 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
2023-06-25 17:42:57.087 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
111. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 17:42:57.104 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
 {executed in 17 msec}
2023-06-25 17:42:57.115 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
 {executed in 11 msec}
2023-06-25 17:43:11.721 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@7756fabc
2023-06-25 17:43:11.721 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - filterType={selectMonthlyPunctuality} 
2023-06-25 17:43:11.721 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
2023-06-25 17:43:11.722 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
111. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 17:43:11.736 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
 {executed in 13 msec}
2023-06-25 17:43:11.748 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
 {executed in 11 msec}
2023-06-25 17:43:33.485 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@7756fabc
2023-06-25 17:43:33.485 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - filterType={selectMonthlyPunctuality} 
2023-06-25 17:43:33.485 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
2023-06-25 17:43:33.486 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
111. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 17:43:33.495 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
 {executed in 9 msec}
2023-06-25 17:43:33.505 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
 {executed in 9 msec}
2023-06-25 17:43:43.204 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@3afba261
2023-06-25 17:43:43.204 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - filterType={getRouteCommonInfo} 
2023-06-25 17:43:43.204 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
2023-06-25 17:43:43.205 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
111. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 17:43:43.206 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 1 msec}
2023-06-25 17:43:43.206 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 0 msec}
2023-06-25 17:43:43.217 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@831c5585
2023-06-25 17:43:43.217 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_ANALIZE} 
2023-06-25 17:43:43.217 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.BASE_YMD   = '2023-06-01'
2023-06-25 17:43:43.219 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.BASE_YMD   = '2023-06-01'
 {executed in 1 msec}
2023-06-25 17:43:43.221 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.BASE_YMD   = '2023-06-01'
 {executed in 1 msec}
2023-06-25 17:44:56.420 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@7756fabc
2023-06-25 17:44:56.420 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - filterType={selectMonthlyPunctuality} 
2023-06-25 17:44:56.420 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
2023-06-25 17:44:56.421 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
111. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 17:44:56.430 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
 {executed in 9 msec}
2023-06-25 17:44:56.441 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
 {executed in 10 msec}
2023-06-25 17:44:58.506 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@3afba261
2023-06-25 17:44:58.507 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - filterType={getRouteCommonInfo} 
2023-06-25 17:44:58.507 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
2023-06-25 17:44:58.507 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
111. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 17:44:58.508 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 0 msec}
2023-06-25 17:44:58.509 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 1 msec}
2023-06-25 17:44:58.519 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@831c5585
2023-06-25 17:44:58.519 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_ANALIZE} 
2023-06-25 17:44:58.519 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.BASE_YMD   = '2023-06-01'
2023-06-25 17:44:58.521 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.BASE_YMD   = '2023-06-01'
 {executed in 1 msec}
2023-06-25 17:44:58.523 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.BASE_YMD   = '2023-06-01'
 {executed in 2 msec}
2023-06-25 17:46:02.616 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@7756fabc
2023-06-25 17:46:02.616 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - filterType={selectMonthlyPunctuality} 
2023-06-25 17:46:02.617 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
2023-06-25 17:46:02.617 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
111. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 17:46:02.627 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
 {executed in 10 msec}
2023-06-25 17:46:02.639 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
 {executed in 12 msec}
2023-06-25 17:46:03.814 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@3afba261
2023-06-25 17:46:03.814 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - filterType={getRouteCommonInfo} 
2023-06-25 17:46:03.815 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
2023-06-25 17:46:03.815 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
111. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 17:46:03.816 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 1 msec}
2023-06-25 17:46:03.816 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 0 msec}
2023-06-25 17:46:03.825 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@831c5585
2023-06-25 17:46:03.825 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_ANALIZE} 
2023-06-25 17:46:03.825 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.BASE_YMD   = '2023-06-01'
2023-06-25 17:46:03.827 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.BASE_YMD   = '2023-06-01'
 {executed in 2 msec}
2023-06-25 17:46:03.828 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.BASE_YMD   = '2023-06-01'
 {executed in 1 msec}
2023-06-25 17:46:54.056 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@b4313a5d
2023-06-25 17:46:54.056 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_INFO} 
2023-06-25 17:46:54.056 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   1 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	route_nm = '20번' AND     BASE_YMD = '2023-06-01' and		col000 = '버스ID' union select  2 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	a.route_nm = '20번' AND     a.BASE_YMD = '2023-06-01' and		a.col000 <> '버스ID' order by seq,col003
2023-06-25 17:46:54.057 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
111. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 17:46:54.074 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. select   1 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	route_nm = '20번' AND     BASE_YMD = '2023-06-01' and		col000 = '버스ID' union select  2 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	a.route_nm = '20번' AND     a.BASE_YMD = '2023-06-01' and		a.col000 <> '버스ID' order by seq,col003
 {executed in 16 msec}
2023-06-25 17:46:54.087 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. select   1 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	route_nm = '20번' AND     BASE_YMD = '2023-06-01' and		col000 = '버스ID' union select  2 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	a.route_nm = '20번' AND     a.BASE_YMD = '2023-06-01' and		a.col000 <> '버스ID' order by seq,col003
 {executed in 13 msec}
2023-06-25 17:47:54.049 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@7756fabc
2023-06-25 17:47:54.049 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - filterType={selectMonthlyPunctuality} 
2023-06-25 17:47:54.049 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
2023-06-25 17:47:54.050 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
111. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 17:47:54.060 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
 {executed in 10 msec}
2023-06-25 17:47:54.071 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
 {executed in 11 msec}
2023-06-25 17:47:55.410 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@3afba261
2023-06-25 17:47:55.411 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - filterType={getRouteCommonInfo} 
2023-06-25 17:47:55.411 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
2023-06-25 17:47:55.412 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
111. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 17:47:55.413 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 0 msec}
2023-06-25 17:47:55.413 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 0 msec}
2023-06-25 17:47:55.422 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@831c5585
2023-06-25 17:47:55.423 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_ANALIZE} 
2023-06-25 17:47:55.423 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.BASE_YMD   = '2023-06-01'
2023-06-25 17:47:55.424 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.BASE_YMD   = '2023-06-01'
 {executed in 1 msec}
2023-06-25 17:47:55.425 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.BASE_YMD   = '2023-06-01'
 {executed in 1 msec}
2023-06-25 17:48:00.210 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@b4313a5d
2023-06-25 17:48:00.210 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_INFO} 
2023-06-25 17:48:00.210 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   1 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	route_nm = '20번' AND     BASE_YMD = '2023-06-01' and		col000 = '버스ID' union select  2 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	a.route_nm = '20번' AND     a.BASE_YMD = '2023-06-01' and		a.col000 <> '버스ID' order by seq,col003
2023-06-25 17:48:00.211 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
111. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 17:48:00.224 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. select   1 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	route_nm = '20번' AND     BASE_YMD = '2023-06-01' and		col000 = '버스ID' union select  2 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	a.route_nm = '20번' AND     a.BASE_YMD = '2023-06-01' and		a.col000 <> '버스ID' order by seq,col003
 {executed in 12 msec}
2023-06-25 17:48:00.238 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. select   1 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	route_nm = '20번' AND     BASE_YMD = '2023-06-01' and		col000 = '버스ID' union select  2 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	a.route_nm = '20번' AND     a.BASE_YMD = '2023-06-01' and		a.col000 <> '버스ID' order by seq,col003
 {executed in 13 msec}
2023-06-25 17:48:57.575 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@7756fabc
2023-06-25 17:48:57.575 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - filterType={selectMonthlyPunctuality} 
2023-06-25 17:48:57.575 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
2023-06-25 17:48:57.576 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
111. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 17:48:57.585 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
 {executed in 9 msec}
2023-06-25 17:48:57.597 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
 {executed in 11 msec}
2023-06-25 17:48:59.674 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@3afba261
2023-06-25 17:48:59.674 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - filterType={getRouteCommonInfo} 
2023-06-25 17:48:59.674 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
2023-06-25 17:48:59.675 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
111. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 17:48:59.676 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 0 msec}
2023-06-25 17:48:59.676 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 0 msec}
2023-06-25 17:48:59.686 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@831c5585
2023-06-25 17:48:59.686 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_ANALIZE} 
2023-06-25 17:48:59.686 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.BASE_YMD   = '2023-06-01'
2023-06-25 17:48:59.687 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.BASE_YMD   = '2023-06-01'
 {executed in 1 msec}
2023-06-25 17:48:59.691 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.BASE_YMD   = '2023-06-01'
 {executed in 1 msec}
2023-06-25 17:49:12.364 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@7d13b9e
2023-06-25 17:49:12.364 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - filterType={getRouteCommonInfo} 
2023-06-25 17:49:12.364 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
2023-06-25 17:49:12.365 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
111. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 17:49:12.366 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 1 msec}
2023-06-25 17:49:12.367 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 0 msec}
2023-06-25 17:49:12.379 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@831c5585
2023-06-25 17:49:12.379 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_ANALIZE} 
2023-06-25 17:49:12.379 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.BASE_YMD   = '2023-06-01'
2023-06-25 17:49:12.380 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.BASE_YMD   = '2023-06-01'
 {executed in 1 msec}
2023-06-25 17:49:12.381 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.BASE_YMD   = '2023-06-01'
 {executed in 1 msec}
2023-06-25 17:49:44.168 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@b4313a5d
2023-06-25 17:49:44.168 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_INFO} 
2023-06-25 17:49:44.168 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   1 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	route_nm = '20번' AND     BASE_YMD = '2023-06-01' and		col000 = '버스ID' union select  2 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	a.route_nm = '20번' AND     a.BASE_YMD = '2023-06-01' and		a.col000 <> '버스ID' order by seq,col003
2023-06-25 17:49:44.169 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
111. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 17:49:44.183 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. select   1 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	route_nm = '20번' AND     BASE_YMD = '2023-06-01' and		col000 = '버스ID' union select  2 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	a.route_nm = '20번' AND     a.BASE_YMD = '2023-06-01' and		a.col000 <> '버스ID' order by seq,col003
 {executed in 14 msec}
2023-06-25 17:49:44.196 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. select   1 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	route_nm = '20번' AND     BASE_YMD = '2023-06-01' and		col000 = '버스ID' union select  2 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	a.route_nm = '20번' AND     a.BASE_YMD = '2023-06-01' and		a.col000 <> '버스ID' order by seq,col003
 {executed in 12 msec}
2023-06-25 17:51:00.921 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@7756fabc
2023-06-25 17:51:00.921 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - filterType={selectMonthlyPunctuality} 
2023-06-25 17:51:00.921 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
2023-06-25 17:51:00.922 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
111. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 17:51:00.933 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
 {executed in 11 msec}
2023-06-25 17:51:00.942 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
 {executed in 9 msec}
2023-06-25 17:51:02.517 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@3afba261
2023-06-25 17:51:02.517 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - filterType={getRouteCommonInfo} 
2023-06-25 17:51:02.517 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
2023-06-25 17:51:02.518 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
111. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 17:51:02.519 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 0 msec}
2023-06-25 17:51:02.520 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 0 msec}
2023-06-25 17:51:02.531 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@831c5585
2023-06-25 17:51:02.532 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_ANALIZE} 
2023-06-25 17:51:02.532 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.BASE_YMD   = '2023-06-01'
2023-06-25 17:51:02.533 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.BASE_YMD   = '2023-06-01'
 {executed in 1 msec}
2023-06-25 17:51:02.535 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.BASE_YMD   = '2023-06-01'
 {executed in 1 msec}
2023-06-25 17:51:10.986 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@b4313a5d
2023-06-25 17:51:10.986 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_INFO} 
2023-06-25 17:51:10.986 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   1 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	route_nm = '20번' AND     BASE_YMD = '2023-06-01' and		col000 = '버스ID' union select  2 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	a.route_nm = '20번' AND     a.BASE_YMD = '2023-06-01' and		a.col000 <> '버스ID' order by seq,col003
2023-06-25 17:51:10.987 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
111. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 17:51:11.000 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. select   1 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	route_nm = '20번' AND     BASE_YMD = '2023-06-01' and		col000 = '버스ID' union select  2 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	a.route_nm = '20번' AND     a.BASE_YMD = '2023-06-01' and		a.col000 <> '버스ID' order by seq,col003
 {executed in 13 msec}
2023-06-25 17:51:11.013 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
111. select   1 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	route_nm = '20번' AND     BASE_YMD = '2023-06-01' and		col000 = '버스ID' union select  2 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	a.route_nm = '20번' AND     a.BASE_YMD = '2023-06-01' and		a.col000 <> '버스ID' order by seq,col003
 {executed in 12 msec}
2023-06-25 17:54:35.433 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@7756fabc
2023-06-25 17:54:35.433 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - filterType={selectMonthlyPunctuality} 
2023-06-25 17:54:35.433 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
2023-06-25 17:54:35.434 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
121. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 17:54:35.448 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
121. WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
 {executed in 14 msec}
2023-06-25 17:54:35.458 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
121. WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
 {executed in 8 msec}
2023-06-25 17:54:36.952 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@3afba261
2023-06-25 17:54:36.952 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - filterType={getRouteCommonInfo} 
2023-06-25 17:54:36.952 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
2023-06-25 17:54:36.953 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
121. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 17:54:36.954 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
121. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 1 msec}
2023-06-25 17:54:36.955 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
121. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 1 msec}
2023-06-25 17:54:36.969 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@831c5585
2023-06-25 17:54:36.969 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_ANALIZE} 
2023-06-25 17:54:36.969 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.BASE_YMD   = '2023-06-01'
2023-06-25 17:54:36.972 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
121. select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.BASE_YMD   = '2023-06-01'
 {executed in 1 msec}
2023-06-25 17:54:36.973 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
121. select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.BASE_YMD   = '2023-06-01'
 {executed in 1 msec}
2023-06-25 17:54:41.095 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@b4313a5d
2023-06-25 17:54:41.095 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_INFO} 
2023-06-25 17:54:41.095 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   1 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	route_nm = '20번' AND     BASE_YMD = '2023-06-01' and		col000 = '버스ID' union select  2 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	a.route_nm = '20번' AND     a.BASE_YMD = '2023-06-01' and		a.col000 <> '버스ID' order by seq,col003
2023-06-25 17:54:41.096 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
121. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 17:54:41.114 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
121. select   1 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	route_nm = '20번' AND     BASE_YMD = '2023-06-01' and		col000 = '버스ID' union select  2 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	a.route_nm = '20번' AND     a.BASE_YMD = '2023-06-01' and		a.col000 <> '버스ID' order by seq,col003
 {executed in 17 msec}
2023-06-25 17:54:41.134 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
121. select   1 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	route_nm = '20번' AND     BASE_YMD = '2023-06-01' and		col000 = '버스ID' union select  2 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	a.route_nm = '20번' AND     a.BASE_YMD = '2023-06-01' and		a.col000 <> '버스ID' order by seq,col003
 {executed in 19 msec}
2023-06-25 17:55:42.595 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@7756fabc
2023-06-25 17:55:42.595 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - filterType={selectMonthlyPunctuality} 
2023-06-25 17:55:42.595 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
2023-06-25 17:55:42.596 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
121. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 17:55:42.607 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
121. WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
 {executed in 11 msec}
2023-06-25 17:55:42.616 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
121. WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
 {executed in 8 msec}
2023-06-25 17:55:43.727 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@3afba261
2023-06-25 17:55:43.727 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - filterType={getRouteCommonInfo} 
2023-06-25 17:55:43.727 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
2023-06-25 17:55:43.728 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
121. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 17:55:43.729 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
121. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 1 msec}
2023-06-25 17:55:43.730 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
121. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 0 msec}
2023-06-25 17:55:43.742 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@831c5585
2023-06-25 17:55:43.742 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_ANALIZE} 
2023-06-25 17:55:43.743 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.BASE_YMD   = '2023-06-01'
2023-06-25 17:55:43.745 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
121. select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.BASE_YMD   = '2023-06-01'
 {executed in 1 msec}
2023-06-25 17:55:43.747 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
121. select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.BASE_YMD   = '2023-06-01'
 {executed in 1 msec}
2023-06-25 17:55:48.506 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@b4313a5d
2023-06-25 17:55:48.506 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_INFO} 
2023-06-25 17:55:48.506 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   1 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	route_nm = '20번' AND     BASE_YMD = '2023-06-01' and		col000 = '버스ID' union select  2 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	a.route_nm = '20번' AND     a.BASE_YMD = '2023-06-01' and		a.col000 <> '버스ID' order by seq,col003
2023-06-25 17:55:48.507 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
121. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 17:55:48.519 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
121. select   1 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	route_nm = '20번' AND     BASE_YMD = '2023-06-01' and		col000 = '버스ID' union select  2 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	a.route_nm = '20번' AND     a.BASE_YMD = '2023-06-01' and		a.col000 <> '버스ID' order by seq,col003
 {executed in 12 msec}
2023-06-25 17:55:48.531 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
121. select   1 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	route_nm = '20번' AND     BASE_YMD = '2023-06-01' and		col000 = '버스ID' union select  2 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	a.route_nm = '20번' AND     a.BASE_YMD = '2023-06-01' and		a.col000 <> '버스ID' order by seq,col003
 {executed in 12 msec}
2023-06-25 17:56:08.330 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@7756fabc
2023-06-25 17:56:08.330 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - filterType={selectMonthlyPunctuality} 
2023-06-25 17:56:08.330 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
2023-06-25 17:56:08.331 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
121. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 17:56:08.340 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
121. WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
 {executed in 9 msec}
2023-06-25 17:56:08.349 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
121. WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
 {executed in 9 msec}
2023-06-25 17:56:09.777 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@3afba261
2023-06-25 17:56:09.777 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - filterType={getRouteCommonInfo} 
2023-06-25 17:56:09.777 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
2023-06-25 17:56:09.778 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
121. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 17:56:09.778 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
121. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 0 msec}
2023-06-25 17:56:09.779 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
121. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 0 msec}
2023-06-25 17:56:09.789 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@831c5585
2023-06-25 17:56:09.790 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_ANALIZE} 
2023-06-25 17:56:09.790 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.BASE_YMD   = '2023-06-01'
2023-06-25 17:56:09.791 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
121. select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.BASE_YMD   = '2023-06-01'
 {executed in 1 msec}
2023-06-25 17:56:09.793 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
121. select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.BASE_YMD   = '2023-06-01'
 {executed in 1 msec}
2023-06-25 17:56:12.589 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@b4313a5d
2023-06-25 17:56:12.589 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_INFO} 
2023-06-25 17:56:12.589 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   1 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	route_nm = '20번' AND     BASE_YMD = '2023-06-01' and		col000 = '버스ID' union select  2 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	a.route_nm = '20번' AND     a.BASE_YMD = '2023-06-01' and		a.col000 <> '버스ID' order by seq,col003
2023-06-25 17:56:12.590 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
121. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 17:56:12.606 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
121. select   1 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	route_nm = '20번' AND     BASE_YMD = '2023-06-01' and		col000 = '버스ID' union select  2 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	a.route_nm = '20번' AND     a.BASE_YMD = '2023-06-01' and		a.col000 <> '버스ID' order by seq,col003
 {executed in 16 msec}
2023-06-25 17:56:12.621 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
121. select   1 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	route_nm = '20번' AND     BASE_YMD = '2023-06-01' and		col000 = '버스ID' union select  2 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	a.route_nm = '20번' AND     a.BASE_YMD = '2023-06-01' and		a.col000 <> '버스ID' order by seq,col003
 {executed in 14 msec}
2023-06-25 17:56:44.373 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@7756fabc
2023-06-25 17:56:44.373 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - filterType={selectMonthlyPunctuality} 
2023-06-25 17:56:44.373 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
2023-06-25 17:56:44.374 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
121. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 17:56:44.385 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
121. WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
 {executed in 11 msec}
2023-06-25 17:56:44.393 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
121. WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
 {executed in 7 msec}
2023-06-25 17:56:45.318 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@3afba261
2023-06-25 17:56:45.318 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - filterType={getRouteCommonInfo} 
2023-06-25 17:56:45.318 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
2023-06-25 17:56:45.319 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
121. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 17:56:45.320 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
121. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 0 msec}
2023-06-25 17:56:45.320 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
121. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 0 msec}
2023-06-25 17:56:45.330 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@831c5585
2023-06-25 17:56:45.331 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_ANALIZE} 
2023-06-25 17:56:45.331 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.BASE_YMD   = '2023-06-01'
2023-06-25 17:56:45.333 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
121. select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.BASE_YMD   = '2023-06-01'
 {executed in 1 msec}
2023-06-25 17:56:45.334 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
121. select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.BASE_YMD   = '2023-06-01'
 {executed in 1 msec}
2023-06-25 17:56:47.749 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@b4313a5d
2023-06-25 17:56:47.749 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_INFO} 
2023-06-25 17:56:47.749 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   1 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	route_nm = '20번' AND     BASE_YMD = '2023-06-01' and		col000 = '버스ID' union select  2 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	a.route_nm = '20번' AND     a.BASE_YMD = '2023-06-01' and		a.col000 <> '버스ID' order by seq,col003
2023-06-25 17:56:47.750 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
121. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 17:56:47.763 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
121. select   1 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	route_nm = '20번' AND     BASE_YMD = '2023-06-01' and		col000 = '버스ID' union select  2 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	a.route_nm = '20번' AND     a.BASE_YMD = '2023-06-01' and		a.col000 <> '버스ID' order by seq,col003
 {executed in 13 msec}
2023-06-25 17:56:47.775 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
121. select   1 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	route_nm = '20번' AND     BASE_YMD = '2023-06-01' and		col000 = '버스ID' union select  2 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	a.route_nm = '20번' AND     a.BASE_YMD = '2023-06-01' and		a.col000 <> '버스ID' order by seq,col003
 {executed in 12 msec}
2023-06-25 18:01:28.920 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@7756fabc
2023-06-25 18:01:28.920 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - filterType={selectMonthlyPunctuality} 
2023-06-25 18:01:28.920 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
2023-06-25 18:01:28.921 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
121. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 18:01:28.930 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
121. WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
 {executed in 8 msec}
2023-06-25 18:01:28.940 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
121. WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
 {executed in 9 msec}
2023-06-25 18:01:29.997 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@3afba261
2023-06-25 18:01:29.997 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - filterType={getRouteCommonInfo} 
2023-06-25 18:01:29.997 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
2023-06-25 18:01:29.998 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
121. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 18:01:29.999 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
121. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 1 msec}
2023-06-25 18:01:29.999 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
121. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 0 msec}
2023-06-25 18:01:30.009 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@831c5585
2023-06-25 18:01:30.009 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_ANALIZE} 
2023-06-25 18:01:30.010 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.BASE_YMD   = '2023-06-01'
2023-06-25 18:01:30.011 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
121. select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.BASE_YMD   = '2023-06-01'
 {executed in 1 msec}
2023-06-25 18:01:30.012 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
121. select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.BASE_YMD   = '2023-06-01'
 {executed in 1 msec}
2023-06-25 18:01:32.273 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@b4313a5d
2023-06-25 18:01:32.273 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_INFO} 
2023-06-25 18:01:32.273 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   1 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	route_nm = '20번' AND     BASE_YMD = '2023-06-01' and		col000 = '버스ID' union select  2 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	a.route_nm = '20번' AND     a.BASE_YMD = '2023-06-01' and		a.col000 <> '버스ID' order by seq,col003
2023-06-25 18:01:32.274 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
121. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 18:01:32.287 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
121. select   1 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	route_nm = '20번' AND     BASE_YMD = '2023-06-01' and		col000 = '버스ID' union select  2 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	a.route_nm = '20번' AND     a.BASE_YMD = '2023-06-01' and		a.col000 <> '버스ID' order by seq,col003
 {executed in 13 msec}
2023-06-25 18:01:32.299 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
121. select   1 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	route_nm = '20번' AND     BASE_YMD = '2023-06-01' and		col000 = '버스ID' union select  2 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	a.route_nm = '20번' AND     a.BASE_YMD = '2023-06-01' and		a.col000 <> '버스ID' order by seq,col003
 {executed in 12 msec}
2023-06-25 18:02:18.049 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@7756fabc
2023-06-25 18:02:18.049 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - filterType={selectMonthlyPunctuality} 
2023-06-25 18:02:18.049 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
2023-06-25 18:02:18.050 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
121. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 18:02:18.060 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
121. WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
 {executed in 10 msec}
2023-06-25 18:02:18.071 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
121. WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
 {executed in 10 msec}
2023-06-25 18:02:19.169 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@3afba261
2023-06-25 18:02:19.169 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - filterType={getRouteCommonInfo} 
2023-06-25 18:02:19.169 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
2023-06-25 18:02:19.170 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
121. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 18:02:19.171 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
121. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 1 msec}
2023-06-25 18:02:19.172 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
121. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 1 msec}
2023-06-25 18:02:19.183 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@831c5585
2023-06-25 18:02:19.183 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_ANALIZE} 
2023-06-25 18:02:19.183 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.BASE_YMD   = '2023-06-01'
2023-06-25 18:02:19.185 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
121. select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.BASE_YMD   = '2023-06-01'
 {executed in 2 msec}
2023-06-25 18:02:19.188 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
121. select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.BASE_YMD   = '2023-06-01'
 {executed in 1 msec}
2023-06-25 18:02:22.538 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@b4313a5d
2023-06-25 18:02:22.538 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_INFO} 
2023-06-25 18:02:22.538 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   1 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	route_nm = '20번' AND     BASE_YMD = '2023-06-01' and		col000 = '버스ID' union select  2 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	a.route_nm = '20번' AND     a.BASE_YMD = '2023-06-01' and		a.col000 <> '버스ID' order by seq,col003
2023-06-25 18:02:22.539 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
121. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 18:02:22.553 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
121. select   1 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	route_nm = '20번' AND     BASE_YMD = '2023-06-01' and		col000 = '버스ID' union select  2 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	a.route_nm = '20번' AND     a.BASE_YMD = '2023-06-01' and		a.col000 <> '버스ID' order by seq,col003
 {executed in 13 msec}
2023-06-25 18:02:22.565 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
121. select   1 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	route_nm = '20번' AND     BASE_YMD = '2023-06-01' and		col000 = '버스ID' union select  2 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	a.route_nm = '20번' AND     a.BASE_YMD = '2023-06-01' and		a.col000 <> '버스ID' order by seq,col003
 {executed in 12 msec}
2023-06-25 18:07:14.025 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@7756fabc
2023-06-25 18:07:14.025 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - filterType={selectMonthlyPunctuality} 
2023-06-25 18:07:14.025 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
2023-06-25 18:07:14.026 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
121. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 18:07:14.036 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
121. WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
 {executed in 10 msec}
2023-06-25 18:07:14.049 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
121. WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
 {executed in 13 msec}
2023-06-25 18:07:15.583 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@3afba261
2023-06-25 18:07:15.583 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - filterType={getRouteCommonInfo} 
2023-06-25 18:07:15.583 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
2023-06-25 18:07:15.584 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
121. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 18:07:15.585 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
121. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 1 msec}
2023-06-25 18:07:15.587 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
121. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 0 msec}
2023-06-25 18:07:15.597 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@831c5585
2023-06-25 18:07:15.597 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_ANALIZE} 
2023-06-25 18:07:15.597 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.BASE_YMD   = '2023-06-01'
2023-06-25 18:07:15.599 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
121. select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.BASE_YMD   = '2023-06-01'
 {executed in 1 msec}
2023-06-25 18:07:15.600 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
121. select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.BASE_YMD   = '2023-06-01'
 {executed in 1 msec}
2023-06-25 18:07:18.061 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@b4313a5d
2023-06-25 18:07:18.061 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_INFO} 
2023-06-25 18:07:18.061 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   1 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	route_nm = '20번' AND     BASE_YMD = '2023-06-01' and		col000 = '버스ID' union select  2 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	a.route_nm = '20번' AND     a.BASE_YMD = '2023-06-01' and		a.col000 <> '버스ID' order by seq,col003
2023-06-25 18:07:18.062 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
121. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 18:07:18.078 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
121. select   1 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	route_nm = '20번' AND     BASE_YMD = '2023-06-01' and		col000 = '버스ID' union select  2 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	a.route_nm = '20번' AND     a.BASE_YMD = '2023-06-01' and		a.col000 <> '버스ID' order by seq,col003
 {executed in 15 msec}
2023-06-25 18:07:18.092 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
121. select   1 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	route_nm = '20번' AND     BASE_YMD = '2023-06-01' and		col000 = '버스ID' union select  2 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	a.route_nm = '20번' AND     a.BASE_YMD = '2023-06-01' and		a.col000 <> '버스ID' order by seq,col003
 {executed in 14 msec}
2023-06-25 18:10:04.176 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@7756fabc
2023-06-25 18:10:04.176 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - filterType={selectMonthlyPunctuality} 
2023-06-25 18:10:04.178 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
2023-06-25 18:10:04.178 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
121. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 18:10:04.187 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
121. WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
 {executed in 9 msec}
2023-06-25 18:10:04.197 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
121. WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
 {executed in 10 msec}
2023-06-25 18:10:06.038 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@3afba261
2023-06-25 18:10:06.038 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - filterType={getRouteCommonInfo} 
2023-06-25 18:10:06.038 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
2023-06-25 18:10:06.039 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
121. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 18:10:06.040 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
121. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 1 msec}
2023-06-25 18:10:06.041 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
121. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 1 msec}
2023-06-25 18:10:06.053 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@831c5585
2023-06-25 18:10:06.053 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_ANALIZE} 
2023-06-25 18:10:06.053 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.BASE_YMD   = '2023-06-01'
2023-06-25 18:10:06.054 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
121. select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.BASE_YMD   = '2023-06-01'
 {executed in 1 msec}
2023-06-25 18:10:06.056 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
121. select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.BASE_YMD   = '2023-06-01'
 {executed in 1 msec}
2023-06-25 18:10:08.521 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@b4313a5d
2023-06-25 18:10:08.521 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_INFO} 
2023-06-25 18:10:08.521 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   1 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	route_nm = '20번' AND     BASE_YMD = '2023-06-01' and		col000 = '버스ID' union select  2 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	a.route_nm = '20번' AND     a.BASE_YMD = '2023-06-01' and		a.col000 <> '버스ID' order by seq,col003
2023-06-25 18:10:08.522 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
121. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 18:10:08.537 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
121. select   1 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	route_nm = '20번' AND     BASE_YMD = '2023-06-01' and		col000 = '버스ID' union select  2 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	a.route_nm = '20번' AND     a.BASE_YMD = '2023-06-01' and		a.col000 <> '버스ID' order by seq,col003
 {executed in 15 msec}
2023-06-25 18:10:08.552 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
121. select   1 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	route_nm = '20번' AND     BASE_YMD = '2023-06-01' and		col000 = '버스ID' union select  2 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	a.route_nm = '20번' AND     a.BASE_YMD = '2023-06-01' and		a.col000 <> '버스ID' order by seq,col003
 {executed in 13 msec}
2023-06-25 18:16:04.180 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@7756fabc
2023-06-25 18:16:04.180 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - filterType={selectMonthlyPunctuality} 
2023-06-25 18:16:04.180 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
2023-06-25 18:16:04.181 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
131. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 18:16:04.193 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
131. WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
 {executed in 12 msec}
2023-06-25 18:16:04.207 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
131. WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
 {executed in 13 msec}
2023-06-25 18:16:05.768 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@3afba261
2023-06-25 18:16:05.768 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - filterType={getRouteCommonInfo} 
2023-06-25 18:16:05.768 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
2023-06-25 18:16:05.769 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
131. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 18:16:05.770 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
131. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 1 msec}
2023-06-25 18:16:05.771 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
131. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 1 msec}
2023-06-25 18:16:05.782 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@831c5585
2023-06-25 18:16:05.782 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_ANALIZE} 
2023-06-25 18:16:05.782 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.BASE_YMD   = '2023-06-01'
2023-06-25 18:16:05.783 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
131. select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.BASE_YMD   = '2023-06-01'
 {executed in 1 msec}
2023-06-25 18:16:05.786 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
131. select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.BASE_YMD   = '2023-06-01'
 {executed in 1 msec}
2023-06-25 18:16:08.381 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@b4313a5d
2023-06-25 18:16:08.381 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_INFO} 
2023-06-25 18:16:08.381 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   1 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	route_nm = '20번' AND     BASE_YMD = '2023-06-01' and		col000 = '버스ID' union select  2 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	a.route_nm = '20번' AND     a.BASE_YMD = '2023-06-01' and		a.col000 <> '버스ID' order by seq,col003
2023-06-25 18:16:08.382 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
131. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 18:16:08.400 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
131. select   1 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	route_nm = '20번' AND     BASE_YMD = '2023-06-01' and		col000 = '버스ID' union select  2 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	a.route_nm = '20번' AND     a.BASE_YMD = '2023-06-01' and		a.col000 <> '버스ID' order by seq,col003
 {executed in 18 msec}
2023-06-25 18:16:08.415 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
131. select   1 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	route_nm = '20번' AND     BASE_YMD = '2023-06-01' and		col000 = '버스ID' union select  2 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	a.route_nm = '20번' AND     a.BASE_YMD = '2023-06-01' and		a.col000 <> '버스ID' order by seq,col003
 {executed in 14 msec}
2023-06-25 18:17:17.586 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@7756fabc
2023-06-25 18:17:17.586 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - filterType={selectMonthlyPunctuality} 
2023-06-25 18:17:17.586 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
2023-06-25 18:17:17.587 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
131. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 18:17:17.596 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
131. WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
 {executed in 8 msec}
2023-06-25 18:17:17.609 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
131. WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
 {executed in 13 msec}
2023-06-25 18:17:18.865 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@3afba261
2023-06-25 18:17:18.865 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - filterType={getRouteCommonInfo} 
2023-06-25 18:17:18.865 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
2023-06-25 18:17:18.865 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
131. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 18:17:18.866 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
131. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 1 msec}
2023-06-25 18:17:18.867 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
131. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 1 msec}
2023-06-25 18:17:18.878 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@831c5585
2023-06-25 18:17:18.878 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_ANALIZE} 
2023-06-25 18:17:18.878 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.BASE_YMD   = '2023-06-01'
2023-06-25 18:17:18.880 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
131. select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.BASE_YMD   = '2023-06-01'
 {executed in 2 msec}
2023-06-25 18:17:18.882 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
131. select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.BASE_YMD   = '2023-06-01'
 {executed in 1 msec}
2023-06-25 18:17:21.571 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@b4313a5d
2023-06-25 18:17:21.571 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_INFO} 
2023-06-25 18:17:21.571 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   1 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	route_nm = '20번' AND     BASE_YMD = '2023-06-01' and		col000 = '버스ID' union select  2 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	a.route_nm = '20번' AND     a.BASE_YMD = '2023-06-01' and		a.col000 <> '버스ID' order by seq,col003
2023-06-25 18:17:21.572 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
131. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 18:17:21.588 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
131. select   1 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	route_nm = '20번' AND     BASE_YMD = '2023-06-01' and		col000 = '버스ID' union select  2 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	a.route_nm = '20번' AND     a.BASE_YMD = '2023-06-01' and		a.col000 <> '버스ID' order by seq,col003
 {executed in 16 msec}
2023-06-25 18:17:21.601 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
131. select   1 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	route_nm = '20번' AND     BASE_YMD = '2023-06-01' and		col000 = '버스ID' union select  2 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	a.route_nm = '20번' AND     a.BASE_YMD = '2023-06-01' and		a.col000 <> '버스ID' order by seq,col003
 {executed in 12 msec}
2023-06-25 18:21:47.426 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@7756fabc
2023-06-25 18:21:47.426 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - filterType={selectMonthlyPunctuality} 
2023-06-25 18:21:47.426 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
2023-06-25 18:21:47.427 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
131. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 18:21:47.442 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
131. WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
 {executed in 15 msec}
2023-06-25 18:21:47.457 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
131. WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
 {executed in 14 msec}
2023-06-25 18:21:48.538 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@3afba261
2023-06-25 18:21:48.538 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - filterType={getRouteCommonInfo} 
2023-06-25 18:21:48.538 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
2023-06-25 18:21:48.540 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
131. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 18:21:48.541 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
131. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 0 msec}
2023-06-25 18:21:48.542 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
131. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 1 msec}
2023-06-25 18:21:48.551 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@831c5585
2023-06-25 18:21:48.551 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_ANALIZE} 
2023-06-25 18:21:48.552 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.BASE_YMD   = '2023-06-01'
2023-06-25 18:21:48.553 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
131. select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.BASE_YMD   = '2023-06-01'
 {executed in 1 msec}
2023-06-25 18:21:48.555 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
131. select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.BASE_YMD   = '2023-06-01'
 {executed in 1 msec}
2023-06-25 18:21:53.245 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@b4313a5d
2023-06-25 18:21:53.245 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_INFO} 
2023-06-25 18:21:53.245 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   1 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	route_nm = '20번' AND     BASE_YMD = '2023-06-01' and		col000 = '버스ID' union select  2 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	a.route_nm = '20번' AND     a.BASE_YMD = '2023-06-01' and		a.col000 <> '버스ID' order by seq,col003
2023-06-25 18:21:53.246 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
131. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 18:21:53.261 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
131. select   1 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	route_nm = '20번' AND     BASE_YMD = '2023-06-01' and		col000 = '버스ID' union select  2 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	a.route_nm = '20번' AND     a.BASE_YMD = '2023-06-01' and		a.col000 <> '버스ID' order by seq,col003
 {executed in 15 msec}
2023-06-25 18:21:53.273 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
131. select   1 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	route_nm = '20번' AND     BASE_YMD = '2023-06-01' and		col000 = '버스ID' union select  2 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	a.route_nm = '20번' AND     a.BASE_YMD = '2023-06-01' and		a.col000 <> '버스ID' order by seq,col003
 {executed in 12 msec}
2023-06-25 18:22:08.454 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@7756fabc
2023-06-25 18:22:08.454 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - filterType={selectMonthlyPunctuality} 
2023-06-25 18:22:08.454 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
2023-06-25 18:22:08.455 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
131. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 18:22:08.467 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
131. WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
 {executed in 12 msec}
2023-06-25 18:22:08.479 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
131. WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
 {executed in 12 msec}
2023-06-25 18:22:10.040 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@3afba261
2023-06-25 18:22:10.040 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - filterType={getRouteCommonInfo} 
2023-06-25 18:22:10.040 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
2023-06-25 18:22:10.041 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
131. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 18:22:10.042 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
131. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 0 msec}
2023-06-25 18:22:10.043 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
131. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 0 msec}
2023-06-25 18:22:10.056 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@831c5585
2023-06-25 18:22:10.056 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_ANALIZE} 
2023-06-25 18:22:10.056 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.BASE_YMD   = '2023-06-01'
2023-06-25 18:22:10.058 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
131. select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.BASE_YMD   = '2023-06-01'
 {executed in 2 msec}
2023-06-25 18:22:10.060 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
131. select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.BASE_YMD   = '2023-06-01'
 {executed in 2 msec}
2023-06-25 18:22:11.805 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@b4313a5d
2023-06-25 18:22:11.805 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_INFO} 
2023-06-25 18:22:11.805 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   1 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	route_nm = '20번' AND     BASE_YMD = '2023-06-01' and		col000 = '버스ID' union select  2 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	a.route_nm = '20번' AND     a.BASE_YMD = '2023-06-01' and		a.col000 <> '버스ID' order by seq,col003
2023-06-25 18:22:11.807 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
131. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 18:22:11.820 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
131. select   1 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	route_nm = '20번' AND     BASE_YMD = '2023-06-01' and		col000 = '버스ID' union select  2 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	a.route_nm = '20번' AND     a.BASE_YMD = '2023-06-01' and		a.col000 <> '버스ID' order by seq,col003
 {executed in 13 msec}
2023-06-25 18:22:11.833 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
131. select   1 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	route_nm = '20번' AND     BASE_YMD = '2023-06-01' and		col000 = '버스ID' union select  2 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	a.route_nm = '20번' AND     a.BASE_YMD = '2023-06-01' and		a.col000 <> '버스ID' order by seq,col003
 {executed in 13 msec}
2023-06-25 18:24:28.990 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@7756fabc
2023-06-25 18:24:28.990 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - filterType={selectMonthlyPunctuality} 
2023-06-25 18:24:28.991 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
2023-06-25 18:24:28.992 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
131. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 18:24:29.005 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
131. WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
 {executed in 12 msec}
2023-06-25 18:24:29.024 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
131. WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
 {executed in 19 msec}
2023-06-25 18:24:30.076 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@3afba261
2023-06-25 18:24:30.076 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - filterType={getRouteCommonInfo} 
2023-06-25 18:24:30.076 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
2023-06-25 18:24:30.076 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
131. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 18:24:30.077 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
131. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 0 msec}
2023-06-25 18:24:30.078 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
131. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 0 msec}
2023-06-25 18:24:30.093 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@831c5585
2023-06-25 18:24:30.093 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_ANALIZE} 
2023-06-25 18:24:30.093 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.BASE_YMD   = '2023-06-01'
2023-06-25 18:24:30.095 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
131. select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.BASE_YMD   = '2023-06-01'
 {executed in 1 msec}
2023-06-25 18:24:30.097 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
131. select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.BASE_YMD   = '2023-06-01'
 {executed in 1 msec}
2023-06-25 18:24:32.875 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@b4313a5d
2023-06-25 18:24:32.875 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_INFO} 
2023-06-25 18:24:32.876 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   1 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	route_nm = '20번' AND     BASE_YMD = '2023-06-01' and		col000 = '버스ID' union select  2 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	a.route_nm = '20번' AND     a.BASE_YMD = '2023-06-01' and		a.col000 <> '버스ID' order by seq,col003
2023-06-25 18:24:32.876 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
131. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 18:24:32.890 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
131. select   1 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	route_nm = '20번' AND     BASE_YMD = '2023-06-01' and		col000 = '버스ID' union select  2 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	a.route_nm = '20번' AND     a.BASE_YMD = '2023-06-01' and		a.col000 <> '버스ID' order by seq,col003
 {executed in 13 msec}
2023-06-25 18:24:32.903 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
131. select   1 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	route_nm = '20번' AND     BASE_YMD = '2023-06-01' and		col000 = '버스ID' union select  2 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	a.route_nm = '20번' AND     a.BASE_YMD = '2023-06-01' and		a.col000 <> '버스ID' order by seq,col003
 {executed in 13 msec}
2023-06-25 18:25:42.411 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@7756fabc
2023-06-25 18:25:42.411 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - filterType={selectMonthlyPunctuality} 
2023-06-25 18:25:42.411 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
2023-06-25 18:25:42.412 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
131. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 18:25:42.423 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
131. WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
 {executed in 11 msec}
2023-06-25 18:25:42.432 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
131. WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
 {executed in 9 msec}
2023-06-25 18:25:43.490 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@3afba261
2023-06-25 18:25:43.490 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - filterType={getRouteCommonInfo} 
2023-06-25 18:25:43.490 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
2023-06-25 18:25:43.491 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
131. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 18:25:43.492 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
131. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 0 msec}
2023-06-25 18:25:43.494 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
131. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 0 msec}
2023-06-25 18:25:43.504 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@831c5585
2023-06-25 18:25:43.504 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_ANALIZE} 
2023-06-25 18:25:43.505 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.BASE_YMD   = '2023-06-01'
2023-06-25 18:25:43.506 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
131. select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.BASE_YMD   = '2023-06-01'
 {executed in 1 msec}
2023-06-25 18:25:43.508 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
131. select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.BASE_YMD   = '2023-06-01'
 {executed in 2 msec}
2023-06-25 18:25:45.244 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@b4313a5d
2023-06-25 18:25:45.244 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_INFO} 
2023-06-25 18:25:45.244 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   1 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	route_nm = '20번' AND     BASE_YMD = '2023-06-01' and		col000 = '버스ID' union select  2 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	a.route_nm = '20번' AND     a.BASE_YMD = '2023-06-01' and		a.col000 <> '버스ID' order by seq,col003
2023-06-25 18:25:45.245 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
131. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 18:25:45.257 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
131. select   1 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	route_nm = '20번' AND     BASE_YMD = '2023-06-01' and		col000 = '버스ID' union select  2 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	a.route_nm = '20번' AND     a.BASE_YMD = '2023-06-01' and		a.col000 <> '버스ID' order by seq,col003
 {executed in 11 msec}
2023-06-25 18:25:45.270 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
131. select   1 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	route_nm = '20번' AND     BASE_YMD = '2023-06-01' and		col000 = '버스ID' union select  2 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	a.route_nm = '20번' AND     a.BASE_YMD = '2023-06-01' and		a.col000 <> '버스ID' order by seq,col003
 {executed in 13 msec}
2023-06-25 18:26:30.266 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@7756fabc
2023-06-25 18:26:30.266 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - filterType={selectMonthlyPunctuality} 
2023-06-25 18:26:30.266 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
2023-06-25 18:26:30.267 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
131. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 18:26:30.276 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
131. WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
 {executed in 9 msec}
2023-06-25 18:26:30.286 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
131. WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
 {executed in 9 msec}
2023-06-25 18:26:31.706 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@3afba261
2023-06-25 18:26:31.706 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - filterType={getRouteCommonInfo} 
2023-06-25 18:26:31.706 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
2023-06-25 18:26:31.707 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
131. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 18:26:31.708 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
131. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 1 msec}
2023-06-25 18:26:31.709 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
131. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 1 msec}
2023-06-25 18:26:31.719 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@831c5585
2023-06-25 18:26:31.719 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_ANALIZE} 
2023-06-25 18:26:31.719 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.BASE_YMD   = '2023-06-01'
2023-06-25 18:26:31.721 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
131. select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.BASE_YMD   = '2023-06-01'
 {executed in 1 msec}
2023-06-25 18:26:31.723 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
131. select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.BASE_YMD   = '2023-06-01'
 {executed in 1 msec}
2023-06-25 18:26:34.458 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@b4313a5d
2023-06-25 18:26:34.458 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_INFO} 
2023-06-25 18:26:34.458 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   1 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	route_nm = '20번' AND     BASE_YMD = '2023-06-01' and		col000 = '버스ID' union select  2 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	a.route_nm = '20번' AND     a.BASE_YMD = '2023-06-01' and		a.col000 <> '버스ID' order by seq,col003
2023-06-25 18:26:34.459 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
131. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 18:26:34.474 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
131. select   1 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	route_nm = '20번' AND     BASE_YMD = '2023-06-01' and		col000 = '버스ID' union select  2 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	a.route_nm = '20번' AND     a.BASE_YMD = '2023-06-01' and		a.col000 <> '버스ID' order by seq,col003
 {executed in 14 msec}
2023-06-25 18:26:34.488 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
131. select   1 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	route_nm = '20번' AND     BASE_YMD = '2023-06-01' and		col000 = '버스ID' union select  2 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	a.route_nm = '20번' AND     a.BASE_YMD = '2023-06-01' and		a.col000 <> '버스ID' order by seq,col003
 {executed in 13 msec}
2023-06-25 18:26:54.841 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@7756fabc
2023-06-25 18:26:54.841 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - filterType={selectMonthlyPunctuality} 
2023-06-25 18:26:54.841 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
2023-06-25 18:26:54.842 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
131. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 18:26:54.854 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
131. WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
 {executed in 12 msec}
2023-06-25 18:26:54.863 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
131. WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
 {executed in 8 msec}
2023-06-25 18:26:55.922 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@3afba261
2023-06-25 18:26:55.922 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - filterType={getRouteCommonInfo} 
2023-06-25 18:26:55.923 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
2023-06-25 18:26:55.923 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
131. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 18:26:55.924 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
131. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 0 msec}
2023-06-25 18:26:55.925 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
131. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 1 msec}
2023-06-25 18:26:55.939 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@831c5585
2023-06-25 18:26:55.939 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_ANALIZE} 
2023-06-25 18:26:55.939 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.BASE_YMD   = '2023-06-01'
2023-06-25 18:26:55.941 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
131. select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.BASE_YMD   = '2023-06-01'
 {executed in 1 msec}
2023-06-25 18:26:55.942 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
131. select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.BASE_YMD   = '2023-06-01'
 {executed in 1 msec}
2023-06-25 18:26:57.624 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@b4313a5d
2023-06-25 18:26:57.624 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_INFO} 
2023-06-25 18:26:57.624 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   1 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	route_nm = '20번' AND     BASE_YMD = '2023-06-01' and		col000 = '버스ID' union select  2 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	a.route_nm = '20번' AND     a.BASE_YMD = '2023-06-01' and		a.col000 <> '버스ID' order by seq,col003
2023-06-25 18:26:57.625 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
131. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 18:26:57.639 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
131. select   1 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	route_nm = '20번' AND     BASE_YMD = '2023-06-01' and		col000 = '버스ID' union select  2 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	a.route_nm = '20번' AND     a.BASE_YMD = '2023-06-01' and		a.col000 <> '버스ID' order by seq,col003
 {executed in 13 msec}
2023-06-25 18:26:57.653 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
131. select   1 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	route_nm = '20번' AND     BASE_YMD = '2023-06-01' and		col000 = '버스ID' union select  2 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	a.route_nm = '20번' AND     a.BASE_YMD = '2023-06-01' and		a.col000 <> '버스ID' order by seq,col003
 {executed in 14 msec}
2023-06-25 18:27:12.271 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@7756fabc
2023-06-25 18:27:12.271 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - filterType={selectMonthlyPunctuality} 
2023-06-25 18:27:12.271 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
2023-06-25 18:27:12.272 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
131. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 18:27:12.282 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
131. WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
 {executed in 10 msec}
2023-06-25 18:27:12.292 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
131. WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
 {executed in 10 msec}
2023-06-25 18:27:13.584 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@3afba261
2023-06-25 18:27:13.584 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - filterType={getRouteCommonInfo} 
2023-06-25 18:27:13.584 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
2023-06-25 18:27:13.585 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
131. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 18:27:13.586 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
131. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 1 msec}
2023-06-25 18:27:13.587 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
131. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 0 msec}
2023-06-25 18:27:13.602 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@831c5585
2023-06-25 18:27:13.602 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_ANALIZE} 
2023-06-25 18:27:13.602 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.BASE_YMD   = '2023-06-01'
2023-06-25 18:27:13.603 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
131. select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.BASE_YMD   = '2023-06-01'
 {executed in 1 msec}
2023-06-25 18:27:13.606 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
131. select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.BASE_YMD   = '2023-06-01'
 {executed in 1 msec}
2023-06-25 18:27:20.143 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@b4313a5d
2023-06-25 18:27:20.143 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_INFO} 
2023-06-25 18:27:20.144 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   1 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	route_nm = '20번' AND     BASE_YMD = '2023-06-01' and		col000 = '버스ID' union select  2 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	a.route_nm = '20번' AND     a.BASE_YMD = '2023-06-01' and		a.col000 <> '버스ID' order by seq,col003
2023-06-25 18:27:20.145 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
131. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 18:27:20.159 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
131. select   1 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	route_nm = '20번' AND     BASE_YMD = '2023-06-01' and		col000 = '버스ID' union select  2 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	a.route_nm = '20번' AND     a.BASE_YMD = '2023-06-01' and		a.col000 <> '버스ID' order by seq,col003
 {executed in 13 msec}
2023-06-25 18:27:20.176 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
131. select   1 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	route_nm = '20번' AND     BASE_YMD = '2023-06-01' and		col000 = '버스ID' union select  2 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	a.route_nm = '20번' AND     a.BASE_YMD = '2023-06-01' and		a.col000 <> '버스ID' order by seq,col003
 {executed in 16 msec}
2023-06-25 18:27:35.322 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@81314a9b
2023-06-25 18:27:35.322 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - filterType={getRouteCommonInfo} 
2023-06-25 18:27:35.322 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
2023-06-25 18:27:35.323 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
131. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 18:27:35.323 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
131. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 0 msec}
2023-06-25 18:27:35.324 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
131. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 0 msec}
2023-06-25 18:27:35.337 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@f6475baf
2023-06-25 18:27:35.337 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_INFO_DETAIL} 
2023-06-25 18:27:35.337 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : WITH daily_arrange as ( SELECT a.CAR_REGNO , a.EMP_NM , '' AS value, REGEXP_REPLACE(a.d1, '[*0-9@]', '') AS ampm, CONVERT(REGEXP_REPLACE(a.d1, '[*ap@]', ''),	int) AS seq FROM TBL_MONTH_ARRANGE_DETAIL a WHERE a.company_no = '100' AND a.route_nm = '20번' AND a.BASE_Ym = '2023-06' AND a.CAR_REGNO NOT LIKE 'SP%' AND a.d1 NOT LIKE '%*%' AND a.d1 NOT LIKE '%@%' AND a.DISPATCH_SEQ = 6 AND a.INIT_SEQ = 0 UNION ALL SELECT a.CAR_REGNO , b.EMP_NM , decode(b.EMP_NM, NULL, '', 'SP') AS value, REGEXP_REPLACE(a.d1, '[*0-9@-]', '') AS ampm, CONVERT(REGEXP_REPLACE(a.d1, '[*ap@-]', ''),int) AS seq FROM TBL_MONTH_ARRANGE_DETAIL a LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO AND a.ROUTE_NM = b.ROUTE_NM AND a.BASE_YM = b.BASE_YM AND a.DISPATCH_SEQ = b.DISPATCH_SEQ AND a.INIT_SEQ = b.INIT_SEQ AND b.CAR_REGNO LIKE 'SP%' AND b.d1 <> '' AND a.d1 LIKE b.d1 || '%' WHERE a.company_no = '100' AND a.route_nm = '20번' AND a.BASE_Ym = '2023-06' AND a.CAR_REGNO NOT LIKE 'SP%' AND (a.d1 LIKE '%*%'			OR a.d1 LIKE '%@%') AND a.DISPATCH_SEQ = 6  AND a.INIT_SEQ = 0 ) select   1 seq,'-' as emp_nm, 'a' as ampm_gb,a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	route_nm = '20번' AND     BASE_YMD = '2023-06-01' and		col000 = '버스ID' union SELECT 2 seq ,nvl(d.emp_nm,'-') as emp_nm ,k.* FROM ( select CASE WHEN (',' || b.am_seq_array || ',' LIKE '%,' || a.col002 ||',%') THEN 'a' ELSE 'p' END ampm_gb ,	a.* from    TBL_arrange_punctuality_info a JOIN TBM_ROUTE_COMMON_INFO b ON a.COMPANY_NO = b.COMPANY_NO AND a.ROUTE_NM = b.ROUTE_NM AND b.CODE ='배차정시성대상회차' where   a.company_no = '100' AND 	a.route_nm = '20번' AND     a.BASE_YMD = '2023-06-01' and		a.col000 <> '버스ID' AND     ( (',' || b.am_seq_array || ',' LIKE '%,' || a.col002 ||',%') OR (',' || b.pm_seq_array || ',' LIKE '%,' || a.col002 ||',%')) ) k left outer join daily_arrange d on k.col001 = d.car_regno AND 	k.ampm_gb = d.ampm		order by seq,col003
2023-06-25 18:27:35.348 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
131. WITH daily_arrange as ( SELECT a.CAR_REGNO , a.EMP_NM , '' AS value, REGEXP_REPLACE(a.d1, '[*0-9@]', '') AS ampm, CONVERT(REGEXP_REPLACE(a.d1, '[*ap@]', ''),	int) AS seq FROM TBL_MONTH_ARRANGE_DETAIL a WHERE a.company_no = '100' AND a.route_nm = '20번' AND a.BASE_Ym = '2023-06' AND a.CAR_REGNO NOT LIKE 'SP%' AND a.d1 NOT LIKE '%*%' AND a.d1 NOT LIKE '%@%' AND a.DISPATCH_SEQ = 6 AND a.INIT_SEQ = 0 UNION ALL SELECT a.CAR_REGNO , b.EMP_NM , decode(b.EMP_NM, NULL, '', 'SP') AS value, REGEXP_REPLACE(a.d1, '[*0-9@-]', '') AS ampm, CONVERT(REGEXP_REPLACE(a.d1, '[*ap@-]', ''),int) AS seq FROM TBL_MONTH_ARRANGE_DETAIL a LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO AND a.ROUTE_NM = b.ROUTE_NM AND a.BASE_YM = b.BASE_YM AND a.DISPATCH_SEQ = b.DISPATCH_SEQ AND a.INIT_SEQ = b.INIT_SEQ AND b.CAR_REGNO LIKE 'SP%' AND b.d1 <> '' AND a.d1 LIKE b.d1 || '%' WHERE a.company_no = '100' AND a.route_nm = '20번' AND a.BASE_Ym = '2023-06' AND a.CAR_REGNO NOT LIKE 'SP%' AND (a.d1 LIKE '%*%'			OR a.d1 LIKE '%@%') AND a.DISPATCH_SEQ = 6  AND a.INIT_SEQ = 0 ) select   1 seq,'-' as emp_nm, 'a' as ampm_gb,a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	route_nm = '20번' AND     BASE_YMD = '2023-06-01' and		col000 = '버스ID' union SELECT 2 seq ,nvl(d.emp_nm,'-') as emp_nm ,k.* FROM ( select CASE WHEN (',' || b.am_seq_array || ',' LIKE '%,' || a.col002 ||',%') THEN 'a' ELSE 'p' END ampm_gb ,	a.* from    TBL_arrange_punctuality_info a JOIN TBM_ROUTE_COMMON_INFO b ON a.COMPANY_NO = b.COMPANY_NO AND a.ROUTE_NM = b.ROUTE_NM AND b.CODE ='배차정시성대상회차' where   a.company_no = '100' AND 	a.route_nm = '20번' AND     a.BASE_YMD = '2023-06-01' and		a.col000 <> '버스ID' AND     ( (',' || b.am_seq_array || ',' LIKE '%,' || a.col002 ||',%') OR (',' || b.pm_seq_array || ',' LIKE '%,' || a.col002 ||',%')) ) k left outer join daily_arrange d on k.col001 = d.car_regno AND 	k.ampm_gb = d.ampm		order by seq,col003
 {executed in 11 msec}
2023-06-25 18:27:35.359 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
131. WITH daily_arrange as ( SELECT a.CAR_REGNO , a.EMP_NM , '' AS value, REGEXP_REPLACE(a.d1, '[*0-9@]', '') AS ampm, CONVERT(REGEXP_REPLACE(a.d1, '[*ap@]', ''),	int) AS seq FROM TBL_MONTH_ARRANGE_DETAIL a WHERE a.company_no = '100' AND a.route_nm = '20번' AND a.BASE_Ym = '2023-06' AND a.CAR_REGNO NOT LIKE 'SP%' AND a.d1 NOT LIKE '%*%' AND a.d1 NOT LIKE '%@%' AND a.DISPATCH_SEQ = 6 AND a.INIT_SEQ = 0 UNION ALL SELECT a.CAR_REGNO , b.EMP_NM , decode(b.EMP_NM, NULL, '', 'SP') AS value, REGEXP_REPLACE(a.d1, '[*0-9@-]', '') AS ampm, CONVERT(REGEXP_REPLACE(a.d1, '[*ap@-]', ''),int) AS seq FROM TBL_MONTH_ARRANGE_DETAIL a LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO AND a.ROUTE_NM = b.ROUTE_NM AND a.BASE_YM = b.BASE_YM AND a.DISPATCH_SEQ = b.DISPATCH_SEQ AND a.INIT_SEQ = b.INIT_SEQ AND b.CAR_REGNO LIKE 'SP%' AND b.d1 <> '' AND a.d1 LIKE b.d1 || '%' WHERE a.company_no = '100' AND a.route_nm = '20번' AND a.BASE_Ym = '2023-06' AND a.CAR_REGNO NOT LIKE 'SP%' AND (a.d1 LIKE '%*%'			OR a.d1 LIKE '%@%') AND a.DISPATCH_SEQ = 6  AND a.INIT_SEQ = 0 ) select   1 seq,'-' as emp_nm, 'a' as ampm_gb,a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	route_nm = '20번' AND     BASE_YMD = '2023-06-01' and		col000 = '버스ID' union SELECT 2 seq ,nvl(d.emp_nm,'-') as emp_nm ,k.* FROM ( select CASE WHEN (',' || b.am_seq_array || ',' LIKE '%,' || a.col002 ||',%') THEN 'a' ELSE 'p' END ampm_gb ,	a.* from    TBL_arrange_punctuality_info a JOIN TBM_ROUTE_COMMON_INFO b ON a.COMPANY_NO = b.COMPANY_NO AND a.ROUTE_NM = b.ROUTE_NM AND b.CODE ='배차정시성대상회차' where   a.company_no = '100' AND 	a.route_nm = '20번' AND     a.BASE_YMD = '2023-06-01' and		a.col000 <> '버스ID' AND     ( (',' || b.am_seq_array || ',' LIKE '%,' || a.col002 ||',%') OR (',' || b.pm_seq_array || ',' LIKE '%,' || a.col002 ||',%')) ) k left outer join daily_arrange d on k.col001 = d.car_regno AND 	k.ampm_gb = d.ampm		order by seq,col003
 {executed in 10 msec}
2023-06-25 18:27:41.452 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@81314a9b
2023-06-25 18:27:41.452 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - filterType={getRouteCommonInfo} 
2023-06-25 18:27:41.452 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
2023-06-25 18:27:41.453 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
131. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 18:27:41.453 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
131. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 0 msec}
2023-06-25 18:27:41.454 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
131. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 1 msec}
2023-06-25 18:31:04.691 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@7756fabc
2023-06-25 18:31:04.691 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - filterType={selectMonthlyPunctuality} 
2023-06-25 18:31:04.691 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
2023-06-25 18:31:04.692 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
134. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 18:31:04.703 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
134. WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
 {executed in 10 msec}
2023-06-25 18:31:04.712 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
134. WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
 {executed in 9 msec}
2023-06-25 18:31:06.066 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@bdf41ba6
2023-06-25 18:31:06.066 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - filterType={getRouteCommonInfo} 
2023-06-25 18:31:06.067 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '21번' AND		a.CODE =  '배차정시성대상회차'
2023-06-25 18:31:06.068 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
135. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 18:31:06.069 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
135. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '21번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 0 msec}
2023-06-25 18:31:06.070 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
135. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '21번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 0 msec}
2023-06-25 18:31:06.081 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@ffdfc5f7
2023-06-25 18:31:06.081 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_INFO_DETAIL} 
2023-06-25 18:31:06.081 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : WITH daily_arrange as ( SELECT a.CAR_REGNO , a.EMP_NM , '' AS value, REGEXP_REPLACE(a.d1, '[*0-9@]', '') AS ampm, CONVERT(REGEXP_REPLACE(a.d1, '[*ap@]', ''),	int) AS seq FROM TBL_MONTH_ARRANGE_DETAIL a WHERE a.company_no = '100' AND a.route_nm = '21번' AND a.BASE_Ym = '2023-06' AND a.CAR_REGNO NOT LIKE 'SP%' AND a.d1 NOT LIKE '%*%' AND a.d1 NOT LIKE '%@%' AND a.DISPATCH_SEQ = 6 AND a.INIT_SEQ = 0 UNION ALL SELECT a.CAR_REGNO , b.EMP_NM , decode(b.EMP_NM, NULL, '', 'SP') AS value, REGEXP_REPLACE(a.d1, '[*0-9@-]', '') AS ampm, CONVERT(REGEXP_REPLACE(a.d1, '[*ap@-]', ''),int) AS seq FROM TBL_MONTH_ARRANGE_DETAIL a LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO AND a.ROUTE_NM = b.ROUTE_NM AND a.BASE_YM = b.BASE_YM AND a.DISPATCH_SEQ = b.DISPATCH_SEQ AND a.INIT_SEQ = b.INIT_SEQ AND b.CAR_REGNO LIKE 'SP%' AND b.d1 <> '' AND a.d1 LIKE b.d1 || '%' WHERE a.company_no = '100' AND a.route_nm = '21번' AND a.BASE_Ym = '2023-06' AND a.CAR_REGNO NOT LIKE 'SP%' AND (a.d1 LIKE '%*%'			OR a.d1 LIKE '%@%') AND a.DISPATCH_SEQ = 6  AND a.INIT_SEQ = 0 ) select   1 seq,'-' as emp_nm, 'a' as ampm_gb,a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	route_nm = '21번' AND     BASE_YMD = '2023-06-01' and		col000 = '버스ID' union SELECT 2 seq ,nvl(d.emp_nm,'-') as emp_nm ,k.* FROM ( select CASE WHEN (',' || b.am_seq_array || ',' LIKE '%,' || a.col002 ||',%') THEN 'a' ELSE 'p' END ampm_gb ,	a.* from    TBL_arrange_punctuality_info a JOIN TBM_ROUTE_COMMON_INFO b ON a.COMPANY_NO = b.COMPANY_NO AND a.ROUTE_NM = b.ROUTE_NM AND b.CODE ='배차정시성대상회차' where   a.company_no = '100' AND 	a.route_nm = '21번' AND     a.BASE_YMD = '2023-06-01' and		a.col000 <> '버스ID' AND     ( (',' || b.am_seq_array || ',' LIKE '%,' || a.col002 ||',%') OR (',' || b.pm_seq_array || ',' LIKE '%,' || a.col002 ||',%')) ) k left outer join daily_arrange d on k.col001 = d.car_regno AND 	k.ampm_gb = d.ampm		order by seq,col003
2023-06-25 18:31:06.092 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
135. WITH daily_arrange as ( SELECT a.CAR_REGNO , a.EMP_NM , '' AS value, REGEXP_REPLACE(a.d1, '[*0-9@]', '') AS ampm, CONVERT(REGEXP_REPLACE(a.d1, '[*ap@]', ''),	int) AS seq FROM TBL_MONTH_ARRANGE_DETAIL a WHERE a.company_no = '100' AND a.route_nm = '21번' AND a.BASE_Ym = '2023-06' AND a.CAR_REGNO NOT LIKE 'SP%' AND a.d1 NOT LIKE '%*%' AND a.d1 NOT LIKE '%@%' AND a.DISPATCH_SEQ = 6 AND a.INIT_SEQ = 0 UNION ALL SELECT a.CAR_REGNO , b.EMP_NM , decode(b.EMP_NM, NULL, '', 'SP') AS value, REGEXP_REPLACE(a.d1, '[*0-9@-]', '') AS ampm, CONVERT(REGEXP_REPLACE(a.d1, '[*ap@-]', ''),int) AS seq FROM TBL_MONTH_ARRANGE_DETAIL a LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO AND a.ROUTE_NM = b.ROUTE_NM AND a.BASE_YM = b.BASE_YM AND a.DISPATCH_SEQ = b.DISPATCH_SEQ AND a.INIT_SEQ = b.INIT_SEQ AND b.CAR_REGNO LIKE 'SP%' AND b.d1 <> '' AND a.d1 LIKE b.d1 || '%' WHERE a.company_no = '100' AND a.route_nm = '21번' AND a.BASE_Ym = '2023-06' AND a.CAR_REGNO NOT LIKE 'SP%' AND (a.d1 LIKE '%*%'			OR a.d1 LIKE '%@%') AND a.DISPATCH_SEQ = 6  AND a.INIT_SEQ = 0 ) select   1 seq,'-' as emp_nm, 'a' as ampm_gb,a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	route_nm = '21번' AND     BASE_YMD = '2023-06-01' and		col000 = '버스ID' union SELECT 2 seq ,nvl(d.emp_nm,'-') as emp_nm ,k.* FROM ( select CASE WHEN (',' || b.am_seq_array || ',' LIKE '%,' || a.col002 ||',%') THEN 'a' ELSE 'p' END ampm_gb ,	a.* from    TBL_arrange_punctuality_info a JOIN TBM_ROUTE_COMMON_INFO b ON a.COMPANY_NO = b.COMPANY_NO AND a.ROUTE_NM = b.ROUTE_NM AND b.CODE ='배차정시성대상회차' where   a.company_no = '100' AND 	a.route_nm = '21번' AND     a.BASE_YMD = '2023-06-01' and		a.col000 <> '버스ID' AND     ( (',' || b.am_seq_array || ',' LIKE '%,' || a.col002 ||',%') OR (',' || b.pm_seq_array || ',' LIKE '%,' || a.col002 ||',%')) ) k left outer join daily_arrange d on k.col001 = d.car_regno AND 	k.ampm_gb = d.ampm		order by seq,col003
 {executed in 10 msec}
2023-06-25 18:31:06.101 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
135. WITH daily_arrange as ( SELECT a.CAR_REGNO , a.EMP_NM , '' AS value, REGEXP_REPLACE(a.d1, '[*0-9@]', '') AS ampm, CONVERT(REGEXP_REPLACE(a.d1, '[*ap@]', ''),	int) AS seq FROM TBL_MONTH_ARRANGE_DETAIL a WHERE a.company_no = '100' AND a.route_nm = '21번' AND a.BASE_Ym = '2023-06' AND a.CAR_REGNO NOT LIKE 'SP%' AND a.d1 NOT LIKE '%*%' AND a.d1 NOT LIKE '%@%' AND a.DISPATCH_SEQ = 6 AND a.INIT_SEQ = 0 UNION ALL SELECT a.CAR_REGNO , b.EMP_NM , decode(b.EMP_NM, NULL, '', 'SP') AS value, REGEXP_REPLACE(a.d1, '[*0-9@-]', '') AS ampm, CONVERT(REGEXP_REPLACE(a.d1, '[*ap@-]', ''),int) AS seq FROM TBL_MONTH_ARRANGE_DETAIL a LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO AND a.ROUTE_NM = b.ROUTE_NM AND a.BASE_YM = b.BASE_YM AND a.DISPATCH_SEQ = b.DISPATCH_SEQ AND a.INIT_SEQ = b.INIT_SEQ AND b.CAR_REGNO LIKE 'SP%' AND b.d1 <> '' AND a.d1 LIKE b.d1 || '%' WHERE a.company_no = '100' AND a.route_nm = '21번' AND a.BASE_Ym = '2023-06' AND a.CAR_REGNO NOT LIKE 'SP%' AND (a.d1 LIKE '%*%'			OR a.d1 LIKE '%@%') AND a.DISPATCH_SEQ = 6  AND a.INIT_SEQ = 0 ) select   1 seq,'-' as emp_nm, 'a' as ampm_gb,a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	route_nm = '21번' AND     BASE_YMD = '2023-06-01' and		col000 = '버스ID' union SELECT 2 seq ,nvl(d.emp_nm,'-') as emp_nm ,k.* FROM ( select CASE WHEN (',' || b.am_seq_array || ',' LIKE '%,' || a.col002 ||',%') THEN 'a' ELSE 'p' END ampm_gb ,	a.* from    TBL_arrange_punctuality_info a JOIN TBM_ROUTE_COMMON_INFO b ON a.COMPANY_NO = b.COMPANY_NO AND a.ROUTE_NM = b.ROUTE_NM AND b.CODE ='배차정시성대상회차' where   a.company_no = '100' AND 	a.route_nm = '21번' AND     a.BASE_YMD = '2023-06-01' and		a.col000 <> '버스ID' AND     ( (',' || b.am_seq_array || ',' LIKE '%,' || a.col002 ||',%') OR (',' || b.pm_seq_array || ',' LIKE '%,' || a.col002 ||',%')) ) k left outer join daily_arrange d on k.col001 = d.car_regno AND 	k.ampm_gb = d.ampm		order by seq,col003
 {executed in 9 msec}
2023-06-25 18:31:10.341 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@429c3e0
2023-06-25 18:31:10.341 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - filterType={getRouteCommonInfo} 
2023-06-25 18:31:10.341 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '21번' AND		a.CODE =  '배차정시성대상회차'
2023-06-25 18:31:10.342 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
135. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 18:31:10.343 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
135. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '21번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 0 msec}
2023-06-25 18:31:10.344 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
135. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '21번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 0 msec}
2023-06-25 18:31:59.008 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@429c3e0
2023-06-25 18:31:59.008 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - filterType={getRouteCommonInfo} 
2023-06-25 18:31:59.008 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '21번' AND		a.CODE =  '배차정시성대상회차'
2023-06-25 18:31:59.009 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
141. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 18:31:59.009 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
141. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '21번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 0 msec}
2023-06-25 18:31:59.011 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
141. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '21번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 1 msec}
2023-06-25 18:31:59.022 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@7f74ddc7
2023-06-25 18:31:59.022 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_ANALIZE} 
2023-06-25 18:31:59.022 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '21번' AND		a.BASE_YMD   = '2023-06-01'
2023-06-25 18:31:59.023 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
141. select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '21번' AND		a.BASE_YMD   = '2023-06-01'
 {executed in 1 msec}
2023-06-25 18:31:59.025 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
141. select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '21번' AND		a.BASE_YMD   = '2023-06-01'
 {executed in 1 msec}
2023-06-25 18:32:06.697 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@30edd8a4
2023-06-25 18:32:06.697 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - filterType={TBM_ROUTE_COMMON_INFO} 
2023-06-25 18:32:06.697 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   'N' as bit, a.* from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' and		a.code = '배차정시성대상회차' order by a.route_nm
2023-06-25 18:32:06.698 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
141. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 18:32:06.699 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
141. select   'N' as bit, a.* from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' and		a.code = '배차정시성대상회차' order by a.route_nm
 {executed in 1 msec}
2023-06-25 18:32:06.700 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
141. select   'N' as bit, a.* from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' and		a.code = '배차정시성대상회차' order by a.route_nm
 {executed in 1 msec}
2023-06-25 18:32:16.246 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
141. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 18:32:16.253 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeUpdate(ProxyStatement.java:120)
141. DELETE FROM TBL_ARRANGE_PUNCTUALITY_ANALIZE WHERE company_no = '100'  AND base_ymd = '2023-06-01'  AND route_nm = '21번'
 {executed in 1 msec}
2023-06-25 18:32:16.260 INFO  [http-nio-10010-exec-6] [com.pjy.dashboard.dao.DynamicSqlDao] - insert sql : INSERT INTO TBL_ARRANGE_PUNCTUALITY_ANALIZE (company_no,base_ymd,route_nm,col,col000,col001,col002,col003,col004,emp_nm,term,term_85,term_125,term_past_cnt,term_late_cnt,term_wiban_cnt,total_station_cnt,last_chg_user,last_chg_date) values ( '100' , '2023-06-01' , '21번' , :col , :col000 , :col001 , :col002 , :col003 , :col004 , :emp_nm , :term , :term_85 , :term_125 , :term_past_cnt , :term_late_cnt , :term_wiban_cnt , :total_station_cnt , 'p00139' , TO_CHAR( SYSDATE,'yyyy-mm-dd hh:mi:ss'))
2023-06-25 18:32:16.269 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
142. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 18:32:16.328 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@79614b49
2023-06-25 18:32:16.328 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - filterType={selectMonthlyPunctuality} 
2023-06-25 18:32:16.328 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
2023-06-25 18:32:16.340 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
142. WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
 {executed in 12 msec}
2023-06-25 18:32:16.351 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
142. WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
 {executed in 10 msec}
2023-06-25 18:32:20.302 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@429c3e0
2023-06-25 18:32:20.302 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - filterType={getRouteCommonInfo} 
2023-06-25 18:32:20.302 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '21번' AND		a.CODE =  '배차정시성대상회차'
2023-06-25 18:32:20.303 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
142. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 18:32:20.303 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
142. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '21번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 0 msec}
2023-06-25 18:32:20.303 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
142. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '21번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 0 msec}
2023-06-25 18:32:20.315 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@7f74ddc7
2023-06-25 18:32:20.315 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_ANALIZE} 
2023-06-25 18:32:20.315 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '21번' AND		a.BASE_YMD   = '2023-06-01'
2023-06-25 18:32:20.317 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
142. select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '21번' AND		a.BASE_YMD   = '2023-06-01'
 {executed in 2 msec}
2023-06-25 18:32:20.319 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
142. select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '21번' AND		a.BASE_YMD   = '2023-06-01'
 {executed in 1 msec}
2023-06-25 18:33:30.024 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@7756fabc
2023-06-25 18:33:30.024 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - filterType={selectMonthlyPunctuality} 
2023-06-25 18:33:30.025 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
2023-06-25 18:33:30.025 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
142. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 18:33:30.035 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
142. WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
 {executed in 10 msec}
2023-06-25 18:33:30.044 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
142. WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
 {executed in 9 msec}
2023-06-25 18:33:31.196 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@bdf41ba6
2023-06-25 18:33:31.196 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - filterType={getRouteCommonInfo} 
2023-06-25 18:33:31.196 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '21번' AND		a.CODE =  '배차정시성대상회차'
2023-06-25 18:33:31.197 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
142. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 18:33:31.198 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
142. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '21번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 1 msec}
2023-06-25 18:33:31.199 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
142. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '21번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 1 msec}
2023-06-25 18:33:31.209 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@614ceca
2023-06-25 18:33:31.209 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_ANALIZE} 
2023-06-25 18:33:31.209 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '21번' AND		a.BASE_YMD   = '2023-06-01'
2023-06-25 18:33:31.211 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
142. select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '21번' AND		a.BASE_YMD   = '2023-06-01'
 {executed in 1 msec}
2023-06-25 18:33:31.212 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
142. select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '21번' AND		a.BASE_YMD   = '2023-06-01'
 {executed in 1 msec}
2023-06-25 18:33:33.722 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8ac9b4e3
2023-06-25 18:33:33.722 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - filterType={getRouteCommonInfo} 
2023-06-25 18:33:33.722 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '21번' AND		a.CODE =  '배차정시성대상회차'
2023-06-25 18:33:33.723 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
142. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 18:33:33.724 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
142. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '21번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 0 msec}
2023-06-25 18:33:33.725 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
142. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '21번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 0 msec}
2023-06-25 18:33:33.734 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@614ceca
2023-06-25 18:33:33.735 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_ANALIZE} 
2023-06-25 18:33:33.735 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '21번' AND		a.BASE_YMD   = '2023-06-01'
2023-06-25 18:33:33.736 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
142. select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '21번' AND		a.BASE_YMD   = '2023-06-01'
 {executed in 0 msec}
2023-06-25 18:33:33.737 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
142. select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '21번' AND		a.BASE_YMD   = '2023-06-01'
 {executed in 1 msec}
2023-06-25 18:36:16.108 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@7756fabc
2023-06-25 18:36:16.108 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - filterType={selectMonthlyPunctuality} 
2023-06-25 18:36:16.108 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
2023-06-25 18:36:16.109 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
142. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 18:36:16.120 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
142. WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
 {executed in 10 msec}
2023-06-25 18:36:16.131 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
142. WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
 {executed in 10 msec}
2023-06-25 18:36:17.748 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@3afba261
2023-06-25 18:36:17.748 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - filterType={getRouteCommonInfo} 
2023-06-25 18:36:17.748 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
2023-06-25 18:36:17.749 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
142. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 18:36:17.750 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
142. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 1 msec}
2023-06-25 18:36:17.750 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
142. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 0 msec}
2023-06-25 18:36:17.759 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@831c5585
2023-06-25 18:36:17.759 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_ANALIZE} 
2023-06-25 18:36:17.760 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.BASE_YMD   = '2023-06-01'
2023-06-25 18:36:17.762 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
142. select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.BASE_YMD   = '2023-06-01'
 {executed in 1 msec}
2023-06-25 18:36:17.764 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
142. select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.BASE_YMD   = '2023-06-01'
 {executed in 2 msec}
2023-06-25 18:37:06.369 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@7d13b9e
2023-06-25 18:37:06.369 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - filterType={getRouteCommonInfo} 
2023-06-25 18:37:06.369 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
2023-06-25 18:37:06.370 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
142. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 18:37:06.370 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
142. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 0 msec}
2023-06-25 18:37:06.371 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
142. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 1 msec}
2023-06-25 18:37:06.383 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@831c5585
2023-06-25 18:37:06.383 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_ANALIZE} 
2023-06-25 18:37:06.383 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.BASE_YMD   = '2023-06-01'
2023-06-25 18:37:06.385 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
142. select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.BASE_YMD   = '2023-06-01'
 {executed in 1 msec}
2023-06-25 18:37:06.387 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
142. select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.BASE_YMD   = '2023-06-01'
 {executed in 1 msec}
2023-06-25 18:39:31.730 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@7756fabc
2023-06-25 18:39:31.730 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - filterType={selectMonthlyPunctuality} 
2023-06-25 18:39:31.735 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
2023-06-25 18:39:31.736 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
142. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 18:39:31.747 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
142. WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
 {executed in 11 msec}
2023-06-25 18:39:31.756 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
142. WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
 {executed in 9 msec}
2023-06-25 18:39:32.901 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@bdf41ba6
2023-06-25 18:39:32.901 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - filterType={getRouteCommonInfo} 
2023-06-25 18:39:32.901 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '21번' AND		a.CODE =  '배차정시성대상회차'
2023-06-25 18:39:32.902 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
142. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 18:39:32.903 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
142. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '21번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 1 msec}
2023-06-25 18:39:32.904 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
142. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '21번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 1 msec}
2023-06-25 18:39:32.914 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@614ceca
2023-06-25 18:39:32.914 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_ANALIZE} 
2023-06-25 18:39:32.914 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '21번' AND		a.BASE_YMD   = '2023-06-01' order by a.col002
2023-06-25 18:39:32.915 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
142. select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '21번' AND		a.BASE_YMD   = '2023-06-01' order by a.col002
 {executed in 1 msec}
2023-06-25 18:39:32.917 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
142. select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '21번' AND		a.BASE_YMD   = '2023-06-01' order by a.col002
 {executed in 0 msec}
2023-06-25 18:39:41.066 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@7d13b9e
2023-06-25 18:39:41.066 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - filterType={getRouteCommonInfo} 
2023-06-25 18:39:41.066 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
2023-06-25 18:39:41.066 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
142. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 18:39:41.067 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
142. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 0 msec}
2023-06-25 18:39:41.068 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
142. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 1 msec}
2023-06-25 18:39:41.077 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@831c5585
2023-06-25 18:39:41.077 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_ANALIZE} 
2023-06-25 18:39:41.077 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.BASE_YMD   = '2023-06-01' order by a.col002
2023-06-25 18:39:41.079 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
142. select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.BASE_YMD   = '2023-06-01' order by a.col002
 {executed in 1 msec}
2023-06-25 18:39:41.081 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
142. select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.BASE_YMD   = '2023-06-01' order by a.col002
 {executed in 1 msec}
2023-06-25 19:29:47.256 INFO  [Catalina-utility-1] [c.pjy.dashboard.listener.SessionListener] - updateUserCloseTime p00139 
2023-06-25 19:29:47.256 INFO  [Catalina-utility-1] [c.pjy.dashboard.listener.SessionListener] - currentSessionUserList ->  false
2023-06-25 19:29:47.257 INFO  [Catalina-utility-1] [c.pjy.dashboard.listener.SessionListener] - updateUserCloseTime p00139 
2023-06-25 19:29:47.257 INFO  [Catalina-utility-1] [c.pjy.dashboard.listener.SessionListener] - currentSessionUserList ->  false
2023-06-25 22:37:14.305 WARN  [H2 housekeeper] [com.zaxxer.hikari.pool.HikariPool] - H2 - Thread starvation or clock leap detected (housekeeper delta=3h29s406ms747µs600ns).
2023-06-25 23:03:34.849 WARN  [H2 housekeeper] [com.zaxxer.hikari.pool.HikariPool] - H2 - Thread starvation or clock leap detected (housekeeper delta=26m28s635ms959µs200ns).
2023-06-25 23:05:32.922 INFO  [http-nio-10010-exec-3] [c.p.d.interceptor.LoggerInterceptor] - ============================== START ==============================
2023-06-25 23:05:32.922 INFO  [http-nio-10010-exec-3] [c.p.d.interceptor.LoggerInterceptor] -  Class       	:  class org.springframework.web.method.HandlerMethod
2023-06-25 23:05:32.922 INFO  [http-nio-10010-exec-3] [c.p.d.interceptor.LoggerInterceptor] -  Request URI 	:  /error
2023-06-25 23:05:32.922 INFO  [http-nio-10010-exec-3] [c.p.d.interceptor.LoggerInterceptor] -  Request addr	:  0:0:0:0:0:0:0:1
2023-06-25 23:05:32.922 INFO  [http-nio-10010-exec-3] [c.p.d.interceptor.LoggerInterceptor] -  Servlet URI 	:  /error
2023-06-25 23:05:34.433 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
192. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 23:05:34.435 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
192. select * from MEMBER where userId = 'p00139'
 {executed in 0 msec}
2023-06-25 23:05:34.438 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.MemberServiceImpl] - ROLE_ADMIN
2023-06-25 23:05:34.531 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.MemberServiceImpl] - pass:$2a$10$MNrQAPw.4k9j2y08eTmYEeI7oKPuaWbA97HHog.8PYep5HsRwhbae,$2a$10$yeVxjycyxfRczBVdJOpx5ersAUgoN6hu5e7GaGFjO4sM.QZAOizGy
2023-06-25 23:05:34.627 INFO  [http-nio-10010-exec-8] [c.p.d.configuration.SecurityConfig] - authentication:: p00139
2023-06-25 23:05:52.284 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@7756fabc
2023-06-25 23:05:52.284 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - filterType={selectMonthlyPunctuality} 
2023-06-25 23:05:52.285 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
2023-06-25 23:05:52.285 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
192. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 23:05:52.296 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
192. WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
 {executed in 11 msec}
2023-06-25 23:05:52.306 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
192. WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
 {executed in 10 msec}
2023-06-25 23:05:54.400 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@3afba261
2023-06-25 23:05:54.400 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - filterType={getRouteCommonInfo} 
2023-06-25 23:05:54.400 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
2023-06-25 23:05:54.401 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
192. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 23:05:54.402 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
192. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 1 msec}
2023-06-25 23:05:54.403 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
192. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 1 msec}
2023-06-25 23:05:54.413 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@831c5585
2023-06-25 23:05:54.413 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_ANALIZE} 
2023-06-25 23:05:54.413 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.BASE_YMD   = '2023-06-01' order by a.col002
2023-06-25 23:05:54.414 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
192. select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.BASE_YMD   = '2023-06-01' order by a.col002
 {executed in 1 msec}
2023-06-25 23:05:54.417 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
192. select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.BASE_YMD   = '2023-06-01' order by a.col002
 {executed in 1 msec}
2023-06-25 23:05:56.335 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@b4313a5d
2023-06-25 23:05:56.335 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_INFO} 
2023-06-25 23:05:56.335 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   1 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	route_nm = '20번' AND     BASE_YMD = '2023-06-01' and		col000 = '버스ID' union select  2 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	a.route_nm = '20번' AND     a.BASE_YMD = '2023-06-01' and		a.col000 <> '버스ID' order by seq,col003
2023-06-25 23:05:56.336 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
192. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 23:05:56.352 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
192. select   1 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	route_nm = '20번' AND     BASE_YMD = '2023-06-01' and		col000 = '버스ID' union select  2 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	a.route_nm = '20번' AND     a.BASE_YMD = '2023-06-01' and		a.col000 <> '버스ID' order by seq,col003
 {executed in 15 msec}
2023-06-25 23:05:56.370 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
192. select   1 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	route_nm = '20번' AND     BASE_YMD = '2023-06-01' and		col000 = '버스ID' union select  2 seq, a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	a.route_nm = '20번' AND     a.BASE_YMD = '2023-06-01' and		a.col000 <> '버스ID' order by seq,col003
 {executed in 17 msec}
2023-06-25 23:06:05.470 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@81314a9b
2023-06-25 23:06:05.470 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - filterType={getRouteCommonInfo} 
2023-06-25 23:06:05.470 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
2023-06-25 23:06:05.470 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
192. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 23:06:05.470 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
192. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 0 msec}
2023-06-25 23:06:05.471 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
192. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 1 msec}
2023-06-25 23:06:05.484 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@f6475baf
2023-06-25 23:06:05.484 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_INFO_DETAIL} 
2023-06-25 23:06:05.485 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : WITH daily_arrange as ( SELECT a.CAR_REGNO , a.EMP_NM , '' AS value, REGEXP_REPLACE(a.d1, '[*0-9@]', '') AS ampm, CONVERT(REGEXP_REPLACE(a.d1, '[*ap@]', ''),	int) AS seq FROM TBL_MONTH_ARRANGE_DETAIL a WHERE a.company_no = '100' AND a.route_nm = '20번' AND a.BASE_Ym = '2023-06' AND a.CAR_REGNO NOT LIKE 'SP%' AND a.d1 NOT LIKE '%*%' AND a.d1 NOT LIKE '%@%' AND a.DISPATCH_SEQ = 6 AND a.INIT_SEQ = 0 UNION ALL SELECT a.CAR_REGNO , b.EMP_NM , decode(b.EMP_NM, NULL, '', 'SP') AS value, REGEXP_REPLACE(a.d1, '[*0-9@-]', '') AS ampm, CONVERT(REGEXP_REPLACE(a.d1, '[*ap@-]', ''),int) AS seq FROM TBL_MONTH_ARRANGE_DETAIL a LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO AND a.ROUTE_NM = b.ROUTE_NM AND a.BASE_YM = b.BASE_YM AND a.DISPATCH_SEQ = b.DISPATCH_SEQ AND a.INIT_SEQ = b.INIT_SEQ AND b.CAR_REGNO LIKE 'SP%' AND b.d1 <> '' AND a.d1 LIKE b.d1 || '%' WHERE a.company_no = '100' AND a.route_nm = '20번' AND a.BASE_Ym = '2023-06' AND a.CAR_REGNO NOT LIKE 'SP%' AND (a.d1 LIKE '%*%'			OR a.d1 LIKE '%@%') AND a.DISPATCH_SEQ = 6  AND a.INIT_SEQ = 0 ) select   1 seq,'-' as emp_nm, 'a' as ampm_gb,a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	route_nm = '20번' AND     BASE_YMD = '2023-06-01' and		col000 = '버스ID' union SELECT 2 seq ,nvl(d.emp_nm,'-') as emp_nm ,k.* FROM ( select CASE WHEN (',' || b.am_seq_array || ',' LIKE '%,' || a.col002 ||',%') THEN 'a' ELSE 'p' END ampm_gb ,	a.* from    TBL_arrange_punctuality_info a JOIN TBM_ROUTE_COMMON_INFO b ON a.COMPANY_NO = b.COMPANY_NO AND a.ROUTE_NM = b.ROUTE_NM AND b.CODE ='배차정시성대상회차' where   a.company_no = '100' AND 	a.route_nm = '20번' AND     a.BASE_YMD = '2023-06-01' and		a.col000 <> '버스ID' AND     ( (',' || b.am_seq_array || ',' LIKE '%,' || a.col002 ||',%') OR (',' || b.pm_seq_array || ',' LIKE '%,' || a.col002 ||',%')) ) k left outer join daily_arrange d on k.col001 = d.car_regno AND 	k.ampm_gb = d.ampm		order by seq,col003
2023-06-25 23:06:05.495 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
192. WITH daily_arrange as ( SELECT a.CAR_REGNO , a.EMP_NM , '' AS value, REGEXP_REPLACE(a.d1, '[*0-9@]', '') AS ampm, CONVERT(REGEXP_REPLACE(a.d1, '[*ap@]', ''),	int) AS seq FROM TBL_MONTH_ARRANGE_DETAIL a WHERE a.company_no = '100' AND a.route_nm = '20번' AND a.BASE_Ym = '2023-06' AND a.CAR_REGNO NOT LIKE 'SP%' AND a.d1 NOT LIKE '%*%' AND a.d1 NOT LIKE '%@%' AND a.DISPATCH_SEQ = 6 AND a.INIT_SEQ = 0 UNION ALL SELECT a.CAR_REGNO , b.EMP_NM , decode(b.EMP_NM, NULL, '', 'SP') AS value, REGEXP_REPLACE(a.d1, '[*0-9@-]', '') AS ampm, CONVERT(REGEXP_REPLACE(a.d1, '[*ap@-]', ''),int) AS seq FROM TBL_MONTH_ARRANGE_DETAIL a LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO AND a.ROUTE_NM = b.ROUTE_NM AND a.BASE_YM = b.BASE_YM AND a.DISPATCH_SEQ = b.DISPATCH_SEQ AND a.INIT_SEQ = b.INIT_SEQ AND b.CAR_REGNO LIKE 'SP%' AND b.d1 <> '' AND a.d1 LIKE b.d1 || '%' WHERE a.company_no = '100' AND a.route_nm = '20번' AND a.BASE_Ym = '2023-06' AND a.CAR_REGNO NOT LIKE 'SP%' AND (a.d1 LIKE '%*%'			OR a.d1 LIKE '%@%') AND a.DISPATCH_SEQ = 6  AND a.INIT_SEQ = 0 ) select   1 seq,'-' as emp_nm, 'a' as ampm_gb,a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	route_nm = '20번' AND     BASE_YMD = '2023-06-01' and		col000 = '버스ID' union SELECT 2 seq ,nvl(d.emp_nm,'-') as emp_nm ,k.* FROM ( select CASE WHEN (',' || b.am_seq_array || ',' LIKE '%,' || a.col002 ||',%') THEN 'a' ELSE 'p' END ampm_gb ,	a.* from    TBL_arrange_punctuality_info a JOIN TBM_ROUTE_COMMON_INFO b ON a.COMPANY_NO = b.COMPANY_NO AND a.ROUTE_NM = b.ROUTE_NM AND b.CODE ='배차정시성대상회차' where   a.company_no = '100' AND 	a.route_nm = '20번' AND     a.BASE_YMD = '2023-06-01' and		a.col000 <> '버스ID' AND     ( (',' || b.am_seq_array || ',' LIKE '%,' || a.col002 ||',%') OR (',' || b.pm_seq_array || ',' LIKE '%,' || a.col002 ||',%')) ) k left outer join daily_arrange d on k.col001 = d.car_regno AND 	k.ampm_gb = d.ampm		order by seq,col003
 {executed in 10 msec}
2023-06-25 23:06:05.506 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
192. WITH daily_arrange as ( SELECT a.CAR_REGNO , a.EMP_NM , '' AS value, REGEXP_REPLACE(a.d1, '[*0-9@]', '') AS ampm, CONVERT(REGEXP_REPLACE(a.d1, '[*ap@]', ''),	int) AS seq FROM TBL_MONTH_ARRANGE_DETAIL a WHERE a.company_no = '100' AND a.route_nm = '20번' AND a.BASE_Ym = '2023-06' AND a.CAR_REGNO NOT LIKE 'SP%' AND a.d1 NOT LIKE '%*%' AND a.d1 NOT LIKE '%@%' AND a.DISPATCH_SEQ = 6 AND a.INIT_SEQ = 0 UNION ALL SELECT a.CAR_REGNO , b.EMP_NM , decode(b.EMP_NM, NULL, '', 'SP') AS value, REGEXP_REPLACE(a.d1, '[*0-9@-]', '') AS ampm, CONVERT(REGEXP_REPLACE(a.d1, '[*ap@-]', ''),int) AS seq FROM TBL_MONTH_ARRANGE_DETAIL a LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO AND a.ROUTE_NM = b.ROUTE_NM AND a.BASE_YM = b.BASE_YM AND a.DISPATCH_SEQ = b.DISPATCH_SEQ AND a.INIT_SEQ = b.INIT_SEQ AND b.CAR_REGNO LIKE 'SP%' AND b.d1 <> '' AND a.d1 LIKE b.d1 || '%' WHERE a.company_no = '100' AND a.route_nm = '20번' AND a.BASE_Ym = '2023-06' AND a.CAR_REGNO NOT LIKE 'SP%' AND (a.d1 LIKE '%*%'			OR a.d1 LIKE '%@%') AND a.DISPATCH_SEQ = 6  AND a.INIT_SEQ = 0 ) select   1 seq,'-' as emp_nm, 'a' as ampm_gb,a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	route_nm = '20번' AND     BASE_YMD = '2023-06-01' and		col000 = '버스ID' union SELECT 2 seq ,nvl(d.emp_nm,'-') as emp_nm ,k.* FROM ( select CASE WHEN (',' || b.am_seq_array || ',' LIKE '%,' || a.col002 ||',%') THEN 'a' ELSE 'p' END ampm_gb ,	a.* from    TBL_arrange_punctuality_info a JOIN TBM_ROUTE_COMMON_INFO b ON a.COMPANY_NO = b.COMPANY_NO AND a.ROUTE_NM = b.ROUTE_NM AND b.CODE ='배차정시성대상회차' where   a.company_no = '100' AND 	a.route_nm = '20번' AND     a.BASE_YMD = '2023-06-01' and		a.col000 <> '버스ID' AND     ( (',' || b.am_seq_array || ',' LIKE '%,' || a.col002 ||',%') OR (',' || b.pm_seq_array || ',' LIKE '%,' || a.col002 ||',%')) ) k left outer join daily_arrange d on k.col001 = d.car_regno AND 	k.ampm_gb = d.ampm		order by seq,col003
 {executed in 11 msec}
2023-06-25 23:06:21.442 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@81314a9b
2023-06-25 23:06:21.442 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - filterType={getRouteCommonInfo} 
2023-06-25 23:06:21.442 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
2023-06-25 23:06:21.443 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
192. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 23:06:21.444 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
192. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 1 msec}
2023-06-25 23:06:21.444 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
192. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 0 msec}
2023-06-25 23:06:21.458 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@fc7c6482
2023-06-25 23:06:21.458 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_ANALIZE} 
2023-06-25 23:06:21.458 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.BASE_YMD   = '2023-06-01' order by a.col002
2023-06-25 23:06:21.460 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
192. select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.BASE_YMD   = '2023-06-01' order by a.col002
 {executed in 1 msec}
2023-06-25 23:06:21.461 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
192. select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.BASE_YMD   = '2023-06-01' order by a.col002
 {executed in 1 msec}
2023-06-25 23:06:24.779 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@81314a9b
2023-06-25 23:06:24.779 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - filterType={getRouteCommonInfo} 
2023-06-25 23:06:24.779 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
2023-06-25 23:06:24.780 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
192. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 23:06:24.781 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
192. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 0 msec}
2023-06-25 23:06:24.781 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
192. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 0 msec}
2023-06-25 23:06:24.794 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@f6475baf
2023-06-25 23:06:24.794 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_INFO_DETAIL} 
2023-06-25 23:06:24.794 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : WITH daily_arrange as ( SELECT a.CAR_REGNO , a.EMP_NM , '' AS value, REGEXP_REPLACE(a.d1, '[*0-9@]', '') AS ampm, CONVERT(REGEXP_REPLACE(a.d1, '[*ap@]', ''),	int) AS seq FROM TBL_MONTH_ARRANGE_DETAIL a WHERE a.company_no = '100' AND a.route_nm = '20번' AND a.BASE_Ym = '2023-06' AND a.CAR_REGNO NOT LIKE 'SP%' AND a.d1 NOT LIKE '%*%' AND a.d1 NOT LIKE '%@%' AND a.DISPATCH_SEQ = 6 AND a.INIT_SEQ = 0 UNION ALL SELECT a.CAR_REGNO , b.EMP_NM , decode(b.EMP_NM, NULL, '', 'SP') AS value, REGEXP_REPLACE(a.d1, '[*0-9@-]', '') AS ampm, CONVERT(REGEXP_REPLACE(a.d1, '[*ap@-]', ''),int) AS seq FROM TBL_MONTH_ARRANGE_DETAIL a LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO AND a.ROUTE_NM = b.ROUTE_NM AND a.BASE_YM = b.BASE_YM AND a.DISPATCH_SEQ = b.DISPATCH_SEQ AND a.INIT_SEQ = b.INIT_SEQ AND b.CAR_REGNO LIKE 'SP%' AND b.d1 <> '' AND a.d1 LIKE b.d1 || '%' WHERE a.company_no = '100' AND a.route_nm = '20번' AND a.BASE_Ym = '2023-06' AND a.CAR_REGNO NOT LIKE 'SP%' AND (a.d1 LIKE '%*%'			OR a.d1 LIKE '%@%') AND a.DISPATCH_SEQ = 6  AND a.INIT_SEQ = 0 ) select   1 seq,'-' as emp_nm, 'a' as ampm_gb,a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	route_nm = '20번' AND     BASE_YMD = '2023-06-01' and		col000 = '버스ID' union SELECT 2 seq ,nvl(d.emp_nm,'-') as emp_nm ,k.* FROM ( select CASE WHEN (',' || b.am_seq_array || ',' LIKE '%,' || a.col002 ||',%') THEN 'a' ELSE 'p' END ampm_gb ,	a.* from    TBL_arrange_punctuality_info a JOIN TBM_ROUTE_COMMON_INFO b ON a.COMPANY_NO = b.COMPANY_NO AND a.ROUTE_NM = b.ROUTE_NM AND b.CODE ='배차정시성대상회차' where   a.company_no = '100' AND 	a.route_nm = '20번' AND     a.BASE_YMD = '2023-06-01' and		a.col000 <> '버스ID' AND     ( (',' || b.am_seq_array || ',' LIKE '%,' || a.col002 ||',%') OR (',' || b.pm_seq_array || ',' LIKE '%,' || a.col002 ||',%')) ) k left outer join daily_arrange d on k.col001 = d.car_regno AND 	k.ampm_gb = d.ampm		order by seq,col003
2023-06-25 23:06:24.805 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
192. WITH daily_arrange as ( SELECT a.CAR_REGNO , a.EMP_NM , '' AS value, REGEXP_REPLACE(a.d1, '[*0-9@]', '') AS ampm, CONVERT(REGEXP_REPLACE(a.d1, '[*ap@]', ''),	int) AS seq FROM TBL_MONTH_ARRANGE_DETAIL a WHERE a.company_no = '100' AND a.route_nm = '20번' AND a.BASE_Ym = '2023-06' AND a.CAR_REGNO NOT LIKE 'SP%' AND a.d1 NOT LIKE '%*%' AND a.d1 NOT LIKE '%@%' AND a.DISPATCH_SEQ = 6 AND a.INIT_SEQ = 0 UNION ALL SELECT a.CAR_REGNO , b.EMP_NM , decode(b.EMP_NM, NULL, '', 'SP') AS value, REGEXP_REPLACE(a.d1, '[*0-9@-]', '') AS ampm, CONVERT(REGEXP_REPLACE(a.d1, '[*ap@-]', ''),int) AS seq FROM TBL_MONTH_ARRANGE_DETAIL a LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO AND a.ROUTE_NM = b.ROUTE_NM AND a.BASE_YM = b.BASE_YM AND a.DISPATCH_SEQ = b.DISPATCH_SEQ AND a.INIT_SEQ = b.INIT_SEQ AND b.CAR_REGNO LIKE 'SP%' AND b.d1 <> '' AND a.d1 LIKE b.d1 || '%' WHERE a.company_no = '100' AND a.route_nm = '20번' AND a.BASE_Ym = '2023-06' AND a.CAR_REGNO NOT LIKE 'SP%' AND (a.d1 LIKE '%*%'			OR a.d1 LIKE '%@%') AND a.DISPATCH_SEQ = 6  AND a.INIT_SEQ = 0 ) select   1 seq,'-' as emp_nm, 'a' as ampm_gb,a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	route_nm = '20번' AND     BASE_YMD = '2023-06-01' and		col000 = '버스ID' union SELECT 2 seq ,nvl(d.emp_nm,'-') as emp_nm ,k.* FROM ( select CASE WHEN (',' || b.am_seq_array || ',' LIKE '%,' || a.col002 ||',%') THEN 'a' ELSE 'p' END ampm_gb ,	a.* from    TBL_arrange_punctuality_info a JOIN TBM_ROUTE_COMMON_INFO b ON a.COMPANY_NO = b.COMPANY_NO AND a.ROUTE_NM = b.ROUTE_NM AND b.CODE ='배차정시성대상회차' where   a.company_no = '100' AND 	a.route_nm = '20번' AND     a.BASE_YMD = '2023-06-01' and		a.col000 <> '버스ID' AND     ( (',' || b.am_seq_array || ',' LIKE '%,' || a.col002 ||',%') OR (',' || b.pm_seq_array || ',' LIKE '%,' || a.col002 ||',%')) ) k left outer join daily_arrange d on k.col001 = d.car_regno AND 	k.ampm_gb = d.ampm		order by seq,col003
 {executed in 11 msec}
2023-06-25 23:06:24.814 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
192. WITH daily_arrange as ( SELECT a.CAR_REGNO , a.EMP_NM , '' AS value, REGEXP_REPLACE(a.d1, '[*0-9@]', '') AS ampm, CONVERT(REGEXP_REPLACE(a.d1, '[*ap@]', ''),	int) AS seq FROM TBL_MONTH_ARRANGE_DETAIL a WHERE a.company_no = '100' AND a.route_nm = '20번' AND a.BASE_Ym = '2023-06' AND a.CAR_REGNO NOT LIKE 'SP%' AND a.d1 NOT LIKE '%*%' AND a.d1 NOT LIKE '%@%' AND a.DISPATCH_SEQ = 6 AND a.INIT_SEQ = 0 UNION ALL SELECT a.CAR_REGNO , b.EMP_NM , decode(b.EMP_NM, NULL, '', 'SP') AS value, REGEXP_REPLACE(a.d1, '[*0-9@-]', '') AS ampm, CONVERT(REGEXP_REPLACE(a.d1, '[*ap@-]', ''),int) AS seq FROM TBL_MONTH_ARRANGE_DETAIL a LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO AND a.ROUTE_NM = b.ROUTE_NM AND a.BASE_YM = b.BASE_YM AND a.DISPATCH_SEQ = b.DISPATCH_SEQ AND a.INIT_SEQ = b.INIT_SEQ AND b.CAR_REGNO LIKE 'SP%' AND b.d1 <> '' AND a.d1 LIKE b.d1 || '%' WHERE a.company_no = '100' AND a.route_nm = '20번' AND a.BASE_Ym = '2023-06' AND a.CAR_REGNO NOT LIKE 'SP%' AND (a.d1 LIKE '%*%'			OR a.d1 LIKE '%@%') AND a.DISPATCH_SEQ = 6  AND a.INIT_SEQ = 0 ) select   1 seq,'-' as emp_nm, 'a' as ampm_gb,a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	route_nm = '20번' AND     BASE_YMD = '2023-06-01' and		col000 = '버스ID' union SELECT 2 seq ,nvl(d.emp_nm,'-') as emp_nm ,k.* FROM ( select CASE WHEN (',' || b.am_seq_array || ',' LIKE '%,' || a.col002 ||',%') THEN 'a' ELSE 'p' END ampm_gb ,	a.* from    TBL_arrange_punctuality_info a JOIN TBM_ROUTE_COMMON_INFO b ON a.COMPANY_NO = b.COMPANY_NO AND a.ROUTE_NM = b.ROUTE_NM AND b.CODE ='배차정시성대상회차' where   a.company_no = '100' AND 	a.route_nm = '20번' AND     a.BASE_YMD = '2023-06-01' and		a.col000 <> '버스ID' AND     ( (',' || b.am_seq_array || ',' LIKE '%,' || a.col002 ||',%') OR (',' || b.pm_seq_array || ',' LIKE '%,' || a.col002 ||',%')) ) k left outer join daily_arrange d on k.col001 = d.car_regno AND 	k.ampm_gb = d.ampm		order by seq,col003
 {executed in 9 msec}
2023-06-25 23:07:12.242 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@7756fabc
2023-06-25 23:07:12.242 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - filterType={selectMonthlyPunctuality} 
2023-06-25 23:07:12.242 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
2023-06-25 23:07:12.243 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
192. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 23:07:12.257 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
192. WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
 {executed in 14 msec}
2023-06-25 23:07:12.267 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
192. WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
 {executed in 10 msec}
2023-06-25 23:07:13.924 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@3afba261
2023-06-25 23:07:13.924 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - filterType={getRouteCommonInfo} 
2023-06-25 23:07:13.924 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
2023-06-25 23:07:13.925 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
192. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 23:07:13.926 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
192. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 1 msec}
2023-06-25 23:07:13.926 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
192. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 0 msec}
2023-06-25 23:07:13.937 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@831c5585
2023-06-25 23:07:13.937 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_ANALIZE} 
2023-06-25 23:07:13.937 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.BASE_YMD   = '2023-06-01' order by a.col002
2023-06-25 23:07:13.939 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
192. select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.BASE_YMD   = '2023-06-01' order by a.col002
 {executed in 1 msec}
2023-06-25 23:07:13.941 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
192. select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.BASE_YMD   = '2023-06-01' order by a.col002
 {executed in 1 msec}
2023-06-25 23:09:02.267 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@7756fabc
2023-06-25 23:09:02.267 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - filterType={selectMonthlyPunctuality} 
2023-06-25 23:09:02.267 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
2023-06-25 23:09:02.268 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
192. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 23:09:02.278 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
192. WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
 {executed in 10 msec}
2023-06-25 23:09:02.288 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
192. WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
 {executed in 9 msec}
2023-06-25 23:15:03.982 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@cd67c0f4
2023-06-25 23:15:03.982 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - filterType={getRouteCommonInfo} 
2023-06-25 23:15:03.982 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '5번' AND		a.CODE =  '배차정시성대상회차'
2023-06-25 23:15:03.983 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
192. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 23:15:03.984 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
192. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '5번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 1 msec}
2023-06-25 23:15:03.985 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
192. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '5번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 0 msec}
2023-06-25 23:15:03.998 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@cfac8191
2023-06-25 23:15:03.998 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_INFO_DETAIL} 
2023-06-25 23:15:03.998 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : WITH daily_arrange as ( SELECT a.CAR_REGNO , a.EMP_NM , '' AS value, REGEXP_REPLACE(a.d4, '[*0-9@]', '') AS ampm, CONVERT(REGEXP_REPLACE(a.d4, '[*ap@]', ''),	int) AS seq FROM TBL_MONTH_ARRANGE_DETAIL a WHERE a.company_no = '100' AND a.route_nm = '5번' AND a.BASE_Ym = '2023-06' AND a.CAR_REGNO NOT LIKE 'SP%' AND a.d4 NOT LIKE '%*%' AND a.d4 NOT LIKE '%@%' AND a.DISPATCH_SEQ = 6 AND a.INIT_SEQ = 0 UNION ALL SELECT a.CAR_REGNO , b.EMP_NM , decode(b.EMP_NM, NULL, '', 'SP') AS value, REGEXP_REPLACE(a.d4, '[*0-9@-]', '') AS ampm, CONVERT(REGEXP_REPLACE(a.d4, '[*ap@-]', ''),int) AS seq FROM TBL_MONTH_ARRANGE_DETAIL a LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO AND a.ROUTE_NM = b.ROUTE_NM AND a.BASE_YM = b.BASE_YM AND a.DISPATCH_SEQ = b.DISPATCH_SEQ AND a.INIT_SEQ = b.INIT_SEQ AND b.CAR_REGNO LIKE 'SP%' AND b.d4 <> '' AND a.d4 LIKE b.d4 || '%' WHERE a.company_no = '100' AND a.route_nm = '5번' AND a.BASE_Ym = '2023-06' AND a.CAR_REGNO NOT LIKE 'SP%' AND (a.d4 LIKE '%*%'			OR a.d4 LIKE '%@%') AND a.DISPATCH_SEQ = 6  AND a.INIT_SEQ = 0 ) select   1 seq,'-' as emp_nm, 'a' as ampm_gb,a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	route_nm = '5번' AND     BASE_YMD = '2023-06-04' and		col000 = '버스ID' union SELECT 2 seq ,nvl(d.emp_nm,'-') as emp_nm ,k.* FROM ( select CASE WHEN (',' || b.am_seq_array || ',' LIKE '%,' || a.col002 ||',%') THEN 'a' ELSE 'p' END ampm_gb ,	a.* from    TBL_arrange_punctuality_info a JOIN TBM_ROUTE_COMMON_INFO b ON a.COMPANY_NO = b.COMPANY_NO AND a.ROUTE_NM = b.ROUTE_NM AND b.CODE ='배차정시성대상회차' where   a.company_no = '100' AND 	a.route_nm = '5번' AND     a.BASE_YMD = '2023-06-04' and		a.col000 <> '버스ID' AND     ( (',' || b.am_seq_array || ',' LIKE '%,' || a.col002 ||',%') OR (',' || b.pm_seq_array || ',' LIKE '%,' || a.col002 ||',%')) ) k left outer join daily_arrange d on k.col001 = d.car_regno AND 	k.ampm_gb = d.ampm		order by seq,col003
2023-06-25 23:15:04.012 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
192. WITH daily_arrange as ( SELECT a.CAR_REGNO , a.EMP_NM , '' AS value, REGEXP_REPLACE(a.d4, '[*0-9@]', '') AS ampm, CONVERT(REGEXP_REPLACE(a.d4, '[*ap@]', ''),	int) AS seq FROM TBL_MONTH_ARRANGE_DETAIL a WHERE a.company_no = '100' AND a.route_nm = '5번' AND a.BASE_Ym = '2023-06' AND a.CAR_REGNO NOT LIKE 'SP%' AND a.d4 NOT LIKE '%*%' AND a.d4 NOT LIKE '%@%' AND a.DISPATCH_SEQ = 6 AND a.INIT_SEQ = 0 UNION ALL SELECT a.CAR_REGNO , b.EMP_NM , decode(b.EMP_NM, NULL, '', 'SP') AS value, REGEXP_REPLACE(a.d4, '[*0-9@-]', '') AS ampm, CONVERT(REGEXP_REPLACE(a.d4, '[*ap@-]', ''),int) AS seq FROM TBL_MONTH_ARRANGE_DETAIL a LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO AND a.ROUTE_NM = b.ROUTE_NM AND a.BASE_YM = b.BASE_YM AND a.DISPATCH_SEQ = b.DISPATCH_SEQ AND a.INIT_SEQ = b.INIT_SEQ AND b.CAR_REGNO LIKE 'SP%' AND b.d4 <> '' AND a.d4 LIKE b.d4 || '%' WHERE a.company_no = '100' AND a.route_nm = '5번' AND a.BASE_Ym = '2023-06' AND a.CAR_REGNO NOT LIKE 'SP%' AND (a.d4 LIKE '%*%'			OR a.d4 LIKE '%@%') AND a.DISPATCH_SEQ = 6  AND a.INIT_SEQ = 0 ) select   1 seq,'-' as emp_nm, 'a' as ampm_gb,a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	route_nm = '5번' AND     BASE_YMD = '2023-06-04' and		col000 = '버스ID' union SELECT 2 seq ,nvl(d.emp_nm,'-') as emp_nm ,k.* FROM ( select CASE WHEN (',' || b.am_seq_array || ',' LIKE '%,' || a.col002 ||',%') THEN 'a' ELSE 'p' END ampm_gb ,	a.* from    TBL_arrange_punctuality_info a JOIN TBM_ROUTE_COMMON_INFO b ON a.COMPANY_NO = b.COMPANY_NO AND a.ROUTE_NM = b.ROUTE_NM AND b.CODE ='배차정시성대상회차' where   a.company_no = '100' AND 	a.route_nm = '5번' AND     a.BASE_YMD = '2023-06-04' and		a.col000 <> '버스ID' AND     ( (',' || b.am_seq_array || ',' LIKE '%,' || a.col002 ||',%') OR (',' || b.pm_seq_array || ',' LIKE '%,' || a.col002 ||',%')) ) k left outer join daily_arrange d on k.col001 = d.car_regno AND 	k.ampm_gb = d.ampm		order by seq,col003
 {executed in 13 msec}
2023-06-25 23:15:04.019 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
192. WITH daily_arrange as ( SELECT a.CAR_REGNO , a.EMP_NM , '' AS value, REGEXP_REPLACE(a.d4, '[*0-9@]', '') AS ampm, CONVERT(REGEXP_REPLACE(a.d4, '[*ap@]', ''),	int) AS seq FROM TBL_MONTH_ARRANGE_DETAIL a WHERE a.company_no = '100' AND a.route_nm = '5번' AND a.BASE_Ym = '2023-06' AND a.CAR_REGNO NOT LIKE 'SP%' AND a.d4 NOT LIKE '%*%' AND a.d4 NOT LIKE '%@%' AND a.DISPATCH_SEQ = 6 AND a.INIT_SEQ = 0 UNION ALL SELECT a.CAR_REGNO , b.EMP_NM , decode(b.EMP_NM, NULL, '', 'SP') AS value, REGEXP_REPLACE(a.d4, '[*0-9@-]', '') AS ampm, CONVERT(REGEXP_REPLACE(a.d4, '[*ap@-]', ''),int) AS seq FROM TBL_MONTH_ARRANGE_DETAIL a LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO AND a.ROUTE_NM = b.ROUTE_NM AND a.BASE_YM = b.BASE_YM AND a.DISPATCH_SEQ = b.DISPATCH_SEQ AND a.INIT_SEQ = b.INIT_SEQ AND b.CAR_REGNO LIKE 'SP%' AND b.d4 <> '' AND a.d4 LIKE b.d4 || '%' WHERE a.company_no = '100' AND a.route_nm = '5번' AND a.BASE_Ym = '2023-06' AND a.CAR_REGNO NOT LIKE 'SP%' AND (a.d4 LIKE '%*%'			OR a.d4 LIKE '%@%') AND a.DISPATCH_SEQ = 6  AND a.INIT_SEQ = 0 ) select   1 seq,'-' as emp_nm, 'a' as ampm_gb,a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	route_nm = '5번' AND     BASE_YMD = '2023-06-04' and		col000 = '버스ID' union SELECT 2 seq ,nvl(d.emp_nm,'-') as emp_nm ,k.* FROM ( select CASE WHEN (',' || b.am_seq_array || ',' LIKE '%,' || a.col002 ||',%') THEN 'a' ELSE 'p' END ampm_gb ,	a.* from    TBL_arrange_punctuality_info a JOIN TBM_ROUTE_COMMON_INFO b ON a.COMPANY_NO = b.COMPANY_NO AND a.ROUTE_NM = b.ROUTE_NM AND b.CODE ='배차정시성대상회차' where   a.company_no = '100' AND 	a.route_nm = '5번' AND     a.BASE_YMD = '2023-06-04' and		a.col000 <> '버스ID' AND     ( (',' || b.am_seq_array || ',' LIKE '%,' || a.col002 ||',%') OR (',' || b.pm_seq_array || ',' LIKE '%,' || a.col002 ||',%')) ) k left outer join daily_arrange d on k.col001 = d.car_regno AND 	k.ampm_gb = d.ampm		order by seq,col003
 {executed in 7 msec}
2023-06-25 23:16:12.854 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
192. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-25 23:16:12.855 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
192. SELECT ROUTE_NM  FROM TBL_ROUTEINFO ORDER BY 1
 {executed in 1 msec}
2023-06-25 23:16:36.342 ERROR [http-nio-10010-exec-5] [c.p.d.core.error.GlobalExceptionHandler] - handleEntityNotFoundException
java.lang.NullPointerException: Cannot invoke "com.pjy.dashboard.domain.CommonCodeVo.init()" because "vo" is null
	at com.pjy.dashboard.controller.TestController.dynamicSqlFilter(TestController.java:198)
	at jdk.internal.reflect.GeneratedMethodAccessor190.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:893)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:798)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:97)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at jdk.internal.reflect.GeneratedMethodAccessor150.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$a00254f8.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:114)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:104)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-06-25 23:16:36.830 WARN  [http-nio-10010-exec-5] [o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver] - Resolved [java.lang.NullPointerException: Cannot invoke "com.pjy.dashboard.domain.CommonCodeVo.init()" because "vo" is null]
2023-06-25 23:16:43.304 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@6dff588f
2023-06-25 23:16:43.304 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - filterType={getRouteCommonInfo} 
2023-06-25 23:16:43.304 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '5번' AND		a.CODE =  '배차정시성대상회차'
2023-06-25 23:16:43.305 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
192. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 23:16:43.306 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
192. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '5번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 1 msec}
2023-06-25 23:16:43.307 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
192. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '5번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 1 msec}
2023-06-25 23:16:43.322 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@e31569a3
2023-06-25 23:16:43.322 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_INFO_DETAIL} 
2023-06-25 23:16:43.323 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : WITH daily_arrange as ( SELECT a.CAR_REGNO , a.EMP_NM , '' AS value, REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm, CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq FROM TBL_MONTH_ARRANGE_DETAIL a WHERE a.company_no = '100' AND a.route_nm = '5번' AND a.BASE_Ym = '2023-05' AND a.CAR_REGNO NOT LIKE 'SP%' AND a.d2 NOT LIKE '%*%' AND a.d2 NOT LIKE '%@%' AND a.DISPATCH_SEQ = 6 AND a.INIT_SEQ = 0 UNION ALL SELECT a.CAR_REGNO , b.EMP_NM , decode(b.EMP_NM, NULL, '', 'SP') AS value, REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm, CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),int) AS seq FROM TBL_MONTH_ARRANGE_DETAIL a LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO AND a.ROUTE_NM = b.ROUTE_NM AND a.BASE_YM = b.BASE_YM AND a.DISPATCH_SEQ = b.DISPATCH_SEQ AND a.INIT_SEQ = b.INIT_SEQ AND b.CAR_REGNO LIKE 'SP%' AND b.d2 <> '' AND a.d2 LIKE b.d2 || '%' WHERE a.company_no = '100' AND a.route_nm = '5번' AND a.BASE_Ym = '2023-05' AND a.CAR_REGNO NOT LIKE 'SP%' AND (a.d2 LIKE '%*%'			OR a.d2 LIKE '%@%') AND a.DISPATCH_SEQ = 6  AND a.INIT_SEQ = 0 ) select   1 seq,'-' as emp_nm, 'a' as ampm_gb,a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	route_nm = '5번' AND     BASE_YMD = '2023-05-02' and		col000 = '버스ID' union SELECT 2 seq ,nvl(d.emp_nm,'-') as emp_nm ,k.* FROM ( select CASE WHEN (',' || b.am_seq_array || ',' LIKE '%,' || a.col002 ||',%') THEN 'a' ELSE 'p' END ampm_gb ,	a.* from    TBL_arrange_punctuality_info a JOIN TBM_ROUTE_COMMON_INFO b ON a.COMPANY_NO = b.COMPANY_NO AND a.ROUTE_NM = b.ROUTE_NM AND b.CODE ='배차정시성대상회차' where   a.company_no = '100' AND 	a.route_nm = '5번' AND     a.BASE_YMD = '2023-05-02' and		a.col000 <> '버스ID' AND     ( (',' || b.am_seq_array || ',' LIKE '%,' || a.col002 ||',%') OR (',' || b.pm_seq_array || ',' LIKE '%,' || a.col002 ||',%')) ) k left outer join daily_arrange d on k.col001 = d.car_regno AND 	k.ampm_gb = d.ampm		order by seq,col003
2023-06-25 23:16:43.330 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
192. WITH daily_arrange as ( SELECT a.CAR_REGNO , a.EMP_NM , '' AS value, REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm, CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq FROM TBL_MONTH_ARRANGE_DETAIL a WHERE a.company_no = '100' AND a.route_nm = '5번' AND a.BASE_Ym = '2023-05' AND a.CAR_REGNO NOT LIKE 'SP%' AND a.d2 NOT LIKE '%*%' AND a.d2 NOT LIKE '%@%' AND a.DISPATCH_SEQ = 6 AND a.INIT_SEQ = 0 UNION ALL SELECT a.CAR_REGNO , b.EMP_NM , decode(b.EMP_NM, NULL, '', 'SP') AS value, REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm, CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),int) AS seq FROM TBL_MONTH_ARRANGE_DETAIL a LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO AND a.ROUTE_NM = b.ROUTE_NM AND a.BASE_YM = b.BASE_YM AND a.DISPATCH_SEQ = b.DISPATCH_SEQ AND a.INIT_SEQ = b.INIT_SEQ AND b.CAR_REGNO LIKE 'SP%' AND b.d2 <> '' AND a.d2 LIKE b.d2 || '%' WHERE a.company_no = '100' AND a.route_nm = '5번' AND a.BASE_Ym = '2023-05' AND a.CAR_REGNO NOT LIKE 'SP%' AND (a.d2 LIKE '%*%'			OR a.d2 LIKE '%@%') AND a.DISPATCH_SEQ = 6  AND a.INIT_SEQ = 0 ) select   1 seq,'-' as emp_nm, 'a' as ampm_gb,a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	route_nm = '5번' AND     BASE_YMD = '2023-05-02' and		col000 = '버스ID' union SELECT 2 seq ,nvl(d.emp_nm,'-') as emp_nm ,k.* FROM ( select CASE WHEN (',' || b.am_seq_array || ',' LIKE '%,' || a.col002 ||',%') THEN 'a' ELSE 'p' END ampm_gb ,	a.* from    TBL_arrange_punctuality_info a JOIN TBM_ROUTE_COMMON_INFO b ON a.COMPANY_NO = b.COMPANY_NO AND a.ROUTE_NM = b.ROUTE_NM AND b.CODE ='배차정시성대상회차' where   a.company_no = '100' AND 	a.route_nm = '5번' AND     a.BASE_YMD = '2023-05-02' and		a.col000 <> '버스ID' AND     ( (',' || b.am_seq_array || ',' LIKE '%,' || a.col002 ||',%') OR (',' || b.pm_seq_array || ',' LIKE '%,' || a.col002 ||',%')) ) k left outer join daily_arrange d on k.col001 = d.car_regno AND 	k.ampm_gb = d.ampm		order by seq,col003
 {executed in 7 msec}
2023-06-25 23:16:43.336 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
192. WITH daily_arrange as ( SELECT a.CAR_REGNO , a.EMP_NM , '' AS value, REGEXP_REPLACE(a.d2, '[*0-9@]', '') AS ampm, CONVERT(REGEXP_REPLACE(a.d2, '[*ap@]', ''),	int) AS seq FROM TBL_MONTH_ARRANGE_DETAIL a WHERE a.company_no = '100' AND a.route_nm = '5번' AND a.BASE_Ym = '2023-05' AND a.CAR_REGNO NOT LIKE 'SP%' AND a.d2 NOT LIKE '%*%' AND a.d2 NOT LIKE '%@%' AND a.DISPATCH_SEQ = 6 AND a.INIT_SEQ = 0 UNION ALL SELECT a.CAR_REGNO , b.EMP_NM , decode(b.EMP_NM, NULL, '', 'SP') AS value, REGEXP_REPLACE(a.d2, '[*0-9@-]', '') AS ampm, CONVERT(REGEXP_REPLACE(a.d2, '[*ap@-]', ''),int) AS seq FROM TBL_MONTH_ARRANGE_DETAIL a LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO AND a.ROUTE_NM = b.ROUTE_NM AND a.BASE_YM = b.BASE_YM AND a.DISPATCH_SEQ = b.DISPATCH_SEQ AND a.INIT_SEQ = b.INIT_SEQ AND b.CAR_REGNO LIKE 'SP%' AND b.d2 <> '' AND a.d2 LIKE b.d2 || '%' WHERE a.company_no = '100' AND a.route_nm = '5번' AND a.BASE_Ym = '2023-05' AND a.CAR_REGNO NOT LIKE 'SP%' AND (a.d2 LIKE '%*%'			OR a.d2 LIKE '%@%') AND a.DISPATCH_SEQ = 6  AND a.INIT_SEQ = 0 ) select   1 seq,'-' as emp_nm, 'a' as ampm_gb,a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	route_nm = '5번' AND     BASE_YMD = '2023-05-02' and		col000 = '버스ID' union SELECT 2 seq ,nvl(d.emp_nm,'-') as emp_nm ,k.* FROM ( select CASE WHEN (',' || b.am_seq_array || ',' LIKE '%,' || a.col002 ||',%') THEN 'a' ELSE 'p' END ampm_gb ,	a.* from    TBL_arrange_punctuality_info a JOIN TBM_ROUTE_COMMON_INFO b ON a.COMPANY_NO = b.COMPANY_NO AND a.ROUTE_NM = b.ROUTE_NM AND b.CODE ='배차정시성대상회차' where   a.company_no = '100' AND 	a.route_nm = '5번' AND     a.BASE_YMD = '2023-05-02' and		a.col000 <> '버스ID' AND     ( (',' || b.am_seq_array || ',' LIKE '%,' || a.col002 ||',%') OR (',' || b.pm_seq_array || ',' LIKE '%,' || a.col002 ||',%')) ) k left outer join daily_arrange d on k.col001 = d.car_regno AND 	k.ampm_gb = d.ampm		order by seq,col003
 {executed in 5 msec}
2023-06-25 23:16:56.997 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@5bad27eb
2023-06-25 23:16:56.997 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - filterType={getRouteCommonInfo} 
2023-06-25 23:16:56.997 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '5번' AND		a.CODE =  '배차정시성대상회차'
2023-06-25 23:16:56.998 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
192. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 23:16:56.999 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
192. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '5번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 1 msec}
2023-06-25 23:16:57.000 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
192. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '5번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 1 msec}
2023-06-25 23:16:57.012 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@d0c338ff
2023-06-25 23:16:57.012 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_INFO_DETAIL} 
2023-06-25 23:16:57.013 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : WITH daily_arrange as ( SELECT a.CAR_REGNO , a.EMP_NM , '' AS value, REGEXP_REPLACE(a.d29, '[*0-9@]', '') AS ampm, CONVERT(REGEXP_REPLACE(a.d29, '[*ap@]', ''),	int) AS seq FROM TBL_MONTH_ARRANGE_DETAIL a WHERE a.company_no = '100' AND a.route_nm = '5번' AND a.BASE_Ym = '2023-05' AND a.CAR_REGNO NOT LIKE 'SP%' AND a.d29 NOT LIKE '%*%' AND a.d29 NOT LIKE '%@%' AND a.DISPATCH_SEQ = 6 AND a.INIT_SEQ = 0 UNION ALL SELECT a.CAR_REGNO , b.EMP_NM , decode(b.EMP_NM, NULL, '', 'SP') AS value, REGEXP_REPLACE(a.d29, '[*0-9@-]', '') AS ampm, CONVERT(REGEXP_REPLACE(a.d29, '[*ap@-]', ''),int) AS seq FROM TBL_MONTH_ARRANGE_DETAIL a LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO AND a.ROUTE_NM = b.ROUTE_NM AND a.BASE_YM = b.BASE_YM AND a.DISPATCH_SEQ = b.DISPATCH_SEQ AND a.INIT_SEQ = b.INIT_SEQ AND b.CAR_REGNO LIKE 'SP%' AND b.d29 <> '' AND a.d29 LIKE b.d29 || '%' WHERE a.company_no = '100' AND a.route_nm = '5번' AND a.BASE_Ym = '2023-05' AND a.CAR_REGNO NOT LIKE 'SP%' AND (a.d29 LIKE '%*%'			OR a.d29 LIKE '%@%') AND a.DISPATCH_SEQ = 6  AND a.INIT_SEQ = 0 ) select   1 seq,'-' as emp_nm, 'a' as ampm_gb,a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	route_nm = '5번' AND     BASE_YMD = '2023-05-29' and		col000 = '버스ID' union SELECT 2 seq ,nvl(d.emp_nm,'-') as emp_nm ,k.* FROM ( select CASE WHEN (',' || b.am_seq_array || ',' LIKE '%,' || a.col002 ||',%') THEN 'a' ELSE 'p' END ampm_gb ,	a.* from    TBL_arrange_punctuality_info a JOIN TBM_ROUTE_COMMON_INFO b ON a.COMPANY_NO = b.COMPANY_NO AND a.ROUTE_NM = b.ROUTE_NM AND b.CODE ='배차정시성대상회차' where   a.company_no = '100' AND 	a.route_nm = '5번' AND     a.BASE_YMD = '2023-05-29' and		a.col000 <> '버스ID' AND     ( (',' || b.am_seq_array || ',' LIKE '%,' || a.col002 ||',%') OR (',' || b.pm_seq_array || ',' LIKE '%,' || a.col002 ||',%')) ) k left outer join daily_arrange d on k.col001 = d.car_regno AND 	k.ampm_gb = d.ampm		order by seq,col003
2023-06-25 23:16:57.020 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
192. WITH daily_arrange as ( SELECT a.CAR_REGNO , a.EMP_NM , '' AS value, REGEXP_REPLACE(a.d29, '[*0-9@]', '') AS ampm, CONVERT(REGEXP_REPLACE(a.d29, '[*ap@]', ''),	int) AS seq FROM TBL_MONTH_ARRANGE_DETAIL a WHERE a.company_no = '100' AND a.route_nm = '5번' AND a.BASE_Ym = '2023-05' AND a.CAR_REGNO NOT LIKE 'SP%' AND a.d29 NOT LIKE '%*%' AND a.d29 NOT LIKE '%@%' AND a.DISPATCH_SEQ = 6 AND a.INIT_SEQ = 0 UNION ALL SELECT a.CAR_REGNO , b.EMP_NM , decode(b.EMP_NM, NULL, '', 'SP') AS value, REGEXP_REPLACE(a.d29, '[*0-9@-]', '') AS ampm, CONVERT(REGEXP_REPLACE(a.d29, '[*ap@-]', ''),int) AS seq FROM TBL_MONTH_ARRANGE_DETAIL a LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO AND a.ROUTE_NM = b.ROUTE_NM AND a.BASE_YM = b.BASE_YM AND a.DISPATCH_SEQ = b.DISPATCH_SEQ AND a.INIT_SEQ = b.INIT_SEQ AND b.CAR_REGNO LIKE 'SP%' AND b.d29 <> '' AND a.d29 LIKE b.d29 || '%' WHERE a.company_no = '100' AND a.route_nm = '5번' AND a.BASE_Ym = '2023-05' AND a.CAR_REGNO NOT LIKE 'SP%' AND (a.d29 LIKE '%*%'			OR a.d29 LIKE '%@%') AND a.DISPATCH_SEQ = 6  AND a.INIT_SEQ = 0 ) select   1 seq,'-' as emp_nm, 'a' as ampm_gb,a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	route_nm = '5번' AND     BASE_YMD = '2023-05-29' and		col000 = '버스ID' union SELECT 2 seq ,nvl(d.emp_nm,'-') as emp_nm ,k.* FROM ( select CASE WHEN (',' || b.am_seq_array || ',' LIKE '%,' || a.col002 ||',%') THEN 'a' ELSE 'p' END ampm_gb ,	a.* from    TBL_arrange_punctuality_info a JOIN TBM_ROUTE_COMMON_INFO b ON a.COMPANY_NO = b.COMPANY_NO AND a.ROUTE_NM = b.ROUTE_NM AND b.CODE ='배차정시성대상회차' where   a.company_no = '100' AND 	a.route_nm = '5번' AND     a.BASE_YMD = '2023-05-29' and		a.col000 <> '버스ID' AND     ( (',' || b.am_seq_array || ',' LIKE '%,' || a.col002 ||',%') OR (',' || b.pm_seq_array || ',' LIKE '%,' || a.col002 ||',%')) ) k left outer join daily_arrange d on k.col001 = d.car_regno AND 	k.ampm_gb = d.ampm		order by seq,col003
 {executed in 7 msec}
2023-06-25 23:16:57.026 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
192. WITH daily_arrange as ( SELECT a.CAR_REGNO , a.EMP_NM , '' AS value, REGEXP_REPLACE(a.d29, '[*0-9@]', '') AS ampm, CONVERT(REGEXP_REPLACE(a.d29, '[*ap@]', ''),	int) AS seq FROM TBL_MONTH_ARRANGE_DETAIL a WHERE a.company_no = '100' AND a.route_nm = '5번' AND a.BASE_Ym = '2023-05' AND a.CAR_REGNO NOT LIKE 'SP%' AND a.d29 NOT LIKE '%*%' AND a.d29 NOT LIKE '%@%' AND a.DISPATCH_SEQ = 6 AND a.INIT_SEQ = 0 UNION ALL SELECT a.CAR_REGNO , b.EMP_NM , decode(b.EMP_NM, NULL, '', 'SP') AS value, REGEXP_REPLACE(a.d29, '[*0-9@-]', '') AS ampm, CONVERT(REGEXP_REPLACE(a.d29, '[*ap@-]', ''),int) AS seq FROM TBL_MONTH_ARRANGE_DETAIL a LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO AND a.ROUTE_NM = b.ROUTE_NM AND a.BASE_YM = b.BASE_YM AND a.DISPATCH_SEQ = b.DISPATCH_SEQ AND a.INIT_SEQ = b.INIT_SEQ AND b.CAR_REGNO LIKE 'SP%' AND b.d29 <> '' AND a.d29 LIKE b.d29 || '%' WHERE a.company_no = '100' AND a.route_nm = '5번' AND a.BASE_Ym = '2023-05' AND a.CAR_REGNO NOT LIKE 'SP%' AND (a.d29 LIKE '%*%'			OR a.d29 LIKE '%@%') AND a.DISPATCH_SEQ = 6  AND a.INIT_SEQ = 0 ) select   1 seq,'-' as emp_nm, 'a' as ampm_gb,a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	route_nm = '5번' AND     BASE_YMD = '2023-05-29' and		col000 = '버스ID' union SELECT 2 seq ,nvl(d.emp_nm,'-') as emp_nm ,k.* FROM ( select CASE WHEN (',' || b.am_seq_array || ',' LIKE '%,' || a.col002 ||',%') THEN 'a' ELSE 'p' END ampm_gb ,	a.* from    TBL_arrange_punctuality_info a JOIN TBM_ROUTE_COMMON_INFO b ON a.COMPANY_NO = b.COMPANY_NO AND a.ROUTE_NM = b.ROUTE_NM AND b.CODE ='배차정시성대상회차' where   a.company_no = '100' AND 	a.route_nm = '5번' AND     a.BASE_YMD = '2023-05-29' and		a.col000 <> '버스ID' AND     ( (',' || b.am_seq_array || ',' LIKE '%,' || a.col002 ||',%') OR (',' || b.pm_seq_array || ',' LIKE '%,' || a.col002 ||',%')) ) k left outer join daily_arrange d on k.col001 = d.car_regno AND 	k.ampm_gb = d.ampm		order by seq,col003
 {executed in 5 msec}
2023-06-25 23:17:01.002 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@855f82df
2023-06-25 23:17:01.002 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - filterType={getRouteCommonInfo} 
2023-06-25 23:17:01.002 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '5-1번' AND		a.CODE =  '배차정시성대상회차'
2023-06-25 23:17:01.003 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
192. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 23:17:01.004 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
192. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '5-1번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 1 msec}
2023-06-25 23:17:01.005 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
192. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '5-1번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 0 msec}
2023-06-25 23:17:01.017 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@fa7593f3
2023-06-25 23:17:01.017 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_INFO_DETAIL} 
2023-06-25 23:17:01.017 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : WITH daily_arrange as ( SELECT a.CAR_REGNO , a.EMP_NM , '' AS value, REGEXP_REPLACE(a.d29, '[*0-9@]', '') AS ampm, CONVERT(REGEXP_REPLACE(a.d29, '[*ap@]', ''),	int) AS seq FROM TBL_MONTH_ARRANGE_DETAIL a WHERE a.company_no = '100' AND a.route_nm = '5-1번' AND a.BASE_Ym = '2023-05' AND a.CAR_REGNO NOT LIKE 'SP%' AND a.d29 NOT LIKE '%*%' AND a.d29 NOT LIKE '%@%' AND a.DISPATCH_SEQ = 6 AND a.INIT_SEQ = 0 UNION ALL SELECT a.CAR_REGNO , b.EMP_NM , decode(b.EMP_NM, NULL, '', 'SP') AS value, REGEXP_REPLACE(a.d29, '[*0-9@-]', '') AS ampm, CONVERT(REGEXP_REPLACE(a.d29, '[*ap@-]', ''),int) AS seq FROM TBL_MONTH_ARRANGE_DETAIL a LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO AND a.ROUTE_NM = b.ROUTE_NM AND a.BASE_YM = b.BASE_YM AND a.DISPATCH_SEQ = b.DISPATCH_SEQ AND a.INIT_SEQ = b.INIT_SEQ AND b.CAR_REGNO LIKE 'SP%' AND b.d29 <> '' AND a.d29 LIKE b.d29 || '%' WHERE a.company_no = '100' AND a.route_nm = '5-1번' AND a.BASE_Ym = '2023-05' AND a.CAR_REGNO NOT LIKE 'SP%' AND (a.d29 LIKE '%*%'			OR a.d29 LIKE '%@%') AND a.DISPATCH_SEQ = 6  AND a.INIT_SEQ = 0 ) select   1 seq,'-' as emp_nm, 'a' as ampm_gb,a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	route_nm = '5-1번' AND     BASE_YMD = '2023-05-29' and		col000 = '버스ID' union SELECT 2 seq ,nvl(d.emp_nm,'-') as emp_nm ,k.* FROM ( select CASE WHEN (',' || b.am_seq_array || ',' LIKE '%,' || a.col002 ||',%') THEN 'a' ELSE 'p' END ampm_gb ,	a.* from    TBL_arrange_punctuality_info a JOIN TBM_ROUTE_COMMON_INFO b ON a.COMPANY_NO = b.COMPANY_NO AND a.ROUTE_NM = b.ROUTE_NM AND b.CODE ='배차정시성대상회차' where   a.company_no = '100' AND 	a.route_nm = '5-1번' AND     a.BASE_YMD = '2023-05-29' and		a.col000 <> '버스ID' AND     ( (',' || b.am_seq_array || ',' LIKE '%,' || a.col002 ||',%') OR (',' || b.pm_seq_array || ',' LIKE '%,' || a.col002 ||',%')) ) k left outer join daily_arrange d on k.col001 = d.car_regno AND 	k.ampm_gb = d.ampm		order by seq,col003
2023-06-25 23:17:01.033 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
192. WITH daily_arrange as ( SELECT a.CAR_REGNO , a.EMP_NM , '' AS value, REGEXP_REPLACE(a.d29, '[*0-9@]', '') AS ampm, CONVERT(REGEXP_REPLACE(a.d29, '[*ap@]', ''),	int) AS seq FROM TBL_MONTH_ARRANGE_DETAIL a WHERE a.company_no = '100' AND a.route_nm = '5-1번' AND a.BASE_Ym = '2023-05' AND a.CAR_REGNO NOT LIKE 'SP%' AND a.d29 NOT LIKE '%*%' AND a.d29 NOT LIKE '%@%' AND a.DISPATCH_SEQ = 6 AND a.INIT_SEQ = 0 UNION ALL SELECT a.CAR_REGNO , b.EMP_NM , decode(b.EMP_NM, NULL, '', 'SP') AS value, REGEXP_REPLACE(a.d29, '[*0-9@-]', '') AS ampm, CONVERT(REGEXP_REPLACE(a.d29, '[*ap@-]', ''),int) AS seq FROM TBL_MONTH_ARRANGE_DETAIL a LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO AND a.ROUTE_NM = b.ROUTE_NM AND a.BASE_YM = b.BASE_YM AND a.DISPATCH_SEQ = b.DISPATCH_SEQ AND a.INIT_SEQ = b.INIT_SEQ AND b.CAR_REGNO LIKE 'SP%' AND b.d29 <> '' AND a.d29 LIKE b.d29 || '%' WHERE a.company_no = '100' AND a.route_nm = '5-1번' AND a.BASE_Ym = '2023-05' AND a.CAR_REGNO NOT LIKE 'SP%' AND (a.d29 LIKE '%*%'			OR a.d29 LIKE '%@%') AND a.DISPATCH_SEQ = 6  AND a.INIT_SEQ = 0 ) select   1 seq,'-' as emp_nm, 'a' as ampm_gb,a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	route_nm = '5-1번' AND     BASE_YMD = '2023-05-29' and		col000 = '버스ID' union SELECT 2 seq ,nvl(d.emp_nm,'-') as emp_nm ,k.* FROM ( select CASE WHEN (',' || b.am_seq_array || ',' LIKE '%,' || a.col002 ||',%') THEN 'a' ELSE 'p' END ampm_gb ,	a.* from    TBL_arrange_punctuality_info a JOIN TBM_ROUTE_COMMON_INFO b ON a.COMPANY_NO = b.COMPANY_NO AND a.ROUTE_NM = b.ROUTE_NM AND b.CODE ='배차정시성대상회차' where   a.company_no = '100' AND 	a.route_nm = '5-1번' AND     a.BASE_YMD = '2023-05-29' and		a.col000 <> '버스ID' AND     ( (',' || b.am_seq_array || ',' LIKE '%,' || a.col002 ||',%') OR (',' || b.pm_seq_array || ',' LIKE '%,' || a.col002 ||',%')) ) k left outer join daily_arrange d on k.col001 = d.car_regno AND 	k.ampm_gb = d.ampm		order by seq,col003
 {executed in 16 msec}
2023-06-25 23:17:01.042 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
192. WITH daily_arrange as ( SELECT a.CAR_REGNO , a.EMP_NM , '' AS value, REGEXP_REPLACE(a.d29, '[*0-9@]', '') AS ampm, CONVERT(REGEXP_REPLACE(a.d29, '[*ap@]', ''),	int) AS seq FROM TBL_MONTH_ARRANGE_DETAIL a WHERE a.company_no = '100' AND a.route_nm = '5-1번' AND a.BASE_Ym = '2023-05' AND a.CAR_REGNO NOT LIKE 'SP%' AND a.d29 NOT LIKE '%*%' AND a.d29 NOT LIKE '%@%' AND a.DISPATCH_SEQ = 6 AND a.INIT_SEQ = 0 UNION ALL SELECT a.CAR_REGNO , b.EMP_NM , decode(b.EMP_NM, NULL, '', 'SP') AS value, REGEXP_REPLACE(a.d29, '[*0-9@-]', '') AS ampm, CONVERT(REGEXP_REPLACE(a.d29, '[*ap@-]', ''),int) AS seq FROM TBL_MONTH_ARRANGE_DETAIL a LEFT OUTER JOIN TBL_MONTH_ARRANGE_DETAIL b ON a.COMPANY_NO = b.COMPANY_NO AND a.ROUTE_NM = b.ROUTE_NM AND a.BASE_YM = b.BASE_YM AND a.DISPATCH_SEQ = b.DISPATCH_SEQ AND a.INIT_SEQ = b.INIT_SEQ AND b.CAR_REGNO LIKE 'SP%' AND b.d29 <> '' AND a.d29 LIKE b.d29 || '%' WHERE a.company_no = '100' AND a.route_nm = '5-1번' AND a.BASE_Ym = '2023-05' AND a.CAR_REGNO NOT LIKE 'SP%' AND (a.d29 LIKE '%*%'			OR a.d29 LIKE '%@%') AND a.DISPATCH_SEQ = 6  AND a.INIT_SEQ = 0 ) select   1 seq,'-' as emp_nm, 'a' as ampm_gb,a.* from    TBL_arrange_punctuality_info a where   a.company_no = '100' AND 	route_nm = '5-1번' AND     BASE_YMD = '2023-05-29' and		col000 = '버스ID' union SELECT 2 seq ,nvl(d.emp_nm,'-') as emp_nm ,k.* FROM ( select CASE WHEN (',' || b.am_seq_array || ',' LIKE '%,' || a.col002 ||',%') THEN 'a' ELSE 'p' END ampm_gb ,	a.* from    TBL_arrange_punctuality_info a JOIN TBM_ROUTE_COMMON_INFO b ON a.COMPANY_NO = b.COMPANY_NO AND a.ROUTE_NM = b.ROUTE_NM AND b.CODE ='배차정시성대상회차' where   a.company_no = '100' AND 	a.route_nm = '5-1번' AND     a.BASE_YMD = '2023-05-29' and		a.col000 <> '버스ID' AND     ( (',' || b.am_seq_array || ',' LIKE '%,' || a.col002 ||',%') OR (',' || b.pm_seq_array || ',' LIKE '%,' || a.col002 ||',%')) ) k left outer join daily_arrange d on k.col001 = d.car_regno AND 	k.ampm_gb = d.ampm		order by seq,col003
 {executed in 9 msec}
2023-06-25 23:17:11.756 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@ccd64872
2023-06-25 23:17:11.756 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - filterType={getRouteCommonInfo} 
2023-06-25 23:17:11.756 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '5-1번' AND		a.CODE =  '배차정시성대상회차'
2023-06-25 23:17:11.757 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
192. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 23:17:11.757 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
192. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '5-1번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 0 msec}
2023-06-25 23:17:11.757 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
192. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '5-1번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 0 msec}
2023-06-25 23:18:18.074 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@7756fabc
2023-06-25 23:18:18.074 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - filterType={selectMonthlyPunctuality} 
2023-06-25 23:18:18.074 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
2023-06-25 23:18:18.075 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
192. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 23:18:18.086 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
192. WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
 {executed in 11 msec}
2023-06-25 23:18:18.096 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
192. WITH datainfo AS ( select	k.ROUTE_NM ,	listagg(k.dd ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS dd ,	listagg(k.cnt1 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt1 ,	listagg(k.cnt2 ,',') WITHIN group(ORDER BY k.ROUTE_NM) AS cnt2 FROM ( SELECT DAY(a.base_ymd) dd,	a.route_nm, max(a.cnt1) AS cnt1,max(a.cnt2) AS cnt2 FROM ( select	base_ymd ,	ROUTE_NM ,	count(*) AS cnt1,	0 AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_INFO a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM  UNION select	base_ymd ,	ROUTE_NM ,	0 AS cnt1 ,	count(*) AS cnt2 FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE a WHERE 	COMPANY_NO  = '100' AND 	BASE_YMD LIKE '2023-06%' GROUP BY BASE_YMD ,ROUTE_NM ) a GROUP BY a.base_ymd,a.route_nm ) k GROUP BY k.ROUTE_NM ) SELECT  listagg(k.day ,',') WITHIN group(ORDER BY k.key) AS column_A ,	listagg(k.week||k.HOLIDAY_YN ,',') WITHIN group(ORDER BY k.key) AS column_B ,	'' AS column_C ,	'' AS column_D FROM ( SELECT '1' KEY,p.DAY,p.date ,		decode(p.week,1,'일',2,'월',3,'화',4,'수',5,'목',6,'금',7,'토') AS week ,	nvl(c.HOLIDAY_YN,'') AS HOLIDAY_YN FROM ( SELECT t.n AS day ,       day_of_week(dateadd(DAY,t.n-1,DATE'20230601')) AS week ,       formatdatetime(dateadd(DAY,t.n-1,DATE'20230601'),'yyyy-MM-dd') AS date FROM T WHERE dateadd(DAY,t.n,DATE'20230601') <= DATE'20230701' ) p LEFT OUTER JOIN  tbm_holiday_info c ON  c.COMPANY_NO = '100' AND p.date = c.WORK_DATE ) k GROUP BY k.key union SELECT a.ROUTE_NM ,b.dd,b.cnt1,b.cnt2 FROM TBL_ROUTEINFO a	LEFT OUTER JOIN  datainfo b ON b.route_nm = a.ROUTE_NM WHERE a.COMPANY_NO = '100'
 {executed in 10 msec}
2023-06-25 23:18:19.282 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@3afba261
2023-06-25 23:18:19.282 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - filterType={getRouteCommonInfo} 
2023-06-25 23:18:19.282 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
2023-06-25 23:18:19.284 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
192. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-25 23:18:19.284 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
192. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 0 msec}
2023-06-25 23:18:19.285 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
192. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 1 msec}
2023-06-25 23:18:19.294 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@6de4b249
2023-06-25 23:18:19.294 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_ANALIZE} 
2023-06-25 23:18:19.294 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.BASE_YMD   = '2023-06-02' order by a.col002
2023-06-25 23:18:19.296 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
192. select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.BASE_YMD   = '2023-06-02' order by a.col002
 {executed in 1 msec}
2023-06-25 23:18:19.298 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
192. select   1 as seq,1 as temp,a.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.BASE_YMD   = '2023-06-02' order by a.col002
 {executed in 1 msec}
