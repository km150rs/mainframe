2023-06-11 00:15:34.441 WARN  [H2 housekeeper] [com.zaxxer.hikari.pool.HikariPool] - H2 - Thread starvation or clock leap detected (housekeeper delta=29m31s449ms508µs200ns).
2023-06-11 00:15:56.913 INFO  [Catalina-utility-1] [c.pjy.dashboard.listener.SessionListener] - updateUserCloseTime p00139 
2023-06-11 00:15:56.918 INFO  [Catalina-utility-1] [c.pjy.dashboard.listener.SessionListener] - currentSessionUserList ->  false
2023-06-11 00:15:56.918 INFO  [Catalina-utility-1] [c.pjy.dashboard.listener.SessionListener] - updateUserCloseTime p00139 
2023-06-11 00:15:56.918 INFO  [Catalina-utility-1] [c.pjy.dashboard.listener.SessionListener] - currentSessionUserList ->  false
2023-06-11 00:42:43.708 WARN  [H2 housekeeper] [com.zaxxer.hikari.pool.HikariPool] - H2 - Thread starvation or clock leap detected (housekeeper delta=11m39s144ms539µs).
2023-06-11 00:47:15.569 INFO  [MessageBroker-2] [o.s.w.s.c.WebSocketMessageBrokerStats] - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 3, active threads = 1, queued tasks = 0, completed tasks = 2]
2023-06-11 00:47:15.569 INFO  [MessageBroker-1] [o.s.w.s.c.WebSocketMessageBrokerStats] - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 4, active threads = 3, queued tasks = 0, completed tasks = 2]
2023-06-11 00:58:28.997 INFO  [http-nio-10010-exec-3] [c.p.d.interceptor.LoggerInterceptor] - ============================== START ==============================
2023-06-11 00:58:28.997 INFO  [http-nio-10010-exec-3] [c.p.d.interceptor.LoggerInterceptor] -  Class       	:  class org.springframework.web.method.HandlerMethod
2023-06-11 00:58:28.997 INFO  [http-nio-10010-exec-3] [c.p.d.interceptor.LoggerInterceptor] -  Request URI 	:  /
2023-06-11 00:58:28.997 INFO  [http-nio-10010-exec-3] [c.p.d.interceptor.LoggerInterceptor] -  Request addr	:  0:0:0:0:0:0:0:1
2023-06-11 00:58:28.997 INFO  [http-nio-10010-exec-3] [c.p.d.interceptor.LoggerInterceptor] -  Servlet URI 	:  /
2023-06-11 00:58:29.142 ERROR [http-nio-10010-exec-3] [o.a.c.c.C.[Tomcat].[localhost].[/].[jsp]] - Servlet.service() for servlet [jsp] threw exception
java.lang.IllegalStateException: Cannot create a session after the response has been committed
	at org.apache.catalina.connector.Request.doGetSession(Request.java:2993)
	at org.apache.catalina.connector.Request.getSession(Request.java:2432)
	at org.apache.catalina.connector.RequestFacade.getSession(RequestFacade.java:908)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:244)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:582)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:527)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at org.apache.jasper.runtime.PageContextImpl.initialize(PageContextImpl.java:133)
	at org.apache.jasper.runtime.JspFactoryImpl.internalGetPageContext(JspFactoryImpl.java:109)
	at org.apache.jasper.runtime.JspFactoryImpl.getPageContext(JspFactoryImpl.java:60)
	at org.apache.jsp.WEB_002dINF.jsp.home_jsp._jspService(home_jsp.java:121)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:477)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:385)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:329)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:580)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:516)
	at org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequestDispatcher.include(HeaderWriterFilter.java:149)
	at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:163)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:317)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1372)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:97)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at jdk.internal.reflect.GeneratedMethodAccessor148.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$3bca7a07.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:114)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:104)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-06-11 00:58:29.144 ERROR [http-nio-10010-exec-3] [o.a.c.c.C.[.[.[/].[dispatcherServlet]] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [javax.servlet.ServletException: java.lang.IllegalStateException: Cannot create a session after the response has been committed] with root cause
java.lang.IllegalStateException: Cannot create a session after the response has been committed
	at org.apache.catalina.connector.Request.doGetSession(Request.java:2993)
	at org.apache.catalina.connector.Request.getSession(Request.java:2432)
	at org.apache.catalina.connector.RequestFacade.getSession(RequestFacade.java:908)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:244)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:582)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:527)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at org.apache.jasper.runtime.PageContextImpl.initialize(PageContextImpl.java:133)
	at org.apache.jasper.runtime.JspFactoryImpl.internalGetPageContext(JspFactoryImpl.java:109)
	at org.apache.jasper.runtime.JspFactoryImpl.getPageContext(JspFactoryImpl.java:60)
	at org.apache.jsp.WEB_002dINF.jsp.home_jsp._jspService(home_jsp.java:121)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:477)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:385)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:329)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:580)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:516)
	at org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequestDispatcher.include(HeaderWriterFilter.java:149)
	at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:163)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:317)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1372)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:97)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at jdk.internal.reflect.GeneratedMethodAccessor148.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$3bca7a07.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:114)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:104)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-06-11 00:58:29.147 INFO  [http-nio-10010-exec-3] [c.p.d.interceptor.LoggerInterceptor] - ============================== START ==============================
2023-06-11 00:58:29.147 INFO  [http-nio-10010-exec-3] [c.p.d.interceptor.LoggerInterceptor] -  Class       	:  class org.springframework.web.method.HandlerMethod
2023-06-11 00:58:29.147 INFO  [http-nio-10010-exec-3] [c.p.d.interceptor.LoggerInterceptor] -  Request URI 	:  /error
2023-06-11 00:58:29.147 INFO  [http-nio-10010-exec-3] [c.p.d.interceptor.LoggerInterceptor] -  Request addr	:  0:0:0:0:0:0:0:1
2023-06-11 00:58:29.147 INFO  [http-nio-10010-exec-3] [c.p.d.interceptor.LoggerInterceptor] -  Servlet URI 	:  /error
2023-06-11 00:58:29.257 ERROR [http-nio-10010-exec-3] [o.a.c.c.C.[Tomcat].[localhost].[/].[jsp]] - Servlet.service() for servlet [jsp] threw exception
java.lang.IllegalStateException: Cannot create a session after the response has been committed
	at org.apache.catalina.connector.Request.doGetSession(Request.java:2993)
	at org.apache.catalina.connector.Request.getSession(Request.java:2432)
	at org.apache.catalina.connector.RequestFacade.getSession(RequestFacade.java:908)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:244)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:582)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:244)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:582)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:527)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at org.apache.jasper.runtime.PageContextImpl.initialize(PageContextImpl.java:133)
	at org.apache.jasper.runtime.JspFactoryImpl.internalGetPageContext(JspFactoryImpl.java:109)
	at org.apache.jasper.runtime.JspFactoryImpl.getPageContext(JspFactoryImpl.java:60)
	at org.apache.jsp.WEB_002dINF.jsp.error_jsp._jspService(error_jsp.java:107)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:477)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:385)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:329)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:580)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:516)
	at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:163)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:317)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1372)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at jdk.internal.reflect.GeneratedMethodAccessor148.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$3bca7a07.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-06-11 00:58:29.258 ERROR [http-nio-10010-exec-3] [o.a.c.c.C.[.[.[/].[dispatcherServlet]] - Servlet.service() for servlet [dispatcherServlet] threw exception
java.lang.IllegalStateException: Cannot create a session after the response has been committed
	at org.apache.catalina.connector.Request.doGetSession(Request.java:2993)
	at org.apache.catalina.connector.Request.getSession(Request.java:2432)
	at org.apache.catalina.connector.RequestFacade.getSession(RequestFacade.java:908)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:244)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:582)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:244)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:582)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:527)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at org.apache.jasper.runtime.PageContextImpl.initialize(PageContextImpl.java:133)
	at org.apache.jasper.runtime.JspFactoryImpl.internalGetPageContext(JspFactoryImpl.java:109)
	at org.apache.jasper.runtime.JspFactoryImpl.getPageContext(JspFactoryImpl.java:60)
	at org.apache.jsp.WEB_002dINF.jsp.error_jsp._jspService(error_jsp.java:107)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:477)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:385)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:329)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:580)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:516)
	at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:163)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:317)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1372)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at jdk.internal.reflect.GeneratedMethodAccessor148.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$3bca7a07.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-06-11 00:58:29.258 ERROR [http-nio-10010-exec-3] [o.a.c.c.C.[Tomcat].[localhost]] - Exception Processing ErrorPage[errorCode=0, location=/error]
org.apache.jasper.JasperException: javax.servlet.ServletException: java.lang.IllegalStateException: Cannot create a session after the response has been committed
	at org.apache.jasper.servlet.JspServletWrapper.handleJspException(JspServletWrapper.java:639)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:500)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:385)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:329)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:580)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:516)
	at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:163)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:317)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1372)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at jdk.internal.reflect.GeneratedMethodAccessor148.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$3bca7a07.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: javax.servlet.ServletException: java.lang.IllegalStateException: Cannot create a session after the response has been committed
	at org.apache.jsp.WEB_002dINF.jsp.error_jsp._jspService(error_jsp.java:144)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:477)
	... 97 common frames omitted
Caused by: java.lang.IllegalStateException: Cannot create a session after the response has been committed
	at org.apache.catalina.connector.Request.doGetSession(Request.java:2993)
	at org.apache.catalina.connector.Request.getSession(Request.java:2432)
	at org.apache.catalina.connector.RequestFacade.getSession(RequestFacade.java:908)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:244)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:582)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:244)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:582)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:527)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at org.apache.jasper.runtime.PageContextImpl.initialize(PageContextImpl.java:133)
	at org.apache.jasper.runtime.JspFactoryImpl.internalGetPageContext(JspFactoryImpl.java:109)
	at org.apache.jasper.runtime.JspFactoryImpl.getPageContext(JspFactoryImpl.java:60)
	at org.apache.jsp.WEB_002dINF.jsp.error_jsp._jspService(error_jsp.java:107)
	... 100 common frames omitted
2023-06-11 00:58:30.699 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
41. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 00:58:30.702 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
41. select * from MEMBER where userId = 'p00139'
 {executed in 1 msec}
2023-06-11 00:58:30.717 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.MemberServiceImpl] - ROLE_ADMIN
2023-06-11 00:58:30.779 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.MemberServiceImpl] - pass:$2a$10$MNrQAPw.4k9j2y08eTmYEeI7oKPuaWbA97HHog.8PYep5HsRwhbae,$2a$10$0P6he3fsdvNKyxR5ajK43Oaqyur/g5NpfR3dohuHMpTyPUusdK0GS
2023-06-11 00:58:30.843 INFO  [http-nio-10010-exec-6] [c.p.d.configuration.SecurityConfig] - authentication:: p00139
2023-06-11 00:58:30.853 INFO  [UserConnection-1] [com.pjy.dashboard.service.ChatService] - # sise thread start : [p00139]
2023-06-11 00:58:30.853 INFO  [UserConnection-1] [com.pjy.dashboard.service.ChatService] - # sise threaditemList = null 
2023-06-11 00:58:34.295 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@d9026782
2023-06-11 00:58:34.295 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
2023-06-11 00:58:34.296 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
41. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-11 00:58:34.297 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
41. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 1 msec}
2023-06-11 00:58:34.299 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
41. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 1 msec}
2023-06-11 01:07:04.974 INFO  [MessageBroker-3] [o.s.w.s.c.WebSocketMessageBrokerStats] - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 5, active threads = 1, queued tasks = 0, completed tasks = 4]
2023-06-11 11:26:44.702 INFO  [Catalina-utility-1] [c.pjy.dashboard.listener.SessionListener] - updateUserCloseTime p00139 
2023-06-11 11:26:44.702 INFO  [Catalina-utility-1] [c.pjy.dashboard.listener.SessionListener] - currentSessionUserList ->  false
2023-06-11 11:26:44.702 INFO  [Catalina-utility-1] [c.pjy.dashboard.listener.SessionListener] - updateUserCloseTime p00139 
2023-06-11 11:26:44.702 INFO  [Catalina-utility-1] [c.pjy.dashboard.listener.SessionListener] - currentSessionUserList ->  false
2023-06-11 11:26:44.810 INFO  [UserConnection-1] [com.pjy.dashboard.service.ChatService] - # sise thread stop # 사용자접속정보 없음
2023-06-11 11:26:44.810 INFO  [UserConnection-1] [com.pjy.dashboard.service.ChatService] - ## thread end sise . UserConnection-1[116]
2023-06-11 11:26:59.031 WARN  [H2 housekeeper] [com.zaxxer.hikari.pool.HikariPool] - H2 - Thread starvation or clock leap detected (housekeeper delta=9h58m21s579ms246µs400ns).
2023-06-11 11:34:49.565 INFO  [MessageBroker-2] [o.s.w.s.c.WebSocketMessageBrokerStats] - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 6, active threads = 1, queued tasks = 0, completed tasks = 5]
2023-06-11 11:34:49.566 INFO  [MessageBroker-1] [o.s.w.s.c.WebSocketMessageBrokerStats] - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 7, active threads = 3, queued tasks = 0, completed tasks = 5]
2023-06-11 11:34:49.566 INFO  [MessageBroker-2] [o.s.w.s.c.WebSocketMessageBrokerStats] - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 8, active threads = 4, queued tasks = 0, completed tasks = 6]
2023-06-11 11:34:49.566 INFO  [MessageBroker-5] [o.s.w.s.c.WebSocketMessageBrokerStats] - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 9, active threads = 4, queued tasks = 0, completed tasks = 8]
2023-06-11 11:34:49.566 INFO  [MessageBroker-9] [o.s.w.s.c.WebSocketMessageBrokerStats] - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 9, active threads = 2, queued tasks = 0, completed tasks = 8]
2023-06-11 11:34:49.566 INFO  [MessageBroker-5] [o.s.w.s.c.WebSocketMessageBrokerStats] - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 11, active threads = 4, queued tasks = 0, completed tasks = 9]
2023-06-11 11:34:49.566 INFO  [MessageBroker-4] [o.s.w.s.c.WebSocketMessageBrokerStats] - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 12, active threads = 4, queued tasks = 0, completed tasks = 10]
2023-06-11 11:34:49.566 INFO  [MessageBroker-1] [o.s.w.s.c.WebSocketMessageBrokerStats] - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 12, active threads = 4, queued tasks = 0, completed tasks = 11]
2023-06-11 11:34:49.567 INFO  [MessageBroker-2] [o.s.w.s.c.WebSocketMessageBrokerStats] - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 14, active threads = 6, queued tasks = 0, completed tasks = 11]
2023-06-11 11:34:49.567 INFO  [MessageBroker-1] [o.s.w.s.c.WebSocketMessageBrokerStats] - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 15, active threads = 5, queued tasks = 0, completed tasks = 13]
2023-06-11 11:34:49.567 INFO  [MessageBroker-7] [o.s.w.s.c.WebSocketMessageBrokerStats] - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 16, active threads = 6, queued tasks = 0, completed tasks = 14]
2023-06-11 11:34:49.567 INFO  [MessageBroker-14] [o.s.w.s.c.WebSocketMessageBrokerStats] - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 16, active threads = 3, queued tasks = 0, completed tasks = 16]
2023-06-11 11:34:49.568 INFO  [MessageBroker-14] [o.s.w.s.c.WebSocketMessageBrokerStats] - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 16, active threads = 2, queued tasks = 0, completed tasks = 17]
2023-06-11 11:34:49.568 INFO  [MessageBroker-14] [o.s.w.s.c.WebSocketMessageBrokerStats] - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 16, active threads = 1, queued tasks = 0, completed tasks = 18]
2023-06-11 11:34:49.568 INFO  [MessageBroker-14] [o.s.w.s.c.WebSocketMessageBrokerStats] - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 16, active threads = 1, queued tasks = 0, completed tasks = 19]
2023-06-11 11:34:49.568 INFO  [MessageBroker-14] [o.s.w.s.c.WebSocketMessageBrokerStats] - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 16, active threads = 1, queued tasks = 0, completed tasks = 20]
2023-06-11 11:34:49.568 INFO  [MessageBroker-14] [o.s.w.s.c.WebSocketMessageBrokerStats] - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 16, active threads = 1, queued tasks = 0, completed tasks = 21]
2023-06-11 11:34:49.569 INFO  [MessageBroker-14] [o.s.w.s.c.WebSocketMessageBrokerStats] - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 16, active threads = 1, queued tasks = 0, completed tasks = 22]
2023-06-11 11:34:49.569 INFO  [MessageBroker-14] [o.s.w.s.c.WebSocketMessageBrokerStats] - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 16, active threads = 1, queued tasks = 0, completed tasks = 23]
2023-06-11 11:34:49.569 INFO  [MessageBroker-14] [o.s.w.s.c.WebSocketMessageBrokerStats] - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 16, active threads = 1, queued tasks = 0, completed tasks = 24]
2023-06-11 11:36:58.007 INFO  [MessageBroker-14] [o.s.w.s.c.WebSocketMessageBrokerStats] - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 16, active threads = 1, queued tasks = 0, completed tasks = 25]
2023-06-11 12:06:58.001 INFO  [MessageBroker-14] [o.s.w.s.c.WebSocketMessageBrokerStats] - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 16, active threads = 1, queued tasks = 0, completed tasks = 26]
2023-06-11 15:03:12.037 WARN  [H2 housekeeper] [com.zaxxer.hikari.pool.HikariPool] - H2 - Thread starvation or clock leap detected (housekeeper delta=2h53m12s390ms81µs700ns).
2023-06-11 15:29:40.283 INFO  [MessageBroker-14] [o.s.w.s.c.WebSocketMessageBrokerStats] - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 16, active threads = 1, queued tasks = 0, completed tasks = 27]
2023-06-11 15:29:40.283 INFO  [MessageBroker-14] [o.s.w.s.c.WebSocketMessageBrokerStats] - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 16, active threads = 1, queued tasks = 0, completed tasks = 28]
2023-06-11 15:29:40.283 INFO  [MessageBroker-14] [o.s.w.s.c.WebSocketMessageBrokerStats] - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 16, active threads = 1, queued tasks = 0, completed tasks = 29]
2023-06-11 15:29:40.283 INFO  [MessageBroker-14] [o.s.w.s.c.WebSocketMessageBrokerStats] - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 16, active threads = 1, queued tasks = 0, completed tasks = 30]
2023-06-11 15:29:40.283 INFO  [MessageBroker-14] [o.s.w.s.c.WebSocketMessageBrokerStats] - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 16, active threads = 1, queued tasks = 0, completed tasks = 31]
2023-06-11 15:29:40.283 INFO  [MessageBroker-14] [o.s.w.s.c.WebSocketMessageBrokerStats] - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 16, active threads = 1, queued tasks = 0, completed tasks = 32]
2023-06-11 15:36:57.904 INFO  [MessageBroker-14] [o.s.w.s.c.WebSocketMessageBrokerStats] - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 16, active threads = 1, queued tasks = 0, completed tasks = 33]
2023-06-11 15:43:38.023 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
121. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-11 15:43:38.024 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
121. select * from MEMBER where userId = 'p00139'
 {executed in 0 msec}
2023-06-11 15:43:38.029 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.MemberServiceImpl] - ROLE_ADMIN
2023-06-11 15:43:38.088 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.MemberServiceImpl] - pass:$2a$10$MNrQAPw.4k9j2y08eTmYEeI7oKPuaWbA97HHog.8PYep5HsRwhbae,$2a$10$3uVurq9XExk1LsnXrTIooupdXNSXeQ1y6GiVS/uzHybgbqVcsD7VS
2023-06-11 15:43:38.152 INFO  [http-nio-10010-exec-4] [c.p.d.configuration.SecurityConfig] - authentication:: p00139
2023-06-11 15:43:38.156 INFO  [UserConnection-2] [com.pjy.dashboard.service.ChatService] - # sise thread start : [p00139]
2023-06-11 15:43:38.157 INFO  [UserConnection-2] [com.pjy.dashboard.service.ChatService] - # sise threaditemList = null 
2023-06-11 15:43:40.325 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@d9026782
2023-06-11 15:43:40.333 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
2023-06-11 15:43:40.335 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
121. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 15:43:40.337 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
121. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 2 msec}
2023-06-11 15:43:40.339 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
121. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 1 msec}
2023-06-11 15:45:06.229 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@d9026782
2023-06-11 15:45:06.230 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
2023-06-11 15:45:06.230 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
121. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 15:45:06.233 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
121. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 3 msec}
2023-06-11 15:45:06.235 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
121. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 1 msec}
2023-06-11 15:45:37.967 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@d9026782
2023-06-11 15:45:37.967 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
2023-06-11 15:45:37.967 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
121. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 15:45:37.969 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
121. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 2 msec}
2023-06-11 15:45:37.970 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
121. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 1 msec}
2023-06-11 15:49:31.666 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@d9026782
2023-06-11 15:49:31.667 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
2023-06-11 15:49:31.667 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
121. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 15:49:31.670 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
121. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 2 msec}
2023-06-11 15:49:31.671 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
121. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 1 msec}
2023-06-11 15:52:14.744 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@d9026782
2023-06-11 15:52:14.744 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
2023-06-11 15:52:14.746 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
121. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-11 15:52:14.748 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
121. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 2 msec}
2023-06-11 15:52:14.750 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
121. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 2 msec}
2023-06-11 15:56:29.066 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@d9026782
2023-06-11 15:56:29.067 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
2023-06-11 15:56:29.067 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
121. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 15:56:29.070 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
121. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 2 msec}
2023-06-11 15:56:29.071 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
121. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 1 msec}
2023-06-11 15:56:30.435 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@7648c690
2023-06-11 15:56:30.436 ERROR [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties error: Cannot invoke "String.getBytes(String)" because "a" is null
2023-06-11 15:56:30.487 WARN  [http-nio-10010-exec-1] [o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver] - Resolved [com.pjy.dashboard.core.error.exception.BusinessException: properties read error]
2023-06-11 16:00:11.404 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1341336b
2023-06-11 16:00:11.404 ERROR [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - properties error: Cannot invoke "String.getBytes(String)" because "a" is null
2023-06-11 16:00:11.405 WARN  [http-nio-10010-exec-4] [o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver] - Resolved [com.pjy.dashboard.core.error.exception.BusinessException: properties read error]
2023-06-11 16:01:06.976 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@d9026782
2023-06-11 16:01:06.976 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
2023-06-11 16:01:06.976 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
121. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 16:01:06.978 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
121. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 1 msec}
2023-06-11 16:01:06.981 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
121. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 0 msec}
2023-06-11 16:01:08.431 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@d06b08a7
2023-06-11 16:01:08.431 ERROR [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - properties error: Cannot invoke "String.getBytes(String)" because "a" is null
2023-06-11 16:01:08.432 WARN  [http-nio-10010-exec-7] [o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver] - Resolved [com.pjy.dashboard.core.error.exception.BusinessException: properties read error]
2023-06-11 16:04:51.123 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@d9026782
2023-06-11 16:04:51.127 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
2023-06-11 16:04:51.129 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
131. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 16:04:51.130 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
131. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 1 msec}
2023-06-11 16:04:51.132 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
131. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 1 msec}
2023-06-11 16:05:12.367 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1a675a08
2023-06-11 16:06:52.361 ERROR [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - properties error: Cannot invoke "String.getBytes(String)" because "a" is null
2023-06-11 16:06:52.363 WARN  [http-nio-10010-exec-2] [o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver] - Resolved [com.pjy.dashboard.core.error.exception.BusinessException: properties read error]
2023-06-11 16:06:57.894 INFO  [MessageBroker-14] [o.s.w.s.c.WebSocketMessageBrokerStats] - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 16, active threads = 1, queued tasks = 0, completed tasks = 34]
2023-06-11 16:07:39.455 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@d9026782
2023-06-11 16:07:43.445 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
2023-06-11 16:07:43.446 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
131. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-11 16:07:43.448 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
131. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 2 msec}
2023-06-11 16:07:43.450 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
131. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 2 msec}
2023-06-11 16:07:49.484 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@9d07303f
2023-06-11 16:07:49.484 ERROR [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties error: Cannot invoke "String.getBytes(String)" because "a" is null
2023-06-11 16:07:49.486 WARN  [http-nio-10010-exec-1] [o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver] - Resolved [com.pjy.dashboard.core.error.exception.BusinessException: properties read error]
2023-06-11 16:08:06.635 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@d9026782
2023-06-11 16:08:09.203 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
2023-06-11 16:08:09.204 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
131. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 16:08:09.206 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
131. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 2 msec}
2023-06-11 16:08:09.207 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
131. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 0 msec}
2023-06-11 16:08:12.844 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@d06b08a7
2023-06-11 16:08:12.845 ERROR [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - properties error: Cannot invoke "String.getBytes(String)" because "a" is null
2023-06-11 16:08:12.846 WARN  [http-nio-10010-exec-6] [o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver] - Resolved [com.pjy.dashboard.core.error.exception.BusinessException: properties read error]
2023-06-11 16:25:22.897 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Starting PjyApplication on DESKTOP-3O1I9JM with PID 39524 (C:\BUS\multimodule-parent\dashboard\target\classes started by admin in C:\BUS\multimodule-parent\dashboard)
2023-06-11 16:25:22.899 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - The following profiles are active: oauth
2023-06-11 16:25:22.935 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-06-11 16:25:22.935 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-06-11 16:25:24.438 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-11 16:25:24.438 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-06-11 16:25:24.532 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 89ms. Found 2 JPA repository interfaces.
2023-06-11 16:25:24.776 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-11 16:25:24.776 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2023-06-11 16:25:24.810 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.MemberRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-06-11 16:25:24.812 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.RememberMeRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-06-11 16:25:24.812 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 36ms. Found 0 JDBC repository interfaces.
2023-06-11 16:25:25.120 INFO  [restartedMain] [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] - Post-processing PropertySource instances
2023-06-11 16:25:25.169 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2023-06-11 16:25:25.169 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource commandLineArgs [org.springframework.core.env.SimpleCommandLinePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-06-11 16:25:25.169 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-06-11 16:25:25.169 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-06-11 16:25:25.169 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-11 16:25:25.169 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
2023-06-11 16:25:25.170 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2023-06-11 16:25:25.170 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application-oauth.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-11 16:25:25.170 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-11 16:25:25.170 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-11 16:25:25.170 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [pjy.properties] [org.springframework.core.env.CompositePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-06-11 16:25:25.170 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [common.properties] [org.springframework.core.io.support.ResourcePropertySource] to EncryptableMapPropertySourceWrapper
2023-06-11 16:25:25.219 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'asyncConfiguration' of type [com.pjy.dashboard.configuration.AsyncConfiguration$$EnhancerBySpringCGLIB$$4c1c462a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 16:25:25.255 INFO  [restartedMain] [c.u.j.filter.DefaultLazyPropertyFilter] - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2023-06-11 16:25:25.319 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$3612aa57] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 16:25:25.381 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 16:25:25.383 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@2485202a' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 16:25:25.386 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$5ae74d09] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 16:25:25.393 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration$$EnhancerBySpringCGLIB$$803c651f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 16:25:25.395 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 16:25:25.396 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 16:25:25.409 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$9d64e21d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 16:25:25.429 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$1ce52f4f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 16:25:25.516 INFO  [restartedMain] [c.u.j.r.DefaultLazyPropertyResolver] - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2023-06-11 16:25:25.519 INFO  [restartedMain] [c.u.j.d.DefaultLazyPropertyDetector] - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2023-06-11 16:25:25.816 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 10010 (http)
2023-06-11 16:25:25.830 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Initializing ProtocolHandler ["http-nio-10010"]
2023-06-11 16:25:25.837 INFO  [restartedMain] [org.apache.catalina.core.StandardService] - Starting service [Tomcat]
2023-06-11 16:25:25.837 INFO  [restartedMain] [org.apache.catalina.core.StandardEngine] - Starting Servlet engine: [Apache Tomcat/9.0.29]
2023-06-11 16:25:26.049 INFO  [restartedMain] [org.apache.jasper.servlet.TldScanner] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2023-06-11 16:25:26.055 INFO  [restartedMain] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring embedded WebApplicationContext
2023-06-11 16:25:26.055 INFO  [restartedMain] [o.s.web.context.ContextLoader] - Root WebApplicationContext: initialization completed in 3120 ms
2023-06-11 16:25:26.562 INFO  [restartedMain] [c.u.j.encryptor.DefaultLazyEncryptor] - Found Custom Encryptor Bean org.jasypt.encryption.pbe.PooledPBEStringEncryptor@63c0a250 with name: jasyptStringEncryptor
2023-06-11 16:25:26.620 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Starting...
2023-06-11 16:25:26.688 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.executeSql(PoolBase.java:567)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 3 msec}
2023-06-11 16:25:26.691 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Start completed.
2023-06-11 16:25:27.173 INFO  [restartedMain] [com.pjy.dashboard.filter.TestFilter] - init Pjy Filter
2023-06-11 16:25:27.447 INFO  [restartedMain] [o.hibernate.jpa.internal.util.LogHelper] - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2023-06-11 16:25:27.535 INFO  [restartedMain] [org.hibernate.Version] - HHH000412: Hibernate Core {5.3.14.Final}
2023-06-11 16:25:27.537 INFO  [restartedMain] [org.hibernate.cfg.Environment] - HHH000206: hibernate.properties not found
2023-06-11 16:25:27.684 INFO  [restartedMain] [org.hibernate.annotations.common.Version] - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2023-06-11 16:25:27.860 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-11 16:25:27.875 INFO  [restartedMain] [org.hibernate.dialect.Dialect] - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2023-06-11 16:25:28.410 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 16:25:28.412 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select SEQUENCE_CATALOG, SEQUENCE_SCHEMA, SEQUENCE_NAME, INCREMENT from information_schema.sequences
 {executed in 1 msec}
2023-06-11 16:25:28.445 INFO  [restartedMain] [o.s.o.j.LocalContainerEntityManagerFactoryBean] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-06-11 16:25:28.634 INFO  [restartedMain] [o.h.h.i.QueryTranslatorFactoryInitiator] - HHH000397: Using ASTQueryTranslatorFactory
2023-06-11 16:25:28.828 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'clientInboundChannelExecutor'
2023-06-11 16:25:28.838 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'clientOutboundChannelExecutor'
2023-06-11 16:25:29.464 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService
2023-06-11 16:25:29.464 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'asyncThreadPool'
2023-06-11 16:25:29.592 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/h2-console/**'], []
2023-06-11 16:25:29.592 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/css/**'], []
2023-06-11 16:25:29.592 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/js/**'], []
2023-06-11 16:25:29.592 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/monitor/**'], []
2023-06-11 16:25:29.592 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/img/**'], []
2023-06-11 16:25:29.592 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/lib/**'], []
2023-06-11 16:25:29.592 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/main.css'], []
2023-06-11 16:25:29.592 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/common.js'], []
2023-06-11 16:25:29.592 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/resources/**'], []
2023-06-11 16:25:29.694 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5dafa3b6, org.springframework.security.web.context.SecurityContextPersistenceFilter@ec3fff5, org.springframework.security.web.header.HeaderWriterFilter@1cf31426, org.springframework.web.filter.CorsFilter@3ec05865, org.springframework.security.web.authentication.logout.LogoutFilter@29a0e181, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@282af310, org.springframework.security.web.session.ConcurrentSessionFilter@f8dce7a, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@3726fd51, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@8709442, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1fb7e1d1, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1be8ceaa, org.springframework.security.web.session.SessionManagementFilter@301a4eaa, org.springframework.security.web.access.ExceptionTranslationFilter@3352c8dc, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6155bf3d]
2023-06-11 16:25:29.709 INFO  [restartedMain] [o.s.aop.framework.CglibAopProxy] - Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(javax.servlet.FilterConfig) throws javax.servlet.ServletException] because it is marked as final: Consider using interface-based JDK proxies instead!
2023-06-11 16:25:29.738 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskScheduler] - Initializing ExecutorService 'messageBrokerTaskScheduler'
2023-06-11 16:25:29.780 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'brokerChannelExecutor'
2023-06-11 16:25:30.061 WARN  [restartedMain] [o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-06-11 16:25:30.110 INFO  [restartedMain] [o.s.b.a.w.s.WelcomePageHandlerMapping] - Adding welcome page: ServletContext resource [/index.html]
2023-06-11 16:25:30.393 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 16:25:30.951 INFO  [restartedMain] [o.s.b.d.a.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2023-06-11 16:25:30.969 INFO  [restartedMain] [o.s.b.a.e.web.EndpointLinksResolver] - Exposing 16 endpoint(s) beneath base path '/actuator'
2023-06-11 16:25:31.056 INFO  [restartedMain] [o.s.m.s.b.SimpleBrokerMessageHandler] - Starting...
2023-06-11 16:25:31.057 INFO  [restartedMain] [o.s.m.s.b.SimpleBrokerMessageHandler] - BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2023-06-11 16:25:31.057 INFO  [restartedMain] [o.s.m.s.b.SimpleBrokerMessageHandler] - Started.
2023-06-11 16:25:31.065 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskScheduler] - Initializing ExecutorService
2023-06-11 16:25:31.067 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Starting ProtocolHandler ["http-nio-10010"]
2023-06-11 16:25:31.102 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 10010 (http) with context path ''
2023-06-11 16:25:31.105 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Started PjyApplication in 8.525 seconds (JVM running for 11.999)
2023-06-11 16:25:31.106 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-06-11 16:25:31.106 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - Application started
2023-06-11 16:25:31.106 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-06-11 16:25:31.762 INFO  [RMI TCP Connection(8)-127.0.0.1] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-11 16:25:31.762 INFO  [RMI TCP Connection(8)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Initializing Servlet 'dispatcherServlet'
2023-06-11 16:25:31.776 INFO  [RMI TCP Connection(8)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Completed initialization in 14 ms
2023-06-11 16:25:38.556 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 16:25:38.560 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select * from MEMBER where userId = 'p00139'
 {executed in 0 msec}
2023-06-11 16:25:38.576 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.MemberServiceImpl] - ROLE_ADMIN
2023-06-11 16:25:38.636 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.MemberServiceImpl] - pass:$2a$10$MNrQAPw.4k9j2y08eTmYEeI7oKPuaWbA97HHog.8PYep5HsRwhbae,$2a$10$KZEcSBWXD0IuqUGGra/TwuPEpe3OuqwDkWh65VyhZfS5bbJz/PT7S
2023-06-11 16:25:38.698 INFO  [http-nio-10010-exec-1] [c.p.d.configuration.SecurityConfig] - authentication:: p00139
2023-06-11 16:25:38.714 INFO  [UserConnection-1] [com.pjy.dashboard.service.ChatService] - # sise thread start : [p00139]
2023-06-11 16:25:38.714 INFO  [UserConnection-1] [com.pjy.dashboard.service.ChatService] - # sise threaditemList = null 
2023-06-11 16:25:48.678 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@d9026782
2023-06-11 16:25:52.160 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
2023-06-11 16:25:52.169 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-11 16:25:52.171 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 2 msec}
2023-06-11 16:25:52.175 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 1 msec}
2023-06-11 16:25:59.829 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@276d94ac
2023-06-11 16:25:59.879 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 16:25:59.883 ERROR [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:311)
1. SELECT  '5' AS a0 \
		,	'' AS a1, 			''	  AS a1_value \ 
		,	'' AS a2, 			''  AS a2_value \
		,	'       상실' AS a3,	'' AS a3_value \
		,	'이메일' AS a4, 		email  AS a4_value \
		,	'성별' AS a5, 		sex AS a5_value \
	FROM PUBLIC.TBL_EMPLOYEEINFO \
	WHERE COMPANY_NO ='100' AND EMP_NM ='문영식' \
	union \
	SELECT  '4' AS a0 \
		,	'부서' AS a1, 		TEAM_NM  AS a1_value \ 
		,	'직위' AS a2, 		POS_NM  AS a2_value \
		,	'국민연금취득' AS a3,	'' AS a3_value \
		,	'휴대폰' AS a4, 		PHONE_NO  AS a4_value \
		,	'호봉' AS a5, 		'' AS a5_value \
	FROM PUBLIC.TBL_EMPLOYEEINFO \
	WHERE COMPANY_NO ='100' AND EMP_NM ='문영식' \
	union \
	SELECT  '3' AS a0 \
		,	'구분' AS a1, 		JOB_KIND AS a1_value \
		,	'직종' AS a2, 		JOB_TYPE AS a2_value \ 
		,	'      상실' AS a3,	'' AS a3_value \
		,	'전화' AS a4, 		'' AS a4_value \
		,	'급여계산' AS a5, 		'' AS a5_value \
	FROM PUBLIC.TBL_EMPLOYEEINFO \
	WHERE COMPANY_NO ='100' AND EMP_NM ='문영식' \
	union \
	SELECT  '2' AS a0 \
		,	'생년월일' AS a1, 		'' AS a1_value \ 
		,	'근속일자' AS a2, 		JOB_YEAR  AS a2_value \ 
		,	'건강보험취득' AS a3,	'' AS a3_value \
		,	'건강보험번호' AS a4, 	'' AS a4_value \
		,	'가입조합' AS a5, 		'' AS a5_value \
	FROM PUBLIC.TBL_EMPLOYEEINFO \
	WHERE COMPANY_NO ='100' AND EMP_NM ='문영식' \
	union \
	SELECT  '1' AS a0 \
		,	'성명' AS a1, 		EMP_NM AS a1_value \ 
		,	'퇴사일자' AS a2, 		'' AS a2_value  \
		,	'      상실' AS a3,	'' AS a3_value \
		,	'현주소' AS a4, 		'' AS a4_value \
		,	'' AS a5, '' AS a5_value \
	FROM PUBLIC.TBL_EMPLOYEEINFO \
	WHERE COMPANY_NO ='100' AND EMP_NM ='문영식' \
	union \
	SELECT  '0' AS a0 \
		,	'사원번호' AS a1, 		TO_CHAR( EMP_NO) AS a1_value \ 
		,	'입사일자' AS a2, 		ENTER_DATE AS a2_value \
		,	'고용보험취득' AS a3,	'' AS a3_value \
		,	'본적' AS a4, 		'' AS a4_value \
		,	'' AS a5, 			'' AS a5_value \
	FROM PUBLIC.TBL_EMPLOYEEINFO \
	WHERE COMPANY_NO ='100' AND EMP_NM ='문영식'
 {FAILED after -1 msec}
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT  '5' AS A0[*] \
		,	'' AS A1, 			''	  AS A1_VALUE \ 
		,	'' AS A2, 			''  AS A2_VALUE \
		,	'       상실' AS A3,	'' AS A3_VALUE \
		,	'이메일' AS A4, 		EMAIL  AS A4_VALUE \
		,	'성별' AS A5, 		SEX AS A5_VALUE \
	FROM PUBLIC.TBL_EMPLOYEEINFO \
	WHERE COMPANY_NO ='100' AND EMP_NM ='문영식' \
	UNION \
	SELECT  '4' AS A0 \
		,	'부서' AS A1, 		TEAM_NM  AS A1_VALUE \ 
		,	'직위' AS A2, 		POS_NM  AS A2_VALUE \
		,	'국민연금취득' AS A3,	'' AS A3_VALUE \
		,	'휴대폰' AS A4, 		PHONE_NO  AS A4_VALUE \
		,	'호봉' AS A5, 		'' AS A5_VALUE \
	FROM PUBLIC.TBL_EMPLOYEEINFO \
	WHERE COMPANY_NO ='100' AND EMP_NM ='문영식' \
	UNION \
	SELECT  '3' AS A0 \
		,	'구분' AS A1, 		JOB_KIND AS A1_VALUE \
		,	'직종' AS A2, 		JOB_TYPE AS A2_VALUE \ 
		,	'      상실' AS A3,	'' AS A3_VALUE \
		,	'전화' AS A4, 		'' AS A4_VALUE \
		,	'급여계산' AS A5, 		'' AS A5_VALUE \
	FROM PUBLIC.TBL_EMPLOYEEINFO \
	WHERE COMPANY_NO ='100' AND EMP_NM ='문영식' \
	UNION \
	SELECT  '2' AS A0 \
		,	'생년월일' AS A1, 		'' AS A1_VALUE \ 
		,	'근속일자' AS A2, 		JOB_YEAR  AS A2_VALUE \ 
		,	'건강보험취득' AS A3,	'' AS A3_VALUE \
		,	'건강보험번호' AS A4, 	'' AS A4_VALUE \
		,	'가입조합' AS A5, 		'' AS A5_VALUE \
	FROM PUBLIC.TBL_EMPLOYEEINFO \
	WHERE COMPANY_NO ='100' AND EMP_NM ='문영식' \
	UNION \
	SELECT  '1' AS A0 \
		,	'성명' AS A1, 		EMP_NM AS A1_VALUE \ 
		,	'퇴사일자' AS A2, 		'' AS A2_VALUE  \
		,	'      상실' AS A3,	'' AS A3_VALUE \
		,	'현주소' AS A4, 		'' AS A4_VALUE \
		,	'' AS A5, '' AS A5_VALUE \
	FROM PUBLIC.TBL_EMPLOYEEINFO \
	WHERE COMPANY_NO ='100' AND EMP_NM ='문영식' \
	UNION \
	SELECT  '0' AS A0 \
		,	'사원번호' AS A1, 		TO_CHAR( EMP_NO) AS A1_VALUE \ 
		,	'입사일자' AS A2, 		ENTER_DATE AS A2_VALUE \
		,	'고용보험취득' AS A3,	'' AS A3_VALUE \
		,	'본적' AS A4, 		'' AS A4_VALUE \
		,	'' AS A5, 			'' AS A5_VALUE \
	FROM PUBLIC.TBL_EMPLOYEEINFO \
	WHERE COMPANY_NO ='100' AND EMP_NM ='문영식'"; SQL statement:
SELECT  '5' AS a0 \
		,	'' AS a1, 			''	  AS a1_value \ 
		,	'' AS a2, 			''  AS a2_value \
		,	'       상실' AS a3,	'' AS a3_value \
		,	'이메일' AS a4, 		email  AS a4_value \
		,	'성별' AS a5, 		sex AS a5_value \
	FROM PUBLIC.TBL_EMPLOYEEINFO \
	WHERE COMPANY_NO ='100' AND EMP_NM ='문영식' \
	union \
	SELECT  '4' AS a0 \
		,	'부서' AS a1, 		TEAM_NM  AS a1_value \ 
		,	'직위' AS a2, 		POS_NM  AS a2_value \
		,	'국민연금취득' AS a3,	'' AS a3_value \
		,	'휴대폰' AS a4, 		PHONE_NO  AS a4_value \
		,	'호봉' AS a5, 		'' AS a5_value \
	FROM PUBLIC.TBL_EMPLOYEEINFO \
	WHERE COMPANY_NO ='100' AND EMP_NM ='문영식' \
	union \
	SELECT  '3' AS a0 \
		,	'구분' AS a1, 		JOB_KIND AS a1_value \
		,	'직종' AS a2, 		JOB_TYPE AS a2_value \ 
		,	'      상실' AS a3,	'' AS a3_value \
		,	'전화' AS a4, 		'' AS a4_value \
		,	'급여계산' AS a5, 		'' AS a5_value \
	FROM PUBLIC.TBL_EMPLOYEEINFO \
	WHERE COMPANY_NO ='100' AND EMP_NM ='문영식' \
	union \
	SELECT  '2' AS a0 \
		,	'생년월일' AS a1, 		'' AS a1_value \ 
		,	'근속일자' AS a2, 		JOB_YEAR  AS a2_value \ 
		,	'건강보험취득' AS a3,	'' AS a3_value \
		,	'건강보험번호' AS a4, 	'' AS a4_value \
		,	'가입조합' AS a5, 		'' AS a5_value \
	FROM PUBLIC.TBL_EMPLOYEEINFO \
	WHERE COMPANY_NO ='100' AND EMP_NM ='문영식' \
	union \
	SELECT  '1' AS a0 \
		,	'성명' AS a1, 		EMP_NM AS a1_value \ 
		,	'퇴사일자' AS a2, 		'' AS a2_value  \
		,	'      상실' AS a3,	'' AS a3_value \
		,	'현주소' AS a4, 		'' AS a4_value \
		,	'' AS a5, '' AS a5_value \
	FROM PUBLIC.TBL_EMPLOYEEINFO \
	WHERE COMPANY_NO ='100' AND EMP_NM ='문영식' \
	union \
	SELECT  '0' AS a0 \
		,	'사원번호' AS a1, 		TO_CHAR( EMP_NO) AS a1_value \ 
		,	'입사일자' AS a2, 		ENTER_DATE AS a2_value \
		,	'고용보험취득' AS a3,	'' AS a3_value \
		,	'본적' AS a4, 		'' AS a4_value \
		,	'' AS a5, 			'' AS a5_value \
	FROM PUBLIC.TBL_EMPLOYEEINFO \
	WHERE COMPANY_NO ='100' AND EMP_NM ='문영식' [42000-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:453)
	at org.h2.engine.SessionRemote.done(SessionRemote.java:611)
	at org.h2.command.CommandRemote.prepare(CommandRemote.java:85)
	at org.h2.command.CommandRemote.<init>(CommandRemote.java:51)
	at org.h2.engine.SessionRemote.prepareCommand(SessionRemote.java:481)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1235)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:76)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:352)
	at net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy.prepareStatement(ConnectionSpy.java:475)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:311)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:87)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:88)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:59)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:85)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at jdk.proxy2/jdk.proxy2.$Proxy118.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:53)
	at jdk.proxy3/jdk.proxy3.$Proxy119.select_getEmployeeCard(Unknown Source)
	at com.pjy.dashboard.service.DynamicSqlService.getSqlFilterMybatis(DynamicSqlService.java:130)
	at com.pjy.dashboard.controller.TestController.DynamicSqlFilterMybatis(TestController.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:893)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:798)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:97)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at jdk.internal.reflect.GeneratedMethodAccessor149.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$a96fd400.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:114)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:104)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-06-11 16:25:59.914 ERROR [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - jdbcTemplate error: 
### Error querying database.  Cause: org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT  '5' AS A0[*] \
		,	'' AS A1, 			''	  AS A1_VALUE \ 
		,	'' AS A2, 			''  AS A2_VALUE \
		,	'       상실' AS A3,	'' AS A3_VALUE \
		,	'이메일' AS A4, 		EMAIL  AS A4_VALUE \
		,	'성별' AS A5, 		SEX AS A5_VALUE \
	FROM PUBLIC.TBL_EMPLOYEEINFO \
	WHERE COMPANY_NO ='100' AND EMP_NM ='문영식' \
	UNION \
	SELECT  '4' AS A0 \
		,	'부서' AS A1, 		TEAM_NM  AS A1_VALUE \ 
		,	'직위' AS A2, 		POS_NM  AS A2_VALUE \
		,	'국민연금취득' AS A3,	'' AS A3_VALUE \
		,	'휴대폰' AS A4, 		PHONE_NO  AS A4_VALUE \
		,	'호봉' AS A5, 		'' AS A5_VALUE \
	FROM PUBLIC.TBL_EMPLOYEEINFO \
	WHERE COMPANY_NO ='100' AND EMP_NM ='문영식' \
	UNION \
	SELECT  '3' AS A0 \
		,	'구분' AS A1, 		JOB_KIND AS A1_VALUE \
		,	'직종' AS A2, 		JOB_TYPE AS A2_VALUE \ 
		,	'      상실' AS A3,	'' AS A3_VALUE \
		,	'전화' AS A4, 		'' AS A4_VALUE \
		,	'급여계산' AS A5, 		'' AS A5_VALUE \
	FROM PUBLIC.TBL_EMPLOYEEINFO \
	WHERE COMPANY_NO ='100' AND EMP_NM ='문영식' \
	UNION \
	SELECT  '2' AS A0 \
		,	'생년월일' AS A1, 		'' AS A1_VALUE \ 
		,	'근속일자' AS A2, 		JOB_YEAR  AS A2_VALUE \ 
		,	'건강보험취득' AS A3,	'' AS A3_VALUE \
		,	'건강보험번호' AS A4, 	'' AS A4_VALUE \
		,	'가입조합' AS A5, 		'' AS A5_VALUE \
	FROM PUBLIC.TBL_EMPLOYEEINFO \
	WHERE COMPANY_NO ='100' AND EMP_NM ='문영식' \
	UNION \
	SELECT  '1' AS A0 \
		,	'성명' AS A1, 		EMP_NM AS A1_VALUE \ 
		,	'퇴사일자' AS A2, 		'' AS A2_VALUE  \
		,	'      상실' AS A3,	'' AS A3_VALUE \
		,	'현주소' AS A4, 		'' AS A4_VALUE \
		,	'' AS A5, '' AS A5_VALUE \
	FROM PUBLIC.TBL_EMPLOYEEINFO \
	WHERE COMPANY_NO ='100' AND EMP_NM ='문영식' \
	UNION \
	SELECT  '0' AS A0 \
		,	'사원번호' AS A1, 		TO_CHAR( EMP_NO) AS A1_VALUE \ 
		,	'입사일자' AS A2, 		ENTER_DATE AS A2_VALUE \
		,	'고용보험취득' AS A3,	'' AS A3_VALUE \
		,	'본적' AS A4, 		'' AS A4_VALUE \
		,	'' AS A5, 			'' AS A5_VALUE \
	FROM PUBLIC.TBL_EMPLOYEEINFO \
	WHERE COMPANY_NO ='100' AND EMP_NM ='문영식'"; SQL statement:
SELECT  '5' AS a0 \
		,	'' AS a1, 			''	  AS a1_value \ 
		,	'' AS a2, 			''  AS a2_value \
		,	'       상실' AS a3,	'' AS a3_value \
		,	'이메일' AS a4, 		email  AS a4_value \
		,	'성별' AS a5, 		sex AS a5_value \
	FROM PUBLIC.TBL_EMPLOYEEINFO \
	WHERE COMPANY_NO ='100' AND EMP_NM ='문영식' \
	union \
	SELECT  '4' AS a0 \
		,	'부서' AS a1, 		TEAM_NM  AS a1_value \ 
		,	'직위' AS a2, 		POS_NM  AS a2_value \
		,	'국민연금취득' AS a3,	'' AS a3_value \
		,	'휴대폰' AS a4, 		PHONE_NO  AS a4_value \
		,	'호봉' AS a5, 		'' AS a5_value \
	FROM PUBLIC.TBL_EMPLOYEEINFO \
	WHERE COMPANY_NO ='100' AND EMP_NM ='문영식' \
	union \
	SELECT  '3' AS a0 \
		,	'구분' AS a1, 		JOB_KIND AS a1_value \
		,	'직종' AS a2, 		JOB_TYPE AS a2_value \ 
		,	'      상실' AS a3,	'' AS a3_value \
		,	'전화' AS a4, 		'' AS a4_value \
		,	'급여계산' AS a5, 		'' AS a5_value \
	FROM PUBLIC.TBL_EMPLOYEEINFO \
	WHERE COMPANY_NO ='100' AND EMP_NM ='문영식' \
	union \
	SELECT  '2' AS a0 \
		,	'생년월일' AS a1, 		'' AS a1_value \ 
		,	'근속일자' AS a2, 		JOB_YEAR  AS a2_value \ 
		,	'건강보험취득' AS a3,	'' AS a3_value \
		,	'건강보험번호' AS a4, 	'' AS a4_value \
		,	'가입조합' AS a5, 		'' AS a5_value \
	FROM PUBLIC.TBL_EMPLOYEEINFO \
	WHERE COMPANY_NO ='100' AND EMP_NM ='문영식' \
	union \
	SELECT  '1' AS a0 \
		,	'성명' AS a1, 		EMP_NM AS a1_value \ 
		,	'퇴사일자' AS a2, 		'' AS a2_value  \
		,	'      상실' AS a3,	'' AS a3_value \
		,	'현주소' AS a4, 		'' AS a4_value \
		,	'' AS a5, '' AS a5_value \
	FROM PUBLIC.TBL_EMPLOYEEINFO \
	WHERE COMPANY_NO ='100' AND EMP_NM ='문영식' \
	union \
	SELECT  '0' AS a0 \
		,	'사원번호' AS a1, 		TO_CHAR( EMP_NO) AS a1_value \ 
		,	'입사일자' AS a2, 		ENTER_DATE AS a2_value \
		,	'고용보험취득' AS a3,	'' AS a3_value \
		,	'본적' AS a4, 		'' AS a4_value \
		,	'' AS a5, 			'' AS a5_value \
	FROM PUBLIC.TBL_EMPLOYEEINFO \
	WHERE COMPANY_NO ='100' AND EMP_NM ='문영식' [42000-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:453)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.getSyntaxError(DbException.java:229)
	at org.h2.command.Parser.getSyntaxError(Parser.java:1051)
	at org.h2.command.Parser.getSpecialType1(Parser.java:5620)
	at org.h2.command.Parser.read(Parser.java:5132)
	at org.h2.command.Parser.readColumnIdentifier(Parser.java:4980)
	at org.h2.command.Parser.readAliasIdentifier(Parser.java:4958)
	at org.h2.command.Parser.parseSelectExpressions(Parser.java:2933)
	at org.h2.command.Parser.parseSelect(Parser.java:2952)
	at org.h2.command.Parser.parseQuerySub(Parser.java:2817)
	at org.h2.command.Parser.parseSelectUnion(Parser.java:2649)
	at org.h2.command.Parser.parseQuery(Parser.java:2620)
	at org.h2.command.Parser.parsePrepared(Parser.java:868)
	at org.h2.command.Parser.parse(Parser.java:843)
	at org.h2.command.Parser.parse(Parser.java:819)
	at org.h2.command.Parser.prepareCommand(Parser.java:738)
	at org.h2.engine.Session.prepareLocal(Session.java:657)
	at org.h2.server.TcpServerThread.process(TcpServerThread.java:278)
	at org.h2.server.TcpServerThread.run(TcpServerThread.java:183)
	at java.lang.Thread.run(Unknown Source)

### The error may exist in file [C:\BUS\multimodule-parent\dashboard\target\classes\mapper\h2.xml]
### The error may involve com.pjy.dashboard.mapper.h2.h2Mapper.select_getEmployeeCard
### The error occurred while executing a query
### SQL: SELECT  '5' AS a0 \   , '' AS a1,    ''   AS a1_value \    , '' AS a2,    ''  AS a2_value \   , '       상실' AS a3, '' AS a3_value \   , '이메일' AS a4,   email  AS a4_value \   , '성별' AS a5,   sex AS a5_value \  FROM PUBLIC.TBL_EMPLOYEEINFO \  WHERE COMPANY_NO ='100' AND EMP_NM ='문영식' \  union \  SELECT  '4' AS a0 \   , '부서' AS a1,   TEAM_NM  AS a1_value \    , '직위' AS a2,   POS_NM  AS a2_value \   , '국민연금취득' AS a3, '' AS a3_value \   , '휴대폰' AS a4,   PHONE_NO  AS a4_value \   , '호봉' AS a5,   '' AS a5_value \  FROM PUBLIC.TBL_EMPLOYEEINFO \  WHERE COMPANY_NO ='100' AND EMP_NM ='문영식' \  union \  SELECT  '3' AS a0 \   , '구분' AS a1,   JOB_KIND AS a1_value \   , '직종' AS a2,   JOB_TYPE AS a2_value \    , '      상실' AS a3, '' AS a3_value \   , '전화' AS a4,   '' AS a4_value \   , '급여계산' AS a5,   '' AS a5_value \  FROM PUBLIC.TBL_EMPLOYEEINFO \  WHERE COMPANY_NO ='100' AND EMP_NM ='문영식' \  union \  SELECT  '2' AS a0 \   , '생년월일' AS a1,   '' AS a1_value \    , '근속일자' AS a2,   JOB_YEAR  AS a2_value \    , '건강보험취득' AS a3, '' AS a3_value \   , '건강보험번호' AS a4,  '' AS a4_value \   , '가입조합' AS a5,   '' AS a5_value \  FROM PUBLIC.TBL_EMPLOYEEINFO \  WHERE COMPANY_NO ='100' AND EMP_NM ='문영식' \  union \  SELECT  '1' AS a0 \   , '성명' AS a1,   EMP_NM AS a1_value \    , '퇴사일자' AS a2,   '' AS a2_value  \   , '      상실' AS a3, '' AS a3_value \   , '현주소' AS a4,   '' AS a4_value \   , '' AS a5, '' AS a5_value \  FROM PUBLIC.TBL_EMPLOYEEINFO \  WHERE COMPANY_NO ='100' AND EMP_NM ='문영식' \  union \  SELECT  '0' AS a0 \   , '사원번호' AS a1,   TO_CHAR( EMP_NO) AS a1_value \    , '입사일자' AS a2,   ENTER_DATE AS a2_value \   , '고용보험취득' AS a3, '' AS a3_value \   , '본적' AS a4,   '' AS a4_value \   , '' AS a5,    '' AS a5_value \  FROM PUBLIC.TBL_EMPLOYEEINFO \  WHERE COMPANY_NO ='100' AND EMP_NM ='문영식'
### Cause: org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT  '5' AS A0[*] \
		,	'' AS A1, 			''	  AS A1_VALUE \ 
		,	'' AS A2, 			''  AS A2_VALUE \
		,	'       상실' AS A3,	'' AS A3_VALUE \
		,	'이메일' AS A4, 		EMAIL  AS A4_VALUE \
		,	'성별' AS A5, 		SEX AS A5_VALUE \
	FROM PUBLIC.TBL_EMPLOYEEINFO \
	WHERE COMPANY_NO ='100' AND EMP_NM ='문영식' \
	UNION \
	SELECT  '4' AS A0 \
		,	'부서' AS A1, 		TEAM_NM  AS A1_VALUE \ 
		,	'직위' AS A2, 		POS_NM  AS A2_VALUE \
		,	'국민연금취득' AS A3,	'' AS A3_VALUE \
		,	'휴대폰' AS A4, 		PHONE_NO  AS A4_VALUE \
		,	'호봉' AS A5, 		'' AS A5_VALUE \
	FROM PUBLIC.TBL_EMPLOYEEINFO \
	WHERE COMPANY_NO ='100' AND EMP_NM ='문영식' \
	UNION \
	SELECT  '3' AS A0 \
		,	'구분' AS A1, 		JOB_KIND AS A1_VALUE \
		,	'직종' AS A2, 		JOB_TYPE AS A2_VALUE \ 
		,	'      상실' AS A3,	'' AS A3_VALUE \
		,	'전화' AS A4, 		'' AS A4_VALUE \
		,	'급여계산' AS A5, 		'' AS A5_VALUE \
	FROM PUBLIC.TBL_EMPLOYEEINFO \
	WHERE COMPANY_NO ='100' AND EMP_NM ='문영식' \
	UNION \
	SELECT  '2' AS A0 \
		,	'생년월일' AS A1, 		'' AS A1_VALUE \ 
		,	'근속일자' AS A2, 		JOB_YEAR  AS A2_VALUE \ 
		,	'건강보험취득' AS A3,	'' AS A3_VALUE \
		,	'건강보험번호' AS A4, 	'' AS A4_VALUE \
		,	'가입조합' AS A5, 		'' AS A5_VALUE \
	FROM PUBLIC.TBL_EMPLOYEEINFO \
	WHERE COMPANY_NO ='100' AND EMP_NM ='문영식' \
	UNION \
	SELECT  '1' AS A0 \
		,	'성명' AS A1, 		EMP_NM AS A1_VALUE \ 
		,	'퇴사일자' AS A2, 		'' AS A2_VALUE  \
		,	'      상실' AS A3,	'' AS A3_VALUE \
		,	'현주소' AS A4, 		'' AS A4_VALUE \
		,	'' AS A5, '' AS A5_VALUE \
	FROM PUBLIC.TBL_EMPLOYEEINFO \
	WHERE COMPANY_NO ='100' AND EMP_NM ='문영식' \
	UNION \
	SELECT  '0' AS A0 \
		,	'사원번호' AS A1, 		TO_CHAR( EMP_NO) AS A1_VALUE \ 
		,	'입사일자' AS A2, 		ENTER_DATE AS A2_VALUE \
		,	'고용보험취득' AS A3,	'' AS A3_VALUE \
		,	'본적' AS A4, 		'' AS A4_VALUE \
		,	'' AS A5, 			'' AS A5_VALUE \
	FROM PUBLIC.TBL_EMPLOYEEINFO \
	WHERE COMPANY_NO ='100' AND EMP_NM ='문영식'"; SQL statement:
SELECT  '5' AS a0 \
		,	'' AS a1, 			''	  AS a1_value \ 
		,	'' AS a2, 			''  AS a2_value \
		,	'       상실' AS a3,	'' AS a3_value \
		,	'이메일' AS a4, 		email  AS a4_value \
		,	'성별' AS a5, 		sex AS a5_value \
	FROM PUBLIC.TBL_EMPLOYEEINFO \
	WHERE COMPANY_NO ='100' AND EMP_NM ='문영식' \
	union \
	SELECT  '4' AS a0 \
		,	'부서' AS a1, 		TEAM_NM  AS a1_value \ 
		,	'직위' AS a2, 		POS_NM  AS a2_value \
		,	'국민연금취득' AS a3,	'' AS a3_value \
		,	'휴대폰' AS a4, 		PHONE_NO  AS a4_value \
		,	'호봉' AS a5, 		'' AS a5_value \
	FROM PUBLIC.TBL_EMPLOYEEINFO \
	WHERE COMPANY_NO ='100' AND EMP_NM ='문영식' \
	union \
	SELECT  '3' AS a0 \
		,	'구분' AS a1, 		JOB_KIND AS a1_value \
		,	'직종' AS a2, 		JOB_TYPE AS a2_value \ 
		,	'      상실' AS a3,	'' AS a3_value \
		,	'전화' AS a4, 		'' AS a4_value \
		,	'급여계산' AS a5, 		'' AS a5_value \
	FROM PUBLIC.TBL_EMPLOYEEINFO \
	WHERE COMPANY_NO ='100' AND EMP_NM ='문영식' \
	union \
	SELECT  '2' AS a0 \
		,	'생년월일' AS a1, 		'' AS a1_value \ 
		,	'근속일자' AS a2, 		JOB_YEAR  AS a2_value \ 
		,	'건강보험취득' AS a3,	'' AS a3_value \
		,	'건강보험번호' AS a4, 	'' AS a4_value \
		,	'가입조합' AS a5, 		'' AS a5_value \
	FROM PUBLIC.TBL_EMPLOYEEINFO \
	WHERE COMPANY_NO ='100' AND EMP_NM ='문영식' \
	union \
	SELECT  '1' AS a0 \
		,	'성명' AS a1, 		EMP_NM AS a1_value \ 
		,	'퇴사일자' AS a2, 		'' AS a2_value  \
		,	'      상실' AS a3,	'' AS a3_value \
		,	'현주소' AS a4, 		'' AS a4_value \
		,	'' AS a5, '' AS a5_value \
	FROM PUBLIC.TBL_EMPLOYEEINFO \
	WHERE COMPANY_NO ='100' AND EMP_NM ='문영식' \
	union \
	SELECT  '0' AS a0 \
		,	'사원번호' AS a1, 		TO_CHAR( EMP_NO) AS a1_value \ 
		,	'입사일자' AS a2, 		ENTER_DATE AS a2_value \
		,	'고용보험취득' AS a3,	'' AS a3_value \
		,	'본적' AS a4, 		'' AS a4_value \
		,	'' AS a5, 			'' AS a5_value \
	FROM PUBLIC.TBL_EMPLOYEEINFO \
	WHERE COMPANY_NO ='100' AND EMP_NM ='문영식' [42000-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:453)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.getSyntaxError(DbException.java:229)
	at org.h2.command.Parser.getSyntaxError(Parser.java:1051)
	at org.h2.command.Parser.getSpecialType1(Parser.java:5620)
	at org.h2.command.Parser.read(Parser.java:5132)
	at org.h2.command.Parser.readColumnIdentifier(Parser.java:4980)
	at org.h2.command.Parser.readAliasIdentifier(Parser.java:4958)
	at org.h2.command.Parser.parseSelectExpressions(Parser.java:2933)
	at org.h2.command.Parser.parseSelect(Parser.java:2952)
	at org.h2.command.Parser.parseQuerySub(Parser.java:2817)
	at org.h2.command.Parser.parseSelectUnion(Parser.java:2649)
	at org.h2.command.Parser.parseQuery(Parser.java:2620)
	at org.h2.command.Parser.parsePrepared(Parser.java:868)
	at org.h2.command.Parser.parse(Parser.java:843)
	at org.h2.command.Parser.parse(Parser.java:819)
	at org.h2.command.Parser.prepareCommand(Parser.java:738)
	at org.h2.engine.Session.prepareLocal(Session.java:657)
	at org.h2.server.TcpServerThread.process(TcpServerThread.java:278)
	at org.h2.server.TcpServerThread.run(TcpServerThread.java:183)
	at java.lang.Thread.run(Unknown Source)

; bad SQL grammar []; nested exception is org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT  '5' AS A0[*] \
		,	'' AS A1, 			''	  AS A1_VALUE \ 
		,	'' AS A2, 			''  AS A2_VALUE \
		,	'       상실' AS A3,	'' AS A3_VALUE \
		,	'이메일' AS A4, 		EMAIL  AS A4_VALUE \
		,	'성별' AS A5, 		SEX AS A5_VALUE \
	FROM PUBLIC.TBL_EMPLOYEEINFO \
	WHERE COMPANY_NO ='100' AND EMP_NM ='문영식' \
	UNION \
	SELECT  '4' AS A0 \
		,	'부서' AS A1, 		TEAM_NM  AS A1_VALUE \ 
		,	'직위' AS A2, 		POS_NM  AS A2_VALUE \
		,	'국민연금취득' AS A3,	'' AS A3_VALUE \
		,	'휴대폰' AS A4, 		PHONE_NO  AS A4_VALUE \
		,	'호봉' AS A5, 		'' AS A5_VALUE \
	FROM PUBLIC.TBL_EMPLOYEEINFO \
	WHERE COMPANY_NO ='100' AND EMP_NM ='문영식' \
	UNION \
	SELECT  '3' AS A0 \
		,	'구분' AS A1, 		JOB_KIND AS A1_VALUE \
		,	'직종' AS A2, 		JOB_TYPE AS A2_VALUE \ 
		,	'      상실' AS A3,	'' AS A3_VALUE \
		,	'전화' AS A4, 		'' AS A4_VALUE \
		,	'급여계산' AS A5, 		'' AS A5_VALUE \
	FROM PUBLIC.TBL_EMPLOYEEINFO \
	WHERE COMPANY_NO ='100' AND EMP_NM ='문영식' \
	UNION \
	SELECT  '2' AS A0 \
		,	'생년월일' AS A1, 		'' AS A1_VALUE \ 
		,	'근속일자' AS A2, 		JOB_YEAR  AS A2_VALUE \ 
		,	'건강보험취득' AS A3,	'' AS A3_VALUE \
		,	'건강보험번호' AS A4, 	'' AS A4_VALUE \
		,	'가입조합' AS A5, 		'' AS A5_VALUE \
	FROM PUBLIC.TBL_EMPLOYEEINFO \
	WHERE COMPANY_NO ='100' AND EMP_NM ='문영식' \
	UNION \
	SELECT  '1' AS A0 \
		,	'성명' AS A1, 		EMP_NM AS A1_VALUE \ 
		,	'퇴사일자' AS A2, 		'' AS A2_VALUE  \
		,	'      상실' AS A3,	'' AS A3_VALUE \
		,	'현주소' AS A4, 		'' AS A4_VALUE \
		,	'' AS A5, '' AS A5_VALUE \
	FROM PUBLIC.TBL_EMPLOYEEINFO \
	WHERE COMPANY_NO ='100' AND EMP_NM ='문영식' \
	UNION \
	SELECT  '0' AS A0 \
		,	'사원번호' AS A1, 		TO_CHAR( EMP_NO) AS A1_VALUE \ 
		,	'입사일자' AS A2, 		ENTER_DATE AS A2_VALUE \
		,	'고용보험취득' AS A3,	'' AS A3_VALUE \
		,	'본적' AS A4, 		'' AS A4_VALUE \
		,	'' AS A5, 			'' AS A5_VALUE \
	FROM PUBLIC.TBL_EMPLOYEEINFO \
	WHERE COMPANY_NO ='100' AND EMP_NM ='문영식'"; SQL statement:
SELECT  '5' AS a0 \
		,	'' AS a1, 			''	  AS a1_value \ 
		,	'' AS a2, 			''  AS a2_value \
		,	'       상실' AS a3,	'' AS a3_value \
		,	'이메일' AS a4, 		email  AS a4_value \
		,	'성별' AS a5, 		sex AS a5_value \
	FROM PUBLIC.TBL_EMPLOYEEINFO \
	WHERE COMPANY_NO ='100' AND EMP_NM ='문영식' \
	union \
	SELECT  '4' AS a0 \
		,	'부서' AS a1, 		TEAM_NM  AS a1_value \ 
		,	'직위' AS a2, 		POS_NM  AS a2_value \
		,	'국민연금취득' AS a3,	'' AS a3_value \
		,	'휴대폰' AS a4, 		PHONE_NO  AS a4_value \
		,	'호봉' AS a5, 		'' AS a5_value \
	FROM PUBLIC.TBL_EMPLOYEEINFO \
	WHERE COMPANY_NO ='100' AND EMP_NM ='문영식' \
	union \
	SELECT  '3' AS a0 \
		,	'구분' AS a1, 		JOB_KIND AS a1_value \
		,	'직종' AS a2, 		JOB_TYPE AS a2_value \ 
		,	'      상실' AS a3,	'' AS a3_value \
		,	'전화' AS a4, 		'' AS a4_value \
		,	'급여계산' AS a5, 		'' AS a5_value \
	FROM PUBLIC.TBL_EMPLOYEEINFO \
	WHERE COMPANY_NO ='100' AND EMP_NM ='문영식' \
	union \
	SELECT  '2' AS a0 \
		,	'생년월일' AS a1, 		'' AS a1_value \ 
		,	'근속일자' AS a2, 		JOB_YEAR  AS a2_value \ 
		,	'건강보험취득' AS a3,	'' AS a3_value \
		,	'건강보험번호' AS a4, 	'' AS a4_value \
		,	'가입조합' AS a5, 		'' AS a5_value \
	FROM PUBLIC.TBL_EMPLOYEEINFO \
	WHERE COMPANY_NO ='100' AND EMP_NM ='문영식' \
	union \
	SELECT  '1' AS a0 \
		,	'성명' AS a1, 		EMP_NM AS a1_value \ 
		,	'퇴사일자' AS a2, 		'' AS a2_value  \
		,	'      상실' AS a3,	'' AS a3_value \
		,	'현주소' AS a4, 		'' AS a4_value \
		,	'' AS a5, '' AS a5_value \
	FROM PUBLIC.TBL_EMPLOYEEINFO \
	WHERE COMPANY_NO ='100' AND EMP_NM ='문영식' \
	union \
	SELECT  '0' AS a0 \
		,	'사원번호' AS a1, 		TO_CHAR( EMP_NO) AS a1_value \ 
		,	'입사일자' AS a2, 		ENTER_DATE AS a2_value \
		,	'고용보험취득' AS a3,	'' AS a3_value \
		,	'본적' AS a4, 		'' AS a4_value \
		,	'' AS a5, 			'' AS a5_value \
	FROM PUBLIC.TBL_EMPLOYEEINFO \
	WHERE COMPANY_NO ='100' AND EMP_NM ='문영식' [42000-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:453)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.getSyntaxError(DbException.java:229)
	at org.h2.command.Parser.getSyntaxError(Parser.java:1051)
	at org.h2.command.Parser.getSpecialType1(Parser.java:5620)
	at org.h2.command.Parser.read(Parser.java:5132)
	at org.h2.command.Parser.readColumnIdentifier(Parser.java:4980)
	at org.h2.command.Parser.readAliasIdentifier(Parser.java:4958)
	at org.h2.command.Parser.parseSelectExpressions(Parser.java:2933)
	at org.h2.command.Parser.parseSelect(Parser.java:2952)
	at org.h2.command.Parser.parseQuerySub(Parser.java:2817)
	at org.h2.command.Parser.parseSelectUnion(Parser.java:2649)
	at org.h2.command.Parser.parseQuery(Parser.java:2620)
	at org.h2.command.Parser.parsePrepared(Parser.java:868)
	at org.h2.command.Parser.parse(Parser.java:843)
	at org.h2.command.Parser.parse(Parser.java:819)
	at org.h2.command.Parser.prepareCommand(Parser.java:738)
	at org.h2.engine.Session.prepareLocal(Session.java:657)
	at org.h2.server.TcpServerThread.process(TcpServerThread.java:278)
	at org.h2.server.TcpServerThread.run(TcpServerThread.java:183)
	at java.lang.Thread.run(Unknown Source)

2023-06-11 16:25:59.926 WARN  [http-nio-10010-exec-2] [o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver] - Resolved [com.pjy.dashboard.core.error.exception.BusinessException: jdbcTemplate query error]
2023-06-11 16:26:29.779 INFO  [MessageBroker-1] [o.s.w.s.c.WebSocketMessageBrokerStats] - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2023-06-11 16:26:57.446 INFO  [RMI TCP Connection(13)-127.0.0.1] [o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin] - Application shutdown requested.
2023-06-11 16:26:57.449 INFO  [RMI TCP Connection(13)-127.0.0.1] [o.s.m.s.b.SimpleBrokerMessageHandler] - Stopping...
2023-06-11 16:26:57.450 INFO  [RMI TCP Connection(13)-127.0.0.1] [o.s.m.s.b.SimpleBrokerMessageHandler] - BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2023-06-11 16:26:57.450 INFO  [RMI TCP Connection(13)-127.0.0.1] [o.s.m.s.b.SimpleBrokerMessageHandler] - Stopped.
2023-06-11 16:26:57.466 INFO  [RMI TCP Connection(13)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Shutting down ExecutorService 'brokerChannelExecutor'
2023-06-11 16:26:57.466 INFO  [RMI TCP Connection(13)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskScheduler] - Shutting down ExecutorService 'messageBrokerTaskScheduler'
2023-06-11 16:26:57.467 INFO  [RMI TCP Connection(13)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Shutting down ExecutorService 'asyncThreadPool'
2023-06-11 16:26:57.467 INFO  [UserConnection-1] [com.pjy.dashboard.service.ChatService] - ## thread end sise . UserConnection-1[79]
2023-06-11 16:26:57.467 INFO  [RMI TCP Connection(13)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Shutting down ExecutorService 'clientOutboundChannelExecutor'
2023-06-11 16:26:57.467 INFO  [RMI TCP Connection(13)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Shutting down ExecutorService 'clientInboundChannelExecutor'
2023-06-11 16:26:57.469 INFO  [RMI TCP Connection(13)-127.0.0.1] [com.zaxxer.hikari.HikariDataSource] - H2 - Shutdown initiated...
2023-06-11 16:26:57.472 INFO  [RMI TCP Connection(13)-127.0.0.1] [com.zaxxer.hikari.HikariDataSource] - H2 - Shutdown completed.
2023-06-11 16:26:57.494 INFO  [RMI TCP Connection(13)-127.0.0.1] [com.pjy.dashboard.filter.TestFilter] - destroy Pjy Filter
2023-06-11 16:26:59.695 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Starting PjyApplication on DESKTOP-3O1I9JM with PID 39104 (C:\BUS\multimodule-parent\dashboard\target\classes started by admin in C:\BUS\multimodule-parent\dashboard)
2023-06-11 16:26:59.699 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - The following profiles are active: oauth
2023-06-11 16:26:59.736 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-06-11 16:26:59.736 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-06-11 16:27:00.528 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-11 16:27:00.528 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-06-11 16:27:00.624 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 91ms. Found 2 JPA repository interfaces.
2023-06-11 16:27:00.868 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-11 16:27:00.868 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2023-06-11 16:27:00.904 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.MemberRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-06-11 16:27:00.904 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.RememberMeRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-06-11 16:27:00.904 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 36ms. Found 0 JDBC repository interfaces.
2023-06-11 16:27:01.209 INFO  [restartedMain] [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] - Post-processing PropertySource instances
2023-06-11 16:27:01.270 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2023-06-11 16:27:01.270 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource commandLineArgs [org.springframework.core.env.SimpleCommandLinePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-06-11 16:27:01.271 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-06-11 16:27:01.271 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-06-11 16:27:01.271 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-11 16:27:01.271 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
2023-06-11 16:27:01.271 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2023-06-11 16:27:01.271 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application-oauth.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-11 16:27:01.271 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-11 16:27:01.271 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-11 16:27:01.271 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [pjy.properties] [org.springframework.core.env.CompositePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-06-11 16:27:01.271 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [common.properties] [org.springframework.core.io.support.ResourcePropertySource] to EncryptableMapPropertySourceWrapper
2023-06-11 16:27:01.328 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'asyncConfiguration' of type [com.pjy.dashboard.configuration.AsyncConfiguration$$EnhancerBySpringCGLIB$$e3cfd46] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 16:27:01.378 INFO  [restartedMain] [c.u.j.filter.DefaultLazyPropertyFilter] - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2023-06-11 16:27:01.457 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$f8336173] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 16:27:01.530 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 16:27:01.532 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@5cc102a3' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 16:27:01.532 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$1d080425] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 16:27:01.542 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration$$EnhancerBySpringCGLIB$$425d1c3b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 16:27:01.545 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 16:27:01.546 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 16:27:01.559 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$5f859939] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 16:27:01.582 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$df05e66b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 16:27:01.677 INFO  [restartedMain] [c.u.j.r.DefaultLazyPropertyResolver] - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2023-06-11 16:27:01.680 INFO  [restartedMain] [c.u.j.d.DefaultLazyPropertyDetector] - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2023-06-11 16:27:02.006 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 10010 (http)
2023-06-11 16:27:02.019 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Initializing ProtocolHandler ["http-nio-10010"]
2023-06-11 16:27:02.025 INFO  [restartedMain] [org.apache.catalina.core.StandardService] - Starting service [Tomcat]
2023-06-11 16:27:02.025 INFO  [restartedMain] [org.apache.catalina.core.StandardEngine] - Starting Servlet engine: [Apache Tomcat/9.0.29]
2023-06-11 16:27:02.231 INFO  [restartedMain] [org.apache.jasper.servlet.TldScanner] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2023-06-11 16:27:02.238 INFO  [restartedMain] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring embedded WebApplicationContext
2023-06-11 16:27:02.238 INFO  [restartedMain] [o.s.web.context.ContextLoader] - Root WebApplicationContext: initialization completed in 2502 ms
2023-06-11 16:27:02.759 INFO  [restartedMain] [c.u.j.encryptor.DefaultLazyEncryptor] - Found Custom Encryptor Bean org.jasypt.encryption.pbe.PooledPBEStringEncryptor@1d9ef270 with name: jasyptStringEncryptor
2023-06-11 16:27:02.804 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Starting...
2023-06-11 16:27:02.866 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.executeSql(PoolBase.java:567)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 4 msec}
2023-06-11 16:27:02.868 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Start completed.
2023-06-11 16:27:03.344 INFO  [restartedMain] [com.pjy.dashboard.filter.TestFilter] - init Pjy Filter
2023-06-11 16:27:03.576 INFO  [restartedMain] [o.hibernate.jpa.internal.util.LogHelper] - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2023-06-11 16:27:03.630 INFO  [restartedMain] [org.hibernate.Version] - HHH000412: Hibernate Core {5.3.14.Final}
2023-06-11 16:27:03.630 INFO  [restartedMain] [org.hibernate.cfg.Environment] - HHH000206: hibernate.properties not found
2023-06-11 16:27:03.739 INFO  [restartedMain] [org.hibernate.annotations.common.Version] - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2023-06-11 16:27:03.897 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 16:27:03.910 INFO  [restartedMain] [org.hibernate.dialect.Dialect] - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2023-06-11 16:27:04.390 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select SEQUENCE_CATALOG, SEQUENCE_SCHEMA, SEQUENCE_NAME, INCREMENT from information_schema.sequences
 {executed in 1 msec}
2023-06-11 16:27:04.424 INFO  [restartedMain] [o.s.o.j.LocalContainerEntityManagerFactoryBean] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-06-11 16:27:04.601 INFO  [restartedMain] [o.h.h.i.QueryTranslatorFactoryInitiator] - HHH000397: Using ASTQueryTranslatorFactory
2023-06-11 16:27:04.789 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'clientInboundChannelExecutor'
2023-06-11 16:27:04.799 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'clientOutboundChannelExecutor'
2023-06-11 16:27:05.415 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService
2023-06-11 16:27:05.416 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'asyncThreadPool'
2023-06-11 16:27:05.541 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/h2-console/**'], []
2023-06-11 16:27:05.542 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/css/**'], []
2023-06-11 16:27:05.542 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/js/**'], []
2023-06-11 16:27:05.542 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/monitor/**'], []
2023-06-11 16:27:05.542 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/img/**'], []
2023-06-11 16:27:05.542 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/lib/**'], []
2023-06-11 16:27:05.542 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/main.css'], []
2023-06-11 16:27:05.542 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/common.js'], []
2023-06-11 16:27:05.542 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/resources/**'], []
2023-06-11 16:27:05.652 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@560ccc42, org.springframework.security.web.context.SecurityContextPersistenceFilter@71050ecd, org.springframework.security.web.header.HeaderWriterFilter@50ef58fa, org.springframework.web.filter.CorsFilter@208d4edd, org.springframework.security.web.authentication.logout.LogoutFilter@668720bc, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@bb88253, org.springframework.security.web.session.ConcurrentSessionFilter@26cc2ee9, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@4f918132, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@23be4ae4, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@708903fe, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@315d3c15, org.springframework.security.web.session.SessionManagementFilter@66fcdf8a, org.springframework.security.web.access.ExceptionTranslationFilter@5fc7633f, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@28826902]
2023-06-11 16:27:05.668 INFO  [restartedMain] [o.s.aop.framework.CglibAopProxy] - Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(javax.servlet.FilterConfig) throws javax.servlet.ServletException] because it is marked as final: Consider using interface-based JDK proxies instead!
2023-06-11 16:27:05.701 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskScheduler] - Initializing ExecutorService 'messageBrokerTaskScheduler'
2023-06-11 16:27:05.743 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'brokerChannelExecutor'
2023-06-11 16:27:06.025 WARN  [restartedMain] [o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-06-11 16:27:06.076 INFO  [restartedMain] [o.s.b.a.w.s.WelcomePageHandlerMapping] - Adding welcome page: ServletContext resource [/index.html]
2023-06-11 16:27:06.357 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 16:27:06.916 INFO  [restartedMain] [o.s.b.d.a.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2023-06-11 16:27:06.940 INFO  [restartedMain] [o.s.b.a.e.web.EndpointLinksResolver] - Exposing 16 endpoint(s) beneath base path '/actuator'
2023-06-11 16:27:07.029 INFO  [restartedMain] [o.s.m.s.b.SimpleBrokerMessageHandler] - Starting...
2023-06-11 16:27:07.029 INFO  [restartedMain] [o.s.m.s.b.SimpleBrokerMessageHandler] - BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2023-06-11 16:27:07.030 INFO  [restartedMain] [o.s.m.s.b.SimpleBrokerMessageHandler] - Started.
2023-06-11 16:27:07.037 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskScheduler] - Initializing ExecutorService
2023-06-11 16:27:07.040 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Starting ProtocolHandler ["http-nio-10010"]
2023-06-11 16:27:07.070 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 10010 (http) with context path ''
2023-06-11 16:27:07.073 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Started PjyApplication in 7.681 seconds (JVM running for 8.475)
2023-06-11 16:27:07.074 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-06-11 16:27:07.074 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - Application started
2023-06-11 16:27:07.074 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-06-11 16:27:08.091 INFO  [RMI TCP Connection(9)-127.0.0.1] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-11 16:27:08.092 INFO  [RMI TCP Connection(9)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Initializing Servlet 'dispatcherServlet'
2023-06-11 16:27:08.106 INFO  [RMI TCP Connection(9)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Completed initialization in 14 ms
2023-06-11 16:27:17.325 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@17d0d2df
2023-06-11 16:27:17.377 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 16:27:17.414 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  '5' AS a0 
		,	'' AS a1, 			''	  AS a1_value  
		,	'' AS a2, 			''  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		email  AS a4_value 
		,	'성별' AS a5, 		sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='박병승' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		TEAM_NM  AS a1_value  
		,	'직위' AS a2, 		POS_NM  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='박병승' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		JOB_KIND AS a1_value 
		,	'직종' AS a2, 		JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'전화' AS a4, 		'' AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='박병승' 
	union 
	SELECT  '2' AS a0 
		,	'생년월일' AS a1, 		'' AS a1_value  
		,	'근속일자' AS a2, 		JOB_YEAR  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='박병승' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		'' AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='박병승' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		ENTER_DATE AS a2_value 
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='박병승'
 {executed in 31 msec}
2023-06-11 16:27:17.418 ERROR [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - jdbcTemplate error: nested exception is org.apache.ibatis.executor.ExecutorException: A query was run and no Result Maps were found for the Mapped Statement 'com.pjy.dashboard.mapper.h2.h2Mapper.select_getEmployeeCard'.  It's likely that neither a Result Type nor a Result Map was specified.
2023-06-11 16:27:17.435 WARN  [http-nio-10010-exec-4] [o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver] - Resolved [com.pjy.dashboard.core.error.exception.BusinessException: jdbcTemplate query error]
2023-06-11 16:28:05.754 INFO  [MessageBroker-1] [o.s.w.s.c.WebSocketMessageBrokerStats] - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2023-06-11 16:29:10.359 INFO  [RMI TCP Connection(13)-127.0.0.1] [o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin] - Application shutdown requested.
2023-06-11 16:29:10.361 INFO  [RMI TCP Connection(13)-127.0.0.1] [o.s.m.s.b.SimpleBrokerMessageHandler] - Stopping...
2023-06-11 16:29:10.362 INFO  [RMI TCP Connection(13)-127.0.0.1] [o.s.m.s.b.SimpleBrokerMessageHandler] - BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2023-06-11 16:29:10.362 INFO  [RMI TCP Connection(13)-127.0.0.1] [o.s.m.s.b.SimpleBrokerMessageHandler] - Stopped.
2023-06-11 16:29:10.382 INFO  [RMI TCP Connection(13)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Shutting down ExecutorService 'brokerChannelExecutor'
2023-06-11 16:29:10.382 INFO  [RMI TCP Connection(13)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskScheduler] - Shutting down ExecutorService 'messageBrokerTaskScheduler'
2023-06-11 16:29:10.383 INFO  [RMI TCP Connection(13)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Shutting down ExecutorService 'asyncThreadPool'
2023-06-11 16:29:10.383 INFO  [RMI TCP Connection(13)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Shutting down ExecutorService 'clientOutboundChannelExecutor'
2023-06-11 16:29:10.383 INFO  [RMI TCP Connection(13)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Shutting down ExecutorService 'clientInboundChannelExecutor'
2023-06-11 16:29:10.385 INFO  [RMI TCP Connection(13)-127.0.0.1] [com.zaxxer.hikari.HikariDataSource] - H2 - Shutdown initiated...
2023-06-11 16:29:10.388 INFO  [RMI TCP Connection(13)-127.0.0.1] [com.zaxxer.hikari.HikariDataSource] - H2 - Shutdown completed.
2023-06-11 16:29:10.412 INFO  [RMI TCP Connection(13)-127.0.0.1] [com.pjy.dashboard.filter.TestFilter] - destroy Pjy Filter
2023-06-11 16:29:12.623 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Starting PjyApplication on DESKTOP-3O1I9JM with PID 34392 (C:\BUS\multimodule-parent\dashboard\target\classes started by admin in C:\BUS\multimodule-parent\dashboard)
2023-06-11 16:29:12.626 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - The following profiles are active: oauth
2023-06-11 16:29:12.667 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-06-11 16:29:12.667 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-06-11 16:29:13.457 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-11 16:29:13.457 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-06-11 16:29:13.552 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 90ms. Found 2 JPA repository interfaces.
2023-06-11 16:29:13.797 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-11 16:29:13.797 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2023-06-11 16:29:13.833 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.MemberRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-06-11 16:29:13.833 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.RememberMeRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-06-11 16:29:13.833 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 36ms. Found 0 JDBC repository interfaces.
2023-06-11 16:29:14.142 INFO  [restartedMain] [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] - Post-processing PropertySource instances
2023-06-11 16:29:14.190 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2023-06-11 16:29:14.190 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource commandLineArgs [org.springframework.core.env.SimpleCommandLinePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-06-11 16:29:14.190 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-06-11 16:29:14.190 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-06-11 16:29:14.190 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-11 16:29:14.190 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
2023-06-11 16:29:14.190 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2023-06-11 16:29:14.190 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application-oauth.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-11 16:29:14.190 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-11 16:29:14.191 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-11 16:29:14.191 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [pjy.properties] [org.springframework.core.env.CompositePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-06-11 16:29:14.191 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [common.properties] [org.springframework.core.io.support.ResourcePropertySource] to EncryptableMapPropertySourceWrapper
2023-06-11 16:29:14.238 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'asyncConfiguration' of type [com.pjy.dashboard.configuration.AsyncConfiguration$$EnhancerBySpringCGLIB$$55a6c3a1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 16:29:14.274 INFO  [restartedMain] [c.u.j.filter.DefaultLazyPropertyFilter] - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2023-06-11 16:29:14.336 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$3f9d27ce] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 16:29:14.397 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 16:29:14.399 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@576c45a4' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 16:29:14.402 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$6471ca80] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 16:29:14.408 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration$$EnhancerBySpringCGLIB$$89c6e296] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 16:29:14.411 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 16:29:14.412 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 16:29:14.426 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a6ef5f94] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 16:29:14.444 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$266facc6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 16:29:14.534 INFO  [restartedMain] [c.u.j.r.DefaultLazyPropertyResolver] - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2023-06-11 16:29:14.538 INFO  [restartedMain] [c.u.j.d.DefaultLazyPropertyDetector] - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2023-06-11 16:29:14.816 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 10010 (http)
2023-06-11 16:29:14.829 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Initializing ProtocolHandler ["http-nio-10010"]
2023-06-11 16:29:14.835 INFO  [restartedMain] [org.apache.catalina.core.StandardService] - Starting service [Tomcat]
2023-06-11 16:29:14.836 INFO  [restartedMain] [org.apache.catalina.core.StandardEngine] - Starting Servlet engine: [Apache Tomcat/9.0.29]
2023-06-11 16:29:15.036 INFO  [restartedMain] [org.apache.jasper.servlet.TldScanner] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2023-06-11 16:29:15.043 INFO  [restartedMain] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring embedded WebApplicationContext
2023-06-11 16:29:15.043 INFO  [restartedMain] [o.s.web.context.ContextLoader] - Root WebApplicationContext: initialization completed in 2375 ms
2023-06-11 16:29:15.554 INFO  [restartedMain] [c.u.j.encryptor.DefaultLazyEncryptor] - Found Custom Encryptor Bean org.jasypt.encryption.pbe.PooledPBEStringEncryptor@646b2a4e with name: jasyptStringEncryptor
2023-06-11 16:29:15.591 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Starting...
2023-06-11 16:29:15.652 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.executeSql(PoolBase.java:567)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 4 msec}
2023-06-11 16:29:15.654 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Start completed.
2023-06-11 16:29:16.132 INFO  [restartedMain] [com.pjy.dashboard.filter.TestFilter] - init Pjy Filter
2023-06-11 16:29:16.363 INFO  [restartedMain] [o.hibernate.jpa.internal.util.LogHelper] - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2023-06-11 16:29:16.417 INFO  [restartedMain] [org.hibernate.Version] - HHH000412: Hibernate Core {5.3.14.Final}
2023-06-11 16:29:16.418 INFO  [restartedMain] [org.hibernate.cfg.Environment] - HHH000206: hibernate.properties not found
2023-06-11 16:29:16.527 INFO  [restartedMain] [org.hibernate.annotations.common.Version] - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2023-06-11 16:29:16.685 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-11 16:29:16.696 INFO  [restartedMain] [org.hibernate.dialect.Dialect] - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2023-06-11 16:29:17.173 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select SEQUENCE_CATALOG, SEQUENCE_SCHEMA, SEQUENCE_NAME, INCREMENT from information_schema.sequences
 {executed in 1 msec}
2023-06-11 16:29:17.208 INFO  [restartedMain] [o.s.o.j.LocalContainerEntityManagerFactoryBean] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-06-11 16:29:17.384 INFO  [restartedMain] [o.h.h.i.QueryTranslatorFactoryInitiator] - HHH000397: Using ASTQueryTranslatorFactory
2023-06-11 16:29:17.568 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'clientInboundChannelExecutor'
2023-06-11 16:29:17.577 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'clientOutboundChannelExecutor'
2023-06-11 16:29:18.204 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService
2023-06-11 16:29:18.204 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'asyncThreadPool'
2023-06-11 16:29:18.334 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/h2-console/**'], []
2023-06-11 16:29:18.335 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/css/**'], []
2023-06-11 16:29:18.335 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/js/**'], []
2023-06-11 16:29:18.335 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/monitor/**'], []
2023-06-11 16:29:18.335 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/img/**'], []
2023-06-11 16:29:18.335 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/lib/**'], []
2023-06-11 16:29:18.335 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/main.css'], []
2023-06-11 16:29:18.335 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/common.js'], []
2023-06-11 16:29:18.335 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/resources/**'], []
2023-06-11 16:29:18.437 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7a3130e2, org.springframework.security.web.context.SecurityContextPersistenceFilter@4830224f, org.springframework.security.web.header.HeaderWriterFilter@79ce60c0, org.springframework.web.filter.CorsFilter@4f26c79a, org.springframework.security.web.authentication.logout.LogoutFilter@777a3506, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@66fcdf8a, org.springframework.security.web.session.ConcurrentSessionFilter@651f2f43, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@6425c75a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@721fd073, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7f1c774, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@85a03f1, org.springframework.security.web.session.SessionManagementFilter@31a6740a, org.springframework.security.web.access.ExceptionTranslationFilter@48a67761, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3d477619]
2023-06-11 16:29:18.455 INFO  [restartedMain] [o.s.aop.framework.CglibAopProxy] - Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(javax.servlet.FilterConfig) throws javax.servlet.ServletException] because it is marked as final: Consider using interface-based JDK proxies instead!
2023-06-11 16:29:18.483 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskScheduler] - Initializing ExecutorService 'messageBrokerTaskScheduler'
2023-06-11 16:29:18.524 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'brokerChannelExecutor'
2023-06-11 16:29:18.803 WARN  [restartedMain] [o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-06-11 16:29:18.851 INFO  [restartedMain] [o.s.b.a.w.s.WelcomePageHandlerMapping] - Adding welcome page: ServletContext resource [/index.html]
2023-06-11 16:29:19.124 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 16:29:19.681 INFO  [restartedMain] [o.s.b.d.a.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2023-06-11 16:29:19.699 INFO  [restartedMain] [o.s.b.a.e.web.EndpointLinksResolver] - Exposing 16 endpoint(s) beneath base path '/actuator'
2023-06-11 16:29:19.785 INFO  [restartedMain] [o.s.m.s.b.SimpleBrokerMessageHandler] - Starting...
2023-06-11 16:29:19.785 INFO  [restartedMain] [o.s.m.s.b.SimpleBrokerMessageHandler] - BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2023-06-11 16:29:19.786 INFO  [restartedMain] [o.s.m.s.b.SimpleBrokerMessageHandler] - Started.
2023-06-11 16:29:19.794 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskScheduler] - Initializing ExecutorService
2023-06-11 16:29:19.796 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Starting ProtocolHandler ["http-nio-10010"]
2023-06-11 16:29:19.832 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 10010 (http) with context path ''
2023-06-11 16:29:19.835 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Started PjyApplication in 7.519 seconds (JVM running for 8.32)
2023-06-11 16:29:19.836 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-06-11 16:29:19.836 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - Application started
2023-06-11 16:29:19.836 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-06-11 16:29:20.959 INFO  [RMI TCP Connection(10)-127.0.0.1] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-11 16:29:20.959 INFO  [RMI TCP Connection(10)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Initializing Servlet 'dispatcherServlet'
2023-06-11 16:29:20.972 INFO  [RMI TCP Connection(10)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Completed initialization in 13 ms
2023-06-11 16:29:34.494 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@e95e3ff4
2023-06-11 16:29:34.555 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 16:29:34.560 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  '5' AS a0 
		,	'' AS a1, 			''	  AS a1_value  
		,	'' AS a2, 			''  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		email  AS a4_value 
		,	'성별' AS a5, 		sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='이승욱' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		TEAM_NM  AS a1_value  
		,	'직위' AS a2, 		POS_NM  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='이승욱' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		JOB_KIND AS a1_value 
		,	'직종' AS a2, 		JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'전화' AS a4, 		'' AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='이승욱' 
	union 
	SELECT  '2' AS a0 
		,	'생년월일' AS a1, 		'' AS a1_value  
		,	'근속일자' AS a2, 		JOB_YEAR  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='이승욱' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		'' AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='이승욱' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		ENTER_DATE AS a2_value 
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='이승욱'
 {executed in 2 msec}
2023-06-11 16:30:18.524 INFO  [MessageBroker-1] [o.s.w.s.c.WebSocketMessageBrokerStats] - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2023-06-11 16:30:26.477 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@91a84b77
2023-06-11 16:30:30.717 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 2 msec}
2023-06-11 16:30:30.769 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  '5' AS a0 
		,	'' AS a1, 			''	  AS a1_value  
		,	'' AS a2, 			''  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		email  AS a4_value 
		,	'성별' AS a5, 		sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='김재중' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		TEAM_NM  AS a1_value  
		,	'직위' AS a2, 		POS_NM  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='김재중' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		JOB_KIND AS a1_value 
		,	'직종' AS a2, 		JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'전화' AS a4, 		'' AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='김재중' 
	union 
	SELECT  '2' AS a0 
		,	'생년월일' AS a1, 		'' AS a1_value  
		,	'근속일자' AS a2, 		JOB_YEAR  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='김재중' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		'' AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='김재중' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		ENTER_DATE AS a2_value 
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='김재중'
 {executed in 11 msec}
2023-06-11 16:32:21.629 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@d9026782
2023-06-11 16:32:21.657 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
2023-06-11 16:32:21.663 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 16:32:21.665 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 1 msec}
2023-06-11 16:32:21.669 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 1 msec}
2023-06-11 16:32:22.996 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@9d07303f
2023-06-11 16:32:27.799 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 16:32:27.801 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  '5' AS a0 
		,	'' AS a1, 			''	  AS a1_value  
		,	'' AS a2, 			''  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		email  AS a4_value 
		,	'성별' AS a5, 		sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='박노철' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		TEAM_NM  AS a1_value  
		,	'직위' AS a2, 		POS_NM  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='박노철' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		JOB_KIND AS a1_value 
		,	'직종' AS a2, 		JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'전화' AS a4, 		'' AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='박노철' 
	union 
	SELECT  '2' AS a0 
		,	'생년월일' AS a1, 		'' AS a1_value  
		,	'근속일자' AS a2, 		JOB_YEAR  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='박노철' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		'' AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='박노철' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		ENTER_DATE AS a2_value 
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='박노철'
 {executed in 1 msec}
2023-06-11 16:33:15.191 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@17d0d2df
2023-06-11 16:33:15.192 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-11 16:33:15.194 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  '5' AS a0 
		,	'' AS a1, 			''	  AS a1_value  
		,	'' AS a2, 			''  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		email  AS a4_value 
		,	'성별' AS a5, 		sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='박병승' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		TEAM_NM  AS a1_value  
		,	'직위' AS a2, 		POS_NM  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='박병승' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		JOB_KIND AS a1_value 
		,	'직종' AS a2, 		JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'전화' AS a4, 		'' AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='박병승' 
	union 
	SELECT  '2' AS a0 
		,	'생년월일' AS a1, 		'' AS a1_value  
		,	'근속일자' AS a2, 		JOB_YEAR  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='박병승' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		'' AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='박병승' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		ENTER_DATE AS a2_value 
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='박병승'
 {executed in 1 msec}
2023-06-11 16:34:45.502 INFO  [RMI TCP Connection(18)-127.0.0.1] [o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin] - Application shutdown requested.
2023-06-11 16:34:45.504 INFO  [RMI TCP Connection(18)-127.0.0.1] [o.s.m.s.b.SimpleBrokerMessageHandler] - Stopping...
2023-06-11 16:34:45.504 INFO  [RMI TCP Connection(18)-127.0.0.1] [o.s.m.s.b.SimpleBrokerMessageHandler] - BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2023-06-11 16:34:45.504 INFO  [RMI TCP Connection(18)-127.0.0.1] [o.s.m.s.b.SimpleBrokerMessageHandler] - Stopped.
2023-06-11 16:34:45.524 INFO  [RMI TCP Connection(18)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Shutting down ExecutorService 'brokerChannelExecutor'
2023-06-11 16:34:45.524 INFO  [RMI TCP Connection(18)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskScheduler] - Shutting down ExecutorService 'messageBrokerTaskScheduler'
2023-06-11 16:34:45.525 INFO  [RMI TCP Connection(18)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Shutting down ExecutorService 'asyncThreadPool'
2023-06-11 16:34:45.526 INFO  [RMI TCP Connection(18)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Shutting down ExecutorService 'clientOutboundChannelExecutor'
2023-06-11 16:34:45.526 INFO  [RMI TCP Connection(18)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Shutting down ExecutorService 'clientInboundChannelExecutor'
2023-06-11 16:34:45.527 INFO  [RMI TCP Connection(18)-127.0.0.1] [com.zaxxer.hikari.HikariDataSource] - H2 - Shutdown initiated...
2023-06-11 16:34:45.530 INFO  [RMI TCP Connection(18)-127.0.0.1] [com.zaxxer.hikari.HikariDataSource] - H2 - Shutdown completed.
2023-06-11 16:34:45.553 INFO  [RMI TCP Connection(18)-127.0.0.1] [com.pjy.dashboard.filter.TestFilter] - destroy Pjy Filter
2023-06-11 16:34:47.731 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Starting PjyApplication on DESKTOP-3O1I9JM with PID 31252 (C:\BUS\multimodule-parent\dashboard\target\classes started by admin in C:\BUS\multimodule-parent\dashboard)
2023-06-11 16:34:47.734 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - The following profiles are active: oauth
2023-06-11 16:34:47.771 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-06-11 16:34:47.771 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-06-11 16:34:48.523 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-11 16:34:48.523 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-06-11 16:34:48.620 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 91ms. Found 2 JPA repository interfaces.
2023-06-11 16:34:48.858 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-11 16:34:48.858 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2023-06-11 16:34:48.892 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.MemberRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-06-11 16:34:48.892 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.RememberMeRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-06-11 16:34:48.892 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 34ms. Found 0 JDBC repository interfaces.
2023-06-11 16:34:49.188 INFO  [restartedMain] [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] - Post-processing PropertySource instances
2023-06-11 16:34:49.237 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2023-06-11 16:34:49.237 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource commandLineArgs [org.springframework.core.env.SimpleCommandLinePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-06-11 16:34:49.237 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-06-11 16:34:49.237 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-06-11 16:34:49.237 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-11 16:34:49.238 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
2023-06-11 16:34:49.238 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2023-06-11 16:34:49.238 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application-oauth.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-11 16:34:49.238 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-11 16:34:49.238 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-11 16:34:49.238 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [pjy.properties] [org.springframework.core.env.CompositePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-06-11 16:34:49.238 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [common.properties] [org.springframework.core.io.support.ResourcePropertySource] to EncryptableMapPropertySourceWrapper
2023-06-11 16:34:49.281 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'asyncConfiguration' of type [com.pjy.dashboard.configuration.AsyncConfiguration$$EnhancerBySpringCGLIB$$243d8c7c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 16:34:49.316 INFO  [restartedMain] [c.u.j.filter.DefaultLazyPropertyFilter] - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2023-06-11 16:34:49.376 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$e33f0a9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 16:34:49.432 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 16:34:49.433 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@4c6d4c56' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 16:34:49.434 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$3308935b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 16:34:49.440 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration$$EnhancerBySpringCGLIB$$585dab71] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 16:34:49.443 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 16:34:49.444 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 16:34:49.457 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$7586286f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 16:34:49.479 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$f50675a1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 16:34:49.556 INFO  [restartedMain] [c.u.j.r.DefaultLazyPropertyResolver] - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2023-06-11 16:34:49.560 INFO  [restartedMain] [c.u.j.d.DefaultLazyPropertyDetector] - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2023-06-11 16:34:49.845 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 10010 (http)
2023-06-11 16:34:49.856 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Initializing ProtocolHandler ["http-nio-10010"]
2023-06-11 16:34:49.862 INFO  [restartedMain] [org.apache.catalina.core.StandardService] - Starting service [Tomcat]
2023-06-11 16:34:49.862 INFO  [restartedMain] [org.apache.catalina.core.StandardEngine] - Starting Servlet engine: [Apache Tomcat/9.0.29]
2023-06-11 16:34:50.065 INFO  [restartedMain] [org.apache.jasper.servlet.TldScanner] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2023-06-11 16:34:50.072 INFO  [restartedMain] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring embedded WebApplicationContext
2023-06-11 16:34:50.073 INFO  [restartedMain] [o.s.web.context.ContextLoader] - Root WebApplicationContext: initialization completed in 2302 ms
2023-06-11 16:34:50.589 INFO  [restartedMain] [c.u.j.encryptor.DefaultLazyEncryptor] - Found Custom Encryptor Bean org.jasypt.encryption.pbe.PooledPBEStringEncryptor@256e7e24 with name: jasyptStringEncryptor
2023-06-11 16:34:50.633 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Starting...
2023-06-11 16:34:50.693 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.executeSql(PoolBase.java:567)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 5 msec}
2023-06-11 16:34:50.696 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Start completed.
2023-06-11 16:34:51.162 INFO  [restartedMain] [com.pjy.dashboard.filter.TestFilter] - init Pjy Filter
2023-06-11 16:34:51.388 INFO  [restartedMain] [o.hibernate.jpa.internal.util.LogHelper] - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2023-06-11 16:34:51.441 INFO  [restartedMain] [org.hibernate.Version] - HHH000412: Hibernate Core {5.3.14.Final}
2023-06-11 16:34:51.443 INFO  [restartedMain] [org.hibernate.cfg.Environment] - HHH000206: hibernate.properties not found
2023-06-11 16:34:51.553 INFO  [restartedMain] [org.hibernate.annotations.common.Version] - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2023-06-11 16:34:51.707 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 16:34:51.718 INFO  [restartedMain] [org.hibernate.dialect.Dialect] - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2023-06-11 16:34:52.197 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select SEQUENCE_CATALOG, SEQUENCE_SCHEMA, SEQUENCE_NAME, INCREMENT from information_schema.sequences
 {executed in 0 msec}
2023-06-11 16:34:52.226 INFO  [restartedMain] [o.s.o.j.LocalContainerEntityManagerFactoryBean] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-06-11 16:34:52.406 INFO  [restartedMain] [o.h.h.i.QueryTranslatorFactoryInitiator] - HHH000397: Using ASTQueryTranslatorFactory
2023-06-11 16:34:52.583 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'clientInboundChannelExecutor'
2023-06-11 16:34:52.593 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'clientOutboundChannelExecutor'
2023-06-11 16:34:53.212 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService
2023-06-11 16:34:53.213 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'asyncThreadPool'
2023-06-11 16:34:53.336 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/h2-console/**'], []
2023-06-11 16:34:53.336 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/css/**'], []
2023-06-11 16:34:53.336 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/js/**'], []
2023-06-11 16:34:53.336 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/monitor/**'], []
2023-06-11 16:34:53.336 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/img/**'], []
2023-06-11 16:34:53.336 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/lib/**'], []
2023-06-11 16:34:53.336 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/main.css'], []
2023-06-11 16:34:53.336 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/common.js'], []
2023-06-11 16:34:53.336 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/resources/**'], []
2023-06-11 16:34:53.438 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3be2d916, org.springframework.security.web.context.SecurityContextPersistenceFilter@1578d5ce, org.springframework.security.web.header.HeaderWriterFilter@75d75578, org.springframework.web.filter.CorsFilter@67a980c3, org.springframework.security.web.authentication.logout.LogoutFilter@532c6e0, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@64101806, org.springframework.security.web.session.ConcurrentSessionFilter@3e90bd1a, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@1bf87386, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@495594eb, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5c77fb91, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@149f654b, org.springframework.security.web.session.SessionManagementFilter@69787fdf, org.springframework.security.web.access.ExceptionTranslationFilter@2e9c637b, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7b239bfa]
2023-06-11 16:34:53.454 INFO  [restartedMain] [o.s.aop.framework.CglibAopProxy] - Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(javax.servlet.FilterConfig) throws javax.servlet.ServletException] because it is marked as final: Consider using interface-based JDK proxies instead!
2023-06-11 16:34:53.482 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskScheduler] - Initializing ExecutorService 'messageBrokerTaskScheduler'
2023-06-11 16:34:53.528 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'brokerChannelExecutor'
2023-06-11 16:34:53.799 WARN  [restartedMain] [o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-06-11 16:34:53.847 INFO  [restartedMain] [o.s.b.a.w.s.WelcomePageHandlerMapping] - Adding welcome page: ServletContext resource [/index.html]
2023-06-11 16:34:54.125 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-11 16:34:54.680 INFO  [restartedMain] [o.s.b.d.a.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2023-06-11 16:34:54.698 INFO  [restartedMain] [o.s.b.a.e.web.EndpointLinksResolver] - Exposing 16 endpoint(s) beneath base path '/actuator'
2023-06-11 16:34:54.782 INFO  [restartedMain] [o.s.m.s.b.SimpleBrokerMessageHandler] - Starting...
2023-06-11 16:34:54.782 INFO  [restartedMain] [o.s.m.s.b.SimpleBrokerMessageHandler] - BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2023-06-11 16:34:54.783 INFO  [restartedMain] [o.s.m.s.b.SimpleBrokerMessageHandler] - Started.
2023-06-11 16:34:54.790 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskScheduler] - Initializing ExecutorService
2023-06-11 16:34:54.792 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Starting ProtocolHandler ["http-nio-10010"]
2023-06-11 16:34:54.823 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 10010 (http) with context path ''
2023-06-11 16:34:54.826 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Started PjyApplication in 7.392 seconds (JVM running for 8.189)
2023-06-11 16:34:54.826 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-06-11 16:34:54.826 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - Application started
2023-06-11 16:34:54.826 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-06-11 16:34:55.502 INFO  [RMI TCP Connection(8)-127.0.0.1] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-11 16:34:55.503 INFO  [RMI TCP Connection(8)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Initializing Servlet 'dispatcherServlet'
2023-06-11 16:34:55.516 INFO  [RMI TCP Connection(8)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Completed initialization in 13 ms
2023-06-11 16:35:14.495 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@d9026782
2023-06-11 16:35:14.522 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
2023-06-11 16:35:14.529 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-11 16:35:14.531 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 2 msec}
2023-06-11 16:35:14.534 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 1 msec}
2023-06-11 16:35:16.214 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@276d94ac
2023-06-11 16:35:16.267 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-11 16:35:16.272 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  /* select_getEmployeeCard : 인사카드조회 */
		'5' AS a0 
		,	'' AS a1, 			''	  AS a1_value  
		,	'' AS a2, 			''  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		email  AS a4_value 
		,	'성별' AS a5, 		sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='문영식' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		TEAM_NM  AS a1_value  
		,	'직위' AS a2, 		POS_NM  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='문영식' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		JOB_KIND AS a1_value 
		,	'직종' AS a2, 		JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'전화' AS a4, 		'' AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='문영식' 
	union 
	SELECT  '2' AS a0 
		,	'생년월일' AS a1, 		'' AS a1_value  
		,	'근속일자' AS a2, 		JOB_YEAR  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='문영식' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		'' AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='문영식' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		ENTER_DATE AS a2_value 
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='문영식'
 {executed in 1 msec}
2023-06-11 16:35:53.528 INFO  [MessageBroker-1] [o.s.w.s.c.WebSocketMessageBrokerStats] - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2023-06-11 16:36:43.232 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@17d0d2df
2023-06-11 16:36:43.232 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 16:36:43.234 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  /* select_getEmployeeCard : 인사카드조회 */
		'5' AS a0 
		,	'' AS a1, 			''	  AS a1_value  
		,	'' AS a2, 			''  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		email  AS a4_value 
		,	'성별' AS a5, 		sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='박병승' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		TEAM_NM  AS a1_value  
		,	'직위' AS a2, 		POS_NM  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='박병승' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		JOB_KIND AS a1_value 
		,	'직종' AS a2, 		JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'전화' AS a4, 		'' AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='박병승' 
	union 
	SELECT  '2' AS a0 
		,	'생년월일' AS a1, 		'' AS a1_value  
		,	'근속일자' AS a2, 		JOB_YEAR  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='박병승' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		'' AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='박병승' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		ENTER_DATE AS a2_value 
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='박병승'
 {executed in 1 msec}
2023-06-11 16:37:07.790 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@d9026782
2023-06-11 16:37:07.791 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
2023-06-11 16:37:07.791 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 16:37:07.793 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 1 msec}
2023-06-11 16:37:07.796 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 2 msec}
2023-06-11 16:37:08.942 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@e044d6f9
2023-06-11 16:37:08.944 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 16:37:08.945 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  /* select_getEmployeeCard : 인사카드조회 */
		'5' AS a0 
		,	'' AS a1, 			''	  AS a1_value  
		,	'' AS a2, 			''  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		email  AS a4_value 
		,	'성별' AS a5, 		sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='김병일' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		TEAM_NM  AS a1_value  
		,	'직위' AS a2, 		POS_NM  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='김병일' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		JOB_KIND AS a1_value 
		,	'직종' AS a2, 		JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'전화' AS a4, 		'' AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='김병일' 
	union 
	SELECT  '2' AS a0 
		,	'생년월일' AS a1, 		'' AS a1_value  
		,	'근속일자' AS a2, 		JOB_YEAR  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='김병일' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		'' AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='김병일' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		ENTER_DATE AS a2_value 
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='김병일'
 {executed in 1 msec}
2023-06-11 16:38:09.142 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@91a84b77
2023-06-11 16:38:09.143 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-11 16:38:09.145 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  /* select_getEmployeeCard : 인사카드조회 */
		'5' AS a0 
		,	'' AS a1, 			''	  AS a1_value  
		,	'' AS a2, 			''  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		email  AS a4_value 
		,	'성별' AS a5, 		sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='김재중' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		TEAM_NM  AS a1_value  
		,	'직위' AS a2, 		POS_NM  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='김재중' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		JOB_KIND AS a1_value 
		,	'직종' AS a2, 		JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'전화' AS a4, 		'' AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='김재중' 
	union 
	SELECT  '2' AS a0 
		,	'생년월일' AS a1, 		'' AS a1_value  
		,	'근속일자' AS a2, 		JOB_YEAR  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='김재중' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		'' AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='김재중' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		ENTER_DATE AS a2_value 
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='김재중'
 {executed in 1 msec}
2023-06-11 16:38:24.636 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1ca9946c
2023-06-11 16:38:24.638 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 16:38:24.639 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  /* select_getEmployeeCard : 인사카드조회 */
		'5' AS a0 
		,	'' AS a1, 			''	  AS a1_value  
		,	'' AS a2, 			''  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		email  AS a4_value 
		,	'성별' AS a5, 		sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='차영섭' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		TEAM_NM  AS a1_value  
		,	'직위' AS a2, 		POS_NM  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='차영섭' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		JOB_KIND AS a1_value 
		,	'직종' AS a2, 		JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'전화' AS a4, 		'' AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='차영섭' 
	union 
	SELECT  '2' AS a0 
		,	'생년월일' AS a1, 		'' AS a1_value  
		,	'근속일자' AS a2, 		JOB_YEAR  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='차영섭' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		'' AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='차영섭' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		ENTER_DATE AS a2_value 
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='차영섭'
 {executed in 1 msec}
2023-06-11 16:40:29.669 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@e95e3ff4
2023-06-11 16:40:29.671 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 16:40:29.672 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  /* select_getEmployeeCard : 인사카드조회 */
		'5' AS a0 
		,	'' AS a1, 			''	  AS a1_value  
		,	'' AS a2, 			''  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		email  AS a4_value 
		,	'성별' AS a5, 		sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='이승욱' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		TEAM_NM  AS a1_value  
		,	'직위' AS a2, 		POS_NM  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='이승욱' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		JOB_KIND AS a1_value 
		,	'직종' AS a2, 		JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'전화' AS a4, 		'' AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='이승욱' 
	union 
	SELECT  '2' AS a0 
		,	'생년월일' AS a1, 		'' AS a1_value  
		,	'근속일자' AS a2, 		JOB_YEAR  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='이승욱' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		'' AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='이승욱' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		ENTER_DATE AS a2_value 
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='이승욱'
 {executed in 1 msec}
2023-06-11 16:41:24.369 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@f62b382c
2023-06-11 16:41:24.370 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-11 16:41:24.371 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  /* select_getEmployeeCard : 인사카드조회 */
		'5' AS a0 
		,	'' AS a1, 			''	  AS a1_value  
		,	'' AS a2, 			''  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		email  AS a4_value 
		,	'성별' AS a5, 		sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='서문원' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		TEAM_NM  AS a1_value  
		,	'직위' AS a2, 		POS_NM  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='서문원' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		JOB_KIND AS a1_value 
		,	'직종' AS a2, 		JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'전화' AS a4, 		'' AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='서문원' 
	union 
	SELECT  '2' AS a0 
		,	'생년월일' AS a1, 		'' AS a1_value  
		,	'근속일자' AS a2, 		JOB_YEAR  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='서문원' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		'' AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='서문원' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		ENTER_DATE AS a2_value 
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='서문원'
 {executed in 1 msec}
2023-06-11 16:43:25.430 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@e95e3ff4
2023-06-11 16:43:25.431 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 16:43:25.433 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  /* select_getEmployeeCard : 인사카드조회 */
		'5' AS a0 
		,	'' AS a1, 			''	  AS a1_value  
		,	'' AS a2, 			''  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		email  AS a4_value 
		,	'성별' AS a5, 		sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='이승욱' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		TEAM_NM  AS a1_value  
		,	'직위' AS a2, 		POS_NM  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='이승욱' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		JOB_KIND AS a1_value 
		,	'직종' AS a2, 		JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'전화' AS a4, 		'' AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='이승욱' 
	union 
	SELECT  '2' AS a0 
		,	'생년월일' AS a1, 		'' AS a1_value  
		,	'근속일자' AS a2, 		JOB_YEAR  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='이승욱' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		'' AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='이승욱' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		ENTER_DATE AS a2_value 
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='이승욱'
 {executed in 1 msec}
2023-06-11 17:05:53.529 INFO  [MessageBroker-1] [o.s.w.s.c.WebSocketMessageBrokerStats] - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 2, active threads = 1, queued tasks = 0, completed tasks = 1]
2023-06-11 17:26:04.540 WARN  [H2 housekeeper] [com.zaxxer.hikari.pool.HikariPool] - H2 - Thread starvation or clock leap detected (housekeeper delta=11m13s177ms13µs500ns).
2023-06-11 17:26:22.109 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
21. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 17:26:22.110 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
21. select * from MEMBER where userId = 'p00139'
 {executed in 0 msec}
2023-06-11 17:26:22.125 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.MemberServiceImpl] - ROLE_ADMIN
2023-06-11 17:26:22.185 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.MemberServiceImpl] - pass:$2a$10$MNrQAPw.4k9j2y08eTmYEeI7oKPuaWbA97HHog.8PYep5HsRwhbae,$2a$10$YcU2bX0emW5o2/oTWn75XuWpSwDduAi7hT2fSRg5shX3zGBv.Ugo.
2023-06-11 17:26:22.312 INFO  [http-nio-10010-exec-3] [c.p.d.configuration.SecurityConfig] - authentication:: p00139
2023-06-11 17:26:22.327 INFO  [UserConnection-1] [com.pjy.dashboard.service.ChatService] - # sise thread start : [p00139]
2023-06-11 17:26:22.327 INFO  [UserConnection-1] [com.pjy.dashboard.service.ChatService] - # sise threaditemList = null 
2023-06-11 17:26:29.356 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@96cd0f0e
2023-06-11 17:26:29.357 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_DRIVERINFO a where   a.company_no = '100' order by a.emp_no
2023-06-11 17:26:29.357 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
21. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 17:26:29.359 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
21. select   ROWNUM AS no,a.* from    TBL_DRIVERINFO a where   a.company_no = '100' order by a.emp_no
 {executed in 2 msec}
2023-06-11 17:26:29.361 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
21. select   ROWNUM AS no,a.* from    TBL_DRIVERINFO a where   a.company_no = '100' order by a.emp_no
 {executed in 1 msec}
2023-06-11 17:27:09.330 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@96cd0f0e
2023-06-11 17:27:09.330 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_DRIVERINFO a where   a.company_no = '100' order by a.emp_no
2023-06-11 17:27:09.331 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
21. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 17:27:09.333 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
21. select   ROWNUM AS no,a.* from    TBL_DRIVERINFO a where   a.company_no = '100' order by a.emp_no
 {executed in 2 msec}
2023-06-11 17:27:09.335 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
21. select   ROWNUM AS no,a.* from    TBL_DRIVERINFO a where   a.company_no = '100' order by a.emp_no
 {executed in 2 msec}
2023-06-11 17:41:39.563 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@d9026782
2023-06-11 17:41:39.563 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
2023-06-11 17:41:39.564 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-11 17:41:39.566 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
31. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 2 msec}
2023-06-11 17:41:39.568 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
31. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 2 msec}
2023-06-11 17:41:41.007 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@d06b08a7
2023-06-11 17:41:41.008 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-11 17:41:41.009 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT  /* select_getEmployeeCard : 인사카드조회 */
		'5' AS a0 
		,	'' AS a1, 			''	  AS a1_value  
		,	'' AS a2, 			''  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		email  AS a4_value 
		,	'성별' AS a5, 		sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='권태종' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		TEAM_NM  AS a1_value  
		,	'직위' AS a2, 		POS_NM  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='권태종' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		JOB_KIND AS a1_value 
		,	'직종' AS a2, 		JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'전화' AS a4, 		'' AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='권태종' 
	union 
	SELECT  '2' AS a0 
		,	'생년월일' AS a1, 		'' AS a1_value  
		,	'근속일자' AS a2, 		JOB_YEAR  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='권태종' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		'' AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='권태종' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		ENTER_DATE AS a2_value 
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='권태종'
 {executed in 1 msec}
2023-06-11 17:45:01.475 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@d9026782
2023-06-11 17:45:01.476 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
2023-06-11 17:45:01.476 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 17:45:01.478 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
31. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 1 msec}
2023-06-11 17:45:01.480 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
31. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 1 msec}
2023-06-11 17:45:02.859 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1a675a08
2023-06-11 17:45:02.860 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 17:45:02.863 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT  /* select_getEmployeeCard : 인사카드조회 */
		'5' AS a0 
		,	'' AS a1, 			''	  AS a1_value  
		,	'' AS a2, 			''  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		email  AS a4_value 
		,	'성별' AS a5, 		sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='채규철' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		TEAM_NM  AS a1_value  
		,	'직위' AS a2, 		POS_NM  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='채규철' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		JOB_KIND AS a1_value 
		,	'직종' AS a2, 		JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'전화' AS a4, 		'' AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='채규철' 
	union 
	SELECT  '2' AS a0 
		,	'생년월일' AS a1, 		'' AS a1_value  
		,	'근속일자' AS a2, 		JOB_YEAR  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='채규철' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		'' AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='채규철' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		ENTER_DATE AS a2_value 
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='채규철'
 {executed in 0 msec}
2023-06-11 17:46:36.601 INFO  [MessageBroker-2] [o.s.w.s.c.WebSocketMessageBrokerStats] - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 3, active threads = 1, queued tasks = 0, completed tasks = 2]
2023-06-11 17:50:55.037 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@d9026782
2023-06-11 17:50:55.037 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
2023-06-11 17:50:55.038 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-11 17:50:55.041 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
31. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 3 msec}
2023-06-11 17:50:55.043 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
31. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 1 msec}
2023-06-11 17:50:56.476 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1a675a08
2023-06-11 17:50:56.477 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 17:50:56.479 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT  /* select_getEmployeeCard : 인사카드조회 */
		'5' AS a0 
		,	'' AS a1, 			''	  AS a1_value  
		,	'' AS a2, 			''  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		email  AS a4_value 
		,	'성별' AS a5, 		sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='채규철' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		TEAM_NM  AS a1_value  
		,	'직위' AS a2, 		POS_NM  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='채규철' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		JOB_KIND AS a1_value 
		,	'직종' AS a2, 		JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'전화' AS a4, 		'' AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='채규철' 
	union 
	SELECT  '2' AS a0 
		,	'생년월일' AS a1, 		'' AS a1_value  
		,	'근속일자' AS a2, 		JOB_YEAR  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='채규철' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		'' AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='채규철' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		ENTER_DATE AS a2_value 
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='채규철'
 {executed in 1 msec}
2023-06-11 17:51:15.645 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@e332a9d
2023-06-11 17:51:15.645 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 17:51:15.647 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT  /* select_getEmployeeCard : 인사카드조회 */
		'5' AS a0 
		,	'' AS a1, 			''	  AS a1_value  
		,	'' AS a2, 			''  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		email  AS a4_value 
		,	'성별' AS a5, 		sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='최성희' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		TEAM_NM  AS a1_value  
		,	'직위' AS a2, 		POS_NM  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='최성희' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		JOB_KIND AS a1_value 
		,	'직종' AS a2, 		JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'전화' AS a4, 		'' AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='최성희' 
	union 
	SELECT  '2' AS a0 
		,	'생년월일' AS a1, 		'' AS a1_value  
		,	'근속일자' AS a2, 		JOB_YEAR  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='최성희' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		'' AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='최성희' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		ENTER_DATE AS a2_value 
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='최성희'
 {executed in 1 msec}
2023-06-11 17:53:39.272 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@276d94ac
2023-06-11 17:53:39.273 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
32. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-11 17:53:39.274 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
32. SELECT  /* select_getEmployeeCard : 인사카드조회 */
		'5' AS a0 
		,	'' AS a1, 			''	  AS a1_value  
		,	'' AS a2, 			''  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		email  AS a4_value 
		,	'성별' AS a5, 		sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='문영식' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		TEAM_NM  AS a1_value  
		,	'직위' AS a2, 		POS_NM  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='문영식' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		JOB_KIND AS a1_value 
		,	'직종' AS a2, 		JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'전화' AS a4, 		'' AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='문영식' 
	union 
	SELECT  '2' AS a0 
		,	'생년월일' AS a1, 		'' AS a1_value  
		,	'근속일자' AS a2, 		JOB_YEAR  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='문영식' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		'' AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='문영식' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		ENTER_DATE AS a2_value 
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='문영식'
 {executed in 1 msec}
2023-06-11 17:54:16.609 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@276d94ac
2023-06-11 17:54:16.611 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
40. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-11 17:54:16.612 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
40. SELECT  /* select_getEmployeeCard : 인사카드조회 */
		'5' AS a0 
		,	'' AS a1, 			''	  AS a1_value  
		,	'' AS a2, 			''  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		email  AS a4_value 
		,	'성별' AS a5, 		sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='문영식' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		TEAM_NM  AS a1_value  
		,	'직위' AS a2, 		POS_NM  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='문영식' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		JOB_KIND AS a1_value 
		,	'직종' AS a2, 		JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'전화' AS a4, 		'' AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='문영식' 
	union 
	SELECT  '2' AS a0 
		,	'생년월일' AS a1, 		'' AS a1_value  
		,	'근속일자' AS a2, 		JOB_YEAR  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='문영식' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		'' AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='문영식' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		ENTER_DATE AS a2_value 
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO 
	WHERE COMPANY_NO ='100' AND EMP_NM ='문영식'
 {executed in 1 msec}
2023-06-11 18:05:53.421 INFO  [MessageBroker-1] [o.s.w.s.c.WebSocketMessageBrokerStats] - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 4, active threads = 1, queued tasks = 0, completed tasks = 3]
2023-06-11 18:06:14.733 INFO  [RMI TCP Connection(92)-127.0.0.1] [o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin] - Application shutdown requested.
2023-06-11 18:06:14.736 INFO  [RMI TCP Connection(92)-127.0.0.1] [o.s.m.s.b.SimpleBrokerMessageHandler] - Stopping...
2023-06-11 18:06:14.736 INFO  [RMI TCP Connection(92)-127.0.0.1] [o.s.m.s.b.SimpleBrokerMessageHandler] - BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2023-06-11 18:06:14.736 INFO  [RMI TCP Connection(92)-127.0.0.1] [o.s.m.s.b.SimpleBrokerMessageHandler] - Stopped.
2023-06-11 18:06:14.756 INFO  [RMI TCP Connection(92)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Shutting down ExecutorService 'brokerChannelExecutor'
2023-06-11 18:06:14.756 INFO  [RMI TCP Connection(92)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskScheduler] - Shutting down ExecutorService 'messageBrokerTaskScheduler'
2023-06-11 18:06:14.757 INFO  [RMI TCP Connection(92)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Shutting down ExecutorService 'asyncThreadPool'
2023-06-11 18:06:14.757 INFO  [UserConnection-1] [com.pjy.dashboard.service.ChatService] - ## thread end sise . UserConnection-1[100]
2023-06-11 18:06:14.758 INFO  [RMI TCP Connection(92)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Shutting down ExecutorService 'clientOutboundChannelExecutor'
2023-06-11 18:06:14.758 INFO  [RMI TCP Connection(92)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Shutting down ExecutorService 'clientInboundChannelExecutor'
2023-06-11 18:06:14.760 INFO  [RMI TCP Connection(92)-127.0.0.1] [com.zaxxer.hikari.HikariDataSource] - H2 - Shutdown initiated...
2023-06-11 18:06:14.763 INFO  [RMI TCP Connection(92)-127.0.0.1] [com.zaxxer.hikari.HikariDataSource] - H2 - Shutdown completed.
2023-06-11 18:06:14.786 INFO  [RMI TCP Connection(92)-127.0.0.1] [com.pjy.dashboard.filter.TestFilter] - destroy Pjy Filter
2023-06-11 18:06:17.068 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Starting PjyApplication on DESKTOP-3O1I9JM with PID 39920 (C:\BUS\multimodule-parent\dashboard\target\classes started by admin in C:\BUS\multimodule-parent\dashboard)
2023-06-11 18:06:17.072 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - The following profiles are active: oauth
2023-06-11 18:06:17.109 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-06-11 18:06:17.110 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-06-11 18:06:17.900 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-11 18:06:17.900 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-06-11 18:06:17.994 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 88ms. Found 2 JPA repository interfaces.
2023-06-11 18:06:18.235 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-11 18:06:18.235 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2023-06-11 18:06:18.270 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.MemberRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-06-11 18:06:18.271 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.RememberMeRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-06-11 18:06:18.271 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 35ms. Found 0 JDBC repository interfaces.
2023-06-11 18:06:18.577 INFO  [restartedMain] [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] - Post-processing PropertySource instances
2023-06-11 18:06:18.627 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2023-06-11 18:06:18.627 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource commandLineArgs [org.springframework.core.env.SimpleCommandLinePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-06-11 18:06:18.627 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-06-11 18:06:18.627 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-06-11 18:06:18.627 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-11 18:06:18.627 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
2023-06-11 18:06:18.627 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2023-06-11 18:06:18.627 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application-oauth.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-11 18:06:18.627 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-11 18:06:18.627 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-11 18:06:18.627 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [pjy.properties] [org.springframework.core.env.CompositePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-06-11 18:06:18.627 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [common.properties] [org.springframework.core.io.support.ResourcePropertySource] to EncryptableMapPropertySourceWrapper
2023-06-11 18:06:18.677 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'asyncConfiguration' of type [com.pjy.dashboard.configuration.AsyncConfiguration$$EnhancerBySpringCGLIB$$83b6e1e6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 18:06:18.718 INFO  [restartedMain] [c.u.j.filter.DefaultLazyPropertyFilter] - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2023-06-11 18:06:18.778 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$6dad4613] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 18:06:18.840 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 18:06:18.841 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@3e55d0e6' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 18:06:18.844 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$9281e8c5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 18:06:18.850 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration$$EnhancerBySpringCGLIB$$b7d700db] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 18:06:18.853 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 18:06:18.854 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 18:06:18.868 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$d4ff7dd9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 18:06:18.887 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$547fcb0b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 18:06:18.968 INFO  [restartedMain] [c.u.j.r.DefaultLazyPropertyResolver] - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2023-06-11 18:06:18.972 INFO  [restartedMain] [c.u.j.d.DefaultLazyPropertyDetector] - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2023-06-11 18:06:19.250 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 10010 (http)
2023-06-11 18:06:19.261 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Initializing ProtocolHandler ["http-nio-10010"]
2023-06-11 18:06:19.267 INFO  [restartedMain] [org.apache.catalina.core.StandardService] - Starting service [Tomcat]
2023-06-11 18:06:19.267 INFO  [restartedMain] [org.apache.catalina.core.StandardEngine] - Starting Servlet engine: [Apache Tomcat/9.0.29]
2023-06-11 18:06:19.467 INFO  [restartedMain] [org.apache.jasper.servlet.TldScanner] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2023-06-11 18:06:19.474 INFO  [restartedMain] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring embedded WebApplicationContext
2023-06-11 18:06:19.474 INFO  [restartedMain] [o.s.web.context.ContextLoader] - Root WebApplicationContext: initialization completed in 2364 ms
2023-06-11 18:06:19.970 INFO  [restartedMain] [c.u.j.encryptor.DefaultLazyEncryptor] - Found Custom Encryptor Bean org.jasypt.encryption.pbe.PooledPBEStringEncryptor@5e2f055c with name: jasyptStringEncryptor
2023-06-11 18:06:20.012 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Starting...
2023-06-11 18:06:20.071 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.executeSql(PoolBase.java:567)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 4 msec}
2023-06-11 18:06:20.074 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Start completed.
2023-06-11 18:06:20.548 INFO  [restartedMain] [com.pjy.dashboard.filter.TestFilter] - init Pjy Filter
2023-06-11 18:06:20.783 INFO  [restartedMain] [o.hibernate.jpa.internal.util.LogHelper] - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2023-06-11 18:06:20.837 INFO  [restartedMain] [org.hibernate.Version] - HHH000412: Hibernate Core {5.3.14.Final}
2023-06-11 18:06:20.838 INFO  [restartedMain] [org.hibernate.cfg.Environment] - HHH000206: hibernate.properties not found
2023-06-11 18:06:20.952 INFO  [restartedMain] [org.hibernate.annotations.common.Version] - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2023-06-11 18:06:21.111 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 18:06:21.123 INFO  [restartedMain] [org.hibernate.dialect.Dialect] - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2023-06-11 18:06:21.613 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select SEQUENCE_CATALOG, SEQUENCE_SCHEMA, SEQUENCE_NAME, INCREMENT from information_schema.sequences
 {executed in 1 msec}
2023-06-11 18:06:21.671 INFO  [restartedMain] [o.s.o.j.LocalContainerEntityManagerFactoryBean] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-06-11 18:06:21.852 INFO  [restartedMain] [o.h.h.i.QueryTranslatorFactoryInitiator] - HHH000397: Using ASTQueryTranslatorFactory
2023-06-11 18:06:22.034 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'clientInboundChannelExecutor'
2023-06-11 18:06:22.044 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'clientOutboundChannelExecutor'
2023-06-11 18:06:22.656 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService
2023-06-11 18:06:22.657 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'asyncThreadPool'
2023-06-11 18:06:22.786 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/h2-console/**'], []
2023-06-11 18:06:22.786 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/css/**'], []
2023-06-11 18:06:22.787 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/js/**'], []
2023-06-11 18:06:22.787 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/monitor/**'], []
2023-06-11 18:06:22.787 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/img/**'], []
2023-06-11 18:06:22.787 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/lib/**'], []
2023-06-11 18:06:22.787 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/main.css'], []
2023-06-11 18:06:22.787 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/common.js'], []
2023-06-11 18:06:22.787 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/resources/**'], []
2023-06-11 18:06:22.890 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@463969e6, org.springframework.security.web.context.SecurityContextPersistenceFilter@6dae2c10, org.springframework.security.web.header.HeaderWriterFilter@287ccb9c, org.springframework.web.filter.CorsFilter@50e355f7, org.springframework.security.web.authentication.logout.LogoutFilter@6ac8e0fc, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@47435101, org.springframework.security.web.session.ConcurrentSessionFilter@1f88619, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@1e756af4, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6bb6f56f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3dc850e5, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@21bb1622, org.springframework.security.web.session.SessionManagementFilter@36fedbd4, org.springframework.security.web.access.ExceptionTranslationFilter@7eb997c2, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@272d5d26]
2023-06-11 18:06:22.906 INFO  [restartedMain] [o.s.aop.framework.CglibAopProxy] - Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(javax.servlet.FilterConfig) throws javax.servlet.ServletException] because it is marked as final: Consider using interface-based JDK proxies instead!
2023-06-11 18:06:22.935 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskScheduler] - Initializing ExecutorService 'messageBrokerTaskScheduler'
2023-06-11 18:06:22.975 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'brokerChannelExecutor'
2023-06-11 18:06:23.253 WARN  [restartedMain] [o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-06-11 18:06:23.301 INFO  [restartedMain] [o.s.b.a.w.s.WelcomePageHandlerMapping] - Adding welcome page: ServletContext resource [/index.html]
2023-06-11 18:06:23.577 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 18:06:24.119 INFO  [restartedMain] [o.s.b.d.a.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2023-06-11 18:06:24.138 INFO  [restartedMain] [o.s.b.a.e.web.EndpointLinksResolver] - Exposing 16 endpoint(s) beneath base path '/actuator'
2023-06-11 18:06:24.223 INFO  [restartedMain] [o.s.m.s.b.SimpleBrokerMessageHandler] - Starting...
2023-06-11 18:06:24.223 INFO  [restartedMain] [o.s.m.s.b.SimpleBrokerMessageHandler] - BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2023-06-11 18:06:24.224 INFO  [restartedMain] [o.s.m.s.b.SimpleBrokerMessageHandler] - Started.
2023-06-11 18:06:24.230 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskScheduler] - Initializing ExecutorService
2023-06-11 18:06:24.232 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Starting ProtocolHandler ["http-nio-10010"]
2023-06-11 18:06:24.262 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 10010 (http) with context path ''
2023-06-11 18:06:24.265 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Started PjyApplication in 7.506 seconds (JVM running for 8.288)
2023-06-11 18:06:24.266 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-06-11 18:06:24.266 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - Application started
2023-06-11 18:06:24.266 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-06-11 18:06:24.962 INFO  [RMI TCP Connection(9)-127.0.0.1] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-11 18:06:24.963 INFO  [RMI TCP Connection(9)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Initializing Servlet 'dispatcherServlet'
2023-06-11 18:06:24.975 INFO  [RMI TCP Connection(9)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Completed initialization in 12 ms
2023-06-11 18:06:40.421 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@d9026782
2023-06-11 18:06:40.446 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
2023-06-11 18:06:40.452 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 18:06:40.455 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 2 msec}
2023-06-11 18:06:40.459 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 2 msec}
2023-06-11 18:06:44.381 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@17d0d2df
2023-06-11 18:06:44.435 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-11 18:06:44.443 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  '5' AS a0 
		,	'' AS a1, 			''	  AS a1_value  
		,	'' AS a2, 			''  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		b.email  AS a4_value 
		,	'성별' AS a5, 		a.sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='박병승' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		a.TEAM_NM  AS a1_value  
		,	'노선' AS a2, 		b.route_nm  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		a.PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		b.hobong AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='박병승' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		a.JOB_KIND AS a1_value 
		,	'직종' AS a2, 		a.JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'고정/SP구분' AS a4, 		b.sp_gb AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='박병승' 
	union 
	SELECT  '2' AS a0 
		,	'생년월일' AS a1, 		b.BIRTH_YMD AS a1_value  
		,	'근속일자' AS a2, 		a.JOB_YEAR  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		b.work_group AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='박병승' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		b.address AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='박병승' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		a.ENTER_DATE AS a2_value 
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='박병승'
 {executed in 1 msec}
2023-06-11 18:07:22.986 INFO  [MessageBroker-1] [o.s.w.s.c.WebSocketMessageBrokerStats] - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2023-06-11 18:07:26.994 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@d9026782
2023-06-11 18:07:26.994 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
2023-06-11 18:07:26.995 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-11 18:07:27.000 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 5 msec}
2023-06-11 18:07:27.002 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 1 msec}
2023-06-11 18:07:28.197 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@276d94ac
2023-06-11 18:07:28.199 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 18:07:28.201 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  '5' AS a0 
		,	'' AS a1, 			''	  AS a1_value  
		,	'' AS a2, 			''  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		b.email  AS a4_value 
		,	'성별' AS a5, 		a.sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='문영식' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		a.TEAM_NM  AS a1_value  
		,	'노선' AS a2, 		b.route_nm  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		a.PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		b.hobong AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='문영식' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		a.JOB_KIND AS a1_value 
		,	'직종' AS a2, 		a.JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'고정/SP구분' AS a4, 		b.sp_gb AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='문영식' 
	union 
	SELECT  '2' AS a0 
		,	'생년월일' AS a1, 		b.BIRTH_YMD AS a1_value  
		,	'근속일자' AS a2, 		a.JOB_YEAR  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		b.work_group AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='문영식' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		b.address AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='문영식' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		a.ENTER_DATE AS a2_value 
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='문영식'
 {executed in 2 msec}
2023-06-11 18:34:32.423 INFO  [RMI TCP Connection(40)-127.0.0.1] [o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin] - Application shutdown requested.
2023-06-11 18:34:32.428 INFO  [RMI TCP Connection(40)-127.0.0.1] [o.s.m.s.b.SimpleBrokerMessageHandler] - Stopping...
2023-06-11 18:34:32.428 INFO  [RMI TCP Connection(40)-127.0.0.1] [o.s.m.s.b.SimpleBrokerMessageHandler] - BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2023-06-11 18:34:32.428 INFO  [RMI TCP Connection(40)-127.0.0.1] [o.s.m.s.b.SimpleBrokerMessageHandler] - Stopped.
2023-06-11 18:34:32.447 INFO  [RMI TCP Connection(40)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Shutting down ExecutorService 'brokerChannelExecutor'
2023-06-11 18:34:32.448 INFO  [RMI TCP Connection(40)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskScheduler] - Shutting down ExecutorService 'messageBrokerTaskScheduler'
2023-06-11 18:34:32.448 INFO  [RMI TCP Connection(40)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Shutting down ExecutorService 'asyncThreadPool'
2023-06-11 18:34:32.449 INFO  [RMI TCP Connection(40)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Shutting down ExecutorService 'clientOutboundChannelExecutor'
2023-06-11 18:34:32.449 INFO  [RMI TCP Connection(40)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Shutting down ExecutorService 'clientInboundChannelExecutor'
2023-06-11 18:34:32.450 INFO  [RMI TCP Connection(40)-127.0.0.1] [com.zaxxer.hikari.HikariDataSource] - H2 - Shutdown initiated...
2023-06-11 18:34:32.454 INFO  [RMI TCP Connection(40)-127.0.0.1] [com.zaxxer.hikari.HikariDataSource] - H2 - Shutdown completed.
2023-06-11 18:34:32.476 INFO  [RMI TCP Connection(40)-127.0.0.1] [com.pjy.dashboard.filter.TestFilter] - destroy Pjy Filter
2023-06-11 18:34:34.775 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Starting PjyApplication on DESKTOP-3O1I9JM with PID 17044 (C:\BUS\multimodule-parent\dashboard\target\classes started by admin in C:\BUS\multimodule-parent\dashboard)
2023-06-11 18:34:34.777 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - The following profiles are active: oauth
2023-06-11 18:34:34.813 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-06-11 18:34:34.813 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-06-11 18:34:35.592 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-11 18:34:35.592 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-06-11 18:34:35.685 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 87ms. Found 2 JPA repository interfaces.
2023-06-11 18:34:35.932 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-11 18:34:35.932 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2023-06-11 18:34:35.968 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.MemberRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-06-11 18:34:35.968 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.RememberMeRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-06-11 18:34:35.968 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 36ms. Found 0 JDBC repository interfaces.
2023-06-11 18:34:36.280 INFO  [restartedMain] [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] - Post-processing PropertySource instances
2023-06-11 18:34:36.331 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2023-06-11 18:34:36.331 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource commandLineArgs [org.springframework.core.env.SimpleCommandLinePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-06-11 18:34:36.331 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-06-11 18:34:36.331 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-06-11 18:34:36.331 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-11 18:34:36.331 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
2023-06-11 18:34:36.331 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2023-06-11 18:34:36.331 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application-oauth.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-11 18:34:36.331 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-11 18:34:36.332 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-11 18:34:36.332 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [pjy.properties] [org.springframework.core.env.CompositePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-06-11 18:34:36.332 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [common.properties] [org.springframework.core.io.support.ResourcePropertySource] to EncryptableMapPropertySourceWrapper
2023-06-11 18:34:36.379 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'asyncConfiguration' of type [com.pjy.dashboard.configuration.AsyncConfiguration$$EnhancerBySpringCGLIB$$753d327] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 18:34:36.415 INFO  [restartedMain] [c.u.j.filter.DefaultLazyPropertyFilter] - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2023-06-11 18:34:36.480 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$f14a3754] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 18:34:36.541 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 18:34:36.543 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@1151b38d' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 18:34:36.544 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$161eda06] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 18:34:36.551 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration$$EnhancerBySpringCGLIB$$3b73f21c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 18:34:36.553 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 18:34:36.554 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 18:34:36.567 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$589c6f1a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 18:34:36.587 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$d81cbc4c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 18:34:36.673 INFO  [restartedMain] [c.u.j.r.DefaultLazyPropertyResolver] - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2023-06-11 18:34:36.676 INFO  [restartedMain] [c.u.j.d.DefaultLazyPropertyDetector] - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2023-06-11 18:34:36.974 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 10010 (http)
2023-06-11 18:34:36.987 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Initializing ProtocolHandler ["http-nio-10010"]
2023-06-11 18:34:36.994 INFO  [restartedMain] [org.apache.catalina.core.StandardService] - Starting service [Tomcat]
2023-06-11 18:34:36.994 INFO  [restartedMain] [org.apache.catalina.core.StandardEngine] - Starting Servlet engine: [Apache Tomcat/9.0.29]
2023-06-11 18:34:37.195 INFO  [restartedMain] [org.apache.jasper.servlet.TldScanner] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2023-06-11 18:34:37.203 INFO  [restartedMain] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring embedded WebApplicationContext
2023-06-11 18:34:37.203 INFO  [restartedMain] [o.s.web.context.ContextLoader] - Root WebApplicationContext: initialization completed in 2390 ms
2023-06-11 18:34:37.711 INFO  [restartedMain] [c.u.j.encryptor.DefaultLazyEncryptor] - Found Custom Encryptor Bean org.jasypt.encryption.pbe.PooledPBEStringEncryptor@71802400 with name: jasyptStringEncryptor
2023-06-11 18:34:37.746 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Starting...
2023-06-11 18:34:37.807 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.executeSql(PoolBase.java:567)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 4 msec}
2023-06-11 18:34:37.809 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Start completed.
2023-06-11 18:34:38.281 INFO  [restartedMain] [com.pjy.dashboard.filter.TestFilter] - init Pjy Filter
2023-06-11 18:34:38.508 INFO  [restartedMain] [o.hibernate.jpa.internal.util.LogHelper] - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2023-06-11 18:34:38.563 INFO  [restartedMain] [org.hibernate.Version] - HHH000412: Hibernate Core {5.3.14.Final}
2023-06-11 18:34:38.564 INFO  [restartedMain] [org.hibernate.cfg.Environment] - HHH000206: hibernate.properties not found
2023-06-11 18:34:38.680 INFO  [restartedMain] [org.hibernate.annotations.common.Version] - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2023-06-11 18:34:38.838 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 18:34:38.851 INFO  [restartedMain] [org.hibernate.dialect.Dialect] - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2023-06-11 18:34:39.344 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-11 18:34:39.346 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select SEQUENCE_CATALOG, SEQUENCE_SCHEMA, SEQUENCE_NAME, INCREMENT from information_schema.sequences
 {executed in 1 msec}
2023-06-11 18:34:39.377 INFO  [restartedMain] [o.s.o.j.LocalContainerEntityManagerFactoryBean] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-06-11 18:34:39.554 INFO  [restartedMain] [o.h.h.i.QueryTranslatorFactoryInitiator] - HHH000397: Using ASTQueryTranslatorFactory
2023-06-11 18:34:39.740 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'clientInboundChannelExecutor'
2023-06-11 18:34:39.751 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'clientOutboundChannelExecutor'
2023-06-11 18:34:40.391 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService
2023-06-11 18:34:40.392 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'asyncThreadPool'
2023-06-11 18:34:40.524 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/h2-console/**'], []
2023-06-11 18:34:40.524 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/css/**'], []
2023-06-11 18:34:40.524 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/js/**'], []
2023-06-11 18:34:40.524 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/monitor/**'], []
2023-06-11 18:34:40.524 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/img/**'], []
2023-06-11 18:34:40.524 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/lib/**'], []
2023-06-11 18:34:40.524 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/main.css'], []
2023-06-11 18:34:40.524 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/common.js'], []
2023-06-11 18:34:40.525 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/resources/**'], []
2023-06-11 18:34:40.629 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@10c813fc, org.springframework.security.web.context.SecurityContextPersistenceFilter@7e89725d, org.springframework.security.web.header.HeaderWriterFilter@5311e7c, org.springframework.web.filter.CorsFilter@108b89b9, org.springframework.security.web.authentication.logout.LogoutFilter@2b9eecf6, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@6bd490f9, org.springframework.security.web.session.ConcurrentSessionFilter@6f138f2b, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@443420bc, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@681147a0, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@78bd58f9, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@20a6b870, org.springframework.security.web.session.SessionManagementFilter@4a37d1f3, org.springframework.security.web.access.ExceptionTranslationFilter@4ddb9c2d, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@787f5815]
2023-06-11 18:34:40.646 INFO  [restartedMain] [o.s.aop.framework.CglibAopProxy] - Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(javax.servlet.FilterConfig) throws javax.servlet.ServletException] because it is marked as final: Consider using interface-based JDK proxies instead!
2023-06-11 18:34:40.675 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskScheduler] - Initializing ExecutorService 'messageBrokerTaskScheduler'
2023-06-11 18:34:40.718 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'brokerChannelExecutor'
2023-06-11 18:34:41.016 WARN  [restartedMain] [o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-06-11 18:34:41.066 INFO  [restartedMain] [o.s.b.a.w.s.WelcomePageHandlerMapping] - Adding welcome page: ServletContext resource [/index.html]
2023-06-11 18:34:41.357 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 18:34:41.929 INFO  [restartedMain] [o.s.b.d.a.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2023-06-11 18:34:41.948 INFO  [restartedMain] [o.s.b.a.e.web.EndpointLinksResolver] - Exposing 16 endpoint(s) beneath base path '/actuator'
2023-06-11 18:34:42.039 INFO  [restartedMain] [o.s.m.s.b.SimpleBrokerMessageHandler] - Starting...
2023-06-11 18:34:42.040 INFO  [restartedMain] [o.s.m.s.b.SimpleBrokerMessageHandler] - BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2023-06-11 18:34:42.041 INFO  [restartedMain] [o.s.m.s.b.SimpleBrokerMessageHandler] - Started.
2023-06-11 18:34:42.048 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskScheduler] - Initializing ExecutorService
2023-06-11 18:34:42.050 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Starting ProtocolHandler ["http-nio-10010"]
2023-06-11 18:34:42.093 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 10010 (http) with context path ''
2023-06-11 18:34:42.097 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Started PjyApplication in 7.625 seconds (JVM running for 8.426)
2023-06-11 18:34:42.097 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-06-11 18:34:42.097 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - Application started
2023-06-11 18:34:42.097 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-06-11 18:34:43.294 INFO  [RMI TCP Connection(10)-127.0.0.1] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-11 18:34:43.295 INFO  [RMI TCP Connection(10)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Initializing Servlet 'dispatcherServlet'
2023-06-11 18:34:43.309 INFO  [RMI TCP Connection(10)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Completed initialization in 14 ms
2023-06-11 18:34:48.306 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1ca9946c
2023-06-11 18:34:48.360 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-11 18:34:48.371 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  '5' AS a0 
		,	'' AS a1, 			''	  AS a1_value  
		,	'' AS a2, 			''  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		b.email  AS a4_value 
		,	'성별' AS a5, 		a.sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='차영섭' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		a.TEAM_NM  AS a1_value  
		,	'노선' AS a2, 		b.route_nm  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		a.PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		b.hobong AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='차영섭' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		a.JOB_KIND AS a1_value 
		,	'직종' AS a2, 		a.JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'고정/SP구분' AS a4, 		b.sp_gb AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='차영섭' 
	union 
	SELECT  '2' AS a0 
		,	'생년월일' AS a1, 		b.BIRTH_YMD AS a1_value  
		,	'근속일자' AS a2, 		to_char(datediff(DAY,'20'||RIGHT(b.enter_date,2) || '-'||replace(SUBSTRING(b.enter_date,0, LENGTH (b.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yy-mm-dd')))  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		b.work_group AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='차영섭' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		b.address AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='차영섭' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		a.ENTER_DATE AS a2_value 
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='차영섭'
 {executed in 3 msec}
2023-06-11 18:35:21.583 INFO  [RMI TCP Connection(12)-127.0.0.1] [o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin] - Application shutdown requested.
2023-06-11 18:35:21.586 INFO  [RMI TCP Connection(12)-127.0.0.1] [o.s.m.s.b.SimpleBrokerMessageHandler] - Stopping...
2023-06-11 18:35:21.586 INFO  [RMI TCP Connection(12)-127.0.0.1] [o.s.m.s.b.SimpleBrokerMessageHandler] - BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2023-06-11 18:35:21.586 INFO  [RMI TCP Connection(12)-127.0.0.1] [o.s.m.s.b.SimpleBrokerMessageHandler] - Stopped.
2023-06-11 18:35:21.610 INFO  [RMI TCP Connection(12)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Shutting down ExecutorService 'brokerChannelExecutor'
2023-06-11 18:35:21.611 INFO  [RMI TCP Connection(12)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskScheduler] - Shutting down ExecutorService 'messageBrokerTaskScheduler'
2023-06-11 18:35:21.611 INFO  [RMI TCP Connection(12)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Shutting down ExecutorService 'asyncThreadPool'
2023-06-11 18:35:21.612 INFO  [RMI TCP Connection(12)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Shutting down ExecutorService 'clientOutboundChannelExecutor'
2023-06-11 18:35:21.612 INFO  [RMI TCP Connection(12)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Shutting down ExecutorService 'clientInboundChannelExecutor'
2023-06-11 18:35:21.613 INFO  [RMI TCP Connection(12)-127.0.0.1] [com.zaxxer.hikari.HikariDataSource] - H2 - Shutdown initiated...
2023-06-11 18:35:21.617 INFO  [RMI TCP Connection(12)-127.0.0.1] [com.zaxxer.hikari.HikariDataSource] - H2 - Shutdown completed.
2023-06-11 18:35:21.639 INFO  [RMI TCP Connection(12)-127.0.0.1] [com.pjy.dashboard.filter.TestFilter] - destroy Pjy Filter
2023-06-11 18:35:23.668 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Starting PjyApplication on DESKTOP-3O1I9JM with PID 38416 (C:\BUS\multimodule-parent\dashboard\target\classes started by admin in C:\BUS\multimodule-parent\dashboard)
2023-06-11 18:35:23.673 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - The following profiles are active: oauth
2023-06-11 18:35:23.708 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-06-11 18:35:23.708 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-06-11 18:35:24.482 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-11 18:35:24.482 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-06-11 18:35:24.577 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 89ms. Found 2 JPA repository interfaces.
2023-06-11 18:35:24.819 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-11 18:35:24.819 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2023-06-11 18:35:24.853 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.MemberRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-06-11 18:35:24.854 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.RememberMeRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-06-11 18:35:24.854 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 35ms. Found 0 JDBC repository interfaces.
2023-06-11 18:35:25.147 INFO  [restartedMain] [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] - Post-processing PropertySource instances
2023-06-11 18:35:25.192 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2023-06-11 18:35:25.192 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource commandLineArgs [org.springframework.core.env.SimpleCommandLinePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-06-11 18:35:25.192 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-06-11 18:35:25.192 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-06-11 18:35:25.192 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-11 18:35:25.192 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
2023-06-11 18:35:25.192 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2023-06-11 18:35:25.192 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application-oauth.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-11 18:35:25.192 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-11 18:35:25.192 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-11 18:35:25.192 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [pjy.properties] [org.springframework.core.env.CompositePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-06-11 18:35:25.192 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [common.properties] [org.springframework.core.io.support.ResourcePropertySource] to EncryptableMapPropertySourceWrapper
2023-06-11 18:35:25.238 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'asyncConfiguration' of type [com.pjy.dashboard.configuration.AsyncConfiguration$$EnhancerBySpringCGLIB$$59129d70] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 18:35:25.270 INFO  [restartedMain] [c.u.j.filter.DefaultLazyPropertyFilter] - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2023-06-11 18:35:25.331 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$4309019d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 18:35:25.395 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 18:35:25.397 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@3e9c09e' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 18:35:25.397 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$67dda44f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 18:35:25.405 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration$$EnhancerBySpringCGLIB$$8d32bc65] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 18:35:25.407 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 18:35:25.408 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 18:35:25.422 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$aa5b3963] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 18:35:25.440 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$29db8695] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 18:35:25.521 INFO  [restartedMain] [c.u.j.r.DefaultLazyPropertyResolver] - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2023-06-11 18:35:25.524 INFO  [restartedMain] [c.u.j.d.DefaultLazyPropertyDetector] - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2023-06-11 18:35:25.805 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 10010 (http)
2023-06-11 18:35:25.817 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Initializing ProtocolHandler ["http-nio-10010"]
2023-06-11 18:35:25.823 INFO  [restartedMain] [org.apache.catalina.core.StandardService] - Starting service [Tomcat]
2023-06-11 18:35:25.824 INFO  [restartedMain] [org.apache.catalina.core.StandardEngine] - Starting Servlet engine: [Apache Tomcat/9.0.29]
2023-06-11 18:35:26.031 INFO  [restartedMain] [org.apache.jasper.servlet.TldScanner] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2023-06-11 18:35:26.038 INFO  [restartedMain] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring embedded WebApplicationContext
2023-06-11 18:35:26.038 INFO  [restartedMain] [o.s.web.context.ContextLoader] - Root WebApplicationContext: initialization completed in 2329 ms
2023-06-11 18:35:26.551 INFO  [restartedMain] [c.u.j.encryptor.DefaultLazyEncryptor] - Found Custom Encryptor Bean org.jasypt.encryption.pbe.PooledPBEStringEncryptor@6b84b010 with name: jasyptStringEncryptor
2023-06-11 18:35:26.591 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Starting...
2023-06-11 18:35:26.650 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.executeSql(PoolBase.java:567)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 5 msec}
2023-06-11 18:35:26.652 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Start completed.
2023-06-11 18:35:27.130 INFO  [restartedMain] [com.pjy.dashboard.filter.TestFilter] - init Pjy Filter
2023-06-11 18:35:27.361 INFO  [restartedMain] [o.hibernate.jpa.internal.util.LogHelper] - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2023-06-11 18:35:27.415 INFO  [restartedMain] [org.hibernate.Version] - HHH000412: Hibernate Core {5.3.14.Final}
2023-06-11 18:35:27.416 INFO  [restartedMain] [org.hibernate.cfg.Environment] - HHH000206: hibernate.properties not found
2023-06-11 18:35:27.529 INFO  [restartedMain] [org.hibernate.annotations.common.Version] - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2023-06-11 18:35:27.688 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-11 18:35:27.699 INFO  [restartedMain] [org.hibernate.dialect.Dialect] - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2023-06-11 18:35:28.191 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select SEQUENCE_CATALOG, SEQUENCE_SCHEMA, SEQUENCE_NAME, INCREMENT from information_schema.sequences
 {executed in 0 msec}
2023-06-11 18:35:28.222 INFO  [restartedMain] [o.s.o.j.LocalContainerEntityManagerFactoryBean] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-06-11 18:35:28.402 INFO  [restartedMain] [o.h.h.i.QueryTranslatorFactoryInitiator] - HHH000397: Using ASTQueryTranslatorFactory
2023-06-11 18:35:28.587 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'clientInboundChannelExecutor'
2023-06-11 18:35:28.596 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'clientOutboundChannelExecutor'
2023-06-11 18:35:29.215 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService
2023-06-11 18:35:29.216 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'asyncThreadPool'
2023-06-11 18:35:29.339 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/h2-console/**'], []
2023-06-11 18:35:29.340 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/css/**'], []
2023-06-11 18:35:29.340 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/js/**'], []
2023-06-11 18:35:29.340 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/monitor/**'], []
2023-06-11 18:35:29.340 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/img/**'], []
2023-06-11 18:35:29.340 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/lib/**'], []
2023-06-11 18:35:29.340 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/main.css'], []
2023-06-11 18:35:29.340 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/common.js'], []
2023-06-11 18:35:29.340 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/resources/**'], []
2023-06-11 18:35:29.442 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2473978f, org.springframework.security.web.context.SecurityContextPersistenceFilter@3257f61e, org.springframework.security.web.header.HeaderWriterFilter@4068aa52, org.springframework.web.filter.CorsFilter@598ab3e7, org.springframework.security.web.authentication.logout.LogoutFilter@23495b46, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@392bcf33, org.springframework.security.web.session.ConcurrentSessionFilter@25c9e7d1, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@3be2d916, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@50ef58fa, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@18d18fb2, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@207ff287, org.springframework.security.web.session.SessionManagementFilter@7058016a, org.springframework.security.web.access.ExceptionTranslationFilter@4718d1ed, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2f967a4e]
2023-06-11 18:35:29.462 INFO  [restartedMain] [o.s.aop.framework.CglibAopProxy] - Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(javax.servlet.FilterConfig) throws javax.servlet.ServletException] because it is marked as final: Consider using interface-based JDK proxies instead!
2023-06-11 18:35:29.491 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskScheduler] - Initializing ExecutorService 'messageBrokerTaskScheduler'
2023-06-11 18:35:29.537 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'brokerChannelExecutor'
2023-06-11 18:35:29.829 WARN  [restartedMain] [o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-06-11 18:35:29.882 INFO  [restartedMain] [o.s.b.a.w.s.WelcomePageHandlerMapping] - Adding welcome page: ServletContext resource [/index.html]
2023-06-11 18:35:30.160 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 18:35:30.702 INFO  [restartedMain] [o.s.b.d.a.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2023-06-11 18:35:30.720 INFO  [restartedMain] [o.s.b.a.e.web.EndpointLinksResolver] - Exposing 16 endpoint(s) beneath base path '/actuator'
2023-06-11 18:35:30.811 INFO  [restartedMain] [o.s.m.s.b.SimpleBrokerMessageHandler] - Starting...
2023-06-11 18:35:30.813 INFO  [restartedMain] [o.s.m.s.b.SimpleBrokerMessageHandler] - BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2023-06-11 18:35:30.813 INFO  [restartedMain] [o.s.m.s.b.SimpleBrokerMessageHandler] - Started.
2023-06-11 18:35:30.820 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskScheduler] - Initializing ExecutorService
2023-06-11 18:35:30.822 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Starting ProtocolHandler ["http-nio-10010"]
2023-06-11 18:35:30.855 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 10010 (http) with context path ''
2023-06-11 18:35:30.858 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Started PjyApplication in 7.511 seconds (JVM running for 8.303)
2023-06-11 18:35:30.859 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-06-11 18:35:30.859 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - Application started
2023-06-11 18:35:30.859 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-06-11 18:35:32.033 INFO  [RMI TCP Connection(8)-127.0.0.1] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-11 18:35:32.033 INFO  [RMI TCP Connection(8)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Initializing Servlet 'dispatcherServlet'
2023-06-11 18:35:32.047 INFO  [RMI TCP Connection(8)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Completed initialization in 14 ms
2023-06-11 18:35:39.475 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@17d0d2df
2023-06-11 18:35:39.522 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 18:35:39.530 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  '5' AS a0 
		,	'' AS a1, 			''	  AS a1_value  
		,	'' AS a2, 			''  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		b.email  AS a4_value 
		,	'성별' AS a5, 		a.sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='박병승' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		a.TEAM_NM  AS a1_value  
		,	'노선' AS a2, 		b.route_nm  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		a.PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		b.hobong AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='박병승' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		a.JOB_KIND AS a1_value 
		,	'직종' AS a2, 		a.JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'고정/SP구분' AS a4, 		b.sp_gb AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='박병승' 
	union 
	SELECT  '2' AS a0 
		,	'생년월일' AS a1, 		b.BIRTH_YMD AS a1_value  
		,	'근속일자' AS a2, 		to_char(datediff(DAY,'20'||RIGHT(b.enter_date,2) || '-'||replace(SUBSTRING(b.enter_date,0, LENGTH (b.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd')))  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		b.work_group AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='박병승' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		b.address AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='박병승' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		a.ENTER_DATE AS a2_value 
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='박병승'
 {executed in 3 msec}
2023-06-11 18:36:29.537 INFO  [MessageBroker-1] [o.s.w.s.c.WebSocketMessageBrokerStats] - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2023-06-11 18:38:22.001 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@a305bf1b
2023-06-11 18:38:22.003 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 18:38:22.006 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  '5' AS a0 
		,	'' AS a1, 			''	  AS a1_value  
		,	'' AS a2, 			''  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		b.email  AS a4_value 
		,	'성별' AS a5, 		a.sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='손진종' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		a.TEAM_NM  AS a1_value  
		,	'노선' AS a2, 		b.route_nm  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		a.PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		b.hobong AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='손진종' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		a.JOB_KIND AS a1_value 
		,	'직종' AS a2, 		a.JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'고정/SP구분' AS a4, 		b.sp_gb AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='손진종' 
	union 
	SELECT  '2' AS a0 
		,	'생년월일' AS a1, 		b.BIRTH_YMD AS a1_value  
		,	'근속일자' AS a2, 		to_char(datediff(DAY,'20'||RIGHT(b.enter_date,2) || '-'||replace(SUBSTRING(b.enter_date,0, LENGTH (b.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd')))  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		b.work_group AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='손진종' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		b.address AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='손진종' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		a.ENTER_DATE AS a2_value 
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='손진종'
 {executed in 2 msec}
2023-06-11 18:40:00.461 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1ca9946c
2023-06-11 18:40:00.465 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 18:40:00.467 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  '5' AS a0 
		,	'' AS a1, 			''	  AS a1_value  
		,	'' AS a2, 			''  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		b.email  AS a4_value 
		,	'성별' AS a5, 		a.sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='차영섭' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		a.TEAM_NM  AS a1_value  
		,	'노선' AS a2, 		b.route_nm  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		a.PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		b.hobong AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='차영섭' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		a.JOB_KIND AS a1_value 
		,	'직종' AS a2, 		a.JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'고정/SP구분' AS a4, 		b.sp_gb AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='차영섭' 
	union 
	SELECT  '2' AS a0 
		,	'생년월일' AS a1, 		b.BIRTH_YMD AS a1_value  
		,	'근속일자' AS a2, 		to_char(datediff(DAY,'20'||RIGHT(b.enter_date,2) || '-'||replace(SUBSTRING(b.enter_date,0, LENGTH (b.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd')))  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		b.work_group AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='차영섭' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		b.address AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='차영섭' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		a.ENTER_DATE AS a2_value 
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='차영섭'
 {executed in 2 msec}
2023-06-11 18:40:10.643 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@d06b08a7
2023-06-11 18:40:10.644 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 18:40:10.646 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  '5' AS a0 
		,	'' AS a1, 			''	  AS a1_value  
		,	'' AS a2, 			''  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		b.email  AS a4_value 
		,	'성별' AS a5, 		a.sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='권태종' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		a.TEAM_NM  AS a1_value  
		,	'노선' AS a2, 		b.route_nm  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		a.PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		b.hobong AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='권태종' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		a.JOB_KIND AS a1_value 
		,	'직종' AS a2, 		a.JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'고정/SP구분' AS a4, 		b.sp_gb AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='권태종' 
	union 
	SELECT  '2' AS a0 
		,	'생년월일' AS a1, 		b.BIRTH_YMD AS a1_value  
		,	'근속일자' AS a2, 		to_char(datediff(DAY,'20'||RIGHT(b.enter_date,2) || '-'||replace(SUBSTRING(b.enter_date,0, LENGTH (b.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd')))  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		b.work_group AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='권태종' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		b.address AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='권태종' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		a.ENTER_DATE AS a2_value 
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='권태종'
 {executed in 1 msec}
2023-06-11 18:41:19.846 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@e95e3ff4
2023-06-11 18:41:19.847 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 18:41:19.851 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  '5' AS a0 
		,	'' AS a1, 			''	  AS a1_value  
		,	'' AS a2, 			''  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		b.email  AS a4_value 
		,	'성별' AS a5, 		a.sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='이승욱' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		a.TEAM_NM  AS a1_value  
		,	'노선' AS a2, 		b.route_nm  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		a.PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		b.hobong AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='이승욱' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		a.JOB_KIND AS a1_value 
		,	'직종' AS a2, 		a.JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'고정/SP구분' AS a4, 		b.sp_gb AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='이승욱' 
	union 
	SELECT  '2' AS a0 
		,	'생년월일' AS a1, 		b.BIRTH_YMD AS a1_value  
		,	'근속일자' AS a2, 		to_char(datediff(DAY,'20'||RIGHT(b.enter_date,2) || '-'||replace(SUBSTRING(b.enter_date,0, LENGTH (b.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd')))  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		b.work_group AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='이승욱' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		b.address AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='이승욱' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		a.ENTER_DATE AS a2_value 
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='이승욱'
 {executed in 2 msec}
2023-06-11 18:41:59.385 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@276d94ac
2023-06-11 18:41:59.386 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 18:41:59.394 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  '5' AS a0 
		,	'' AS a1, 			''	  AS a1_value  
		,	'' AS a2, 			''  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		b.email  AS a4_value 
		,	'성별' AS a5, 		a.sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='문영식' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		a.TEAM_NM  AS a1_value  
		,	'노선' AS a2, 		b.route_nm  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		a.PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		b.hobong AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='문영식' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		a.JOB_KIND AS a1_value 
		,	'직종' AS a2, 		a.JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'고정/SP구분' AS a4, 		b.sp_gb AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='문영식' 
	union 
	SELECT  '2' AS a0 
		,	'생년월일' AS a1, 		b.BIRTH_YMD AS a1_value  
		,	'근속일자' AS a2, 		to_char(datediff(DAY,'20'||RIGHT(b.enter_date,2) || '-'||replace(SUBSTRING(b.enter_date,0, LENGTH (b.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd')))  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		b.work_group AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='문영식' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		b.address AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='문영식' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		a.ENTER_DATE AS a2_value 
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='문영식'
 {executed in 6 msec}
2023-06-11 18:42:25.617 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1ca9946c
2023-06-11 18:42:25.618 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 18:42:25.622 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  '5' AS a0 
		,	'' AS a1, 			''	  AS a1_value  
		,	'' AS a2, 			''  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		b.email  AS a4_value 
		,	'성별' AS a5, 		a.sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='차영섭' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		a.TEAM_NM  AS a1_value  
		,	'노선' AS a2, 		b.route_nm  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		a.PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		b.hobong AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='차영섭' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		a.JOB_KIND AS a1_value 
		,	'직종' AS a2, 		a.JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'고정/SP구분' AS a4, 		b.sp_gb AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='차영섭' 
	union 
	SELECT  '2' AS a0 
		,	'생년월일' AS a1, 		b.BIRTH_YMD AS a1_value  
		,	'근속일자' AS a2, 		to_char(datediff(DAY,'20'||RIGHT(b.enter_date,2) || '-'||replace(SUBSTRING(b.enter_date,0, LENGTH (b.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd')))  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		b.work_group AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='차영섭' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		b.address AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='차영섭' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		a.ENTER_DATE AS a2_value 
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='차영섭'
 {executed in 2 msec}
2023-06-11 18:43:07.084 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@e95e3ff4
2023-06-11 18:43:07.085 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 18:43:07.089 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  '5' AS a0 
		,	'' AS a1, 			''	  AS a1_value  
		,	'' AS a2, 			''  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		b.email  AS a4_value 
		,	'성별' AS a5, 		a.sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='이승욱' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		a.TEAM_NM  AS a1_value  
		,	'노선' AS a2, 		b.route_nm  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		a.PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		b.hobong AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='이승욱' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		a.JOB_KIND AS a1_value 
		,	'직종' AS a2, 		a.JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'고정/SP구분' AS a4, 		b.sp_gb AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='이승욱' 
	union 
	SELECT  '2' AS a0 
		,	'생년월일' AS a1, 		b.BIRTH_YMD AS a1_value  
		,	'근속일자' AS a2, 		to_char(datediff(DAY,'20'||RIGHT(b.enter_date,2) || '-'||replace(SUBSTRING(b.enter_date,0, LENGTH (b.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd')))  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		b.work_group AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='이승욱' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		b.address AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='이승욱' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		a.ENTER_DATE AS a2_value 
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='이승욱'
 {executed in 2 msec}
2023-06-11 18:53:47.664 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@a305bf1b
2023-06-11 18:53:47.665 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 18:53:47.668 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  '5' AS a0 
		,	'' AS a1, 			''	  AS a1_value  
		,	'' AS a2, 			''  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		b.email  AS a4_value 
		,	'성별' AS a5, 		a.sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='손진종' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		a.TEAM_NM  AS a1_value  
		,	'노선' AS a2, 		b.route_nm  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		a.PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		b.hobong AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='손진종' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		a.JOB_KIND AS a1_value 
		,	'직종' AS a2, 		a.JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'고정/SP구분' AS a4, 		b.sp_gb AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='손진종' 
	union 
	SELECT  '2' AS a0 
		,	'생년월일' AS a1, 		b.BIRTH_YMD AS a1_value  
		,	'근속일자' AS a2, 		to_char(datediff(DAY,'20'||RIGHT(b.enter_date,2) || '-'||replace(SUBSTRING(b.enter_date,0, LENGTH (b.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd')))  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		b.work_group AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='손진종' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		b.address AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='손진종' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		a.ENTER_DATE AS a2_value 
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='손진종'
 {executed in 2 msec}
2023-06-11 18:54:04.901 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8390ca5b
2023-06-11 18:54:04.902 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 18:54:04.905 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  '5' AS a0 
		,	'' AS a1, 			''	  AS a1_value  
		,	'' AS a2, 			''  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		b.email  AS a4_value 
		,	'성별' AS a5, 		a.sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='박근호' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		a.TEAM_NM  AS a1_value  
		,	'노선' AS a2, 		b.route_nm  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		a.PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		b.hobong AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='박근호' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		a.JOB_KIND AS a1_value 
		,	'직종' AS a2, 		a.JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'고정/SP구분' AS a4, 		b.sp_gb AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='박근호' 
	union 
	SELECT  '2' AS a0 
		,	'생년월일' AS a1, 		b.BIRTH_YMD AS a1_value  
		,	'근속일자' AS a2, 		to_char(datediff(DAY,'20'||RIGHT(b.enter_date,2) || '-'||replace(SUBSTRING(b.enter_date,0, LENGTH (b.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd')))  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		b.work_group AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='박근호' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		b.address AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='박근호' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		a.ENTER_DATE AS a2_value 
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='박근호'
 {executed in 1 msec}
2023-06-11 18:54:15.876 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@affe6b13
2023-06-11 18:54:15.878 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 18:54:15.880 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  '5' AS a0 
		,	'' AS a1, 			''	  AS a1_value  
		,	'' AS a2, 			''  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		b.email  AS a4_value 
		,	'성별' AS a5, 		a.sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김문성' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		a.TEAM_NM  AS a1_value  
		,	'노선' AS a2, 		b.route_nm  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		a.PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		b.hobong AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김문성' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		a.JOB_KIND AS a1_value 
		,	'직종' AS a2, 		a.JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'고정/SP구분' AS a4, 		b.sp_gb AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김문성' 
	union 
	SELECT  '2' AS a0 
		,	'생년월일' AS a1, 		b.BIRTH_YMD AS a1_value  
		,	'근속일자' AS a2, 		to_char(datediff(DAY,'20'||RIGHT(b.enter_date,2) || '-'||replace(SUBSTRING(b.enter_date,0, LENGTH (b.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd')))  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		b.work_group AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김문성' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		b.address AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김문성' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		a.ENTER_DATE AS a2_value 
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김문성'
 {executed in 1 msec}
2023-06-11 18:54:21.246 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@3621f15c
2023-06-11 18:54:21.253 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-11 18:54:21.255 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  '5' AS a0 
		,	'' AS a1, 			''	  AS a1_value  
		,	'' AS a2, 			''  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		b.email  AS a4_value 
		,	'성별' AS a5, 		a.sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='오세환' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		a.TEAM_NM  AS a1_value  
		,	'노선' AS a2, 		b.route_nm  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		a.PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		b.hobong AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='오세환' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		a.JOB_KIND AS a1_value 
		,	'직종' AS a2, 		a.JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'고정/SP구분' AS a4, 		b.sp_gb AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='오세환' 
	union 
	SELECT  '2' AS a0 
		,	'생년월일' AS a1, 		b.BIRTH_YMD AS a1_value  
		,	'근속일자' AS a2, 		to_char(datediff(DAY,'20'||RIGHT(b.enter_date,2) || '-'||replace(SUBSTRING(b.enter_date,0, LENGTH (b.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd')))  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		b.work_group AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='오세환' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		b.address AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='오세환' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		a.ENTER_DATE AS a2_value 
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='오세환'
 {executed in 1 msec}
2023-06-11 18:54:32.756 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1a675a08
2023-06-11 18:54:32.757 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 18:54:32.759 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  '5' AS a0 
		,	'' AS a1, 			''	  AS a1_value  
		,	'' AS a2, 			''  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		b.email  AS a4_value 
		,	'성별' AS a5, 		a.sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='채규철' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		a.TEAM_NM  AS a1_value  
		,	'노선' AS a2, 		b.route_nm  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		a.PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		b.hobong AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='채규철' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		a.JOB_KIND AS a1_value 
		,	'직종' AS a2, 		a.JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'고정/SP구분' AS a4, 		b.sp_gb AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='채규철' 
	union 
	SELECT  '2' AS a0 
		,	'생년월일' AS a1, 		b.BIRTH_YMD AS a1_value  
		,	'근속일자' AS a2, 		to_char(datediff(DAY,'20'||RIGHT(b.enter_date,2) || '-'||replace(SUBSTRING(b.enter_date,0, LENGTH (b.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd')))  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		b.work_group AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='채규철' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		b.address AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='채규철' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		a.ENTER_DATE AS a2_value 
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='채규철'
 {executed in 2 msec}
2023-06-11 18:55:39.916 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@e95e3ff4
2023-06-11 18:55:39.917 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
11. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-11 18:55:39.920 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT  '5' AS a0 
		,	'' AS a1, 			''	  AS a1_value  
		,	'' AS a2, 			''  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		b.email  AS a4_value 
		,	'성별' AS a5, 		a.sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='이승욱' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		a.TEAM_NM  AS a1_value  
		,	'노선' AS a2, 		b.route_nm  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		a.PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		b.hobong AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='이승욱' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		a.JOB_KIND AS a1_value 
		,	'직종' AS a2, 		a.JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'고정/SP구분' AS a4, 		b.sp_gb AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='이승욱' 
	union 
	SELECT  '2' AS a0 
		,	'생년월일' AS a1, 		b.BIRTH_YMD AS a1_value  
		,	'근속일자' AS a2, 		to_char(datediff(DAY,'20'||RIGHT(b.enter_date,2) || '-'||replace(SUBSTRING(b.enter_date,0, LENGTH (b.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd')))  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		b.work_group AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='이승욱' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		b.address AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='이승욱' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		a.ENTER_DATE AS a2_value 
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='이승욱'
 {executed in 2 msec}
2023-06-11 18:55:44.800 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@e044d6f9
2023-06-11 18:55:44.801 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
11. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 18:55:44.806 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT  '5' AS a0 
		,	'' AS a1, 			''	  AS a1_value  
		,	'' AS a2, 			''  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		b.email  AS a4_value 
		,	'성별' AS a5, 		a.sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김병일' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		a.TEAM_NM  AS a1_value  
		,	'노선' AS a2, 		b.route_nm  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		a.PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		b.hobong AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김병일' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		a.JOB_KIND AS a1_value 
		,	'직종' AS a2, 		a.JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'고정/SP구분' AS a4, 		b.sp_gb AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김병일' 
	union 
	SELECT  '2' AS a0 
		,	'생년월일' AS a1, 		b.BIRTH_YMD AS a1_value  
		,	'근속일자' AS a2, 		to_char(datediff(DAY,'20'||RIGHT(b.enter_date,2) || '-'||replace(SUBSTRING(b.enter_date,0, LENGTH (b.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd')))  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		b.work_group AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김병일' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		b.address AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김병일' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		a.ENTER_DATE AS a2_value 
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김병일'
 {executed in 3 msec}
2023-06-11 18:55:48.409 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@91a84b77
2023-06-11 18:55:48.410 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
11. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 18:55:48.413 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT  '5' AS a0 
		,	'' AS a1, 			''	  AS a1_value  
		,	'' AS a2, 			''  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		b.email  AS a4_value 
		,	'성별' AS a5, 		a.sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김재중' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		a.TEAM_NM  AS a1_value  
		,	'노선' AS a2, 		b.route_nm  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		a.PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		b.hobong AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김재중' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		a.JOB_KIND AS a1_value 
		,	'직종' AS a2, 		a.JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'고정/SP구분' AS a4, 		b.sp_gb AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김재중' 
	union 
	SELECT  '2' AS a0 
		,	'생년월일' AS a1, 		b.BIRTH_YMD AS a1_value  
		,	'근속일자' AS a2, 		to_char(datediff(DAY,'20'||RIGHT(b.enter_date,2) || '-'||replace(SUBSTRING(b.enter_date,0, LENGTH (b.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd')))  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		b.work_group AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김재중' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		b.address AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김재중' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		a.ENTER_DATE AS a2_value 
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김재중'
 {executed in 2 msec}
2023-06-11 18:55:52.589 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@a305bf1b
2023-06-11 18:55:52.590 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
11. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-11 18:55:52.592 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT  '5' AS a0 
		,	'' AS a1, 			''	  AS a1_value  
		,	'' AS a2, 			''  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		b.email  AS a4_value 
		,	'성별' AS a5, 		a.sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='손진종' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		a.TEAM_NM  AS a1_value  
		,	'노선' AS a2, 		b.route_nm  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		a.PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		b.hobong AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='손진종' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		a.JOB_KIND AS a1_value 
		,	'직종' AS a2, 		a.JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'고정/SP구분' AS a4, 		b.sp_gb AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='손진종' 
	union 
	SELECT  '2' AS a0 
		,	'생년월일' AS a1, 		b.BIRTH_YMD AS a1_value  
		,	'근속일자' AS a2, 		to_char(datediff(DAY,'20'||RIGHT(b.enter_date,2) || '-'||replace(SUBSTRING(b.enter_date,0, LENGTH (b.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd')))  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		b.work_group AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='손진종' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		b.address AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='손진종' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		a.ENTER_DATE AS a2_value 
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='손진종'
 {executed in 1 msec}
2023-06-11 18:57:44.032 INFO  [RMI TCP Connection(35)-127.0.0.1] [o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin] - Application shutdown requested.
2023-06-11 18:57:44.035 INFO  [RMI TCP Connection(35)-127.0.0.1] [o.s.m.s.b.SimpleBrokerMessageHandler] - Stopping...
2023-06-11 18:57:44.035 INFO  [RMI TCP Connection(35)-127.0.0.1] [o.s.m.s.b.SimpleBrokerMessageHandler] - BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2023-06-11 18:57:44.035 INFO  [RMI TCP Connection(35)-127.0.0.1] [o.s.m.s.b.SimpleBrokerMessageHandler] - Stopped.
2023-06-11 18:57:44.055 INFO  [RMI TCP Connection(35)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Shutting down ExecutorService 'brokerChannelExecutor'
2023-06-11 18:57:44.055 INFO  [RMI TCP Connection(35)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskScheduler] - Shutting down ExecutorService 'messageBrokerTaskScheduler'
2023-06-11 18:57:44.055 INFO  [RMI TCP Connection(35)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Shutting down ExecutorService 'asyncThreadPool'
2023-06-11 18:57:44.056 INFO  [RMI TCP Connection(35)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Shutting down ExecutorService 'clientOutboundChannelExecutor'
2023-06-11 18:57:44.056 INFO  [RMI TCP Connection(35)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Shutting down ExecutorService 'clientInboundChannelExecutor'
2023-06-11 18:57:44.058 INFO  [RMI TCP Connection(35)-127.0.0.1] [com.zaxxer.hikari.HikariDataSource] - H2 - Shutdown initiated...
2023-06-11 18:57:44.061 INFO  [RMI TCP Connection(35)-127.0.0.1] [com.zaxxer.hikari.HikariDataSource] - H2 - Shutdown completed.
2023-06-11 18:57:44.088 INFO  [RMI TCP Connection(35)-127.0.0.1] [com.pjy.dashboard.filter.TestFilter] - destroy Pjy Filter
2023-06-11 18:57:46.289 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Starting PjyApplication on DESKTOP-3O1I9JM with PID 33308 (C:\BUS\multimodule-parent\dashboard\target\classes started by admin in C:\BUS\multimodule-parent\dashboard)
2023-06-11 18:57:46.292 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - The following profiles are active: oauth
2023-06-11 18:57:46.332 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-06-11 18:57:46.333 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-06-11 18:57:47.137 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-11 18:57:47.137 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-06-11 18:57:47.232 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 89ms. Found 2 JPA repository interfaces.
2023-06-11 18:57:47.475 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-11 18:57:47.476 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2023-06-11 18:57:47.510 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.MemberRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-06-11 18:57:47.510 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.RememberMeRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-06-11 18:57:47.511 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 34ms. Found 0 JDBC repository interfaces.
2023-06-11 18:57:47.818 INFO  [restartedMain] [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] - Post-processing PropertySource instances
2023-06-11 18:57:47.868 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2023-06-11 18:57:47.868 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource commandLineArgs [org.springframework.core.env.SimpleCommandLinePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-06-11 18:57:47.868 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-06-11 18:57:47.868 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-06-11 18:57:47.868 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-11 18:57:47.868 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
2023-06-11 18:57:47.868 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2023-06-11 18:57:47.868 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application-oauth.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-11 18:57:47.868 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-11 18:57:47.868 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-11 18:57:47.868 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [pjy.properties] [org.springframework.core.env.CompositePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-06-11 18:57:47.868 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [common.properties] [org.springframework.core.io.support.ResourcePropertySource] to EncryptableMapPropertySourceWrapper
2023-06-11 18:57:47.917 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'asyncConfiguration' of type [com.pjy.dashboard.configuration.AsyncConfiguration$$EnhancerBySpringCGLIB$$90744c50] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 18:57:47.952 INFO  [restartedMain] [c.u.j.filter.DefaultLazyPropertyFilter] - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2023-06-11 18:57:48.014 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$7a6ab07d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 18:57:48.079 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 18:57:48.080 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@4e93bd65' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 18:57:48.084 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$9f3f532f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 18:57:48.091 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration$$EnhancerBySpringCGLIB$$c4946b45] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 18:57:48.094 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 18:57:48.095 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 18:57:48.108 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e1bce843] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 18:57:48.128 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$613d3575] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 18:57:48.211 INFO  [restartedMain] [c.u.j.r.DefaultLazyPropertyResolver] - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2023-06-11 18:57:48.214 INFO  [restartedMain] [c.u.j.d.DefaultLazyPropertyDetector] - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2023-06-11 18:57:48.507 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 10010 (http)
2023-06-11 18:57:48.519 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Initializing ProtocolHandler ["http-nio-10010"]
2023-06-11 18:57:48.525 INFO  [restartedMain] [org.apache.catalina.core.StandardService] - Starting service [Tomcat]
2023-06-11 18:57:48.525 INFO  [restartedMain] [org.apache.catalina.core.StandardEngine] - Starting Servlet engine: [Apache Tomcat/9.0.29]
2023-06-11 18:57:48.730 INFO  [restartedMain] [org.apache.jasper.servlet.TldScanner] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2023-06-11 18:57:48.736 INFO  [restartedMain] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring embedded WebApplicationContext
2023-06-11 18:57:48.736 INFO  [restartedMain] [o.s.web.context.ContextLoader] - Root WebApplicationContext: initialization completed in 2403 ms
2023-06-11 18:57:49.239 INFO  [restartedMain] [c.u.j.encryptor.DefaultLazyEncryptor] - Found Custom Encryptor Bean org.jasypt.encryption.pbe.PooledPBEStringEncryptor@35ac7e73 with name: jasyptStringEncryptor
2023-06-11 18:57:49.277 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Starting...
2023-06-11 18:57:49.339 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.executeSql(PoolBase.java:567)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 4 msec}
2023-06-11 18:57:49.342 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Start completed.
2023-06-11 18:57:49.815 INFO  [restartedMain] [com.pjy.dashboard.filter.TestFilter] - init Pjy Filter
2023-06-11 18:57:50.052 INFO  [restartedMain] [o.hibernate.jpa.internal.util.LogHelper] - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2023-06-11 18:57:50.108 INFO  [restartedMain] [org.hibernate.Version] - HHH000412: Hibernate Core {5.3.14.Final}
2023-06-11 18:57:50.109 INFO  [restartedMain] [org.hibernate.cfg.Environment] - HHH000206: hibernate.properties not found
2023-06-11 18:57:50.222 INFO  [restartedMain] [org.hibernate.annotations.common.Version] - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2023-06-11 18:57:50.382 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-11 18:57:50.394 INFO  [restartedMain] [org.hibernate.dialect.Dialect] - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2023-06-11 18:57:50.880 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select SEQUENCE_CATALOG, SEQUENCE_SCHEMA, SEQUENCE_NAME, INCREMENT from information_schema.sequences
 {executed in 0 msec}
2023-06-11 18:57:50.911 INFO  [restartedMain] [o.s.o.j.LocalContainerEntityManagerFactoryBean] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-06-11 18:57:51.089 INFO  [restartedMain] [o.h.h.i.QueryTranslatorFactoryInitiator] - HHH000397: Using ASTQueryTranslatorFactory
2023-06-11 18:57:51.276 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'clientInboundChannelExecutor'
2023-06-11 18:57:51.285 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'clientOutboundChannelExecutor'
2023-06-11 18:57:51.897 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService
2023-06-11 18:57:51.897 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'asyncThreadPool'
2023-06-11 18:57:52.021 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/h2-console/**'], []
2023-06-11 18:57:52.021 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/css/**'], []
2023-06-11 18:57:52.021 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/js/**'], []
2023-06-11 18:57:52.021 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/monitor/**'], []
2023-06-11 18:57:52.021 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/img/**'], []
2023-06-11 18:57:52.021 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/lib/**'], []
2023-06-11 18:57:52.021 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/main.css'], []
2023-06-11 18:57:52.021 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/common.js'], []
2023-06-11 18:57:52.021 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/resources/**'], []
2023-06-11 18:57:52.124 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@21bb1622, org.springframework.security.web.context.SecurityContextPersistenceFilter@3d4f388b, org.springframework.security.web.header.HeaderWriterFilter@36fedbd4, org.springframework.web.filter.CorsFilter@458ffa3b, org.springframework.security.web.authentication.logout.LogoutFilter@495594eb, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@1c4288c2, org.springframework.security.web.session.ConcurrentSessionFilter@4dbc53e4, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@4f36c21d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@261ede9a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6d3cb5e7, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@48f4dd35, org.springframework.security.web.session.SessionManagementFilter@29bf0c01, org.springframework.security.web.access.ExceptionTranslationFilter@3a50ea2b, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@23495b46]
2023-06-11 18:57:52.140 INFO  [restartedMain] [o.s.aop.framework.CglibAopProxy] - Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(javax.servlet.FilterConfig) throws javax.servlet.ServletException] because it is marked as final: Consider using interface-based JDK proxies instead!
2023-06-11 18:57:52.170 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskScheduler] - Initializing ExecutorService 'messageBrokerTaskScheduler'
2023-06-11 18:57:52.218 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'brokerChannelExecutor'
2023-06-11 18:57:52.494 WARN  [restartedMain] [o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-06-11 18:57:52.542 INFO  [restartedMain] [o.s.b.a.w.s.WelcomePageHandlerMapping] - Adding welcome page: ServletContext resource [/index.html]
2023-06-11 18:57:52.821 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 18:57:53.381 INFO  [restartedMain] [o.s.b.d.a.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2023-06-11 18:57:53.401 INFO  [restartedMain] [o.s.b.a.e.web.EndpointLinksResolver] - Exposing 16 endpoint(s) beneath base path '/actuator'
2023-06-11 18:57:53.491 INFO  [restartedMain] [o.s.m.s.b.SimpleBrokerMessageHandler] - Starting...
2023-06-11 18:57:53.491 INFO  [restartedMain] [o.s.m.s.b.SimpleBrokerMessageHandler] - BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2023-06-11 18:57:53.492 INFO  [restartedMain] [o.s.m.s.b.SimpleBrokerMessageHandler] - Started.
2023-06-11 18:57:53.499 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskScheduler] - Initializing ExecutorService
2023-06-11 18:57:53.501 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Starting ProtocolHandler ["http-nio-10010"]
2023-06-11 18:57:53.545 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 10010 (http) with context path ''
2023-06-11 18:57:53.549 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Started PjyApplication in 7.575 seconds (JVM running for 8.36)
2023-06-11 18:57:53.549 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-06-11 18:57:53.549 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - Application started
2023-06-11 18:57:53.549 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-06-11 18:57:54.641 INFO  [RMI TCP Connection(10)-127.0.0.1] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-11 18:57:54.641 INFO  [RMI TCP Connection(10)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Initializing Servlet 'dispatcherServlet'
2023-06-11 18:57:54.653 INFO  [RMI TCP Connection(10)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Completed initialization in 12 ms
2023-06-11 18:58:52.230 INFO  [MessageBroker-1] [o.s.w.s.c.WebSocketMessageBrokerStats] - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2023-06-11 19:01:01.278 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@a65d47bb
2023-06-11 19:01:01.337 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 19:01:01.343 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  '5' AS a0 
		,	'' AS a1, 			''	  AS a1_value  
		,	'' AS a2, 			''  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		b.email  AS a4_value 
		,	'성별' AS a5, 		a.sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='손신영' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		a.TEAM_NM  AS a1_value  
		,	'노선' AS a2, 		b.route_nm  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		a.PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		b.hobong AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='손신영' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		a.JOB_KIND AS a1_value 
		,	'직종' AS a2, 		a.JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'고정/SP구분' AS a4, 		b.sp_gb AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='손신영' 
	union 
	SELECT  '2' AS a0 
		,	'생년월일' AS a1, 		b.BIRTH_YMD AS a1_value  
		,	'근속일자' AS a2, 		to_char(datediff(DAY,'20'||RIGHT(b.enter_date,2) || '-'||replace(SUBSTRING(b.enter_date,0, LENGTH (b.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd')))  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		b.work_group AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='손신영' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		b.address AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='손신영' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		'20'||RIGHT(b.enter_date,2) || '-'||replace(SUBSTRING(b.enter_date,0, LENGTH (b.ENTER_DATE)-3),'/','-') AS a2_value 
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='손신영'
 {executed in 2 msec}
2023-06-11 19:02:07.302 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@f0d9e7f4
2023-06-11 19:02:07.303 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-11 19:02:07.306 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  '5' AS a0 
		,	'' AS a1, 			''	  AS a1_value  
		,	'' AS a2, 			''  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		b.email  AS a4_value 
		,	'성별' AS a5, 		a.sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		a.TEAM_NM  AS a1_value  
		,	'노선' AS a2, 		b.route_nm  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		a.PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		b.hobong AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		a.JOB_KIND AS a1_value 
		,	'직종' AS a2, 		a.JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'고정/SP구분' AS a4, 		b.sp_gb AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기' 
	union 
	SELECT  '2' AS a0 
		,	'생년월일' AS a1, 		b.BIRTH_YMD AS a1_value  
		,	'근속일자' AS a2, 		to_char(datediff(DAY,'20'||RIGHT(b.enter_date,2) || '-'||replace(SUBSTRING(b.enter_date,0, LENGTH (b.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd')))  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		b.work_group AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		b.address AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		'20'||RIGHT(b.enter_date,2) || '-'||replace(SUBSTRING(b.enter_date,0, LENGTH (b.ENTER_DATE)-3),'/','-') AS a2_value 
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기'
 {executed in 1 msec}
2023-06-11 19:03:59.249 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@d9026782
2023-06-11 19:03:59.277 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
2023-06-11 19:03:59.283 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-11 19:03:59.284 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 1 msec}
2023-06-11 19:03:59.287 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 1 msec}
2023-06-11 19:04:22.749 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@f0d9e7f4
2023-06-11 19:04:22.750 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 19:04:22.753 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  '5' AS a0 
		,	'' AS a1, 			''	  AS a1_value  
		,	'' AS a2, 			''  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		b.email  AS a4_value 
		,	'성별' AS a5, 		a.sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		a.TEAM_NM  AS a1_value  
		,	'노선' AS a2, 		b.route_nm  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		a.PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		b.hobong AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		a.JOB_KIND AS a1_value 
		,	'직종' AS a2, 		a.JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'고정/SP구분' AS a4, 		b.sp_gb AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기' 
	union 
	SELECT  '2' AS a0 
		,	'생년월일' AS a1, 		b.BIRTH_YMD AS a1_value  
		,	'근속일자' AS a2, 		to_char(datediff(DAY,'20'||RIGHT(b.enter_date,2) || '-'||replace(SUBSTRING(b.enter_date,0, LENGTH (b.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd')))  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		b.work_group AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		b.address AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		'20'||RIGHT(b.enter_date,2) || '-'||replace(SUBSTRING(b.enter_date,0, LENGTH (b.ENTER_DATE)-3),'/','-') AS a2_value 
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기'
 {executed in 1 msec}
2023-06-11 19:04:52.860 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@96cd0f0e
2023-06-11 19:04:52.860 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_DRIVERINFO a where   a.company_no = '100' order by a.emp_no
2023-06-11 19:04:52.860 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 19:04:52.862 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBL_DRIVERINFO a where   a.company_no = '100' order by a.emp_no
 {executed in 1 msec}
2023-06-11 19:04:52.865 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBL_DRIVERINFO a where   a.company_no = '100' order by a.emp_no
 {executed in 1 msec}
2023-06-11 19:06:49.188 INFO  [RMI TCP Connection(19)-127.0.0.1] [o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin] - Application shutdown requested.
2023-06-11 19:06:49.190 INFO  [RMI TCP Connection(19)-127.0.0.1] [o.s.m.s.b.SimpleBrokerMessageHandler] - Stopping...
2023-06-11 19:06:49.190 INFO  [RMI TCP Connection(19)-127.0.0.1] [o.s.m.s.b.SimpleBrokerMessageHandler] - BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2023-06-11 19:06:49.190 INFO  [RMI TCP Connection(19)-127.0.0.1] [o.s.m.s.b.SimpleBrokerMessageHandler] - Stopped.
2023-06-11 19:06:49.209 INFO  [RMI TCP Connection(19)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Shutting down ExecutorService 'brokerChannelExecutor'
2023-06-11 19:06:49.211 INFO  [RMI TCP Connection(19)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskScheduler] - Shutting down ExecutorService 'messageBrokerTaskScheduler'
2023-06-11 19:06:49.211 INFO  [RMI TCP Connection(19)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Shutting down ExecutorService 'asyncThreadPool'
2023-06-11 19:06:49.214 INFO  [RMI TCP Connection(19)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Shutting down ExecutorService 'clientOutboundChannelExecutor'
2023-06-11 19:06:49.215 INFO  [RMI TCP Connection(19)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Shutting down ExecutorService 'clientInboundChannelExecutor'
2023-06-11 19:06:49.216 INFO  [RMI TCP Connection(19)-127.0.0.1] [com.zaxxer.hikari.HikariDataSource] - H2 - Shutdown initiated...
2023-06-11 19:06:49.221 INFO  [RMI TCP Connection(19)-127.0.0.1] [com.zaxxer.hikari.HikariDataSource] - H2 - Shutdown completed.
2023-06-11 19:06:49.243 INFO  [RMI TCP Connection(19)-127.0.0.1] [com.pjy.dashboard.filter.TestFilter] - destroy Pjy Filter
2023-06-11 19:06:51.526 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Starting PjyApplication on DESKTOP-3O1I9JM with PID 13856 (C:\BUS\multimodule-parent\dashboard\target\classes started by admin in C:\BUS\multimodule-parent\dashboard)
2023-06-11 19:06:51.529 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - The following profiles are active: oauth
2023-06-11 19:06:51.566 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-06-11 19:06:51.566 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-06-11 19:06:52.351 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-11 19:06:52.352 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-06-11 19:06:52.446 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 90ms. Found 2 JPA repository interfaces.
2023-06-11 19:06:52.687 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-11 19:06:52.687 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2023-06-11 19:06:52.722 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.MemberRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-06-11 19:06:52.722 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.RememberMeRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-06-11 19:06:52.722 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 35ms. Found 0 JDBC repository interfaces.
2023-06-11 19:06:53.028 INFO  [restartedMain] [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] - Post-processing PropertySource instances
2023-06-11 19:06:53.079 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2023-06-11 19:06:53.079 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource commandLineArgs [org.springframework.core.env.SimpleCommandLinePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-06-11 19:06:53.080 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-06-11 19:06:53.080 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-06-11 19:06:53.080 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-11 19:06:53.080 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
2023-06-11 19:06:53.080 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2023-06-11 19:06:53.080 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application-oauth.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-11 19:06:53.080 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-11 19:06:53.080 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-11 19:06:53.080 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [pjy.properties] [org.springframework.core.env.CompositePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-06-11 19:06:53.080 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [common.properties] [org.springframework.core.io.support.ResourcePropertySource] to EncryptableMapPropertySourceWrapper
2023-06-11 19:06:53.128 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'asyncConfiguration' of type [com.pjy.dashboard.configuration.AsyncConfiguration$$EnhancerBySpringCGLIB$$f7a56cab] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 19:06:53.164 INFO  [restartedMain] [c.u.j.filter.DefaultLazyPropertyFilter] - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2023-06-11 19:06:53.232 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$e19bd0d8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 19:06:53.292 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 19:06:53.294 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@5fcb112b' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 19:06:53.297 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$670738a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 19:06:53.304 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration$$EnhancerBySpringCGLIB$$2bc58ba0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 19:06:53.307 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 19:06:53.308 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 19:06:53.321 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$48ee089e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 19:06:53.339 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$c86e55d0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 19:06:53.425 INFO  [restartedMain] [c.u.j.r.DefaultLazyPropertyResolver] - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2023-06-11 19:06:53.428 INFO  [restartedMain] [c.u.j.d.DefaultLazyPropertyDetector] - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2023-06-11 19:06:53.709 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 10010 (http)
2023-06-11 19:06:53.721 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Initializing ProtocolHandler ["http-nio-10010"]
2023-06-11 19:06:53.727 INFO  [restartedMain] [org.apache.catalina.core.StandardService] - Starting service [Tomcat]
2023-06-11 19:06:53.728 INFO  [restartedMain] [org.apache.catalina.core.StandardEngine] - Starting Servlet engine: [Apache Tomcat/9.0.29]
2023-06-11 19:06:53.930 INFO  [restartedMain] [org.apache.jasper.servlet.TldScanner] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2023-06-11 19:06:53.937 INFO  [restartedMain] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring embedded WebApplicationContext
2023-06-11 19:06:53.937 INFO  [restartedMain] [o.s.web.context.ContextLoader] - Root WebApplicationContext: initialization completed in 2371 ms
2023-06-11 19:06:54.436 INFO  [restartedMain] [c.u.j.encryptor.DefaultLazyEncryptor] - Found Custom Encryptor Bean org.jasypt.encryption.pbe.PooledPBEStringEncryptor@773a302d with name: jasyptStringEncryptor
2023-06-11 19:06:54.475 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Starting...
2023-06-11 19:06:54.542 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.executeSql(PoolBase.java:567)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 4 msec}
2023-06-11 19:06:54.546 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Start completed.
2023-06-11 19:06:55.008 INFO  [restartedMain] [com.pjy.dashboard.filter.TestFilter] - init Pjy Filter
2023-06-11 19:06:55.238 INFO  [restartedMain] [o.hibernate.jpa.internal.util.LogHelper] - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2023-06-11 19:06:55.292 INFO  [restartedMain] [org.hibernate.Version] - HHH000412: Hibernate Core {5.3.14.Final}
2023-06-11 19:06:55.294 INFO  [restartedMain] [org.hibernate.cfg.Environment] - HHH000206: hibernate.properties not found
2023-06-11 19:06:55.407 INFO  [restartedMain] [org.hibernate.annotations.common.Version] - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2023-06-11 19:06:55.566 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 19:06:55.579 INFO  [restartedMain] [org.hibernate.dialect.Dialect] - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2023-06-11 19:06:56.068 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select SEQUENCE_CATALOG, SEQUENCE_SCHEMA, SEQUENCE_NAME, INCREMENT from information_schema.sequences
 {executed in 1 msec}
2023-06-11 19:06:56.100 INFO  [restartedMain] [o.s.o.j.LocalContainerEntityManagerFactoryBean] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-06-11 19:06:56.282 INFO  [restartedMain] [o.h.h.i.QueryTranslatorFactoryInitiator] - HHH000397: Using ASTQueryTranslatorFactory
2023-06-11 19:06:56.468 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'clientInboundChannelExecutor'
2023-06-11 19:06:56.477 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'clientOutboundChannelExecutor'
2023-06-11 19:06:57.088 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService
2023-06-11 19:06:57.089 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'asyncThreadPool'
2023-06-11 19:06:57.216 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/h2-console/**'], []
2023-06-11 19:06:57.216 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/css/**'], []
2023-06-11 19:06:57.216 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/js/**'], []
2023-06-11 19:06:57.216 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/monitor/**'], []
2023-06-11 19:06:57.216 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/img/**'], []
2023-06-11 19:06:57.217 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/lib/**'], []
2023-06-11 19:06:57.217 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/main.css'], []
2023-06-11 19:06:57.217 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/common.js'], []
2023-06-11 19:06:57.217 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/resources/**'], []
2023-06-11 19:06:57.325 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3e5c5970, org.springframework.security.web.context.SecurityContextPersistenceFilter@3dc850e5, org.springframework.security.web.header.HeaderWriterFilter@1f2d7ecd, org.springframework.web.filter.CorsFilter@4ee7a451, org.springframework.security.web.authentication.logout.LogoutFilter@3ba07db2, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@583f5694, org.springframework.security.web.session.ConcurrentSessionFilter@77649aa5, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@23be4ae4, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1578d5ce, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@25cbd90, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@273a93b5, org.springframework.security.web.session.SessionManagementFilter@57ae69d5, org.springframework.security.web.access.ExceptionTranslationFilter@67d10b4c, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@85a03f1]
2023-06-11 19:06:57.342 INFO  [restartedMain] [o.s.aop.framework.CglibAopProxy] - Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(javax.servlet.FilterConfig) throws javax.servlet.ServletException] because it is marked as final: Consider using interface-based JDK proxies instead!
2023-06-11 19:06:57.370 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskScheduler] - Initializing ExecutorService 'messageBrokerTaskScheduler'
2023-06-11 19:06:57.411 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'brokerChannelExecutor'
2023-06-11 19:06:57.698 WARN  [restartedMain] [o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-06-11 19:06:57.747 INFO  [restartedMain] [o.s.b.a.w.s.WelcomePageHandlerMapping] - Adding welcome page: ServletContext resource [/index.html]
2023-06-11 19:06:58.023 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 19:06:58.577 INFO  [restartedMain] [o.s.b.d.a.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2023-06-11 19:06:58.595 INFO  [restartedMain] [o.s.b.a.e.web.EndpointLinksResolver] - Exposing 16 endpoint(s) beneath base path '/actuator'
2023-06-11 19:06:58.680 INFO  [restartedMain] [o.s.m.s.b.SimpleBrokerMessageHandler] - Starting...
2023-06-11 19:06:58.680 INFO  [restartedMain] [o.s.m.s.b.SimpleBrokerMessageHandler] - BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2023-06-11 19:06:58.681 INFO  [restartedMain] [o.s.m.s.b.SimpleBrokerMessageHandler] - Started.
2023-06-11 19:06:58.688 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskScheduler] - Initializing ExecutorService
2023-06-11 19:06:58.690 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Starting ProtocolHandler ["http-nio-10010"]
2023-06-11 19:06:58.730 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 10010 (http) with context path ''
2023-06-11 19:06:58.734 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Started PjyApplication in 7.515 seconds (JVM running for 8.312)
2023-06-11 19:06:58.734 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-06-11 19:06:58.734 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - Application started
2023-06-11 19:06:58.734 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-06-11 19:06:59.446 INFO  [RMI TCP Connection(10)-127.0.0.1] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-11 19:06:59.446 INFO  [RMI TCP Connection(10)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Initializing Servlet 'dispatcherServlet'
2023-06-11 19:06:59.458 INFO  [RMI TCP Connection(10)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Completed initialization in 12 ms
2023-06-11 19:07:14.482 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@d9026782
2023-06-11 19:07:14.508 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
2023-06-11 19:07:14.515 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-11 19:07:14.517 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 2 msec}
2023-06-11 19:07:14.520 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 1 msec}
2023-06-11 19:07:16.205 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@9d07303f
2023-06-11 19:07:16.258 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 19:07:16.267 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  '5' AS a0 
		,	'' AS a1, 			''	  AS a1_value  
		,	'' AS a2, 			''  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		b.email  AS a4_value 
		,	'성별' AS a5, 		a.sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='박노철' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		a.TEAM_NM  AS a1_value  
		,	'노선' AS a2, 		b.route_nm  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		a.PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		b.hobong AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='박노철' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		a.JOB_KIND AS a1_value 
		,	'직종' AS a2, 		a.JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'고정/SP구분' AS a4, 		b.sp_gb AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='박노철' 
	union 
	SELECT  '2' AS a0 
		,	'생년월일' AS a1, 		b.BIRTH_YMD AS a1_value  
		,	'근속일자' AS a2, 		to_char(datediff(DAY,'20'||RIGHT(b.enter_date,2) || '-'||replace(SUBSTRING(b.enter_date,0, LENGTH (b.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd')))  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		b.work_group AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='박노철' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		b.address AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='박노철' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		'20'||RIGHT(b.enter_date,2) || '-'||replace(SUBSTRING(b.enter_date,0, LENGTH (b.ENTER_DATE)-3),'/','-') AS a2_value 
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='박노철'
 {executed in 1 msec}
2023-06-11 19:07:28.101 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@f0d9e7f4
2023-06-11 19:07:28.102 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 19:07:28.104 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  '5' AS a0 
		,	'' AS a1, 			''	  AS a1_value  
		,	'' AS a2, 			''  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		b.email  AS a4_value 
		,	'성별' AS a5, 		a.sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		a.TEAM_NM  AS a1_value  
		,	'노선' AS a2, 		b.route_nm  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		a.PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		b.hobong AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		a.JOB_KIND AS a1_value 
		,	'직종' AS a2, 		a.JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'고정/SP구분' AS a4, 		b.sp_gb AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기' 
	union 
	SELECT  '2' AS a0 
		,	'생년월일' AS a1, 		b.BIRTH_YMD AS a1_value  
		,	'근속일자' AS a2, 		to_char(datediff(DAY,'20'||RIGHT(b.enter_date,2) || '-'||replace(SUBSTRING(b.enter_date,0, LENGTH (b.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd')))  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		b.work_group AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		b.address AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		'20'||RIGHT(b.enter_date,2) || '-'||replace(SUBSTRING(b.enter_date,0, LENGTH (b.ENTER_DATE)-3),'/','-') AS a2_value 
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기'
 {executed in 1 msec}
2023-06-11 19:07:57.418 INFO  [MessageBroker-1] [o.s.w.s.c.WebSocketMessageBrokerStats] - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2023-06-11 19:09:13.890 INFO  [RMI TCP Connection(15)-127.0.0.1] [o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin] - Application shutdown requested.
2023-06-11 19:09:13.893 INFO  [RMI TCP Connection(15)-127.0.0.1] [o.s.m.s.b.SimpleBrokerMessageHandler] - Stopping...
2023-06-11 19:09:13.893 INFO  [RMI TCP Connection(15)-127.0.0.1] [o.s.m.s.b.SimpleBrokerMessageHandler] - BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2023-06-11 19:09:13.893 INFO  [RMI TCP Connection(15)-127.0.0.1] [o.s.m.s.b.SimpleBrokerMessageHandler] - Stopped.
2023-06-11 19:09:13.912 INFO  [RMI TCP Connection(15)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Shutting down ExecutorService 'brokerChannelExecutor'
2023-06-11 19:09:13.912 INFO  [RMI TCP Connection(15)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskScheduler] - Shutting down ExecutorService 'messageBrokerTaskScheduler'
2023-06-11 19:09:13.913 INFO  [RMI TCP Connection(15)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Shutting down ExecutorService 'asyncThreadPool'
2023-06-11 19:09:13.913 INFO  [RMI TCP Connection(15)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Shutting down ExecutorService 'clientOutboundChannelExecutor'
2023-06-11 19:09:13.913 INFO  [RMI TCP Connection(15)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Shutting down ExecutorService 'clientInboundChannelExecutor'
2023-06-11 19:09:13.915 INFO  [RMI TCP Connection(15)-127.0.0.1] [com.zaxxer.hikari.HikariDataSource] - H2 - Shutdown initiated...
2023-06-11 19:09:13.918 INFO  [RMI TCP Connection(15)-127.0.0.1] [com.zaxxer.hikari.HikariDataSource] - H2 - Shutdown completed.
2023-06-11 19:09:13.940 INFO  [RMI TCP Connection(15)-127.0.0.1] [com.pjy.dashboard.filter.TestFilter] - destroy Pjy Filter
2023-06-11 19:09:16.126 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Starting PjyApplication on DESKTOP-3O1I9JM with PID 6568 (C:\BUS\multimodule-parent\dashboard\target\classes started by admin in C:\BUS\multimodule-parent\dashboard)
2023-06-11 19:09:16.129 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - The following profiles are active: oauth
2023-06-11 19:09:16.164 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-06-11 19:09:16.164 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-06-11 19:09:16.945 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-11 19:09:16.945 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-06-11 19:09:17.039 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 87ms. Found 2 JPA repository interfaces.
2023-06-11 19:09:17.278 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-11 19:09:17.278 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2023-06-11 19:09:17.313 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.MemberRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-06-11 19:09:17.313 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.RememberMeRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-06-11 19:09:17.314 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 36ms. Found 0 JDBC repository interfaces.
2023-06-11 19:09:17.611 INFO  [restartedMain] [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] - Post-processing PropertySource instances
2023-06-11 19:09:17.660 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2023-06-11 19:09:17.660 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource commandLineArgs [org.springframework.core.env.SimpleCommandLinePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-06-11 19:09:17.660 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-06-11 19:09:17.660 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-06-11 19:09:17.660 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-11 19:09:17.660 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
2023-06-11 19:09:17.661 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2023-06-11 19:09:17.661 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application-oauth.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-11 19:09:17.661 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-11 19:09:17.661 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-11 19:09:17.661 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [pjy.properties] [org.springframework.core.env.CompositePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-06-11 19:09:17.661 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [common.properties] [org.springframework.core.io.support.ResourcePropertySource] to EncryptableMapPropertySourceWrapper
2023-06-11 19:09:17.708 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'asyncConfiguration' of type [com.pjy.dashboard.configuration.AsyncConfiguration$$EnhancerBySpringCGLIB$$fbe9cb79] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 19:09:17.744 INFO  [restartedMain] [c.u.j.filter.DefaultLazyPropertyFilter] - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2023-06-11 19:09:17.805 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$e5e02fa6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 19:09:17.867 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 19:09:17.869 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@5833027a' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 19:09:17.872 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$ab4d258] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 19:09:17.879 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration$$EnhancerBySpringCGLIB$$3009ea6e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 19:09:17.881 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 19:09:17.882 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 19:09:17.895 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$4d32676c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 19:09:17.914 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$ccb2b49e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 19:09:17.998 INFO  [restartedMain] [c.u.j.r.DefaultLazyPropertyResolver] - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2023-06-11 19:09:18.001 INFO  [restartedMain] [c.u.j.d.DefaultLazyPropertyDetector] - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2023-06-11 19:09:18.289 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 10010 (http)
2023-06-11 19:09:18.301 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Initializing ProtocolHandler ["http-nio-10010"]
2023-06-11 19:09:18.308 INFO  [restartedMain] [org.apache.catalina.core.StandardService] - Starting service [Tomcat]
2023-06-11 19:09:18.308 INFO  [restartedMain] [org.apache.catalina.core.StandardEngine] - Starting Servlet engine: [Apache Tomcat/9.0.29]
2023-06-11 19:09:18.514 INFO  [restartedMain] [org.apache.jasper.servlet.TldScanner] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2023-06-11 19:09:18.521 INFO  [restartedMain] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring embedded WebApplicationContext
2023-06-11 19:09:18.521 INFO  [restartedMain] [o.s.web.context.ContextLoader] - Root WebApplicationContext: initialization completed in 2357 ms
2023-06-11 19:09:19.025 INFO  [restartedMain] [c.u.j.encryptor.DefaultLazyEncryptor] - Found Custom Encryptor Bean org.jasypt.encryption.pbe.PooledPBEStringEncryptor@672fe078 with name: jasyptStringEncryptor
2023-06-11 19:09:19.067 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Starting...
2023-06-11 19:09:19.130 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.executeSql(PoolBase.java:567)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 4 msec}
2023-06-11 19:09:19.133 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Start completed.
2023-06-11 19:09:19.599 INFO  [restartedMain] [com.pjy.dashboard.filter.TestFilter] - init Pjy Filter
2023-06-11 19:09:19.824 INFO  [restartedMain] [o.hibernate.jpa.internal.util.LogHelper] - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2023-06-11 19:09:19.877 INFO  [restartedMain] [org.hibernate.Version] - HHH000412: Hibernate Core {5.3.14.Final}
2023-06-11 19:09:19.878 INFO  [restartedMain] [org.hibernate.cfg.Environment] - HHH000206: hibernate.properties not found
2023-06-11 19:09:19.986 INFO  [restartedMain] [org.hibernate.annotations.common.Version] - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2023-06-11 19:09:20.139 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-11 19:09:20.150 INFO  [restartedMain] [org.hibernate.dialect.Dialect] - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2023-06-11 19:09:20.622 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select SEQUENCE_CATALOG, SEQUENCE_SCHEMA, SEQUENCE_NAME, INCREMENT from information_schema.sequences
 {executed in 0 msec}
2023-06-11 19:09:20.658 INFO  [restartedMain] [o.s.o.j.LocalContainerEntityManagerFactoryBean] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-06-11 19:09:20.833 INFO  [restartedMain] [o.h.h.i.QueryTranslatorFactoryInitiator] - HHH000397: Using ASTQueryTranslatorFactory
2023-06-11 19:09:21.017 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'clientInboundChannelExecutor'
2023-06-11 19:09:21.027 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'clientOutboundChannelExecutor'
2023-06-11 19:09:21.653 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService
2023-06-11 19:09:21.653 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'asyncThreadPool'
2023-06-11 19:09:21.778 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/h2-console/**'], []
2023-06-11 19:09:21.778 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/css/**'], []
2023-06-11 19:09:21.779 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/js/**'], []
2023-06-11 19:09:21.779 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/monitor/**'], []
2023-06-11 19:09:21.779 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/img/**'], []
2023-06-11 19:09:21.779 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/lib/**'], []
2023-06-11 19:09:21.779 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/main.css'], []
2023-06-11 19:09:21.779 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/common.js'], []
2023-06-11 19:09:21.779 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/resources/**'], []
2023-06-11 19:09:21.890 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@74738948, org.springframework.security.web.context.SecurityContextPersistenceFilter@7d4e8efd, org.springframework.security.web.header.HeaderWriterFilter@3491da10, org.springframework.web.filter.CorsFilter@1ec3373, org.springframework.security.web.authentication.logout.LogoutFilter@6dfeb286, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@c90e787, org.springframework.security.web.session.ConcurrentSessionFilter@7f5639a3, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@398f3be2, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2a4454ce, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7914026f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5e5c06ce, org.springframework.security.web.session.SessionManagementFilter@4ad864fa, org.springframework.security.web.access.ExceptionTranslationFilter@7430d874, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@74d9c2e6]
2023-06-11 19:09:21.906 INFO  [restartedMain] [o.s.aop.framework.CglibAopProxy] - Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(javax.servlet.FilterConfig) throws javax.servlet.ServletException] because it is marked as final: Consider using interface-based JDK proxies instead!
2023-06-11 19:09:21.934 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskScheduler] - Initializing ExecutorService 'messageBrokerTaskScheduler'
2023-06-11 19:09:21.976 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'brokerChannelExecutor'
2023-06-11 19:09:22.255 WARN  [restartedMain] [o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-06-11 19:09:22.310 INFO  [restartedMain] [o.s.b.a.w.s.WelcomePageHandlerMapping] - Adding welcome page: ServletContext resource [/index.html]
2023-06-11 19:09:22.589 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 19:09:23.153 INFO  [restartedMain] [o.s.b.d.a.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2023-06-11 19:09:23.171 INFO  [restartedMain] [o.s.b.a.e.web.EndpointLinksResolver] - Exposing 16 endpoint(s) beneath base path '/actuator'
2023-06-11 19:09:23.266 INFO  [restartedMain] [o.s.m.s.b.SimpleBrokerMessageHandler] - Starting...
2023-06-11 19:09:23.267 INFO  [restartedMain] [o.s.m.s.b.SimpleBrokerMessageHandler] - BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2023-06-11 19:09:23.268 INFO  [restartedMain] [o.s.m.s.b.SimpleBrokerMessageHandler] - Started.
2023-06-11 19:09:23.279 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskScheduler] - Initializing ExecutorService
2023-06-11 19:09:23.281 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Starting ProtocolHandler ["http-nio-10010"]
2023-06-11 19:09:23.315 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 10010 (http) with context path ''
2023-06-11 19:09:23.319 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Started PjyApplication in 7.506 seconds (JVM running for 8.298)
2023-06-11 19:09:23.320 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-06-11 19:09:23.320 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - Application started
2023-06-11 19:09:23.320 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-06-11 19:09:24.454 INFO  [RMI TCP Connection(9)-127.0.0.1] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-11 19:09:24.455 INFO  [RMI TCP Connection(9)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Initializing Servlet 'dispatcherServlet'
2023-06-11 19:09:24.468 INFO  [RMI TCP Connection(9)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Completed initialization in 13 ms
2023-06-11 19:09:27.307 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@d9026782
2023-06-11 19:09:27.332 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
2023-06-11 19:09:27.337 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 19:09:27.339 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 1 msec}
2023-06-11 19:09:27.342 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 1 msec}
2023-06-11 19:09:32.513 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@f0d9e7f4
2023-06-11 19:09:32.571 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 19:09:32.583 ERROR [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  '5' AS a0 
		,	'' AS a1, 			''	  AS a1_value  
		,	'' AS a2, 			''  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		b.email  AS a4_value 
		,	'성별' AS a5, 		a.sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		a.TEAM_NM  AS a1_value  
		,	'노선' AS a2, 		nvl(b.route_nm,0)  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		a.PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		nvl(b.hobong,0) AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		a.JOB_KIND AS a1_value 
		,	'직종' AS a2, 		a.JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'고정/SP구분' AS a4, 	nvl(b.sp_gb,'') AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기' 
	union 
	SELECT  '2' AS a0 
		,	'생년월일' AS a1, 		nvl(b.BIRTH_YMD,'') AS a1_value  
		,	'근속일자' AS a2, 		nvl(to_char(datediff(DAY,'20'||RIGHT(b.enter_date,2) || '-'||replace(SUBSTRING(b.enter_date,0, LENGTH (b.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		b.work_group AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		nvl(b.address,'') AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-') AS a2_value 
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기'
 {FAILED after 5 msec}
org.h2.jdbc.JdbcSQLDataException: Data conversion error converting ; SQL statement:
SELECT  '5' AS a0 
		,	'' AS a1, 			''	  AS a1_value  
		,	'' AS a2, 			''  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		b.email  AS a4_value 
		,	'성별' AS a5, 		a.sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		a.TEAM_NM  AS a1_value  
		,	'노선' AS a2, 		nvl(b.route_nm,0)  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		a.PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		nvl(b.hobong,0) AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		a.JOB_KIND AS a1_value 
		,	'직종' AS a2, 		a.JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'고정/SP구분' AS a4, 	nvl(b.sp_gb,'') AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기' 
	union 
	SELECT  '2' AS a0 
		,	'생년월일' AS a1, 		nvl(b.BIRTH_YMD,'') AS a1_value  
		,	'근속일자' AS a2, 		nvl(to_char(datediff(DAY,'20'||RIGHT(b.enter_date,2) || '-'||replace(SUBSTRING(b.enter_date,0, LENGTH (b.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		b.work_group AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		nvl(b.address,'') AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-') AS a2_value 
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기' [22018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:457)
	at org.h2.engine.SessionRemote.done(SessionRemote.java:611)
	at org.h2.command.CommandRemote.executeQuery(CommandRemote.java:178)
	at org.h2.jdbc.JdbcPreparedStatement.execute(JdbcPreparedStatement.java:233)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at jdk.proxy2/jdk.proxy2.$Proxy118.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:53)
	at jdk.proxy3/jdk.proxy3.$Proxy119.select_getEmployeeCard(Unknown Source)
	at com.pjy.dashboard.service.DynamicSqlService.getSqlFilterMybatis(DynamicSqlService.java:130)
	at com.pjy.dashboard.controller.TestController.DynamicSqlFilterMybatis(TestController.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:893)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:798)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:97)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$866c977f.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:114)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:104)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-06-11 19:09:32.614 ERROR [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - jdbcTemplate error: 
### Error querying database.  Cause: org.h2.jdbc.JdbcSQLDataException: Data conversion error converting ; SQL statement:
SELECT  '5' AS a0 
		,	'' AS a1, 			''	  AS a1_value  
		,	'' AS a2, 			''  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		b.email  AS a4_value 
		,	'성별' AS a5, 		a.sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		a.TEAM_NM  AS a1_value  
		,	'노선' AS a2, 		nvl(b.route_nm,0)  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		a.PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		nvl(b.hobong,0) AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		a.JOB_KIND AS a1_value 
		,	'직종' AS a2, 		a.JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'고정/SP구분' AS a4, 	nvl(b.sp_gb,'') AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기' 
	union 
	SELECT  '2' AS a0 
		,	'생년월일' AS a1, 		nvl(b.BIRTH_YMD,'') AS a1_value  
		,	'근속일자' AS a2, 		nvl(to_char(datediff(DAY,'20'||RIGHT(b.enter_date,2) || '-'||replace(SUBSTRING(b.enter_date,0, LENGTH (b.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		b.work_group AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		nvl(b.address,'') AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-') AS a2_value 
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기' [22018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:457)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.value.Value.convertTo(Value.java:875)
	at org.h2.value.Value.convertTo(Value.java:772)
	at org.h2.command.dml.SelectUnion.convert(SelectUnion.java:114)
	at org.h2.command.dml.SelectUnion.queryWithoutCache(SelectUnion.java:186)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:465)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.dml.SelectUnion.queryWithoutCache(SelectUnion.java:178)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:465)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.dml.SelectUnion.queryWithoutCache(SelectUnion.java:178)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:465)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.dml.SelectUnion.queryWithoutCache(SelectUnion.java:178)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:465)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.dml.SelectUnion.queryWithoutCache(SelectUnion.java:178)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:465)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.server.TcpServerThread.process(TcpServerThread.java:343)
	at org.h2.server.TcpServerThread.run(TcpServerThread.java:183)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.NumberFormatException: For input string: ""
	at java.lang.NumberFormatException.forInputString(Unknown Source)
	at java.lang.Integer.parseInt(Unknown Source)
	at java.lang.Integer.parseInt(Unknown Source)
	at org.h2.value.Value.convertToInt(Value.java:982)
	at org.h2.value.Value.convertTo(Value.java:806)
	... 27 more

### The error may exist in file [C:\BUS\multimodule-parent\dashboard\target\classes\mapper\h2.xml]
### The error may involve com.pjy.dashboard.mapper.h2.h2Mapper.select_getEmployeeCard-Inline
### The error occurred while setting parameters
### SQL: SELECT  '5' AS a0    , '' AS a1,    ''   AS a1_value     , '' AS a2,    ''  AS a2_value    , '       상실' AS a3, '' AS a3_value    , '이메일' AS a4,   b.email  AS a4_value    , '성별' AS a5,   a.sex AS a5_value   FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM   WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기'   union   SELECT  '4' AS a0    , '부서' AS a1,   a.TEAM_NM  AS a1_value     , '노선' AS a2,   nvl(b.route_nm,0)  AS a2_value    , '국민연금취득' AS a3, '' AS a3_value    , '휴대폰' AS a4,   a.PHONE_NO  AS a4_value    , '호봉' AS a5,   nvl(b.hobong,0) AS a5_value   FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM   WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기'   union   SELECT  '3' AS a0    , '구분' AS a1,   a.JOB_KIND AS a1_value    , '직종' AS a2,   a.JOB_TYPE AS a2_value     , '      상실' AS a3, '' AS a3_value    , '고정/SP구분' AS a4,  nvl(b.sp_gb,'') AS a4_value    , '급여계산' AS a5,   '' AS a5_value   FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM   WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기'   union   SELECT  '2' AS a0    , '생년월일' AS a1,   nvl(b.BIRTH_YMD,'') AS a1_value     , '근속일자' AS a2,   nvl(to_char(datediff(DAY,'20'||RIGHT(b.enter_date,2) || '-'||replace(SUBSTRING(b.enter_date,0, LENGTH (b.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value     , '건강보험취득' AS a3, '' AS a3_value    , '건강보험번호' AS a4,  '' AS a4_value    , '가입조합' AS a5,   b.work_group AS a5_value   FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM   WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기'   union   SELECT  '1' AS a0    , '성명' AS a1,   a.EMP_NM AS a1_value     , '퇴사일자' AS a2,   '' AS a2_value     , '      상실' AS a3, '' AS a3_value    , '현주소' AS a4,   nvl(b.address,'') AS a4_value    , '' AS a5, '' AS a5_value   FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM   WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기'   union   SELECT  '0' AS a0    , '사원번호' AS a1,   TO_CHAR( a.EMP_NO) AS a1_value     , '입사일자' AS a2,   '20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-') AS a2_value    , '고용보험취득' AS a3, '' AS a3_value    , '본적' AS a4,   '' AS a4_value    , '' AS a5,    '' AS a5_value   FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM   WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기'
### Cause: org.h2.jdbc.JdbcSQLDataException: Data conversion error converting ; SQL statement:
SELECT  '5' AS a0 
		,	'' AS a1, 			''	  AS a1_value  
		,	'' AS a2, 			''  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		b.email  AS a4_value 
		,	'성별' AS a5, 		a.sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		a.TEAM_NM  AS a1_value  
		,	'노선' AS a2, 		nvl(b.route_nm,0)  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		a.PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		nvl(b.hobong,0) AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		a.JOB_KIND AS a1_value 
		,	'직종' AS a2, 		a.JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'고정/SP구분' AS a4, 	nvl(b.sp_gb,'') AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기' 
	union 
	SELECT  '2' AS a0 
		,	'생년월일' AS a1, 		nvl(b.BIRTH_YMD,'') AS a1_value  
		,	'근속일자' AS a2, 		nvl(to_char(datediff(DAY,'20'||RIGHT(b.enter_date,2) || '-'||replace(SUBSTRING(b.enter_date,0, LENGTH (b.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		b.work_group AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		nvl(b.address,'') AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-') AS a2_value 
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기' [22018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:457)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.value.Value.convertTo(Value.java:875)
	at org.h2.value.Value.convertTo(Value.java:772)
	at org.h2.command.dml.SelectUnion.convert(SelectUnion.java:114)
	at org.h2.command.dml.SelectUnion.queryWithoutCache(SelectUnion.java:186)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:465)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.dml.SelectUnion.queryWithoutCache(SelectUnion.java:178)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:465)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.dml.SelectUnion.queryWithoutCache(SelectUnion.java:178)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:465)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.dml.SelectUnion.queryWithoutCache(SelectUnion.java:178)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:465)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.dml.SelectUnion.queryWithoutCache(SelectUnion.java:178)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:465)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.server.TcpServerThread.process(TcpServerThread.java:343)
	at org.h2.server.TcpServerThread.run(TcpServerThread.java:183)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.NumberFormatException: For input string: ""
	at java.lang.NumberFormatException.forInputString(Unknown Source)
	at java.lang.Integer.parseInt(Unknown Source)
	at java.lang.Integer.parseInt(Unknown Source)
	at org.h2.value.Value.convertToInt(Value.java:982)
	at org.h2.value.Value.convertTo(Value.java:806)
	... 27 more

; Data conversion error converting ; SQL statement:
SELECT  '5' AS a0 
		,	'' AS a1, 			''	  AS a1_value  
		,	'' AS a2, 			''  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		b.email  AS a4_value 
		,	'성별' AS a5, 		a.sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		a.TEAM_NM  AS a1_value  
		,	'노선' AS a2, 		nvl(b.route_nm,0)  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		a.PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		nvl(b.hobong,0) AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		a.JOB_KIND AS a1_value 
		,	'직종' AS a2, 		a.JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'고정/SP구분' AS a4, 	nvl(b.sp_gb,'') AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기' 
	union 
	SELECT  '2' AS a0 
		,	'생년월일' AS a1, 		nvl(b.BIRTH_YMD,'') AS a1_value  
		,	'근속일자' AS a2, 		nvl(to_char(datediff(DAY,'20'||RIGHT(b.enter_date,2) || '-'||replace(SUBSTRING(b.enter_date,0, LENGTH (b.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		b.work_group AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		nvl(b.address,'') AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-') AS a2_value 
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기' [22018-200]; nested exception is org.h2.jdbc.JdbcSQLDataException: Data conversion error converting ; SQL statement:
SELECT  '5' AS a0 
		,	'' AS a1, 			''	  AS a1_value  
		,	'' AS a2, 			''  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		b.email  AS a4_value 
		,	'성별' AS a5, 		a.sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		a.TEAM_NM  AS a1_value  
		,	'노선' AS a2, 		nvl(b.route_nm,0)  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		a.PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		nvl(b.hobong,0) AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		a.JOB_KIND AS a1_value 
		,	'직종' AS a2, 		a.JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'고정/SP구분' AS a4, 	nvl(b.sp_gb,'') AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기' 
	union 
	SELECT  '2' AS a0 
		,	'생년월일' AS a1, 		nvl(b.BIRTH_YMD,'') AS a1_value  
		,	'근속일자' AS a2, 		nvl(to_char(datediff(DAY,'20'||RIGHT(b.enter_date,2) || '-'||replace(SUBSTRING(b.enter_date,0, LENGTH (b.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		b.work_group AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		nvl(b.address,'') AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-') AS a2_value 
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기' [22018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:457)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.value.Value.convertTo(Value.java:875)
	at org.h2.value.Value.convertTo(Value.java:772)
	at org.h2.command.dml.SelectUnion.convert(SelectUnion.java:114)
	at org.h2.command.dml.SelectUnion.queryWithoutCache(SelectUnion.java:186)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:465)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.dml.SelectUnion.queryWithoutCache(SelectUnion.java:178)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:465)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.dml.SelectUnion.queryWithoutCache(SelectUnion.java:178)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:465)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.dml.SelectUnion.queryWithoutCache(SelectUnion.java:178)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:465)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.dml.SelectUnion.queryWithoutCache(SelectUnion.java:178)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:465)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.server.TcpServerThread.process(TcpServerThread.java:343)
	at org.h2.server.TcpServerThread.run(TcpServerThread.java:183)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.NumberFormatException: For input string: ""
	at java.lang.NumberFormatException.forInputString(Unknown Source)
	at java.lang.Integer.parseInt(Unknown Source)
	at java.lang.Integer.parseInt(Unknown Source)
	at org.h2.value.Value.convertToInt(Value.java:982)
	at org.h2.value.Value.convertTo(Value.java:806)
	... 27 more

2023-06-11 19:09:32.627 WARN  [http-nio-10010-exec-6] [o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver] - Resolved [com.pjy.dashboard.core.error.exception.BusinessException: jdbcTemplate query error]
2023-06-11 19:10:21.985 INFO  [MessageBroker-1] [o.s.w.s.c.WebSocketMessageBrokerStats] - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2023-06-11 19:13:00.919 INFO  [RMI TCP Connection(16)-127.0.0.1] [o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin] - Application shutdown requested.
2023-06-11 19:13:00.922 INFO  [RMI TCP Connection(16)-127.0.0.1] [o.s.m.s.b.SimpleBrokerMessageHandler] - Stopping...
2023-06-11 19:13:00.922 INFO  [RMI TCP Connection(16)-127.0.0.1] [o.s.m.s.b.SimpleBrokerMessageHandler] - BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2023-06-11 19:13:00.922 INFO  [RMI TCP Connection(16)-127.0.0.1] [o.s.m.s.b.SimpleBrokerMessageHandler] - Stopped.
2023-06-11 19:13:00.946 INFO  [RMI TCP Connection(16)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Shutting down ExecutorService 'brokerChannelExecutor'
2023-06-11 19:13:00.946 INFO  [RMI TCP Connection(16)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskScheduler] - Shutting down ExecutorService 'messageBrokerTaskScheduler'
2023-06-11 19:13:00.947 INFO  [RMI TCP Connection(16)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Shutting down ExecutorService 'asyncThreadPool'
2023-06-11 19:13:00.947 INFO  [RMI TCP Connection(16)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Shutting down ExecutorService 'clientOutboundChannelExecutor'
2023-06-11 19:13:00.947 INFO  [RMI TCP Connection(16)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Shutting down ExecutorService 'clientInboundChannelExecutor'
2023-06-11 19:13:00.949 INFO  [RMI TCP Connection(16)-127.0.0.1] [com.zaxxer.hikari.HikariDataSource] - H2 - Shutdown initiated...
2023-06-11 19:13:00.952 INFO  [RMI TCP Connection(16)-127.0.0.1] [com.zaxxer.hikari.HikariDataSource] - H2 - Shutdown completed.
2023-06-11 19:13:00.976 INFO  [RMI TCP Connection(16)-127.0.0.1] [com.pjy.dashboard.filter.TestFilter] - destroy Pjy Filter
2023-06-11 19:13:03.445 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Starting PjyApplication on DESKTOP-3O1I9JM with PID 36156 (C:\BUS\multimodule-parent\dashboard\target\classes started by admin in C:\BUS\multimodule-parent\dashboard)
2023-06-11 19:13:03.449 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - The following profiles are active: oauth
2023-06-11 19:13:03.494 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-06-11 19:13:03.494 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-06-11 19:13:04.278 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-11 19:13:04.278 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-06-11 19:13:04.374 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 91ms. Found 2 JPA repository interfaces.
2023-06-11 19:13:04.614 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-11 19:13:04.614 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2023-06-11 19:13:04.649 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.MemberRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-06-11 19:13:04.650 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.RememberMeRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-06-11 19:13:04.650 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 36ms. Found 0 JDBC repository interfaces.
2023-06-11 19:13:04.953 INFO  [restartedMain] [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] - Post-processing PropertySource instances
2023-06-11 19:13:04.999 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2023-06-11 19:13:05.000 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource commandLineArgs [org.springframework.core.env.SimpleCommandLinePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-06-11 19:13:05.000 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-06-11 19:13:05.000 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-06-11 19:13:05.000 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-11 19:13:05.000 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
2023-06-11 19:13:05.000 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2023-06-11 19:13:05.000 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application-oauth.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-11 19:13:05.000 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-11 19:13:05.000 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-11 19:13:05.000 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [pjy.properties] [org.springframework.core.env.CompositePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-06-11 19:13:05.000 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [common.properties] [org.springframework.core.io.support.ResourcePropertySource] to EncryptableMapPropertySourceWrapper
2023-06-11 19:13:05.047 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'asyncConfiguration' of type [com.pjy.dashboard.configuration.AsyncConfiguration$$EnhancerBySpringCGLIB$$5052c04a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 19:13:05.083 INFO  [restartedMain] [c.u.j.filter.DefaultLazyPropertyFilter] - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2023-06-11 19:13:05.146 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$3a492477] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 19:13:05.207 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 19:13:05.209 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@67622d83' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 19:13:05.211 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$5f1dc729] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 19:13:05.218 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration$$EnhancerBySpringCGLIB$$8472df3f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 19:13:05.221 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 19:13:05.221 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 19:13:05.235 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a19b5c3d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 19:13:05.254 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$211ba96f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 19:13:05.339 INFO  [restartedMain] [c.u.j.r.DefaultLazyPropertyResolver] - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2023-06-11 19:13:05.342 INFO  [restartedMain] [c.u.j.d.DefaultLazyPropertyDetector] - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2023-06-11 19:13:05.623 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 10010 (http)
2023-06-11 19:13:05.636 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Initializing ProtocolHandler ["http-nio-10010"]
2023-06-11 19:13:05.642 INFO  [restartedMain] [org.apache.catalina.core.StandardService] - Starting service [Tomcat]
2023-06-11 19:13:05.643 INFO  [restartedMain] [org.apache.catalina.core.StandardEngine] - Starting Servlet engine: [Apache Tomcat/9.0.29]
2023-06-11 19:13:05.844 INFO  [restartedMain] [org.apache.jasper.servlet.TldScanner] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2023-06-11 19:13:05.850 INFO  [restartedMain] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring embedded WebApplicationContext
2023-06-11 19:13:05.851 INFO  [restartedMain] [o.s.web.context.ContextLoader] - Root WebApplicationContext: initialization completed in 2357 ms
2023-06-11 19:13:06.361 INFO  [restartedMain] [c.u.j.encryptor.DefaultLazyEncryptor] - Found Custom Encryptor Bean org.jasypt.encryption.pbe.PooledPBEStringEncryptor@1ed7652f with name: jasyptStringEncryptor
2023-06-11 19:13:06.402 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Starting...
2023-06-11 19:13:06.461 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.executeSql(PoolBase.java:567)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 5 msec}
2023-06-11 19:13:06.464 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Start completed.
2023-06-11 19:13:06.949 INFO  [restartedMain] [com.pjy.dashboard.filter.TestFilter] - init Pjy Filter
2023-06-11 19:13:07.175 INFO  [restartedMain] [o.hibernate.jpa.internal.util.LogHelper] - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2023-06-11 19:13:07.236 INFO  [restartedMain] [org.hibernate.Version] - HHH000412: Hibernate Core {5.3.14.Final}
2023-06-11 19:13:07.237 INFO  [restartedMain] [org.hibernate.cfg.Environment] - HHH000206: hibernate.properties not found
2023-06-11 19:13:07.348 INFO  [restartedMain] [org.hibernate.annotations.common.Version] - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2023-06-11 19:13:07.503 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 19:13:07.515 INFO  [restartedMain] [org.hibernate.dialect.Dialect] - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2023-06-11 19:13:08.002 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select SEQUENCE_CATALOG, SEQUENCE_SCHEMA, SEQUENCE_NAME, INCREMENT from information_schema.sequences
 {executed in 1 msec}
2023-06-11 19:13:08.032 INFO  [restartedMain] [o.s.o.j.LocalContainerEntityManagerFactoryBean] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-06-11 19:13:08.209 INFO  [restartedMain] [o.h.h.i.QueryTranslatorFactoryInitiator] - HHH000397: Using ASTQueryTranslatorFactory
2023-06-11 19:13:08.394 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'clientInboundChannelExecutor'
2023-06-11 19:13:08.404 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'clientOutboundChannelExecutor'
2023-06-11 19:13:09.018 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService
2023-06-11 19:13:09.018 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'asyncThreadPool'
2023-06-11 19:13:09.144 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/h2-console/**'], []
2023-06-11 19:13:09.145 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/css/**'], []
2023-06-11 19:13:09.145 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/js/**'], []
2023-06-11 19:13:09.145 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/monitor/**'], []
2023-06-11 19:13:09.145 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/img/**'], []
2023-06-11 19:13:09.145 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/lib/**'], []
2023-06-11 19:13:09.145 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/main.css'], []
2023-06-11 19:13:09.145 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/common.js'], []
2023-06-11 19:13:09.145 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/resources/**'], []
2023-06-11 19:13:09.249 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5ed51fae, org.springframework.security.web.context.SecurityContextPersistenceFilter@579a88ec, org.springframework.security.web.header.HeaderWriterFilter@4718d1ed, org.springframework.web.filter.CorsFilter@1f1d1e61, org.springframework.security.web.authentication.logout.LogoutFilter@683b4f1e, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@74e03cd5, org.springframework.security.web.session.ConcurrentSessionFilter@4b8e5de9, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@7b01695b, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5fc7633f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@50ef58fa, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1f98458, org.springframework.security.web.session.SessionManagementFilter@625492b7, org.springframework.security.web.access.ExceptionTranslationFilter@5c77fb91, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@21bb1622]
2023-06-11 19:13:09.265 INFO  [restartedMain] [o.s.aop.framework.CglibAopProxy] - Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(javax.servlet.FilterConfig) throws javax.servlet.ServletException] because it is marked as final: Consider using interface-based JDK proxies instead!
2023-06-11 19:13:09.295 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskScheduler] - Initializing ExecutorService 'messageBrokerTaskScheduler'
2023-06-11 19:13:09.335 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'brokerChannelExecutor'
2023-06-11 19:13:09.619 WARN  [restartedMain] [o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-06-11 19:13:09.670 INFO  [restartedMain] [o.s.b.a.w.s.WelcomePageHandlerMapping] - Adding welcome page: ServletContext resource [/index.html]
2023-06-11 19:13:09.948 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 19:13:10.500 INFO  [restartedMain] [o.s.b.d.a.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2023-06-11 19:13:10.517 INFO  [restartedMain] [o.s.b.a.e.web.EndpointLinksResolver] - Exposing 16 endpoint(s) beneath base path '/actuator'
2023-06-11 19:13:10.605 INFO  [restartedMain] [o.s.m.s.b.SimpleBrokerMessageHandler] - Starting...
2023-06-11 19:13:10.605 INFO  [restartedMain] [o.s.m.s.b.SimpleBrokerMessageHandler] - BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2023-06-11 19:13:10.606 INFO  [restartedMain] [o.s.m.s.b.SimpleBrokerMessageHandler] - Started.
2023-06-11 19:13:10.612 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskScheduler] - Initializing ExecutorService
2023-06-11 19:13:10.614 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Starting ProtocolHandler ["http-nio-10010"]
2023-06-11 19:13:10.647 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 10010 (http) with context path ''
2023-06-11 19:13:10.650 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Started PjyApplication in 7.509 seconds (JVM running for 8.305)
2023-06-11 19:13:10.651 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-06-11 19:13:10.651 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - Application started
2023-06-11 19:13:10.651 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-06-11 19:13:11.767 INFO  [RMI TCP Connection(8)-127.0.0.1] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-11 19:13:11.767 INFO  [RMI TCP Connection(8)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Initializing Servlet 'dispatcherServlet'
2023-06-11 19:13:11.781 INFO  [RMI TCP Connection(8)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Completed initialization in 14 ms
2023-06-11 19:13:19.130 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@f0d9e7f4
2023-06-11 19:13:19.180 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 19:13:19.190 ERROR [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  '5' AS a0 
		,	'' AS a1, 			''	  AS a1_value  
		,	'' AS a2, 			''  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		nvl(b.email,'')  AS a4_value 
		,	'성별' AS a5, 		a.sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		a.TEAM_NM  AS a1_value  
		,	'노선' AS a2, 		nvl(b.route_nm,0)  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		a.PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		nvl(b.hobong,0) AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		a.JOB_KIND AS a1_value 
		,	'직종' AS a2, 		a.JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'고정/SP구분' AS a4, 	nvl(b.sp_gb,'') AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기' 
	union 
	SELECT  '2' AS a0 
		,	'생년월일' AS a1, 		nvl(b.BIRTH_YMD,'') AS a1_value  
		,	'근속일자' AS a2, 		nvl(to_char(datediff(DAY,'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		b.work_group AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		nvl(b.address,'') AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-') AS a2_value 
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기'
 {FAILED after 2 msec}
org.h2.jdbc.JdbcSQLDataException: Data conversion error converting ; SQL statement:
SELECT  '5' AS a0 
		,	'' AS a1, 			''	  AS a1_value  
		,	'' AS a2, 			''  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		nvl(b.email,'')  AS a4_value 
		,	'성별' AS a5, 		a.sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		a.TEAM_NM  AS a1_value  
		,	'노선' AS a2, 		nvl(b.route_nm,0)  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		a.PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		nvl(b.hobong,0) AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		a.JOB_KIND AS a1_value 
		,	'직종' AS a2, 		a.JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'고정/SP구분' AS a4, 	nvl(b.sp_gb,'') AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기' 
	union 
	SELECT  '2' AS a0 
		,	'생년월일' AS a1, 		nvl(b.BIRTH_YMD,'') AS a1_value  
		,	'근속일자' AS a2, 		nvl(to_char(datediff(DAY,'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		b.work_group AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		nvl(b.address,'') AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-') AS a2_value 
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기' [22018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:457)
	at org.h2.engine.SessionRemote.done(SessionRemote.java:611)
	at org.h2.command.CommandRemote.executeQuery(CommandRemote.java:178)
	at org.h2.jdbc.JdbcPreparedStatement.execute(JdbcPreparedStatement.java:233)
	at net.sf.log4jdbc.sql.jdbcapi.PreparedStatementSpy.execute(PreparedStatementSpy.java:443)
	at com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
	at com.zaxxer.hikari.pool.HikariProxyPreparedStatement.execute(HikariProxyPreparedStatement.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.query(PreparedStatementHandler.java:63)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.query(RoutingStatementHandler.java:79)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:63)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at jdk.proxy2/jdk.proxy2.$Proxy118.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:53)
	at jdk.proxy3/jdk.proxy3.$Proxy119.select_getEmployeeCard(Unknown Source)
	at com.pjy.dashboard.service.DynamicSqlService.getSqlFilterMybatis(DynamicSqlService.java:130)
	at com.pjy.dashboard.controller.TestController.DynamicSqlFilterMybatis(TestController.java:168)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:893)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:798)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:97)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$814862fa.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:114)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:104)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-06-11 19:13:19.230 ERROR [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - jdbcTemplate error: 
### Error querying database.  Cause: org.h2.jdbc.JdbcSQLDataException: Data conversion error converting ; SQL statement:
SELECT  '5' AS a0 
		,	'' AS a1, 			''	  AS a1_value  
		,	'' AS a2, 			''  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		nvl(b.email,'')  AS a4_value 
		,	'성별' AS a5, 		a.sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		a.TEAM_NM  AS a1_value  
		,	'노선' AS a2, 		nvl(b.route_nm,0)  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		a.PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		nvl(b.hobong,0) AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		a.JOB_KIND AS a1_value 
		,	'직종' AS a2, 		a.JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'고정/SP구분' AS a4, 	nvl(b.sp_gb,'') AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기' 
	union 
	SELECT  '2' AS a0 
		,	'생년월일' AS a1, 		nvl(b.BIRTH_YMD,'') AS a1_value  
		,	'근속일자' AS a2, 		nvl(to_char(datediff(DAY,'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		b.work_group AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		nvl(b.address,'') AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-') AS a2_value 
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기' [22018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:457)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.value.Value.convertTo(Value.java:875)
	at org.h2.value.Value.convertTo(Value.java:772)
	at org.h2.command.dml.SelectUnion.convert(SelectUnion.java:114)
	at org.h2.command.dml.SelectUnion.queryWithoutCache(SelectUnion.java:186)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:465)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.dml.SelectUnion.queryWithoutCache(SelectUnion.java:178)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:465)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.dml.SelectUnion.queryWithoutCache(SelectUnion.java:178)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:465)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.dml.SelectUnion.queryWithoutCache(SelectUnion.java:178)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:465)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.dml.SelectUnion.queryWithoutCache(SelectUnion.java:178)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:465)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.server.TcpServerThread.process(TcpServerThread.java:343)
	at org.h2.server.TcpServerThread.run(TcpServerThread.java:183)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.NumberFormatException: For input string: ""
	at java.lang.NumberFormatException.forInputString(Unknown Source)
	at java.lang.Integer.parseInt(Unknown Source)
	at java.lang.Integer.parseInt(Unknown Source)
	at org.h2.value.Value.convertToInt(Value.java:982)
	at org.h2.value.Value.convertTo(Value.java:806)
	... 27 more

### The error may exist in file [C:\BUS\multimodule-parent\dashboard\target\classes\mapper\h2.xml]
### The error may involve com.pjy.dashboard.mapper.h2.h2Mapper.select_getEmployeeCard-Inline
### The error occurred while setting parameters
### SQL: SELECT  '5' AS a0    , '' AS a1,    ''   AS a1_value     , '' AS a2,    ''  AS a2_value    , '       상실' AS a3, '' AS a3_value    , '이메일' AS a4,   nvl(b.email,'')  AS a4_value    , '성별' AS a5,   a.sex AS a5_value   FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM   WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기'   union   SELECT  '4' AS a0    , '부서' AS a1,   a.TEAM_NM  AS a1_value     , '노선' AS a2,   nvl(b.route_nm,0)  AS a2_value    , '국민연금취득' AS a3, '' AS a3_value    , '휴대폰' AS a4,   a.PHONE_NO  AS a4_value    , '호봉' AS a5,   nvl(b.hobong,0) AS a5_value   FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM   WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기'   union   SELECT  '3' AS a0    , '구분' AS a1,   a.JOB_KIND AS a1_value    , '직종' AS a2,   a.JOB_TYPE AS a2_value     , '      상실' AS a3, '' AS a3_value    , '고정/SP구분' AS a4,  nvl(b.sp_gb,'') AS a4_value    , '급여계산' AS a5,   '' AS a5_value   FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM   WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기'   union   SELECT  '2' AS a0    , '생년월일' AS a1,   nvl(b.BIRTH_YMD,'') AS a1_value     , '근속일자' AS a2,   nvl(to_char(datediff(DAY,'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value     , '건강보험취득' AS a3, '' AS a3_value    , '건강보험번호' AS a4,  '' AS a4_value    , '가입조합' AS a5,   b.work_group AS a5_value   FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM   WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기'   union   SELECT  '1' AS a0    , '성명' AS a1,   a.EMP_NM AS a1_value     , '퇴사일자' AS a2,   '' AS a2_value     , '      상실' AS a3, '' AS a3_value    , '현주소' AS a4,   nvl(b.address,'') AS a4_value    , '' AS a5, '' AS a5_value   FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM   WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기'   union   SELECT  '0' AS a0    , '사원번호' AS a1,   TO_CHAR( a.EMP_NO) AS a1_value     , '입사일자' AS a2,   '20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-') AS a2_value    , '고용보험취득' AS a3, '' AS a3_value    , '본적' AS a4,   '' AS a4_value    , '' AS a5,    '' AS a5_value   FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM   WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기'
### Cause: org.h2.jdbc.JdbcSQLDataException: Data conversion error converting ; SQL statement:
SELECT  '5' AS a0 
		,	'' AS a1, 			''	  AS a1_value  
		,	'' AS a2, 			''  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		nvl(b.email,'')  AS a4_value 
		,	'성별' AS a5, 		a.sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		a.TEAM_NM  AS a1_value  
		,	'노선' AS a2, 		nvl(b.route_nm,0)  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		a.PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		nvl(b.hobong,0) AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		a.JOB_KIND AS a1_value 
		,	'직종' AS a2, 		a.JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'고정/SP구분' AS a4, 	nvl(b.sp_gb,'') AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기' 
	union 
	SELECT  '2' AS a0 
		,	'생년월일' AS a1, 		nvl(b.BIRTH_YMD,'') AS a1_value  
		,	'근속일자' AS a2, 		nvl(to_char(datediff(DAY,'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		b.work_group AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		nvl(b.address,'') AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-') AS a2_value 
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기' [22018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:457)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.value.Value.convertTo(Value.java:875)
	at org.h2.value.Value.convertTo(Value.java:772)
	at org.h2.command.dml.SelectUnion.convert(SelectUnion.java:114)
	at org.h2.command.dml.SelectUnion.queryWithoutCache(SelectUnion.java:186)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:465)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.dml.SelectUnion.queryWithoutCache(SelectUnion.java:178)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:465)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.dml.SelectUnion.queryWithoutCache(SelectUnion.java:178)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:465)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.dml.SelectUnion.queryWithoutCache(SelectUnion.java:178)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:465)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.dml.SelectUnion.queryWithoutCache(SelectUnion.java:178)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:465)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.server.TcpServerThread.process(TcpServerThread.java:343)
	at org.h2.server.TcpServerThread.run(TcpServerThread.java:183)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.NumberFormatException: For input string: ""
	at java.lang.NumberFormatException.forInputString(Unknown Source)
	at java.lang.Integer.parseInt(Unknown Source)
	at java.lang.Integer.parseInt(Unknown Source)
	at org.h2.value.Value.convertToInt(Value.java:982)
	at org.h2.value.Value.convertTo(Value.java:806)
	... 27 more

; Data conversion error converting ; SQL statement:
SELECT  '5' AS a0 
		,	'' AS a1, 			''	  AS a1_value  
		,	'' AS a2, 			''  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		nvl(b.email,'')  AS a4_value 
		,	'성별' AS a5, 		a.sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		a.TEAM_NM  AS a1_value  
		,	'노선' AS a2, 		nvl(b.route_nm,0)  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		a.PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		nvl(b.hobong,0) AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		a.JOB_KIND AS a1_value 
		,	'직종' AS a2, 		a.JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'고정/SP구분' AS a4, 	nvl(b.sp_gb,'') AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기' 
	union 
	SELECT  '2' AS a0 
		,	'생년월일' AS a1, 		nvl(b.BIRTH_YMD,'') AS a1_value  
		,	'근속일자' AS a2, 		nvl(to_char(datediff(DAY,'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		b.work_group AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		nvl(b.address,'') AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-') AS a2_value 
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기' [22018-200]; nested exception is org.h2.jdbc.JdbcSQLDataException: Data conversion error converting ; SQL statement:
SELECT  '5' AS a0 
		,	'' AS a1, 			''	  AS a1_value  
		,	'' AS a2, 			''  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		nvl(b.email,'')  AS a4_value 
		,	'성별' AS a5, 		a.sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		a.TEAM_NM  AS a1_value  
		,	'노선' AS a2, 		nvl(b.route_nm,0)  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		a.PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		nvl(b.hobong,0) AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		a.JOB_KIND AS a1_value 
		,	'직종' AS a2, 		a.JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'고정/SP구분' AS a4, 	nvl(b.sp_gb,'') AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기' 
	union 
	SELECT  '2' AS a0 
		,	'생년월일' AS a1, 		nvl(b.BIRTH_YMD,'') AS a1_value  
		,	'근속일자' AS a2, 		nvl(to_char(datediff(DAY,'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		b.work_group AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		nvl(b.address,'') AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-') AS a2_value 
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기' [22018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:457)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.value.Value.convertTo(Value.java:875)
	at org.h2.value.Value.convertTo(Value.java:772)
	at org.h2.command.dml.SelectUnion.convert(SelectUnion.java:114)
	at org.h2.command.dml.SelectUnion.queryWithoutCache(SelectUnion.java:186)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:465)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.dml.SelectUnion.queryWithoutCache(SelectUnion.java:178)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:465)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.dml.SelectUnion.queryWithoutCache(SelectUnion.java:178)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:465)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.dml.SelectUnion.queryWithoutCache(SelectUnion.java:178)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:465)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.dml.SelectUnion.queryWithoutCache(SelectUnion.java:178)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:465)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.server.TcpServerThread.process(TcpServerThread.java:343)
	at org.h2.server.TcpServerThread.run(TcpServerThread.java:183)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.NumberFormatException: For input string: ""
	at java.lang.NumberFormatException.forInputString(Unknown Source)
	at java.lang.Integer.parseInt(Unknown Source)
	at java.lang.Integer.parseInt(Unknown Source)
	at org.h2.value.Value.convertToInt(Value.java:982)
	at org.h2.value.Value.convertTo(Value.java:806)
	... 27 more

2023-06-11 19:13:19.252 WARN  [http-nio-10010-exec-4] [o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver] - Resolved [com.pjy.dashboard.core.error.exception.BusinessException: jdbcTemplate query error]
2023-06-11 19:14:09.340 INFO  [MessageBroker-1] [o.s.w.s.c.WebSocketMessageBrokerStats] - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2023-06-11 19:14:32.023 INFO  [RMI TCP Connection(12)-127.0.0.1] [o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin] - Application shutdown requested.
2023-06-11 19:14:32.026 INFO  [RMI TCP Connection(12)-127.0.0.1] [o.s.m.s.b.SimpleBrokerMessageHandler] - Stopping...
2023-06-11 19:14:32.026 INFO  [RMI TCP Connection(12)-127.0.0.1] [o.s.m.s.b.SimpleBrokerMessageHandler] - BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2023-06-11 19:14:32.026 INFO  [RMI TCP Connection(12)-127.0.0.1] [o.s.m.s.b.SimpleBrokerMessageHandler] - Stopped.
2023-06-11 19:14:32.045 INFO  [RMI TCP Connection(12)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Shutting down ExecutorService 'brokerChannelExecutor'
2023-06-11 19:14:32.045 INFO  [RMI TCP Connection(12)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskScheduler] - Shutting down ExecutorService 'messageBrokerTaskScheduler'
2023-06-11 19:14:32.045 INFO  [RMI TCP Connection(12)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Shutting down ExecutorService 'asyncThreadPool'
2023-06-11 19:14:32.046 INFO  [RMI TCP Connection(12)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Shutting down ExecutorService 'clientOutboundChannelExecutor'
2023-06-11 19:14:32.046 INFO  [RMI TCP Connection(12)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Shutting down ExecutorService 'clientInboundChannelExecutor'
2023-06-11 19:14:32.048 INFO  [RMI TCP Connection(12)-127.0.0.1] [com.zaxxer.hikari.HikariDataSource] - H2 - Shutdown initiated...
2023-06-11 19:14:32.051 INFO  [RMI TCP Connection(12)-127.0.0.1] [com.zaxxer.hikari.HikariDataSource] - H2 - Shutdown completed.
2023-06-11 19:14:32.074 INFO  [RMI TCP Connection(12)-127.0.0.1] [com.pjy.dashboard.filter.TestFilter] - destroy Pjy Filter
2023-06-11 19:14:34.268 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Starting PjyApplication on DESKTOP-3O1I9JM with PID 27428 (C:\BUS\multimodule-parent\dashboard\target\classes started by admin in C:\BUS\multimodule-parent\dashboard)
2023-06-11 19:14:34.270 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - The following profiles are active: oauth
2023-06-11 19:14:34.307 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-06-11 19:14:34.307 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-06-11 19:14:35.073 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-11 19:14:35.073 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-06-11 19:14:35.169 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 91ms. Found 2 JPA repository interfaces.
2023-06-11 19:14:35.411 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-11 19:14:35.412 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2023-06-11 19:14:35.448 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.MemberRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-06-11 19:14:35.448 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.RememberMeRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-06-11 19:14:35.448 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 36ms. Found 0 JDBC repository interfaces.
2023-06-11 19:14:35.748 INFO  [restartedMain] [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] - Post-processing PropertySource instances
2023-06-11 19:14:35.794 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2023-06-11 19:14:35.794 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource commandLineArgs [org.springframework.core.env.SimpleCommandLinePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-06-11 19:14:35.794 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-06-11 19:14:35.794 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-06-11 19:14:35.794 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-11 19:14:35.794 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
2023-06-11 19:14:35.794 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2023-06-11 19:14:35.794 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application-oauth.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-11 19:14:35.794 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-11 19:14:35.794 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-11 19:14:35.794 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [pjy.properties] [org.springframework.core.env.CompositePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-06-11 19:14:35.794 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [common.properties] [org.springframework.core.io.support.ResourcePropertySource] to EncryptableMapPropertySourceWrapper
2023-06-11 19:14:35.840 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'asyncConfiguration' of type [com.pjy.dashboard.configuration.AsyncConfiguration$$EnhancerBySpringCGLIB$$d1b4dcaa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 19:14:35.873 INFO  [restartedMain] [c.u.j.filter.DefaultLazyPropertyFilter] - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2023-06-11 19:14:35.932 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$bbab40d7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 19:14:35.989 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 19:14:35.990 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@7293e046' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 19:14:35.993 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$e07fe389] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 19:14:36.000 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration$$EnhancerBySpringCGLIB$$5d4fb9f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 19:14:36.005 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 19:14:36.006 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 19:14:36.019 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$22fd789d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 19:14:36.039 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$a27dc5cf] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 19:14:36.125 INFO  [restartedMain] [c.u.j.r.DefaultLazyPropertyResolver] - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2023-06-11 19:14:36.127 INFO  [restartedMain] [c.u.j.d.DefaultLazyPropertyDetector] - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2023-06-11 19:14:36.406 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 10010 (http)
2023-06-11 19:14:36.418 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Initializing ProtocolHandler ["http-nio-10010"]
2023-06-11 19:14:36.424 INFO  [restartedMain] [org.apache.catalina.core.StandardService] - Starting service [Tomcat]
2023-06-11 19:14:36.424 INFO  [restartedMain] [org.apache.catalina.core.StandardEngine] - Starting Servlet engine: [Apache Tomcat/9.0.29]
2023-06-11 19:14:36.625 INFO  [restartedMain] [org.apache.jasper.servlet.TldScanner] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2023-06-11 19:14:36.631 INFO  [restartedMain] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring embedded WebApplicationContext
2023-06-11 19:14:36.632 INFO  [restartedMain] [o.s.web.context.ContextLoader] - Root WebApplicationContext: initialization completed in 2325 ms
2023-06-11 19:14:37.152 INFO  [restartedMain] [c.u.j.encryptor.DefaultLazyEncryptor] - Found Custom Encryptor Bean org.jasypt.encryption.pbe.PooledPBEStringEncryptor@793aeba4 with name: jasyptStringEncryptor
2023-06-11 19:14:37.194 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Starting...
2023-06-11 19:14:37.254 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.executeSql(PoolBase.java:567)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 5 msec}
2023-06-11 19:14:37.257 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Start completed.
2023-06-11 19:14:37.727 INFO  [restartedMain] [com.pjy.dashboard.filter.TestFilter] - init Pjy Filter
2023-06-11 19:14:37.955 INFO  [restartedMain] [o.hibernate.jpa.internal.util.LogHelper] - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2023-06-11 19:14:38.008 INFO  [restartedMain] [org.hibernate.Version] - HHH000412: Hibernate Core {5.3.14.Final}
2023-06-11 19:14:38.009 INFO  [restartedMain] [org.hibernate.cfg.Environment] - HHH000206: hibernate.properties not found
2023-06-11 19:14:38.121 INFO  [restartedMain] [org.hibernate.annotations.common.Version] - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2023-06-11 19:14:38.276 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 19:14:38.287 INFO  [restartedMain] [org.hibernate.dialect.Dialect] - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2023-06-11 19:14:38.772 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select SEQUENCE_CATALOG, SEQUENCE_SCHEMA, SEQUENCE_NAME, INCREMENT from information_schema.sequences
 {executed in 1 msec}
2023-06-11 19:14:38.806 INFO  [restartedMain] [o.s.o.j.LocalContainerEntityManagerFactoryBean] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-06-11 19:14:38.987 INFO  [restartedMain] [o.h.h.i.QueryTranslatorFactoryInitiator] - HHH000397: Using ASTQueryTranslatorFactory
2023-06-11 19:14:39.168 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'clientInboundChannelExecutor'
2023-06-11 19:14:39.178 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'clientOutboundChannelExecutor'
2023-06-11 19:14:39.792 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService
2023-06-11 19:14:39.792 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'asyncThreadPool'
2023-06-11 19:14:39.922 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/h2-console/**'], []
2023-06-11 19:14:39.923 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/css/**'], []
2023-06-11 19:14:39.923 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/js/**'], []
2023-06-11 19:14:39.923 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/monitor/**'], []
2023-06-11 19:14:39.923 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/img/**'], []
2023-06-11 19:14:39.923 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/lib/**'], []
2023-06-11 19:14:39.923 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/main.css'], []
2023-06-11 19:14:39.923 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/common.js'], []
2023-06-11 19:14:39.923 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/resources/**'], []
2023-06-11 19:14:40.027 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@59972baa, org.springframework.security.web.context.SecurityContextPersistenceFilter@683b4f1e, org.springframework.security.web.header.HeaderWriterFilter@4b8e5de9, org.springframework.web.filter.CorsFilter@bb88253, org.springframework.security.web.authentication.logout.LogoutFilter@85a03f1, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@5ed51fae, org.springframework.security.web.session.ConcurrentSessionFilter@408c8dab, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@36bbc542, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@155ca32c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@26cc2ee9, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@196467d6, org.springframework.security.web.session.SessionManagementFilter@7e01940a, org.springframework.security.web.access.ExceptionTranslationFilter@a3daa12, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@67cbeb56]
2023-06-11 19:14:40.043 INFO  [restartedMain] [o.s.aop.framework.CglibAopProxy] - Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(javax.servlet.FilterConfig) throws javax.servlet.ServletException] because it is marked as final: Consider using interface-based JDK proxies instead!
2023-06-11 19:14:40.071 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskScheduler] - Initializing ExecutorService 'messageBrokerTaskScheduler'
2023-06-11 19:14:40.111 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'brokerChannelExecutor'
2023-06-11 19:14:40.392 WARN  [restartedMain] [o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-06-11 19:14:40.440 INFO  [restartedMain] [o.s.b.a.w.s.WelcomePageHandlerMapping] - Adding welcome page: ServletContext resource [/index.html]
2023-06-11 19:14:40.716 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 19:14:41.274 INFO  [restartedMain] [o.s.b.d.a.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2023-06-11 19:14:41.292 INFO  [restartedMain] [o.s.b.a.e.web.EndpointLinksResolver] - Exposing 16 endpoint(s) beneath base path '/actuator'
2023-06-11 19:14:41.384 INFO  [restartedMain] [o.s.m.s.b.SimpleBrokerMessageHandler] - Starting...
2023-06-11 19:14:41.384 INFO  [restartedMain] [o.s.m.s.b.SimpleBrokerMessageHandler] - BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2023-06-11 19:14:41.385 INFO  [restartedMain] [o.s.m.s.b.SimpleBrokerMessageHandler] - Started.
2023-06-11 19:14:41.392 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskScheduler] - Initializing ExecutorService
2023-06-11 19:14:41.394 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Starting ProtocolHandler ["http-nio-10010"]
2023-06-11 19:14:41.425 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 10010 (http) with context path ''
2023-06-11 19:14:41.428 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Started PjyApplication in 7.464 seconds (JVM running for 8.259)
2023-06-11 19:14:41.429 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-06-11 19:14:41.429 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - Application started
2023-06-11 19:14:41.429 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-06-11 19:14:42.161 INFO  [RMI TCP Connection(10)-127.0.0.1] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-11 19:14:42.161 INFO  [RMI TCP Connection(10)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Initializing Servlet 'dispatcherServlet'
2023-06-11 19:14:42.174 INFO  [RMI TCP Connection(10)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Completed initialization in 13 ms
2023-06-11 19:15:07.082 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@f0d9e7f4
2023-06-11 19:15:07.133 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-11 19:15:07.141 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  '5' AS a0 
		,	'' AS a1, 			''	  AS a1_value  
		,	'' AS a2, 			''  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		nvl(b.email,'')  AS a4_value 
		,	'성별' AS a5, 		a.sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		a.TEAM_NM  AS a1_value  
		,	'노선' AS a2, 		nvl(b.route_nm,'')  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		a.PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		nvl(b.hobong,'') AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		a.JOB_KIND AS a1_value 
		,	'직종' AS a2, 		a.JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'고정/SP구분' AS a4, 	nvl(b.sp_gb,'') AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기' 
	union 
	SELECT  '2' AS a0 
		,	'생년월일' AS a1, 		nvl(b.BIRTH_YMD,'') AS a1_value  
		,	'근속일자' AS a2, 		nvl(to_char(datediff(DAY,'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		b.work_group AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		nvl(b.address,'') AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-') AS a2_value 
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기'
 {executed in 2 msec}
2023-06-11 19:15:40.111 INFO  [MessageBroker-1] [o.s.w.s.c.WebSocketMessageBrokerStats] - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2023-06-11 19:16:14.032 INFO  [RMI TCP Connection(13)-127.0.0.1] [o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin] - Application shutdown requested.
2023-06-11 19:16:14.035 INFO  [RMI TCP Connection(13)-127.0.0.1] [o.s.m.s.b.SimpleBrokerMessageHandler] - Stopping...
2023-06-11 19:16:14.035 INFO  [RMI TCP Connection(13)-127.0.0.1] [o.s.m.s.b.SimpleBrokerMessageHandler] - BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2023-06-11 19:16:14.035 INFO  [RMI TCP Connection(13)-127.0.0.1] [o.s.m.s.b.SimpleBrokerMessageHandler] - Stopped.
2023-06-11 19:16:14.054 INFO  [RMI TCP Connection(13)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Shutting down ExecutorService 'brokerChannelExecutor'
2023-06-11 19:16:14.055 INFO  [RMI TCP Connection(13)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskScheduler] - Shutting down ExecutorService 'messageBrokerTaskScheduler'
2023-06-11 19:16:14.055 INFO  [RMI TCP Connection(13)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Shutting down ExecutorService 'asyncThreadPool'
2023-06-11 19:16:14.056 INFO  [RMI TCP Connection(13)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Shutting down ExecutorService 'clientOutboundChannelExecutor'
2023-06-11 19:16:14.056 INFO  [RMI TCP Connection(13)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Shutting down ExecutorService 'clientInboundChannelExecutor'
2023-06-11 19:16:14.057 INFO  [RMI TCP Connection(13)-127.0.0.1] [com.zaxxer.hikari.HikariDataSource] - H2 - Shutdown initiated...
2023-06-11 19:16:14.060 INFO  [RMI TCP Connection(13)-127.0.0.1] [com.zaxxer.hikari.HikariDataSource] - H2 - Shutdown completed.
2023-06-11 19:16:14.084 INFO  [RMI TCP Connection(13)-127.0.0.1] [com.pjy.dashboard.filter.TestFilter] - destroy Pjy Filter
2023-06-11 19:16:16.479 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Starting PjyApplication on DESKTOP-3O1I9JM with PID 35508 (C:\BUS\multimodule-parent\dashboard\target\classes started by admin in C:\BUS\multimodule-parent\dashboard)
2023-06-11 19:16:16.482 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - The following profiles are active: oauth
2023-06-11 19:16:16.520 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-06-11 19:16:16.520 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-06-11 19:16:17.273 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-11 19:16:17.273 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-06-11 19:16:17.371 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 93ms. Found 2 JPA repository interfaces.
2023-06-11 19:16:17.606 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-11 19:16:17.606 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2023-06-11 19:16:17.642 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.MemberRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-06-11 19:16:17.642 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.RememberMeRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-06-11 19:16:17.642 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 36ms. Found 0 JDBC repository interfaces.
2023-06-11 19:16:17.943 INFO  [restartedMain] [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] - Post-processing PropertySource instances
2023-06-11 19:16:17.991 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2023-06-11 19:16:17.992 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource commandLineArgs [org.springframework.core.env.SimpleCommandLinePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-06-11 19:16:17.992 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-06-11 19:16:17.992 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-06-11 19:16:17.992 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-11 19:16:17.992 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
2023-06-11 19:16:17.992 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2023-06-11 19:16:17.992 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application-oauth.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-11 19:16:17.992 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-11 19:16:17.992 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-11 19:16:17.992 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [pjy.properties] [org.springframework.core.env.CompositePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-06-11 19:16:17.993 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [common.properties] [org.springframework.core.io.support.ResourcePropertySource] to EncryptableMapPropertySourceWrapper
2023-06-11 19:16:18.040 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'asyncConfiguration' of type [com.pjy.dashboard.configuration.AsyncConfiguration$$EnhancerBySpringCGLIB$$bd06094c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 19:16:18.075 INFO  [restartedMain] [c.u.j.filter.DefaultLazyPropertyFilter] - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2023-06-11 19:16:18.135 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$a6fc6d79] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 19:16:18.199 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 19:16:18.201 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@720772b' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 19:16:18.205 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$cbd1102b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 19:16:18.211 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration$$EnhancerBySpringCGLIB$$f1262841] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 19:16:18.214 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 19:16:18.215 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 19:16:18.228 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$e4ea53f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 19:16:18.246 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$8dcef271] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 19:16:18.327 INFO  [restartedMain] [c.u.j.r.DefaultLazyPropertyResolver] - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2023-06-11 19:16:18.330 INFO  [restartedMain] [c.u.j.d.DefaultLazyPropertyDetector] - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2023-06-11 19:16:18.625 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 10010 (http)
2023-06-11 19:16:18.637 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Initializing ProtocolHandler ["http-nio-10010"]
2023-06-11 19:16:18.644 INFO  [restartedMain] [org.apache.catalina.core.StandardService] - Starting service [Tomcat]
2023-06-11 19:16:18.644 INFO  [restartedMain] [org.apache.catalina.core.StandardEngine] - Starting Servlet engine: [Apache Tomcat/9.0.29]
2023-06-11 19:16:18.850 INFO  [restartedMain] [org.apache.jasper.servlet.TldScanner] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2023-06-11 19:16:18.857 INFO  [restartedMain] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring embedded WebApplicationContext
2023-06-11 19:16:18.858 INFO  [restartedMain] [o.s.web.context.ContextLoader] - Root WebApplicationContext: initialization completed in 2338 ms
2023-06-11 19:16:19.360 INFO  [restartedMain] [c.u.j.encryptor.DefaultLazyEncryptor] - Found Custom Encryptor Bean org.jasypt.encryption.pbe.PooledPBEStringEncryptor@aa655d5 with name: jasyptStringEncryptor
2023-06-11 19:16:19.397 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Starting...
2023-06-11 19:16:19.464 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.executeSql(PoolBase.java:567)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 5 msec}
2023-06-11 19:16:19.466 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Start completed.
2023-06-11 19:16:19.940 INFO  [restartedMain] [com.pjy.dashboard.filter.TestFilter] - init Pjy Filter
2023-06-11 19:16:20.166 INFO  [restartedMain] [o.hibernate.jpa.internal.util.LogHelper] - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2023-06-11 19:16:20.219 INFO  [restartedMain] [org.hibernate.Version] - HHH000412: Hibernate Core {5.3.14.Final}
2023-06-11 19:16:20.220 INFO  [restartedMain] [org.hibernate.cfg.Environment] - HHH000206: hibernate.properties not found
2023-06-11 19:16:20.332 INFO  [restartedMain] [org.hibernate.annotations.common.Version] - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2023-06-11 19:16:20.490 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-11 19:16:20.501 INFO  [restartedMain] [org.hibernate.dialect.Dialect] - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2023-06-11 19:16:20.989 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select SEQUENCE_CATALOG, SEQUENCE_SCHEMA, SEQUENCE_NAME, INCREMENT from information_schema.sequences
 {executed in 1 msec}
2023-06-11 19:16:21.054 INFO  [restartedMain] [o.s.o.j.LocalContainerEntityManagerFactoryBean] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-06-11 19:16:21.235 INFO  [restartedMain] [o.h.h.i.QueryTranslatorFactoryInitiator] - HHH000397: Using ASTQueryTranslatorFactory
2023-06-11 19:16:21.423 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'clientInboundChannelExecutor'
2023-06-11 19:16:21.433 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'clientOutboundChannelExecutor'
2023-06-11 19:16:22.056 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService
2023-06-11 19:16:22.056 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'asyncThreadPool'
2023-06-11 19:16:22.188 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/h2-console/**'], []
2023-06-11 19:16:22.188 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/css/**'], []
2023-06-11 19:16:22.188 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/js/**'], []
2023-06-11 19:16:22.188 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/monitor/**'], []
2023-06-11 19:16:22.188 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/img/**'], []
2023-06-11 19:16:22.188 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/lib/**'], []
2023-06-11 19:16:22.188 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/main.css'], []
2023-06-11 19:16:22.188 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/common.js'], []
2023-06-11 19:16:22.189 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/resources/**'], []
2023-06-11 19:16:22.291 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@7945aade, org.springframework.security.web.context.SecurityContextPersistenceFilter@5eeba5e3, org.springframework.security.web.header.HeaderWriterFilter@35c89ce7, org.springframework.web.filter.CorsFilter@7f5fe387, org.springframework.security.web.authentication.logout.LogoutFilter@78bd58f9, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@d3e8010, org.springframework.security.web.session.ConcurrentSessionFilter@16ecfba, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@787f5815, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7dce04ba, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@362cfde9, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@406e1e76, org.springframework.security.web.session.SessionManagementFilter@5b31cb1, org.springframework.security.web.access.ExceptionTranslationFilter@3582ea4c, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2730ccee]
2023-06-11 19:16:22.306 INFO  [restartedMain] [o.s.aop.framework.CglibAopProxy] - Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(javax.servlet.FilterConfig) throws javax.servlet.ServletException] because it is marked as final: Consider using interface-based JDK proxies instead!
2023-06-11 19:16:22.336 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskScheduler] - Initializing ExecutorService 'messageBrokerTaskScheduler'
2023-06-11 19:16:22.376 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'brokerChannelExecutor'
2023-06-11 19:16:22.658 WARN  [restartedMain] [o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-06-11 19:16:22.706 INFO  [restartedMain] [o.s.b.a.w.s.WelcomePageHandlerMapping] - Adding welcome page: ServletContext resource [/index.html]
2023-06-11 19:16:22.980 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 19:16:23.564 INFO  [restartedMain] [o.s.b.d.a.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2023-06-11 19:16:23.584 INFO  [restartedMain] [o.s.b.a.e.web.EndpointLinksResolver] - Exposing 16 endpoint(s) beneath base path '/actuator'
2023-06-11 19:16:23.680 INFO  [restartedMain] [o.s.m.s.b.SimpleBrokerMessageHandler] - Starting...
2023-06-11 19:16:23.680 INFO  [restartedMain] [o.s.m.s.b.SimpleBrokerMessageHandler] - BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2023-06-11 19:16:23.681 INFO  [restartedMain] [o.s.m.s.b.SimpleBrokerMessageHandler] - Started.
2023-06-11 19:16:23.689 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskScheduler] - Initializing ExecutorService
2023-06-11 19:16:23.691 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Starting ProtocolHandler ["http-nio-10010"]
2023-06-11 19:16:23.727 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 10010 (http) with context path ''
2023-06-11 19:16:23.732 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Started PjyApplication in 7.559 seconds (JVM running for 8.355)
2023-06-11 19:16:23.732 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-06-11 19:16:23.732 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - Application started
2023-06-11 19:16:23.732 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-06-11 19:16:24.843 INFO  [RMI TCP Connection(8)-127.0.0.1] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-11 19:16:24.844 INFO  [RMI TCP Connection(8)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Initializing Servlet 'dispatcherServlet'
2023-06-11 19:16:24.856 INFO  [RMI TCP Connection(8)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Completed initialization in 12 ms
2023-06-11 19:16:42.376 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@f0d9e7f4
2023-06-11 19:16:42.428 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 19:16:42.435 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  '5' AS a0 
		,	'' AS a1, 			''	  AS a1_value  
		,	'' AS a2, 			''  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		nvl(b.email,'')  AS a4_value 
		,	'성별' AS a5, 		a.sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		a.TEAM_NM  AS a1_value  
		,	'노선' AS a2, 		nvl(b.route_nm,'')  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		a.PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		nvl(b.hobong,'') AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		a.JOB_KIND AS a1_value 
		,	'직종' AS a2, 		a.JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'고정/SP구분' AS a4, 	nvl(b.sp_gb,'') AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기' 
	union 
	SELECT  '2' AS a0 
		,	'생년월일' AS a1, 		nvl(b.BIRTH_YMD,'') AS a1_value  
		,	'근속일자' AS a2, 		nvl(to_char(datediff(DAY,'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		nvl(b.work_group,'') AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		nvl(b.address,'') AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-') AS a2_value 
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='고현기'
 {executed in 3 msec}
2023-06-11 19:17:12.558 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@d9026782
2023-06-11 19:17:12.587 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
2023-06-11 19:17:12.593 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-11 19:17:12.595 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 2 msec}
2023-06-11 19:17:12.598 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 1 msec}
2023-06-11 19:17:13.987 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@d06b08a7
2023-06-11 19:17:13.988 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 19:17:13.991 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  '5' AS a0 
		,	'' AS a1, 			''	  AS a1_value  
		,	'' AS a2, 			''  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		nvl(b.email,'')  AS a4_value 
		,	'성별' AS a5, 		a.sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='권태종' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		a.TEAM_NM  AS a1_value  
		,	'노선' AS a2, 		nvl(b.route_nm,'')  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		a.PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		nvl(b.hobong,'') AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='권태종' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		a.JOB_KIND AS a1_value 
		,	'직종' AS a2, 		a.JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'고정/SP구분' AS a4, 	nvl(b.sp_gb,'') AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='권태종' 
	union 
	SELECT  '2' AS a0 
		,	'생년월일' AS a1, 		nvl(b.BIRTH_YMD,'') AS a1_value  
		,	'근속일자' AS a2, 		nvl(to_char(datediff(DAY,'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		nvl(b.work_group,'') AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='권태종' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		nvl(b.address,'') AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='권태종' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-') AS a2_value 
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='권태종'
 {executed in 2 msec}
2023-06-11 19:17:17.878 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@9d07303f
2023-06-11 19:17:17.881 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 19:17:17.883 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  '5' AS a0 
		,	'' AS a1, 			''	  AS a1_value  
		,	'' AS a2, 			''  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		nvl(b.email,'')  AS a4_value 
		,	'성별' AS a5, 		a.sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='박노철' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		a.TEAM_NM  AS a1_value  
		,	'노선' AS a2, 		nvl(b.route_nm,'')  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		a.PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		nvl(b.hobong,'') AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='박노철' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		a.JOB_KIND AS a1_value 
		,	'직종' AS a2, 		a.JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'고정/SP구분' AS a4, 	nvl(b.sp_gb,'') AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='박노철' 
	union 
	SELECT  '2' AS a0 
		,	'생년월일' AS a1, 		nvl(b.BIRTH_YMD,'') AS a1_value  
		,	'근속일자' AS a2, 		nvl(to_char(datediff(DAY,'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		nvl(b.work_group,'') AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='박노철' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		nvl(b.address,'') AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='박노철' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-') AS a2_value 
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='박노철'
 {executed in 2 msec}
2023-06-11 19:17:22.387 INFO  [MessageBroker-1] [o.s.w.s.c.WebSocketMessageBrokerStats] - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2023-06-11 19:17:47.258 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@f62b382c
2023-06-11 19:17:47.259 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 19:17:47.263 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  '5' AS a0 
		,	'' AS a1, 			''	  AS a1_value  
		,	'' AS a2, 			''  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		nvl(b.email,'')  AS a4_value 
		,	'성별' AS a5, 		a.sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='서문원' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		a.TEAM_NM  AS a1_value  
		,	'노선' AS a2, 		nvl(b.route_nm,'')  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		a.PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		nvl(b.hobong,'') AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='서문원' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		a.JOB_KIND AS a1_value 
		,	'직종' AS a2, 		a.JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'고정/SP구분' AS a4, 	nvl(b.sp_gb,'') AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='서문원' 
	union 
	SELECT  '2' AS a0 
		,	'생년월일' AS a1, 		nvl(b.BIRTH_YMD,'') AS a1_value  
		,	'근속일자' AS a2, 		nvl(to_char(datediff(DAY,'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		nvl(b.work_group,'') AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='서문원' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		nvl(b.address,'') AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='서문원' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-') AS a2_value 
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='서문원'
 {executed in 3 msec}
2023-06-11 19:18:08.174 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@d9026782
2023-06-11 19:18:08.175 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
2023-06-11 19:18:08.175 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 19:18:08.178 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 3 msec}
2023-06-11 19:18:08.180 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 2 msec}
2023-06-11 19:19:22.786 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@aecff48c
2023-06-11 19:19:22.788 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 19:19:22.790 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  '5' AS a0 
		,	'' AS a1, 			''	  AS a1_value  
		,	'' AS a2, 			''  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		nvl(b.email,'')  AS a4_value 
		,	'성별' AS a5, 		a.sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김승섭' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		a.TEAM_NM  AS a1_value  
		,	'노선' AS a2, 		nvl(b.route_nm,'')  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		a.PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		nvl(b.hobong,'') AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김승섭' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		a.JOB_KIND AS a1_value 
		,	'직종' AS a2, 		a.JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'고정/SP구분' AS a4, 	nvl(b.sp_gb,'') AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김승섭' 
	union 
	SELECT  '2' AS a0 
		,	'생년월일' AS a1, 		nvl(b.BIRTH_YMD,'') AS a1_value  
		,	'근속일자' AS a2, 		nvl(to_char(datediff(DAY,'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		nvl(b.work_group,'') AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김승섭' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		nvl(b.address,'') AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김승섭' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-') AS a2_value 
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김승섭'
 {executed in 2 msec}
2023-06-11 19:19:49.222 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@a305bf1b
2023-06-11 19:19:49.223 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 19:19:49.226 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  '5' AS a0 
		,	'' AS a1, 			''	  AS a1_value  
		,	'' AS a2, 			''  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		nvl(b.email,'')  AS a4_value 
		,	'성별' AS a5, 		a.sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='손진종' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		a.TEAM_NM  AS a1_value  
		,	'노선' AS a2, 		nvl(b.route_nm,'')  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		a.PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		nvl(b.hobong,'') AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='손진종' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		a.JOB_KIND AS a1_value 
		,	'직종' AS a2, 		a.JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'고정/SP구분' AS a4, 	nvl(b.sp_gb,'') AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='손진종' 
	union 
	SELECT  '2' AS a0 
		,	'생년월일' AS a1, 		nvl(b.BIRTH_YMD,'') AS a1_value  
		,	'근속일자' AS a2, 		nvl(to_char(datediff(DAY,'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		nvl(b.work_group,'') AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='손진종' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		nvl(b.address,'') AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='손진종' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-') AS a2_value 
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='손진종'
 {executed in 3 msec}
2023-06-11 19:20:12.315 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@e044d6f9
2023-06-11 19:20:12.316 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 19:20:12.319 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  '5' AS a0 
		,	'' AS a1, 			''	  AS a1_value  
		,	'' AS a2, 			''  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		nvl(b.email,'')  AS a4_value 
		,	'성별' AS a5, 		a.sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김병일' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		a.TEAM_NM  AS a1_value  
		,	'노선' AS a2, 		nvl(b.route_nm,'')  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		a.PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		nvl(b.hobong,'') AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김병일' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		a.JOB_KIND AS a1_value 
		,	'직종' AS a2, 		a.JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'고정/SP구분' AS a4, 	nvl(b.sp_gb,'') AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김병일' 
	union 
	SELECT  '2' AS a0 
		,	'생년월일' AS a1, 		nvl(b.BIRTH_YMD,'') AS a1_value  
		,	'근속일자' AS a2, 		nvl(to_char(datediff(DAY,'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		nvl(b.work_group,'') AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김병일' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		nvl(b.address,'') AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김병일' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-') AS a2_value 
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김병일'
 {executed in 2 msec}
2023-06-11 19:20:46.373 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@e332a9d
2023-06-11 19:20:46.375 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 19:20:46.378 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  '5' AS a0 
		,	'' AS a1, 			''	  AS a1_value  
		,	'' AS a2, 			''  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		nvl(b.email,'')  AS a4_value 
		,	'성별' AS a5, 		a.sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='최성희' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		a.TEAM_NM  AS a1_value  
		,	'노선' AS a2, 		nvl(b.route_nm,'')  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		a.PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		nvl(b.hobong,'') AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='최성희' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		a.JOB_KIND AS a1_value 
		,	'직종' AS a2, 		a.JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'고정/SP구분' AS a4, 	nvl(b.sp_gb,'') AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='최성희' 
	union 
	SELECT  '2' AS a0 
		,	'생년월일' AS a1, 		nvl(b.BIRTH_YMD,'') AS a1_value  
		,	'근속일자' AS a2, 		nvl(to_char(datediff(DAY,'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		nvl(b.work_group,'') AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='최성희' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		nvl(b.address,'') AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='최성희' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-') AS a2_value 
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='최성희'
 {executed in 2 msec}
2023-06-11 19:21:23.752 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@a305bf1b
2023-06-11 19:21:23.752 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 19:21:23.756 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  '5' AS a0 
		,	'' AS a1, 			''	  AS a1_value  
		,	'' AS a2, 			''  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		nvl(b.email,'')  AS a4_value 
		,	'성별' AS a5, 		a.sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='손진종' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		a.TEAM_NM  AS a1_value  
		,	'노선' AS a2, 		nvl(b.route_nm,'')  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		a.PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		nvl(b.hobong,'') AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='손진종' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		a.JOB_KIND AS a1_value 
		,	'직종' AS a2, 		a.JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'고정/SP구분' AS a4, 	nvl(b.sp_gb,'') AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='손진종' 
	union 
	SELECT  '2' AS a0 
		,	'생년월일' AS a1, 		nvl(b.BIRTH_YMD,'') AS a1_value  
		,	'근속일자' AS a2, 		nvl(to_char(datediff(DAY,'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		nvl(b.work_group,'') AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='손진종' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		nvl(b.address,'') AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='손진종' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-') AS a2_value 
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='손진종'
 {executed in 2 msec}
2023-06-11 19:22:07.063 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@a305bf1b
2023-06-11 19:22:07.065 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 19:22:07.067 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  '5' AS a0 
		,	'' AS a1, 			''	  AS a1_value  
		,	'' AS a2, 			''  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		nvl(b.email,'')  AS a4_value 
		,	'성별' AS a5, 		a.sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='손진종' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		a.TEAM_NM  AS a1_value  
		,	'노선' AS a2, 		nvl(b.route_nm,'')  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		a.PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		nvl(b.hobong,'') AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='손진종' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		a.JOB_KIND AS a1_value 
		,	'직종' AS a2, 		a.JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'고정/SP구분' AS a4, 	nvl(b.sp_gb,'') AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='손진종' 
	union 
	SELECT  '2' AS a0 
		,	'생년월일' AS a1, 		nvl(b.BIRTH_YMD,'') AS a1_value  
		,	'근속일자' AS a2, 		nvl(to_char(datediff(DAY,'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		nvl(b.work_group,'') AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='손진종' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		nvl(b.address,'') AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='손진종' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-') AS a2_value 
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='손진종'
 {executed in 2 msec}
2023-06-11 19:22:45.764 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@a305bf1b
2023-06-11 19:22:45.765 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-11 19:22:45.767 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  '5' AS a0 
		,	'' AS a1, 			''	  AS a1_value  
		,	'' AS a2, 			''  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		nvl(b.email,'')  AS a4_value 
		,	'성별' AS a5, 		a.sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='손진종' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		a.TEAM_NM  AS a1_value  
		,	'노선' AS a2, 		nvl(b.route_nm,'')  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		a.PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		nvl(b.hobong,'') AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='손진종' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		a.JOB_KIND AS a1_value 
		,	'직종' AS a2, 		a.JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'고정/SP구분' AS a4, 	nvl(b.sp_gb,'') AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='손진종' 
	union 
	SELECT  '2' AS a0 
		,	'생년월일' AS a1, 		nvl(b.BIRTH_YMD,'') AS a1_value  
		,	'근속일자' AS a2, 		nvl(to_char(datediff(DAY,'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		nvl(b.work_group,'') AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='손진종' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		nvl(b.address,'') AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='손진종' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-') AS a2_value 
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='손진종'
 {executed in 1 msec}
2023-06-11 22:01:53.718 INFO  [Catalina-utility-2] [c.pjy.dashboard.listener.SessionListener] - updateUserCloseTime p00139 
2023-06-11 22:01:53.725 INFO  [Catalina-utility-2] [c.pjy.dashboard.listener.SessionListener] - currentSessionUserList ->  false
2023-06-11 22:01:53.725 INFO  [Catalina-utility-2] [c.pjy.dashboard.listener.SessionListener] - updateUserCloseTime p00139 
2023-06-11 22:01:53.725 INFO  [Catalina-utility-2] [c.pjy.dashboard.listener.SessionListener] - currentSessionUserList ->  false
2023-06-11 22:01:57.931 WARN  [H2 housekeeper] [com.zaxxer.hikari.pool.HikariPool] - H2 - Thread starvation or clock leap detected (housekeeper delta=2h24m8s104ms765µs500ns).
2023-06-11 22:02:46.046 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
21. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 22:02:46.049 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
21. select * from MEMBER where userId = 'p00139'
 {executed in 1 msec}
2023-06-11 22:02:46.069 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.MemberServiceImpl] - ROLE_ADMIN
2023-06-11 22:02:46.131 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.MemberServiceImpl] - pass:$2a$10$MNrQAPw.4k9j2y08eTmYEeI7oKPuaWbA97HHog.8PYep5HsRwhbae,$2a$10$D20/kNfRDHkIG3.Yzlh7He0UKS7jaAy1a6xn4v3ZTgyPyNUvCQWGK
2023-06-11 22:02:46.192 INFO  [http-nio-10010-exec-3] [c.p.d.configuration.SecurityConfig] - authentication:: p00139
2023-06-11 22:02:46.201 INFO  [UserConnection-1] [com.pjy.dashboard.service.ChatService] - # sise thread start : [p00139]
2023-06-11 22:02:46.201 INFO  [UserConnection-1] [com.pjy.dashboard.service.ChatService] - # sise threaditemList = null 
2023-06-11 22:02:49.776 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@d9026782
2023-06-11 22:02:49.776 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
2023-06-11 22:02:49.777 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
21. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-11 22:02:49.779 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
21. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 2 msec}
2023-06-11 22:02:49.780 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
21. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 1 msec}
2023-06-11 22:02:51.281 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@276d94ac
2023-06-11 22:02:51.282 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
21. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 22:02:51.284 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT  '5' AS a0 
		,	'' AS a1, 			''	  AS a1_value  
		,	'' AS a2, 			''  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		nvl(b.email,'')  AS a4_value 
		,	'성별' AS a5, 		a.sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='문영식' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		a.TEAM_NM  AS a1_value  
		,	'노선' AS a2, 		nvl(b.route_nm,'')  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		a.PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		nvl(b.hobong,'') AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='문영식' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		a.JOB_KIND AS a1_value 
		,	'직종' AS a2, 		a.JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'고정/SP구분' AS a4, 	nvl(b.sp_gb,'') AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='문영식' 
	union 
	SELECT  '2' AS a0 
		,	'생년월일' AS a1, 		nvl(b.BIRTH_YMD,'') AS a1_value  
		,	'근속일자' AS a2, 		nvl(to_char(datediff(DAY,'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		nvl(b.work_group,'') AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='문영식' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		nvl(b.address,'') AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='문영식' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-') AS a2_value 
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='문영식'
 {executed in 2 msec}
2023-06-11 22:03:49.837 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@17d0d2df
2023-06-11 22:03:49.838 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
21. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 22:03:49.841 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT  '5' AS a0 
		,	'' AS a1, 			''	  AS a1_value  
		,	'' AS a2, 			''  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		nvl(b.email,'')  AS a4_value 
		,	'성별' AS a5, 		a.sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='박병승' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		a.TEAM_NM  AS a1_value  
		,	'노선' AS a2, 		nvl(b.route_nm,'')  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		a.PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		nvl(b.hobong,'') AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='박병승' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		a.JOB_KIND AS a1_value 
		,	'직종' AS a2, 		a.JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'고정/SP구분' AS a4, 	nvl(b.sp_gb,'') AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='박병승' 
	union 
	SELECT  '2' AS a0 
		,	'생년월일' AS a1, 		nvl(b.BIRTH_YMD,'') AS a1_value  
		,	'근속일자' AS a2, 		nvl(to_char(datediff(DAY,'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		nvl(b.work_group,'') AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='박병승' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		nvl(b.address,'') AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='박병승' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-') AS a2_value 
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='박병승'
 {executed in 2 msec}
2023-06-11 22:04:36.947 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@91a84b77
2023-06-11 22:04:36.948 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
21. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 22:04:36.951 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT  '5' AS a0 
		,	'' AS a1, 			''	  AS a1_value  
		,	'' AS a2, 			''  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		nvl(b.email,'')  AS a4_value 
		,	'성별' AS a5, 		a.sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김재중' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		a.TEAM_NM  AS a1_value  
		,	'노선' AS a2, 		nvl(b.route_nm,'')  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		a.PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		nvl(b.hobong,'') AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김재중' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		a.JOB_KIND AS a1_value 
		,	'직종' AS a2, 		a.JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'고정/SP구분' AS a4, 	nvl(b.sp_gb,'') AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김재중' 
	union 
	SELECT  '2' AS a0 
		,	'생년월일' AS a1, 		nvl(b.BIRTH_YMD,'') AS a1_value  
		,	'근속일자' AS a2, 		nvl(to_char(datediff(DAY,'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		nvl(b.work_group,'') AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김재중' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		nvl(b.address,'') AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김재중' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-') AS a2_value 
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김재중'
 {executed in 2 msec}
2023-06-11 22:04:48.881 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@cf6e07ea
2023-06-11 22:04:48.882 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
21. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 22:04:48.885 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT  '5' AS a0 
		,	'' AS a1, 			''	  AS a1_value  
		,	'' AS a2, 			''  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		nvl(b.email,'')  AS a4_value 
		,	'성별' AS a5, 		a.sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='문영식B' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		a.TEAM_NM  AS a1_value  
		,	'노선' AS a2, 		nvl(b.route_nm,'')  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		a.PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		nvl(b.hobong,'') AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='문영식B' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		a.JOB_KIND AS a1_value 
		,	'직종' AS a2, 		a.JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'고정/SP구분' AS a4, 	nvl(b.sp_gb,'') AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='문영식B' 
	union 
	SELECT  '2' AS a0 
		,	'생년월일' AS a1, 		nvl(b.BIRTH_YMD,'') AS a1_value  
		,	'근속일자' AS a2, 		nvl(to_char(datediff(DAY,'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		nvl(b.work_group,'') AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='문영식B' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		nvl(b.address,'') AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='문영식B' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-') AS a2_value 
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='문영식B'
 {executed in 2 msec}
2023-06-11 22:04:59.769 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@e044d6f9
2023-06-11 22:04:59.770 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
21. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-11 22:04:59.772 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT  '5' AS a0 
		,	'' AS a1, 			''	  AS a1_value  
		,	'' AS a2, 			''  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		nvl(b.email,'')  AS a4_value 
		,	'성별' AS a5, 		a.sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김병일' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		a.TEAM_NM  AS a1_value  
		,	'노선' AS a2, 		nvl(b.route_nm,'')  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		a.PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		nvl(b.hobong,'') AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김병일' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		a.JOB_KIND AS a1_value 
		,	'직종' AS a2, 		a.JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'고정/SP구분' AS a4, 	nvl(b.sp_gb,'') AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김병일' 
	union 
	SELECT  '2' AS a0 
		,	'생년월일' AS a1, 		nvl(b.BIRTH_YMD,'') AS a1_value  
		,	'근속일자' AS a2, 		nvl(to_char(datediff(DAY,'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		nvl(b.work_group,'') AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김병일' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		nvl(b.address,'') AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김병일' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-') AS a2_value 
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김병일'
 {executed in 1 msec}
2023-06-11 22:06:23.588 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@a305bf1b
2023-06-11 22:06:23.589 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
21. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 22:06:23.592 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT  '5' AS a0 
		,	'' AS a1, 			''	  AS a1_value  
		,	'' AS a2, 			''  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		nvl(b.email,'')  AS a4_value 
		,	'성별' AS a5, 		a.sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='손진종' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		a.TEAM_NM  AS a1_value  
		,	'노선' AS a2, 		nvl(b.route_nm,'')  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		a.PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		nvl(b.hobong,'') AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='손진종' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		a.JOB_KIND AS a1_value 
		,	'직종' AS a2, 		a.JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'고정/SP구분' AS a4, 	nvl(b.sp_gb,'') AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='손진종' 
	union 
	SELECT  '2' AS a0 
		,	'생년월일' AS a1, 		nvl(b.BIRTH_YMD,'') AS a1_value  
		,	'근속일자' AS a2, 		nvl(to_char(datediff(DAY,'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		nvl(b.work_group,'') AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='손진종' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		nvl(b.address,'') AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='손진종' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-') AS a2_value 
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='손진종'
 {executed in 2 msec}
2023-06-11 22:08:13.374 INFO  [RMI TCP Connection(41)-127.0.0.1] [o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin] - Application shutdown requested.
2023-06-11 22:08:13.376 INFO  [RMI TCP Connection(41)-127.0.0.1] [o.s.m.s.b.SimpleBrokerMessageHandler] - Stopping...
2023-06-11 22:08:13.376 INFO  [RMI TCP Connection(41)-127.0.0.1] [o.s.m.s.b.SimpleBrokerMessageHandler] - BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2023-06-11 22:08:13.376 INFO  [RMI TCP Connection(41)-127.0.0.1] [o.s.m.s.b.SimpleBrokerMessageHandler] - Stopped.
2023-06-11 22:08:13.402 INFO  [RMI TCP Connection(41)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Shutting down ExecutorService 'brokerChannelExecutor'
2023-06-11 22:08:13.402 INFO  [RMI TCP Connection(41)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskScheduler] - Shutting down ExecutorService 'messageBrokerTaskScheduler'
2023-06-11 22:08:13.403 INFO  [RMI TCP Connection(41)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Shutting down ExecutorService 'asyncThreadPool'
2023-06-11 22:08:13.403 INFO  [UserConnection-1] [com.pjy.dashboard.service.ChatService] - ## thread end sise . UserConnection-1[95]
2023-06-11 22:08:13.403 INFO  [RMI TCP Connection(41)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Shutting down ExecutorService 'clientOutboundChannelExecutor'
2023-06-11 22:08:13.403 INFO  [RMI TCP Connection(41)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Shutting down ExecutorService 'clientInboundChannelExecutor'
2023-06-11 22:08:13.405 INFO  [RMI TCP Connection(41)-127.0.0.1] [com.zaxxer.hikari.HikariDataSource] - H2 - Shutdown initiated...
2023-06-11 22:08:13.409 INFO  [RMI TCP Connection(41)-127.0.0.1] [com.zaxxer.hikari.HikariDataSource] - H2 - Shutdown completed.
2023-06-11 22:08:13.432 INFO  [RMI TCP Connection(41)-127.0.0.1] [com.pjy.dashboard.filter.TestFilter] - destroy Pjy Filter
2023-06-11 22:08:15.667 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Starting PjyApplication on DESKTOP-3O1I9JM with PID 12192 (C:\BUS\multimodule-parent\dashboard\target\classes started by admin in C:\BUS\multimodule-parent\dashboard)
2023-06-11 22:08:15.670 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - The following profiles are active: oauth
2023-06-11 22:08:15.707 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-06-11 22:08:15.707 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-06-11 22:08:16.501 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-11 22:08:16.501 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-06-11 22:08:16.601 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 95ms. Found 2 JPA repository interfaces.
2023-06-11 22:08:16.842 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-11 22:08:16.842 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2023-06-11 22:08:16.879 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.MemberRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-06-11 22:08:16.880 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.RememberMeRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-06-11 22:08:16.880 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 38ms. Found 0 JDBC repository interfaces.
2023-06-11 22:08:17.179 INFO  [restartedMain] [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] - Post-processing PropertySource instances
2023-06-11 22:08:17.226 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2023-06-11 22:08:17.226 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource commandLineArgs [org.springframework.core.env.SimpleCommandLinePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-06-11 22:08:17.226 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-06-11 22:08:17.226 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-06-11 22:08:17.226 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-11 22:08:17.226 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
2023-06-11 22:08:17.226 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2023-06-11 22:08:17.226 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application-oauth.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-11 22:08:17.227 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-11 22:08:17.227 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-11 22:08:17.227 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [pjy.properties] [org.springframework.core.env.CompositePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-06-11 22:08:17.227 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [common.properties] [org.springframework.core.io.support.ResourcePropertySource] to EncryptableMapPropertySourceWrapper
2023-06-11 22:08:17.272 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'asyncConfiguration' of type [com.pjy.dashboard.configuration.AsyncConfiguration$$EnhancerBySpringCGLIB$$89b5ac1e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 22:08:17.307 INFO  [restartedMain] [c.u.j.filter.DefaultLazyPropertyFilter] - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2023-06-11 22:08:17.363 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$73ac104b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 22:08:17.423 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 22:08:17.424 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@50a48f5b' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 22:08:17.428 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$9880b2fd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 22:08:17.435 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration$$EnhancerBySpringCGLIB$$bdd5cb13] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 22:08:17.441 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 22:08:17.441 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 22:08:17.454 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$dafe4811] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 22:08:17.473 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$5a7e9543] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 22:08:17.554 INFO  [restartedMain] [c.u.j.r.DefaultLazyPropertyResolver] - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2023-06-11 22:08:17.557 INFO  [restartedMain] [c.u.j.d.DefaultLazyPropertyDetector] - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2023-06-11 22:08:17.837 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 10010 (http)
2023-06-11 22:08:17.850 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Initializing ProtocolHandler ["http-nio-10010"]
2023-06-11 22:08:17.856 INFO  [restartedMain] [org.apache.catalina.core.StandardService] - Starting service [Tomcat]
2023-06-11 22:08:17.856 INFO  [restartedMain] [org.apache.catalina.core.StandardEngine] - Starting Servlet engine: [Apache Tomcat/9.0.29]
2023-06-11 22:08:18.063 INFO  [restartedMain] [org.apache.jasper.servlet.TldScanner] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2023-06-11 22:08:18.071 INFO  [restartedMain] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring embedded WebApplicationContext
2023-06-11 22:08:18.071 INFO  [restartedMain] [o.s.web.context.ContextLoader] - Root WebApplicationContext: initialization completed in 2364 ms
2023-06-11 22:08:18.593 INFO  [restartedMain] [c.u.j.encryptor.DefaultLazyEncryptor] - Found Custom Encryptor Bean org.jasypt.encryption.pbe.PooledPBEStringEncryptor@327abf9d with name: jasyptStringEncryptor
2023-06-11 22:08:18.631 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Starting...
2023-06-11 22:08:18.696 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.executeSql(PoolBase.java:567)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 8 msec}
2023-06-11 22:08:18.698 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Start completed.
2023-06-11 22:08:19.172 INFO  [restartedMain] [com.pjy.dashboard.filter.TestFilter] - init Pjy Filter
2023-06-11 22:08:19.399 INFO  [restartedMain] [o.hibernate.jpa.internal.util.LogHelper] - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2023-06-11 22:08:19.455 INFO  [restartedMain] [org.hibernate.Version] - HHH000412: Hibernate Core {5.3.14.Final}
2023-06-11 22:08:19.457 INFO  [restartedMain] [org.hibernate.cfg.Environment] - HHH000206: hibernate.properties not found
2023-06-11 22:08:19.572 INFO  [restartedMain] [org.hibernate.annotations.common.Version] - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2023-06-11 22:08:19.734 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 22:08:19.747 INFO  [restartedMain] [org.hibernate.dialect.Dialect] - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2023-06-11 22:08:20.239 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 22:08:20.241 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select SEQUENCE_CATALOG, SEQUENCE_SCHEMA, SEQUENCE_NAME, INCREMENT from information_schema.sequences
 {executed in 1 msec}
2023-06-11 22:08:20.274 INFO  [restartedMain] [o.s.o.j.LocalContainerEntityManagerFactoryBean] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-06-11 22:08:20.455 INFO  [restartedMain] [o.h.h.i.QueryTranslatorFactoryInitiator] - HHH000397: Using ASTQueryTranslatorFactory
2023-06-11 22:08:20.649 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'clientInboundChannelExecutor'
2023-06-11 22:08:20.659 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'clientOutboundChannelExecutor'
2023-06-11 22:08:21.279 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService
2023-06-11 22:08:21.279 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'asyncThreadPool'
2023-06-11 22:08:21.408 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/h2-console/**'], []
2023-06-11 22:08:21.408 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/css/**'], []
2023-06-11 22:08:21.408 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/js/**'], []
2023-06-11 22:08:21.408 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/monitor/**'], []
2023-06-11 22:08:21.408 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/img/**'], []
2023-06-11 22:08:21.408 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/lib/**'], []
2023-06-11 22:08:21.408 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/main.css'], []
2023-06-11 22:08:21.408 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/common.js'], []
2023-06-11 22:08:21.408 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/resources/**'], []
2023-06-11 22:08:21.512 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3f5cb0e6, org.springframework.security.web.context.SecurityContextPersistenceFilter@aab5914, org.springframework.security.web.header.HeaderWriterFilter@7ce3cbab, org.springframework.web.filter.CorsFilter@2ffd7f1, org.springframework.security.web.authentication.logout.LogoutFilter@458ffa3b, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@62cdfeef, org.springframework.security.web.session.ConcurrentSessionFilter@22d795f4, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@5598ead8, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7b9bb1fc, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@64101806, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@66934f49, org.springframework.security.web.session.SessionManagementFilter@4ac0e377, org.springframework.security.web.access.ExceptionTranslationFilter@85a03f1, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@598ab3e7]
2023-06-11 22:08:21.529 INFO  [restartedMain] [o.s.aop.framework.CglibAopProxy] - Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(javax.servlet.FilterConfig) throws javax.servlet.ServletException] because it is marked as final: Consider using interface-based JDK proxies instead!
2023-06-11 22:08:21.557 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskScheduler] - Initializing ExecutorService 'messageBrokerTaskScheduler'
2023-06-11 22:08:21.604 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'brokerChannelExecutor'
2023-06-11 22:08:21.885 WARN  [restartedMain] [o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-06-11 22:08:21.939 INFO  [restartedMain] [o.s.b.a.w.s.WelcomePageHandlerMapping] - Adding welcome page: ServletContext resource [/index.html]
2023-06-11 22:08:22.238 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 22:08:22.800 INFO  [restartedMain] [o.s.b.d.a.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2023-06-11 22:08:22.819 INFO  [restartedMain] [o.s.b.a.e.web.EndpointLinksResolver] - Exposing 16 endpoint(s) beneath base path '/actuator'
2023-06-11 22:08:22.905 INFO  [restartedMain] [o.s.m.s.b.SimpleBrokerMessageHandler] - Starting...
2023-06-11 22:08:22.905 INFO  [restartedMain] [o.s.m.s.b.SimpleBrokerMessageHandler] - BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2023-06-11 22:08:22.906 INFO  [restartedMain] [o.s.m.s.b.SimpleBrokerMessageHandler] - Started.
2023-06-11 22:08:22.913 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskScheduler] - Initializing ExecutorService
2023-06-11 22:08:22.915 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Starting ProtocolHandler ["http-nio-10010"]
2023-06-11 22:08:22.952 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 10010 (http) with context path ''
2023-06-11 22:08:22.955 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Started PjyApplication in 7.6 seconds (JVM running for 8.399)
2023-06-11 22:08:22.955 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-06-11 22:08:22.955 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - Application started
2023-06-11 22:08:22.955 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-06-11 22:08:24.080 INFO  [RMI TCP Connection(9)-127.0.0.1] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-11 22:08:24.081 INFO  [RMI TCP Connection(9)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Initializing Servlet 'dispatcherServlet'
2023-06-11 22:08:24.093 INFO  [RMI TCP Connection(9)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Completed initialization in 12 ms
2023-06-11 22:08:25.592 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@17d0d2df
2023-06-11 22:08:25.644 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 22:08:25.651 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  '5' AS a0 
		,	'' AS a1, 			''	  AS a1_value  
		,	'' AS a2, 			''  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		nvl(b.email,'')  AS a4_value 
		,	'성별' AS a5, 		a.sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='박병승' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		a.TEAM_NM  AS a1_value  
		,	'노선' AS a2, 		nvl(b.route_nm,'')  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		a.PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		nvl(b.hobong,'') AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='박병승' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		a.JOB_KIND AS a1_value 
		,	'직종' AS a2, 		a.JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'고정/SP구분' AS a4, 	nvl(b.sp_gb,'') AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='박병승' 
	union 
	SELECT  '2' AS a0 
		,	'생 년 월 일' AS a1, 		nvl(b.BIRTH_YMD,'') AS a1_value  
		,	'근 속 일 자' AS a2, 		nvl(to_char(datediff(DAY,'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		nvl(b.work_group,'') AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='박병승' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴 사 일 자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		nvl(b.address,'') AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='박병승' 
	union 
	SELECT  '0' AS a0 
		,	'사 원 번 호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입 사 일 자' AS a2, 		'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-') AS a2_value 
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='박병승'
 {executed in 2 msec}
2023-06-11 22:09:21.612 INFO  [MessageBroker-1] [o.s.w.s.c.WebSocketMessageBrokerStats] - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2023-06-11 22:10:31.596 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8390ca5b
2023-06-11 22:10:31.597 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 22:10:31.600 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  '5' AS a0 
		,	'' AS a1, 			''	  AS a1_value  
		,	'' AS a2, 			''  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		nvl(b.email,'')  AS a4_value 
		,	'성별' AS a5, 		a.sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='박근호' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		a.TEAM_NM  AS a1_value  
		,	'노선' AS a2, 		nvl(b.route_nm,'')  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		a.PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		nvl(b.hobong,'') AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='박근호' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		a.JOB_KIND AS a1_value 
		,	'직종' AS a2, 		a.JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'고정/SP구분' AS a4, 	nvl(b.sp_gb,'') AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='박근호' 
	union 
	SELECT  '2' AS a0 
		,	'생 년 월 일' AS a1, 		nvl(b.BIRTH_YMD,'') AS a1_value  
		,	'근 속 일 자' AS a2, 		nvl(to_char(datediff(DAY,'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		nvl(b.work_group,'') AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='박근호' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴 사 일 자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		nvl(b.address,'') AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='박근호' 
	union 
	SELECT  '0' AS a0 
		,	'사 원 번 호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입 사 일 자' AS a2, 		'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-') AS a2_value 
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='박근호'
 {executed in 2 msec}
2023-06-11 22:10:40.426 INFO  [RMI TCP Connection(15)-127.0.0.1] [o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin] - Application shutdown requested.
2023-06-11 22:10:40.429 INFO  [RMI TCP Connection(15)-127.0.0.1] [o.s.m.s.b.SimpleBrokerMessageHandler] - Stopping...
2023-06-11 22:10:40.429 INFO  [RMI TCP Connection(15)-127.0.0.1] [o.s.m.s.b.SimpleBrokerMessageHandler] - BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2023-06-11 22:10:40.429 INFO  [RMI TCP Connection(15)-127.0.0.1] [o.s.m.s.b.SimpleBrokerMessageHandler] - Stopped.
2023-06-11 22:10:40.449 INFO  [RMI TCP Connection(15)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Shutting down ExecutorService 'brokerChannelExecutor'
2023-06-11 22:10:40.449 INFO  [RMI TCP Connection(15)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskScheduler] - Shutting down ExecutorService 'messageBrokerTaskScheduler'
2023-06-11 22:10:40.450 INFO  [RMI TCP Connection(15)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Shutting down ExecutorService 'asyncThreadPool'
2023-06-11 22:10:40.450 INFO  [RMI TCP Connection(15)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Shutting down ExecutorService 'clientOutboundChannelExecutor'
2023-06-11 22:10:40.450 INFO  [RMI TCP Connection(15)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Shutting down ExecutorService 'clientInboundChannelExecutor'
2023-06-11 22:10:40.452 INFO  [RMI TCP Connection(15)-127.0.0.1] [com.zaxxer.hikari.HikariDataSource] - H2 - Shutdown initiated...
2023-06-11 22:10:40.456 INFO  [RMI TCP Connection(15)-127.0.0.1] [com.zaxxer.hikari.HikariDataSource] - H2 - Shutdown completed.
2023-06-11 22:10:40.480 INFO  [RMI TCP Connection(15)-127.0.0.1] [com.pjy.dashboard.filter.TestFilter] - destroy Pjy Filter
2023-06-11 22:10:42.674 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Starting PjyApplication on DESKTOP-3O1I9JM with PID 37076 (C:\BUS\multimodule-parent\dashboard\target\classes started by admin in C:\BUS\multimodule-parent\dashboard)
2023-06-11 22:10:42.677 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - The following profiles are active: oauth
2023-06-11 22:10:42.712 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-06-11 22:10:42.712 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-06-11 22:10:43.486 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-11 22:10:43.486 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-06-11 22:10:43.582 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 90ms. Found 2 JPA repository interfaces.
2023-06-11 22:10:43.822 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-11 22:10:43.823 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2023-06-11 22:10:43.861 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.MemberRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-06-11 22:10:43.861 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.RememberMeRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-06-11 22:10:43.861 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 38ms. Found 0 JDBC repository interfaces.
2023-06-11 22:10:44.174 INFO  [restartedMain] [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] - Post-processing PropertySource instances
2023-06-11 22:10:44.229 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2023-06-11 22:10:44.229 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource commandLineArgs [org.springframework.core.env.SimpleCommandLinePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-06-11 22:10:44.229 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-06-11 22:10:44.229 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-06-11 22:10:44.229 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-11 22:10:44.229 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
2023-06-11 22:10:44.229 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2023-06-11 22:10:44.229 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application-oauth.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-11 22:10:44.229 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-11 22:10:44.230 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-11 22:10:44.230 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [pjy.properties] [org.springframework.core.env.CompositePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-06-11 22:10:44.230 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [common.properties] [org.springframework.core.io.support.ResourcePropertySource] to EncryptableMapPropertySourceWrapper
2023-06-11 22:10:44.285 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'asyncConfiguration' of type [com.pjy.dashboard.configuration.AsyncConfiguration$$EnhancerBySpringCGLIB$$5b988d82] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 22:10:44.324 INFO  [restartedMain] [c.u.j.filter.DefaultLazyPropertyFilter] - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2023-06-11 22:10:44.386 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$458ef1af] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 22:10:44.451 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 22:10:44.453 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@46749d31' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 22:10:44.456 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$6a639461] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 22:10:44.462 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration$$EnhancerBySpringCGLIB$$8fb8ac77] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 22:10:44.465 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 22:10:44.465 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 22:10:44.478 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ace12975] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 22:10:44.497 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$2c6176a7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 22:10:44.581 INFO  [restartedMain] [c.u.j.r.DefaultLazyPropertyResolver] - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2023-06-11 22:10:44.585 INFO  [restartedMain] [c.u.j.d.DefaultLazyPropertyDetector] - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2023-06-11 22:10:44.866 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 10010 (http)
2023-06-11 22:10:44.879 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Initializing ProtocolHandler ["http-nio-10010"]
2023-06-11 22:10:44.885 INFO  [restartedMain] [org.apache.catalina.core.StandardService] - Starting service [Tomcat]
2023-06-11 22:10:44.885 INFO  [restartedMain] [org.apache.catalina.core.StandardEngine] - Starting Servlet engine: [Apache Tomcat/9.0.29]
2023-06-11 22:10:45.091 INFO  [restartedMain] [org.apache.jasper.servlet.TldScanner] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2023-06-11 22:10:45.098 INFO  [restartedMain] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring embedded WebApplicationContext
2023-06-11 22:10:45.098 INFO  [restartedMain] [o.s.web.context.ContextLoader] - Root WebApplicationContext: initialization completed in 2386 ms
2023-06-11 22:10:45.616 INFO  [restartedMain] [c.u.j.encryptor.DefaultLazyEncryptor] - Found Custom Encryptor Bean org.jasypt.encryption.pbe.PooledPBEStringEncryptor@15dfe034 with name: jasyptStringEncryptor
2023-06-11 22:10:45.651 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Starting...
2023-06-11 22:10:45.711 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.executeSql(PoolBase.java:567)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 5 msec}
2023-06-11 22:10:45.717 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Start completed.
2023-06-11 22:10:46.187 INFO  [restartedMain] [com.pjy.dashboard.filter.TestFilter] - init Pjy Filter
2023-06-11 22:10:46.416 INFO  [restartedMain] [o.hibernate.jpa.internal.util.LogHelper] - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2023-06-11 22:10:46.477 INFO  [restartedMain] [org.hibernate.Version] - HHH000412: Hibernate Core {5.3.14.Final}
2023-06-11 22:10:46.478 INFO  [restartedMain] [org.hibernate.cfg.Environment] - HHH000206: hibernate.properties not found
2023-06-11 22:10:46.593 INFO  [restartedMain] [org.hibernate.annotations.common.Version] - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2023-06-11 22:10:46.754 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-11 22:10:46.766 INFO  [restartedMain] [org.hibernate.dialect.Dialect] - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2023-06-11 22:10:47.258 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-11 22:10:47.259 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select SEQUENCE_CATALOG, SEQUENCE_SCHEMA, SEQUENCE_NAME, INCREMENT from information_schema.sequences
 {executed in 0 msec}
2023-06-11 22:10:47.292 INFO  [restartedMain] [o.s.o.j.LocalContainerEntityManagerFactoryBean] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-06-11 22:10:47.470 INFO  [restartedMain] [o.h.h.i.QueryTranslatorFactoryInitiator] - HHH000397: Using ASTQueryTranslatorFactory
2023-06-11 22:10:47.659 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'clientInboundChannelExecutor'
2023-06-11 22:10:47.669 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'clientOutboundChannelExecutor'
2023-06-11 22:10:48.292 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService
2023-06-11 22:10:48.292 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'asyncThreadPool'
2023-06-11 22:10:48.424 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/h2-console/**'], []
2023-06-11 22:10:48.424 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/css/**'], []
2023-06-11 22:10:48.424 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/js/**'], []
2023-06-11 22:10:48.424 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/monitor/**'], []
2023-06-11 22:10:48.424 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/img/**'], []
2023-06-11 22:10:48.424 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/lib/**'], []
2023-06-11 22:10:48.424 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/main.css'], []
2023-06-11 22:10:48.424 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/common.js'], []
2023-06-11 22:10:48.424 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/resources/**'], []
2023-06-11 22:10:48.528 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4a444da5, org.springframework.security.web.context.SecurityContextPersistenceFilter@4f5d49, org.springframework.security.web.header.HeaderWriterFilter@261ede9a, org.springframework.web.filter.CorsFilter@273c5419, org.springframework.security.web.authentication.logout.LogoutFilter@cc339a2, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@4ee7a451, org.springframework.security.web.session.ConcurrentSessionFilter@25cbd90, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@54522e10, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3d477619, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6ef4112, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3739efc2, org.springframework.security.web.session.SessionManagementFilter@3e90bd1a, org.springframework.security.web.access.ExceptionTranslationFilter@478235b8, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@668720bc]
2023-06-11 22:10:48.544 INFO  [restartedMain] [o.s.aop.framework.CglibAopProxy] - Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(javax.servlet.FilterConfig) throws javax.servlet.ServletException] because it is marked as final: Consider using interface-based JDK proxies instead!
2023-06-11 22:10:48.575 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskScheduler] - Initializing ExecutorService 'messageBrokerTaskScheduler'
2023-06-11 22:10:48.617 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'brokerChannelExecutor'
2023-06-11 22:10:48.912 WARN  [restartedMain] [o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-06-11 22:10:48.961 INFO  [restartedMain] [o.s.b.a.w.s.WelcomePageHandlerMapping] - Adding welcome page: ServletContext resource [/index.html]
2023-06-11 22:10:49.242 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 22:10:49.804 INFO  [restartedMain] [o.s.b.d.a.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2023-06-11 22:10:49.823 INFO  [restartedMain] [o.s.b.a.e.web.EndpointLinksResolver] - Exposing 16 endpoint(s) beneath base path '/actuator'
2023-06-11 22:10:49.912 INFO  [restartedMain] [o.s.m.s.b.SimpleBrokerMessageHandler] - Starting...
2023-06-11 22:10:49.913 INFO  [restartedMain] [o.s.m.s.b.SimpleBrokerMessageHandler] - BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2023-06-11 22:10:49.913 INFO  [restartedMain] [o.s.m.s.b.SimpleBrokerMessageHandler] - Started.
2023-06-11 22:10:49.920 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskScheduler] - Initializing ExecutorService
2023-06-11 22:10:49.922 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Starting ProtocolHandler ["http-nio-10010"]
2023-06-11 22:10:49.963 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 10010 (http) with context path ''
2023-06-11 22:10:49.967 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Started PjyApplication in 7.599 seconds (JVM running for 8.395)
2023-06-11 22:10:49.967 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-06-11 22:10:49.967 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - Application started
2023-06-11 22:10:49.967 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-06-11 22:10:50.918 INFO  [RMI TCP Connection(8)-127.0.0.1] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-11 22:10:50.918 INFO  [RMI TCP Connection(8)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Initializing Servlet 'dispatcherServlet'
2023-06-11 22:10:50.931 INFO  [RMI TCP Connection(8)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Completed initialization in 12 ms
2023-06-11 22:11:48.620 INFO  [MessageBroker-1] [o.s.w.s.c.WebSocketMessageBrokerStats] - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2023-06-11 22:12:41.316 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@e95e3ff4
2023-06-11 22:12:41.389 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-11 22:12:41.402 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  '5' AS a0 
		,	'' AS a1, 			''	  AS a1_value  
		,	'' AS a2, 			''  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		nvl(b.email,'')  AS a4_value 
		,	'성별' AS a5, 		a.sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='이승욱' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		a.TEAM_NM  AS a1_value  
		,	'노선' AS a2, 		nvl(b.route_nm,'')  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		a.PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		nvl(b.hobong,'') AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='이승욱' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		a.JOB_KIND AS a1_value 
		,	'직종' AS a2, 		a.JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'고정/SP구분' AS a4, 	nvl(b.sp_gb,'') AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='이승욱' 
	union 
	SELECT  '2' AS a0 
		,	'생년월일' AS a1, 		nvl(b.BIRTH_YMD,'') AS a1_value  
		,	'근속일자' AS a2, 		nvl(to_char(datediff(DAY,'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		nvl(b.work_group,'') AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='이승욱' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		nvl(b.address,'') AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='이승욱' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-') AS a2_value 
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='이승욱'
 {executed in 5 msec}
2023-06-11 22:13:48.490 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@d9026782
2023-06-11 22:13:48.519 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
2023-06-11 22:13:48.526 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-11 22:13:48.527 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 1 msec}
2023-06-11 22:13:48.530 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 1 msec}
2023-06-11 22:13:49.916 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@276d94ac
2023-06-11 22:13:49.918 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 22:13:49.919 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  '5' AS a0 
		,	'' AS a1, 			''	  AS a1_value  
		,	'' AS a2, 			''  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		nvl(b.email,'')  AS a4_value 
		,	'성별' AS a5, 		a.sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='문영식' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		a.TEAM_NM  AS a1_value  
		,	'노선' AS a2, 		nvl(b.route_nm,'')  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		a.PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		nvl(b.hobong,'') AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='문영식' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		a.JOB_KIND AS a1_value 
		,	'직종' AS a2, 		a.JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'고정/SP구분' AS a4, 	nvl(b.sp_gb,'') AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='문영식' 
	union 
	SELECT  '2' AS a0 
		,	'생년월일' AS a1, 		nvl(b.BIRTH_YMD,'') AS a1_value  
		,	'근속일자' AS a2, 		nvl(to_char(datediff(DAY,'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		nvl(b.work_group,'') AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='문영식' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		nvl(b.address,'') AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='문영식' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-') AS a2_value 
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='문영식'
 {executed in 1 msec}
2023-06-11 22:14:27.550 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@affe6b13
2023-06-11 22:14:27.551 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 22:14:27.553 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  '5' AS a0 
		,	'' AS a1, 			''	  AS a1_value  
		,	'' AS a2, 			''  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		nvl(b.email,'')  AS a4_value 
		,	'성별' AS a5, 		a.sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김문성' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		a.TEAM_NM  AS a1_value  
		,	'노선' AS a2, 		nvl(b.route_nm,'')  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		a.PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		nvl(b.hobong,'') AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김문성' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		a.JOB_KIND AS a1_value 
		,	'직종' AS a2, 		a.JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'고정/SP구분' AS a4, 	nvl(b.sp_gb,'') AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김문성' 
	union 
	SELECT  '2' AS a0 
		,	'생년월일' AS a1, 		nvl(b.BIRTH_YMD,'') AS a1_value  
		,	'근속일자' AS a2, 		nvl(to_char(datediff(DAY,'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		nvl(b.work_group,'') AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김문성' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		nvl(b.address,'') AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김문성' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-') AS a2_value 
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김문성'
 {executed in 1 msec}
2023-06-11 22:14:31.484 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@a305bf1b
2023-06-11 22:14:31.485 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-11 22:14:31.490 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  '5' AS a0 
		,	'' AS a1, 			''	  AS a1_value  
		,	'' AS a2, 			''  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		nvl(b.email,'')  AS a4_value 
		,	'성별' AS a5, 		a.sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='손진종' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		a.TEAM_NM  AS a1_value  
		,	'노선' AS a2, 		nvl(b.route_nm,'')  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		a.PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		nvl(b.hobong,'') AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='손진종' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		a.JOB_KIND AS a1_value 
		,	'직종' AS a2, 		a.JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'고정/SP구분' AS a4, 	nvl(b.sp_gb,'') AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='손진종' 
	union 
	SELECT  '2' AS a0 
		,	'생년월일' AS a1, 		nvl(b.BIRTH_YMD,'') AS a1_value  
		,	'근속일자' AS a2, 		nvl(to_char(datediff(DAY,'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		nvl(b.work_group,'') AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='손진종' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		nvl(b.address,'') AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='손진종' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-') AS a2_value 
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='손진종'
 {executed in 2 msec}
2023-06-11 22:14:36.348 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@f7785af
2023-06-11 22:14:36.350 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 22:14:36.352 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  '5' AS a0 
		,	'' AS a1, 			''	  AS a1_value  
		,	'' AS a2, 			''  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		nvl(b.email,'')  AS a4_value 
		,	'성별' AS a5, 		a.sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='유재학' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		a.TEAM_NM  AS a1_value  
		,	'노선' AS a2, 		nvl(b.route_nm,'')  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		a.PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		nvl(b.hobong,'') AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='유재학' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		a.JOB_KIND AS a1_value 
		,	'직종' AS a2, 		a.JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'고정/SP구분' AS a4, 	nvl(b.sp_gb,'') AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='유재학' 
	union 
	SELECT  '2' AS a0 
		,	'생년월일' AS a1, 		nvl(b.BIRTH_YMD,'') AS a1_value  
		,	'근속일자' AS a2, 		nvl(to_char(datediff(DAY,'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		nvl(b.work_group,'') AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='유재학' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		nvl(b.address,'') AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='유재학' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-') AS a2_value 
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='유재학'
 {executed in 1 msec}
2023-06-11 22:17:06.221 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@96cd0f0e
2023-06-11 22:17:06.222 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_DRIVERINFO a where   a.company_no = '100' order by a.emp_no
2023-06-11 22:17:06.222 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 22:17:06.225 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBL_DRIVERINFO a where   a.company_no = '100' order by a.emp_no
 {executed in 3 msec}
2023-06-11 22:17:06.228 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBL_DRIVERINFO a where   a.company_no = '100' order by a.emp_no
 {executed in 2 msec}
2023-06-11 22:18:25.595 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@96cd0f0e
2023-06-11 22:18:25.595 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_DRIVERINFO a where   a.company_no = '100' order by a.emp_no
2023-06-11 22:18:25.596 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-11 22:18:25.599 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBL_DRIVERINFO a where   a.company_no = '100' order by a.emp_no
 {executed in 2 msec}
2023-06-11 22:18:25.600 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBL_DRIVERINFO a where   a.company_no = '100' order by a.emp_no
 {executed in 1 msec}
2023-06-11 22:18:27.666 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@276d94ac
2023-06-11 22:18:27.667 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 22:18:27.670 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  '5' AS a0 
		,	'' AS a1, 			''	  AS a1_value  
		,	'' AS a2, 			''  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		nvl(b.email,'')  AS a4_value 
		,	'성별' AS a5, 		a.sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='문영식' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		a.TEAM_NM  AS a1_value  
		,	'노선' AS a2, 		nvl(b.route_nm,'')  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		a.PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		nvl(b.hobong,'') AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='문영식' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		a.JOB_KIND AS a1_value 
		,	'직종' AS a2, 		a.JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'고정/SP구분' AS a4, 	nvl(b.sp_gb,'') AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='문영식' 
	union 
	SELECT  '2' AS a0 
		,	'생년월일' AS a1, 		nvl(b.BIRTH_YMD,'') AS a1_value  
		,	'근속일자' AS a2, 		nvl(to_char(datediff(DAY,'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		nvl(b.work_group,'') AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='문영식' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		nvl(b.address,'') AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='문영식' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-') AS a2_value 
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='문영식'
 {executed in 2 msec}
2023-06-11 22:19:11.458 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@96cd0f0e
2023-06-11 22:19:11.458 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_DRIVERINFO a where   a.company_no = '100' order by a.emp_no
2023-06-11 22:19:11.459 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 22:19:11.461 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBL_DRIVERINFO a where   a.company_no = '100' order by a.emp_no
 {executed in 2 msec}
2023-06-11 22:19:11.463 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBL_DRIVERINFO a where   a.company_no = '100' order by a.emp_no
 {executed in 2 msec}
2023-06-11 22:19:12.705 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@e95e3ff4
2023-06-11 22:19:12.706 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 22:19:12.708 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  '5' AS a0 
		,	'' AS a1, 			''	  AS a1_value  
		,	'' AS a2, 			''  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		nvl(b.email,'')  AS a4_value 
		,	'성별' AS a5, 		a.sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='이승욱' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		a.TEAM_NM  AS a1_value  
		,	'노선' AS a2, 		nvl(b.route_nm,'')  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		a.PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		nvl(b.hobong,'') AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='이승욱' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		a.JOB_KIND AS a1_value 
		,	'직종' AS a2, 		a.JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'고정/SP구분' AS a4, 	nvl(b.sp_gb,'') AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='이승욱' 
	union 
	SELECT  '2' AS a0 
		,	'생년월일' AS a1, 		nvl(b.BIRTH_YMD,'') AS a1_value  
		,	'근속일자' AS a2, 		nvl(to_char(datediff(DAY,'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		nvl(b.work_group,'') AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='이승욱' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		nvl(b.address,'') AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='이승욱' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-') AS a2_value 
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='이승욱'
 {executed in 1 msec}
2023-06-11 22:19:52.220 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8acdcecd
2023-06-11 22:19:52.222 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 22:19:52.229 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  '5' AS a0 
		,	'' AS a1, 			''	  AS a1_value  
		,	'' AS a2, 			''  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		nvl(b.email,'')  AS a4_value 
		,	'성별' AS a5, 		a.sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김정일' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		a.TEAM_NM  AS a1_value  
		,	'노선' AS a2, 		nvl(b.route_nm,'')  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		a.PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		nvl(b.hobong,'') AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김정일' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		a.JOB_KIND AS a1_value 
		,	'직종' AS a2, 		a.JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'고정/SP구분' AS a4, 	nvl(b.sp_gb,'') AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김정일' 
	union 
	SELECT  '2' AS a0 
		,	'생년월일' AS a1, 		nvl(b.BIRTH_YMD,'') AS a1_value  
		,	'근속일자' AS a2, 		nvl(to_char(datediff(DAY,'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		nvl(b.work_group,'') AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김정일' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		nvl(b.address,'') AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김정일' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-') AS a2_value 
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김정일'
 {executed in 1 msec}
2023-06-11 22:21:40.189 INFO  [RMI TCP Connection(22)-127.0.0.1] [o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin] - Application shutdown requested.
2023-06-11 22:21:40.191 INFO  [RMI TCP Connection(22)-127.0.0.1] [o.s.m.s.b.SimpleBrokerMessageHandler] - Stopping...
2023-06-11 22:21:40.191 INFO  [RMI TCP Connection(22)-127.0.0.1] [o.s.m.s.b.SimpleBrokerMessageHandler] - BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2023-06-11 22:21:40.191 INFO  [RMI TCP Connection(22)-127.0.0.1] [o.s.m.s.b.SimpleBrokerMessageHandler] - Stopped.
2023-06-11 22:21:40.211 INFO  [RMI TCP Connection(22)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Shutting down ExecutorService 'brokerChannelExecutor'
2023-06-11 22:21:40.211 INFO  [RMI TCP Connection(22)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskScheduler] - Shutting down ExecutorService 'messageBrokerTaskScheduler'
2023-06-11 22:21:40.211 INFO  [RMI TCP Connection(22)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Shutting down ExecutorService 'asyncThreadPool'
2023-06-11 22:21:40.212 INFO  [RMI TCP Connection(22)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Shutting down ExecutorService 'clientOutboundChannelExecutor'
2023-06-11 22:21:40.212 INFO  [RMI TCP Connection(22)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Shutting down ExecutorService 'clientInboundChannelExecutor'
2023-06-11 22:21:40.213 INFO  [RMI TCP Connection(22)-127.0.0.1] [com.zaxxer.hikari.HikariDataSource] - H2 - Shutdown initiated...
2023-06-11 22:21:40.217 INFO  [RMI TCP Connection(22)-127.0.0.1] [com.zaxxer.hikari.HikariDataSource] - H2 - Shutdown completed.
2023-06-11 22:21:40.243 INFO  [RMI TCP Connection(22)-127.0.0.1] [com.pjy.dashboard.filter.TestFilter] - destroy Pjy Filter
2023-06-11 22:21:42.516 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Starting PjyApplication on DESKTOP-3O1I9JM with PID 11844 (C:\BUS\multimodule-parent\dashboard\target\classes started by admin in C:\BUS\multimodule-parent\dashboard)
2023-06-11 22:21:42.519 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - The following profiles are active: oauth
2023-06-11 22:21:42.560 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-06-11 22:21:42.560 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-06-11 22:21:43.335 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-11 22:21:43.336 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-06-11 22:21:43.435 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 94ms. Found 2 JPA repository interfaces.
2023-06-11 22:21:43.681 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-11 22:21:43.681 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2023-06-11 22:21:43.715 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.MemberRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-06-11 22:21:43.716 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.RememberMeRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-06-11 22:21:43.716 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 35ms. Found 0 JDBC repository interfaces.
2023-06-11 22:21:44.016 INFO  [restartedMain] [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] - Post-processing PropertySource instances
2023-06-11 22:21:44.060 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2023-06-11 22:21:44.060 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource commandLineArgs [org.springframework.core.env.SimpleCommandLinePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-06-11 22:21:44.060 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-06-11 22:21:44.060 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-06-11 22:21:44.061 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-11 22:21:44.061 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
2023-06-11 22:21:44.061 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2023-06-11 22:21:44.061 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application-oauth.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-11 22:21:44.061 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-11 22:21:44.061 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-11 22:21:44.061 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [pjy.properties] [org.springframework.core.env.CompositePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-06-11 22:21:44.061 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [common.properties] [org.springframework.core.io.support.ResourcePropertySource] to EncryptableMapPropertySourceWrapper
2023-06-11 22:21:44.108 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'asyncConfiguration' of type [com.pjy.dashboard.configuration.AsyncConfiguration$$EnhancerBySpringCGLIB$$a6190430] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 22:21:44.143 INFO  [restartedMain] [c.u.j.filter.DefaultLazyPropertyFilter] - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2023-06-11 22:21:44.203 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$900f685d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 22:21:44.268 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 22:21:44.271 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@2f2b5e5a' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 22:21:44.276 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$b4e40b0f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 22:21:44.283 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration$$EnhancerBySpringCGLIB$$da392325] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 22:21:44.292 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 22:21:44.293 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 22:21:44.308 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$f761a023] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 22:21:44.327 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$76e1ed55] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 22:21:44.407 INFO  [restartedMain] [c.u.j.r.DefaultLazyPropertyResolver] - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2023-06-11 22:21:44.410 INFO  [restartedMain] [c.u.j.d.DefaultLazyPropertyDetector] - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2023-06-11 22:21:44.748 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 10010 (http)
2023-06-11 22:21:44.763 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Initializing ProtocolHandler ["http-nio-10010"]
2023-06-11 22:21:44.770 INFO  [restartedMain] [org.apache.catalina.core.StandardService] - Starting service [Tomcat]
2023-06-11 22:21:44.770 INFO  [restartedMain] [org.apache.catalina.core.StandardEngine] - Starting Servlet engine: [Apache Tomcat/9.0.29]
2023-06-11 22:21:45.012 INFO  [restartedMain] [org.apache.jasper.servlet.TldScanner] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2023-06-11 22:21:45.020 INFO  [restartedMain] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring embedded WebApplicationContext
2023-06-11 22:21:45.020 INFO  [restartedMain] [o.s.web.context.ContextLoader] - Root WebApplicationContext: initialization completed in 2460 ms
2023-06-11 22:21:45.525 INFO  [restartedMain] [c.u.j.encryptor.DefaultLazyEncryptor] - Found Custom Encryptor Bean org.jasypt.encryption.pbe.PooledPBEStringEncryptor@6c6153e5 with name: jasyptStringEncryptor
2023-06-11 22:21:45.562 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Starting...
2023-06-11 22:21:45.626 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.executeSql(PoolBase.java:567)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 4 msec}
2023-06-11 22:21:45.629 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Start completed.
2023-06-11 22:21:46.107 INFO  [restartedMain] [com.pjy.dashboard.filter.TestFilter] - init Pjy Filter
2023-06-11 22:21:46.331 INFO  [restartedMain] [o.hibernate.jpa.internal.util.LogHelper] - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2023-06-11 22:21:46.386 INFO  [restartedMain] [org.hibernate.Version] - HHH000412: Hibernate Core {5.3.14.Final}
2023-06-11 22:21:46.387 INFO  [restartedMain] [org.hibernate.cfg.Environment] - HHH000206: hibernate.properties not found
2023-06-11 22:21:46.499 INFO  [restartedMain] [org.hibernate.annotations.common.Version] - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2023-06-11 22:21:46.657 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 22:21:46.670 INFO  [restartedMain] [org.hibernate.dialect.Dialect] - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2023-06-11 22:21:47.149 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select SEQUENCE_CATALOG, SEQUENCE_SCHEMA, SEQUENCE_NAME, INCREMENT from information_schema.sequences
 {executed in 1 msec}
2023-06-11 22:21:47.179 INFO  [restartedMain] [o.s.o.j.LocalContainerEntityManagerFactoryBean] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-06-11 22:21:47.356 INFO  [restartedMain] [o.h.h.i.QueryTranslatorFactoryInitiator] - HHH000397: Using ASTQueryTranslatorFactory
2023-06-11 22:21:47.542 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'clientInboundChannelExecutor'
2023-06-11 22:21:47.554 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'clientOutboundChannelExecutor'
2023-06-11 22:21:48.181 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService
2023-06-11 22:21:48.181 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'asyncThreadPool'
2023-06-11 22:21:48.315 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/h2-console/**'], []
2023-06-11 22:21:48.316 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/css/**'], []
2023-06-11 22:21:48.316 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/js/**'], []
2023-06-11 22:21:48.316 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/monitor/**'], []
2023-06-11 22:21:48.316 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/img/**'], []
2023-06-11 22:21:48.316 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/lib/**'], []
2023-06-11 22:21:48.316 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/main.css'], []
2023-06-11 22:21:48.316 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/common.js'], []
2023-06-11 22:21:48.316 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/resources/**'], []
2023-06-11 22:21:48.419 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3865b53c, org.springframework.security.web.context.SecurityContextPersistenceFilter@240240f8, org.springframework.security.web.header.HeaderWriterFilter@56de696a, org.springframework.web.filter.CorsFilter@669d660b, org.springframework.security.web.authentication.logout.LogoutFilter@2cfe2a49, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@47f00bfc, org.springframework.security.web.session.ConcurrentSessionFilter@787f5815, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@328d583d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@232f576f, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1bff8415, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@f831687, org.springframework.security.web.session.SessionManagementFilter@23741e1d, org.springframework.security.web.access.ExceptionTranslationFilter@35e9a618, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7e06830f]
2023-06-11 22:21:48.434 INFO  [restartedMain] [o.s.aop.framework.CglibAopProxy] - Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(javax.servlet.FilterConfig) throws javax.servlet.ServletException] because it is marked as final: Consider using interface-based JDK proxies instead!
2023-06-11 22:21:48.464 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskScheduler] - Initializing ExecutorService 'messageBrokerTaskScheduler'
2023-06-11 22:21:48.504 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'brokerChannelExecutor'
2023-06-11 22:21:48.788 WARN  [restartedMain] [o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-06-11 22:21:48.837 INFO  [restartedMain] [o.s.b.a.w.s.WelcomePageHandlerMapping] - Adding welcome page: ServletContext resource [/index.html]
2023-06-11 22:21:49.114 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 22:21:49.678 INFO  [restartedMain] [o.s.b.d.a.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2023-06-11 22:21:49.698 INFO  [restartedMain] [o.s.b.a.e.web.EndpointLinksResolver] - Exposing 16 endpoint(s) beneath base path '/actuator'
2023-06-11 22:21:49.789 INFO  [restartedMain] [o.s.m.s.b.SimpleBrokerMessageHandler] - Starting...
2023-06-11 22:21:49.789 INFO  [restartedMain] [o.s.m.s.b.SimpleBrokerMessageHandler] - BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2023-06-11 22:21:49.790 INFO  [restartedMain] [o.s.m.s.b.SimpleBrokerMessageHandler] - Started.
2023-06-11 22:21:49.798 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskScheduler] - Initializing ExecutorService
2023-06-11 22:21:49.800 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Starting ProtocolHandler ["http-nio-10010"]
2023-06-11 22:21:49.840 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 10010 (http) with context path ''
2023-06-11 22:21:49.844 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Started PjyApplication in 7.635 seconds (JVM running for 8.442)
2023-06-11 22:21:49.845 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-06-11 22:21:49.845 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - Application started
2023-06-11 22:21:49.845 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-06-11 22:21:50.837 INFO  [RMI TCP Connection(9)-127.0.0.1] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-11 22:21:50.837 INFO  [RMI TCP Connection(9)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Initializing Servlet 'dispatcherServlet'
2023-06-11 22:21:50.851 INFO  [RMI TCP Connection(9)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Completed initialization in 14 ms
2023-06-11 22:21:53.798 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@96cd0f0e
2023-06-11 22:21:53.831 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_DRIVERINFO a where   a.company_no = '100' order by a.emp_no
2023-06-11 22:21:53.839 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 22:21:53.841 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBL_DRIVERINFO a where   a.company_no = '100' order by a.emp_no
 {executed in 2 msec}
2023-06-11 22:21:53.845 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBL_DRIVERINFO a where   a.company_no = '100' order by a.emp_no
 {executed in 1 msec}
2023-06-11 22:21:55.562 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@91a84b77
2023-06-11 22:21:55.615 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 22:21:55.623 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  '5' AS a0 
		,	'운전면허번호' AS a1, 	nvl(b.dirver_regno)	  AS a1_value  
		,	'정규직구분' AS a2, 			nvl(b.enter_gb)  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		nvl(b.email,'')  AS a4_value 
		,	'성별' AS a5, 		a.sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김재중' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		a.TEAM_NM  AS a1_value  
		,	'노선' AS a2, 		nvl(b.route_nm,'')  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		a.PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		nvl(b.hobong,'') AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김재중' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		a.JOB_KIND AS a1_value 
		,	'직종' AS a2, 		a.JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'고정/SP구분' AS a4, 	nvl(b.sp_gb,'') AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김재중' 
	union 
	SELECT  '2' AS a0 
		,	'생년월일' AS a1, 		nvl(b.BIRTH_YMD,'') AS a1_value  
		,	'근속일자' AS a2, 		nvl(to_char(datediff(DAY,'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		nvl(b.work_group,'') AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김재중' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		nvl(b.address,'') AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김재중' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-') AS a2_value 
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김재중'
 {executed in 1 msec}
2023-06-11 22:22:24.087 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@e88464dd
2023-06-11 22:22:24.088 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 22:22:24.091 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  '5' AS a0 
		,	'운전면허번호' AS a1, 	nvl(b.dirver_regno)	  AS a1_value  
		,	'정규직구분' AS a2, 			nvl(b.enter_gb)  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		nvl(b.email,'')  AS a4_value 
		,	'성별' AS a5, 		a.sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='신창휴' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		a.TEAM_NM  AS a1_value  
		,	'노선' AS a2, 		nvl(b.route_nm,'')  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		a.PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		nvl(b.hobong,'') AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='신창휴' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		a.JOB_KIND AS a1_value 
		,	'직종' AS a2, 		a.JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'고정/SP구분' AS a4, 	nvl(b.sp_gb,'') AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='신창휴' 
	union 
	SELECT  '2' AS a0 
		,	'생년월일' AS a1, 		nvl(b.BIRTH_YMD,'') AS a1_value  
		,	'근속일자' AS a2, 		nvl(to_char(datediff(DAY,'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		nvl(b.work_group,'') AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='신창휴' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		nvl(b.address,'') AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='신창휴' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-') AS a2_value 
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='신창휴'
 {executed in 2 msec}
2023-06-11 22:22:48.514 INFO  [MessageBroker-1] [o.s.w.s.c.WebSocketMessageBrokerStats] - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2023-06-11 22:23:27.394 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@48c51f6d
2023-06-11 22:23:27.395 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-11 22:23:27.398 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  '5' AS a0 
		,	'운전면허번호' AS a1, 	nvl(b.dirver_regno)	  AS a1_value  
		,	'정규직구분' AS a2, 			nvl(b.enter_gb)  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		nvl(b.email,'')  AS a4_value 
		,	'성별' AS a5, 		a.sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김종만' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		a.TEAM_NM  AS a1_value  
		,	'노선' AS a2, 		nvl(b.route_nm,'')  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		a.PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		nvl(b.hobong,'') AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김종만' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		a.JOB_KIND AS a1_value 
		,	'직종' AS a2, 		a.JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'고정/SP구분' AS a4, 	nvl(b.sp_gb,'') AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김종만' 
	union 
	SELECT  '2' AS a0 
		,	'생년월일' AS a1, 		nvl(b.BIRTH_YMD,'') AS a1_value  
		,	'근속일자' AS a2, 		nvl(to_char(datediff(DAY,'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		nvl(b.work_group,'') AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김종만' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		nvl(b.address,'') AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김종만' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-') AS a2_value 
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김종만'
 {executed in 2 msec}
2023-06-11 22:23:35.063 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@34394287
2023-06-11 22:23:35.065 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-11 22:23:35.067 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  '5' AS a0 
		,	'운전면허번호' AS a1, 	nvl(b.dirver_regno)	  AS a1_value  
		,	'정규직구분' AS a2, 			nvl(b.enter_gb)  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		nvl(b.email,'')  AS a4_value 
		,	'성별' AS a5, 		a.sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='문준석' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		a.TEAM_NM  AS a1_value  
		,	'노선' AS a2, 		nvl(b.route_nm,'')  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		a.PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		nvl(b.hobong,'') AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='문준석' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		a.JOB_KIND AS a1_value 
		,	'직종' AS a2, 		a.JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'고정/SP구분' AS a4, 	nvl(b.sp_gb,'') AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='문준석' 
	union 
	SELECT  '2' AS a0 
		,	'생년월일' AS a1, 		nvl(b.BIRTH_YMD,'') AS a1_value  
		,	'근속일자' AS a2, 		nvl(to_char(datediff(DAY,'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		nvl(b.work_group,'') AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='문준석' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		nvl(b.address,'') AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='문준석' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-') AS a2_value 
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='문준석'
 {executed in 1 msec}
2023-06-11 22:24:35.773 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@333dba9c
2023-06-11 22:24:35.814 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 34 msec}
2023-06-11 22:24:35.817 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  '5' AS a0 
		,	'운전면허번호' AS a1, 	nvl(b.dirver_regno)	  AS a1_value  
		,	'정규직구분' AS a2, 			nvl(b.enter_gb)  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		nvl(b.email,'')  AS a4_value 
		,	'성별' AS a5, 		a.sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='한태전' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		a.TEAM_NM  AS a1_value  
		,	'노선' AS a2, 		nvl(b.route_nm,'')  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		a.PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		nvl(b.hobong,'') AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='한태전' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		a.JOB_KIND AS a1_value 
		,	'직종' AS a2, 		a.JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'고정/SP구분' AS a4, 	nvl(b.sp_gb,'') AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='한태전' 
	union 
	SELECT  '2' AS a0 
		,	'생년월일' AS a1, 		nvl(b.BIRTH_YMD,'') AS a1_value  
		,	'근속일자' AS a2, 		nvl(to_char(datediff(DAY,'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		nvl(b.work_group,'') AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='한태전' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		nvl(b.address,'') AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='한태전' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'입사일자' AS a2, 		'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-') AS a2_value 
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='한태전'
 {executed in 2 msec}
2023-06-11 22:26:06.847 INFO  [RMI TCP Connection(17)-127.0.0.1] [o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin] - Application shutdown requested.
2023-06-11 22:26:06.850 INFO  [RMI TCP Connection(17)-127.0.0.1] [o.s.m.s.b.SimpleBrokerMessageHandler] - Stopping...
2023-06-11 22:26:06.850 INFO  [RMI TCP Connection(17)-127.0.0.1] [o.s.m.s.b.SimpleBrokerMessageHandler] - BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2023-06-11 22:26:06.850 INFO  [RMI TCP Connection(17)-127.0.0.1] [o.s.m.s.b.SimpleBrokerMessageHandler] - Stopped.
2023-06-11 22:26:06.868 INFO  [RMI TCP Connection(17)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Shutting down ExecutorService 'brokerChannelExecutor'
2023-06-11 22:26:06.868 INFO  [RMI TCP Connection(17)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskScheduler] - Shutting down ExecutorService 'messageBrokerTaskScheduler'
2023-06-11 22:26:06.869 INFO  [RMI TCP Connection(17)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Shutting down ExecutorService 'asyncThreadPool'
2023-06-11 22:26:06.869 INFO  [RMI TCP Connection(17)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Shutting down ExecutorService 'clientOutboundChannelExecutor'
2023-06-11 22:26:06.870 INFO  [RMI TCP Connection(17)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Shutting down ExecutorService 'clientInboundChannelExecutor'
2023-06-11 22:26:06.872 INFO  [RMI TCP Connection(17)-127.0.0.1] [com.zaxxer.hikari.HikariDataSource] - H2 - Shutdown initiated...
2023-06-11 22:26:06.875 INFO  [RMI TCP Connection(17)-127.0.0.1] [com.zaxxer.hikari.HikariDataSource] - H2 - Shutdown completed.
2023-06-11 22:26:06.898 INFO  [RMI TCP Connection(17)-127.0.0.1] [com.pjy.dashboard.filter.TestFilter] - destroy Pjy Filter
2023-06-11 22:26:09.206 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Starting PjyApplication on DESKTOP-3O1I9JM with PID 36960 (C:\BUS\multimodule-parent\dashboard\target\classes started by admin in C:\BUS\multimodule-parent\dashboard)
2023-06-11 22:26:09.209 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - The following profiles are active: oauth
2023-06-11 22:26:09.255 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-06-11 22:26:09.255 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-06-11 22:26:10.029 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-11 22:26:10.029 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-06-11 22:26:10.126 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 91ms. Found 2 JPA repository interfaces.
2023-06-11 22:26:10.371 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-11 22:26:10.371 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2023-06-11 22:26:10.407 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.MemberRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-06-11 22:26:10.408 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.RememberMeRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-06-11 22:26:10.408 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 37ms. Found 0 JDBC repository interfaces.
2023-06-11 22:26:10.708 INFO  [restartedMain] [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] - Post-processing PropertySource instances
2023-06-11 22:26:10.756 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2023-06-11 22:26:10.756 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource commandLineArgs [org.springframework.core.env.SimpleCommandLinePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-06-11 22:26:10.756 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-06-11 22:26:10.756 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-06-11 22:26:10.756 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-11 22:26:10.756 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
2023-06-11 22:26:10.756 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2023-06-11 22:26:10.756 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application-oauth.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-11 22:26:10.756 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-11 22:26:10.756 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-11 22:26:10.757 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [pjy.properties] [org.springframework.core.env.CompositePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-06-11 22:26:10.757 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [common.properties] [org.springframework.core.io.support.ResourcePropertySource] to EncryptableMapPropertySourceWrapper
2023-06-11 22:26:10.803 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'asyncConfiguration' of type [com.pjy.dashboard.configuration.AsyncConfiguration$$EnhancerBySpringCGLIB$$f882770d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 22:26:10.839 INFO  [restartedMain] [c.u.j.filter.DefaultLazyPropertyFilter] - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2023-06-11 22:26:10.902 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$e278db3a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 22:26:10.960 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 22:26:10.963 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@323dca8' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 22:26:10.966 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$74d7dec] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 22:26:10.973 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration$$EnhancerBySpringCGLIB$$2ca29602] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 22:26:10.975 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 22:26:10.976 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 22:26:10.989 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$49cb1300] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 22:26:11.008 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$c94b6032] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-11 22:26:11.089 INFO  [restartedMain] [c.u.j.r.DefaultLazyPropertyResolver] - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2023-06-11 22:26:11.092 INFO  [restartedMain] [c.u.j.d.DefaultLazyPropertyDetector] - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2023-06-11 22:26:11.378 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 10010 (http)
2023-06-11 22:26:11.390 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Initializing ProtocolHandler ["http-nio-10010"]
2023-06-11 22:26:11.396 INFO  [restartedMain] [org.apache.catalina.core.StandardService] - Starting service [Tomcat]
2023-06-11 22:26:11.396 INFO  [restartedMain] [org.apache.catalina.core.StandardEngine] - Starting Servlet engine: [Apache Tomcat/9.0.29]
2023-06-11 22:26:11.602 INFO  [restartedMain] [org.apache.jasper.servlet.TldScanner] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2023-06-11 22:26:11.610 INFO  [restartedMain] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring embedded WebApplicationContext
2023-06-11 22:26:11.610 INFO  [restartedMain] [o.s.web.context.ContextLoader] - Root WebApplicationContext: initialization completed in 2355 ms
2023-06-11 22:26:12.161 INFO  [restartedMain] [c.u.j.encryptor.DefaultLazyEncryptor] - Found Custom Encryptor Bean org.jasypt.encryption.pbe.PooledPBEStringEncryptor@4ff1f330 with name: jasyptStringEncryptor
2023-06-11 22:26:12.199 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Starting...
2023-06-11 22:26:12.260 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.executeSql(PoolBase.java:567)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 4 msec}
2023-06-11 22:26:12.262 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Start completed.
2023-06-11 22:26:12.732 INFO  [restartedMain] [com.pjy.dashboard.filter.TestFilter] - init Pjy Filter
2023-06-11 22:26:12.966 INFO  [restartedMain] [o.hibernate.jpa.internal.util.LogHelper] - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2023-06-11 22:26:13.023 INFO  [restartedMain] [org.hibernate.Version] - HHH000412: Hibernate Core {5.3.14.Final}
2023-06-11 22:26:13.024 INFO  [restartedMain] [org.hibernate.cfg.Environment] - HHH000206: hibernate.properties not found
2023-06-11 22:26:13.143 INFO  [restartedMain] [org.hibernate.annotations.common.Version] - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2023-06-11 22:26:13.301 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 22:26:13.314 INFO  [restartedMain] [org.hibernate.dialect.Dialect] - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2023-06-11 22:26:13.801 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select SEQUENCE_CATALOG, SEQUENCE_SCHEMA, SEQUENCE_NAME, INCREMENT from information_schema.sequences
 {executed in 1 msec}
2023-06-11 22:26:13.833 INFO  [restartedMain] [o.s.o.j.LocalContainerEntityManagerFactoryBean] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-06-11 22:26:14.010 INFO  [restartedMain] [o.h.h.i.QueryTranslatorFactoryInitiator] - HHH000397: Using ASTQueryTranslatorFactory
2023-06-11 22:26:14.195 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'clientInboundChannelExecutor'
2023-06-11 22:26:14.205 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'clientOutboundChannelExecutor'
2023-06-11 22:26:14.835 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService
2023-06-11 22:26:14.836 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'asyncThreadPool'
2023-06-11 22:26:14.964 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/h2-console/**'], []
2023-06-11 22:26:14.964 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/css/**'], []
2023-06-11 22:26:14.964 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/js/**'], []
2023-06-11 22:26:14.964 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/monitor/**'], []
2023-06-11 22:26:14.964 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/img/**'], []
2023-06-11 22:26:14.964 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/lib/**'], []
2023-06-11 22:26:14.964 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/main.css'], []
2023-06-11 22:26:14.964 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/common.js'], []
2023-06-11 22:26:14.964 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/resources/**'], []
2023-06-11 22:26:15.076 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@57bdda19, org.springframework.security.web.context.SecurityContextPersistenceFilter@1f2d7ecd, org.springframework.security.web.header.HeaderWriterFilter@7f1c774, org.springframework.web.filter.CorsFilter@731723c4, org.springframework.security.web.authentication.logout.LogoutFilter@77649aa5, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@6523af10, org.springframework.security.web.session.ConcurrentSessionFilter@29bf0c01, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@4239f72b, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@75d75578, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6dae2c10, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7b9bb1fc, org.springframework.security.web.session.SessionManagementFilter@df000e9, org.springframework.security.web.access.ExceptionTranslationFilter@721fd073, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@408c8dab]
2023-06-11 22:26:15.095 INFO  [restartedMain] [o.s.aop.framework.CglibAopProxy] - Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(javax.servlet.FilterConfig) throws javax.servlet.ServletException] because it is marked as final: Consider using interface-based JDK proxies instead!
2023-06-11 22:26:15.125 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskScheduler] - Initializing ExecutorService 'messageBrokerTaskScheduler'
2023-06-11 22:26:15.166 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'brokerChannelExecutor'
2023-06-11 22:26:15.449 WARN  [restartedMain] [o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-06-11 22:26:15.498 INFO  [restartedMain] [o.s.b.a.w.s.WelcomePageHandlerMapping] - Adding welcome page: ServletContext resource [/index.html]
2023-06-11 22:26:15.776 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-11 22:26:16.332 INFO  [restartedMain] [o.s.b.d.a.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2023-06-11 22:26:16.350 INFO  [restartedMain] [o.s.b.a.e.web.EndpointLinksResolver] - Exposing 16 endpoint(s) beneath base path '/actuator'
2023-06-11 22:26:16.443 INFO  [restartedMain] [o.s.m.s.b.SimpleBrokerMessageHandler] - Starting...
2023-06-11 22:26:16.443 INFO  [restartedMain] [o.s.m.s.b.SimpleBrokerMessageHandler] - BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [DefaultSubscriptionRegistry[cache[0 destination(s)], registry[0 sessions]]]]
2023-06-11 22:26:16.444 INFO  [restartedMain] [o.s.m.s.b.SimpleBrokerMessageHandler] - Started.
2023-06-11 22:26:16.451 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskScheduler] - Initializing ExecutorService
2023-06-11 22:26:16.453 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Starting ProtocolHandler ["http-nio-10010"]
2023-06-11 22:26:16.489 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 10010 (http) with context path ''
2023-06-11 22:26:16.493 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Started PjyApplication in 7.585 seconds (JVM running for 8.378)
2023-06-11 22:26:16.493 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-06-11 22:26:16.493 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - Application started
2023-06-11 22:26:16.493 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-06-11 22:26:17.139 INFO  [RMI TCP Connection(10)-127.0.0.1] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-11 22:26:17.139 INFO  [RMI TCP Connection(10)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Initializing Servlet 'dispatcherServlet'
2023-06-11 22:26:17.152 INFO  [RMI TCP Connection(10)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Completed initialization in 13 ms
2023-06-11 22:27:08.050 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@96cd0f0e
2023-06-11 22:27:08.087 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_DRIVERINFO a where   a.company_no = '100' order by a.emp_no
2023-06-11 22:27:08.093 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 22:27:08.096 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBL_DRIVERINFO a where   a.company_no = '100' order by a.emp_no
 {executed in 2 msec}
2023-06-11 22:27:08.099 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select   ROWNUM AS no,a.* from    TBL_DRIVERINFO a where   a.company_no = '100' order by a.emp_no
 {executed in 1 msec}
2023-06-11 22:27:10.248 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@17d0d2df
2023-06-11 22:27:10.298 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-11 22:27:10.310 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  '5' AS a0 
		,	'운전면허번호' AS a1, 	nvl(b.dirver_regno)	  AS a1_value  
		,	'정규직구분' AS a2, 			nvl(b.enter_gb)  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		nvl(b.email,'')  AS a4_value 
		,	'성별' AS a5, 		a.sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='박병승' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		a.TEAM_NM  AS a1_value  
		,	'노선' AS a2, 		nvl(b.route_nm,'')  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		a.PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		nvl(b.hobong,'') AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='박병승' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		a.JOB_KIND AS a1_value 
		,	'직종' AS a2, 		a.JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'고정/SP구분' AS a4, 	nvl(b.sp_gb,'') AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='박병승' 
	union 
	SELECT  '2' AS a0 
		,	'입사일자' AS a1, 		'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-') AS a1_value 
		,	'근속일자' AS a2, 		nvl(to_char(datediff(DAY,'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		nvl(b.work_group,'') AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='박병승' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		nvl(b.address,'') AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='박병승' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'생년월일' AS a2, 		nvl(b.BIRTH_YMD,'') AS a2_value  
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='박병승'
 {executed in 2 msec}
2023-06-11 22:27:15.169 INFO  [MessageBroker-1] [o.s.w.s.c.WebSocketMessageBrokerStats] - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2023-06-11 22:27:18.961 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@f62b382c
2023-06-11 22:27:18.962 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 22:27:18.964 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  '5' AS a0 
		,	'운전면허번호' AS a1, 	nvl(b.dirver_regno)	  AS a1_value  
		,	'정규직구분' AS a2, 			nvl(b.enter_gb)  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		nvl(b.email,'')  AS a4_value 
		,	'성별' AS a5, 		a.sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='서문원' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		a.TEAM_NM  AS a1_value  
		,	'노선' AS a2, 		nvl(b.route_nm,'')  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		a.PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		nvl(b.hobong,'') AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='서문원' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		a.JOB_KIND AS a1_value 
		,	'직종' AS a2, 		a.JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'고정/SP구분' AS a4, 	nvl(b.sp_gb,'') AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='서문원' 
	union 
	SELECT  '2' AS a0 
		,	'입사일자' AS a1, 		'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-') AS a1_value 
		,	'근속일자' AS a2, 		nvl(to_char(datediff(DAY,'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		nvl(b.work_group,'') AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='서문원' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		nvl(b.address,'') AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='서문원' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'생년월일' AS a2, 		nvl(b.BIRTH_YMD,'') AS a2_value  
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='서문원'
 {executed in 1 msec}
2023-06-11 22:27:22.920 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@de877e90
2023-06-11 22:27:22.924 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 22:27:22.927 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  '5' AS a0 
		,	'운전면허번호' AS a1, 	nvl(b.dirver_regno)	  AS a1_value  
		,	'정규직구분' AS a2, 			nvl(b.enter_gb)  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		nvl(b.email,'')  AS a4_value 
		,	'성별' AS a5, 		a.sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='신경식' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		a.TEAM_NM  AS a1_value  
		,	'노선' AS a2, 		nvl(b.route_nm,'')  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		a.PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		nvl(b.hobong,'') AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='신경식' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		a.JOB_KIND AS a1_value 
		,	'직종' AS a2, 		a.JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'고정/SP구분' AS a4, 	nvl(b.sp_gb,'') AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='신경식' 
	union 
	SELECT  '2' AS a0 
		,	'입사일자' AS a1, 		'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-') AS a1_value 
		,	'근속일자' AS a2, 		nvl(to_char(datediff(DAY,'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		nvl(b.work_group,'') AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='신경식' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		nvl(b.address,'') AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='신경식' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'생년월일' AS a2, 		nvl(b.BIRTH_YMD,'') AS a2_value  
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='신경식'
 {executed in 1 msec}
2023-06-11 22:27:37.334 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@a305bf1b
2023-06-11 22:27:37.334 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 22:27:37.337 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  '5' AS a0 
		,	'운전면허번호' AS a1, 	nvl(b.dirver_regno)	  AS a1_value  
		,	'정규직구분' AS a2, 			nvl(b.enter_gb)  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		nvl(b.email,'')  AS a4_value 
		,	'성별' AS a5, 		a.sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='손진종' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		a.TEAM_NM  AS a1_value  
		,	'노선' AS a2, 		nvl(b.route_nm,'')  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		a.PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		nvl(b.hobong,'') AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='손진종' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		a.JOB_KIND AS a1_value 
		,	'직종' AS a2, 		a.JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'고정/SP구분' AS a4, 	nvl(b.sp_gb,'') AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='손진종' 
	union 
	SELECT  '2' AS a0 
		,	'입사일자' AS a1, 		'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-') AS a1_value 
		,	'근속일자' AS a2, 		nvl(to_char(datediff(DAY,'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		nvl(b.work_group,'') AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='손진종' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		nvl(b.address,'') AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='손진종' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'생년월일' AS a2, 		nvl(b.BIRTH_YMD,'') AS a2_value  
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='손진종'
 {executed in 1 msec}
2023-06-11 22:27:44.174 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@17d0d2df
2023-06-11 22:27:44.175 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-11 22:27:44.178 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  '5' AS a0 
		,	'운전면허번호' AS a1, 	nvl(b.dirver_regno)	  AS a1_value  
		,	'정규직구분' AS a2, 			nvl(b.enter_gb)  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		nvl(b.email,'')  AS a4_value 
		,	'성별' AS a5, 		a.sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='박병승' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		a.TEAM_NM  AS a1_value  
		,	'노선' AS a2, 		nvl(b.route_nm,'')  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		a.PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		nvl(b.hobong,'') AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='박병승' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		a.JOB_KIND AS a1_value 
		,	'직종' AS a2, 		a.JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'고정/SP구분' AS a4, 	nvl(b.sp_gb,'') AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='박병승' 
	union 
	SELECT  '2' AS a0 
		,	'입사일자' AS a1, 		'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-') AS a1_value 
		,	'근속일자' AS a2, 		nvl(to_char(datediff(DAY,'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		nvl(b.work_group,'') AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='박병승' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		nvl(b.address,'') AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='박병승' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'생년월일' AS a2, 		nvl(b.BIRTH_YMD,'') AS a2_value  
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='박병승'
 {executed in 1 msec}
2023-06-11 22:27:48.902 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@9d07303f
2023-06-11 22:27:48.904 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 22:27:48.906 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  '5' AS a0 
		,	'운전면허번호' AS a1, 	nvl(b.dirver_regno)	  AS a1_value  
		,	'정규직구분' AS a2, 			nvl(b.enter_gb)  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		nvl(b.email,'')  AS a4_value 
		,	'성별' AS a5, 		a.sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='박노철' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		a.TEAM_NM  AS a1_value  
		,	'노선' AS a2, 		nvl(b.route_nm,'')  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		a.PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		nvl(b.hobong,'') AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='박노철' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		a.JOB_KIND AS a1_value 
		,	'직종' AS a2, 		a.JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'고정/SP구분' AS a4, 	nvl(b.sp_gb,'') AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='박노철' 
	union 
	SELECT  '2' AS a0 
		,	'입사일자' AS a1, 		'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-') AS a1_value 
		,	'근속일자' AS a2, 		nvl(to_char(datediff(DAY,'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		nvl(b.work_group,'') AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='박노철' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		nvl(b.address,'') AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='박노철' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'생년월일' AS a2, 		nvl(b.BIRTH_YMD,'') AS a2_value  
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='박노철'
 {executed in 1 msec}
2023-06-11 22:27:59.021 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@affe6b13
2023-06-11 22:27:59.022 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-11 22:27:59.025 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  '5' AS a0 
		,	'운전면허번호' AS a1, 	nvl(b.dirver_regno)	  AS a1_value  
		,	'정규직구분' AS a2, 			nvl(b.enter_gb)  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		nvl(b.email,'')  AS a4_value 
		,	'성별' AS a5, 		a.sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김문성' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		a.TEAM_NM  AS a1_value  
		,	'노선' AS a2, 		nvl(b.route_nm,'')  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		a.PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		nvl(b.hobong,'') AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김문성' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		a.JOB_KIND AS a1_value 
		,	'직종' AS a2, 		a.JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'고정/SP구분' AS a4, 	nvl(b.sp_gb,'') AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김문성' 
	union 
	SELECT  '2' AS a0 
		,	'입사일자' AS a1, 		'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-') AS a1_value 
		,	'근속일자' AS a2, 		nvl(to_char(datediff(DAY,'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		nvl(b.work_group,'') AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김문성' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		nvl(b.address,'') AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김문성' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'생년월일' AS a2, 		nvl(b.BIRTH_YMD,'') AS a2_value  
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김문성'
 {executed in 0 msec}
2023-06-11 22:28:03.747 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@97de8f1
2023-06-11 22:28:03.749 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 22:28:03.752 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  '5' AS a0 
		,	'운전면허번호' AS a1, 	nvl(b.dirver_regno)	  AS a1_value  
		,	'정규직구분' AS a2, 			nvl(b.enter_gb)  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		nvl(b.email,'')  AS a4_value 
		,	'성별' AS a5, 		a.sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김학희' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		a.TEAM_NM  AS a1_value  
		,	'노선' AS a2, 		nvl(b.route_nm,'')  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		a.PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		nvl(b.hobong,'') AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김학희' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		a.JOB_KIND AS a1_value 
		,	'직종' AS a2, 		a.JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'고정/SP구분' AS a4, 	nvl(b.sp_gb,'') AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김학희' 
	union 
	SELECT  '2' AS a0 
		,	'입사일자' AS a1, 		'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-') AS a1_value 
		,	'근속일자' AS a2, 		nvl(to_char(datediff(DAY,'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		nvl(b.work_group,'') AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김학희' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		nvl(b.address,'') AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김학희' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'생년월일' AS a2, 		nvl(b.BIRTH_YMD,'') AS a2_value  
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='김학희'
 {executed in 2 msec}
2023-06-11 22:28:06.510 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@2fdba260
2023-06-11 22:28:06.511 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-11 22:28:06.513 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  '5' AS a0 
		,	'운전면허번호' AS a1, 	nvl(b.dirver_regno)	  AS a1_value  
		,	'정규직구분' AS a2, 			nvl(b.enter_gb)  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		nvl(b.email,'')  AS a4_value 
		,	'성별' AS a5, 		a.sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='권병묵' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		a.TEAM_NM  AS a1_value  
		,	'노선' AS a2, 		nvl(b.route_nm,'')  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		a.PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		nvl(b.hobong,'') AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='권병묵' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		a.JOB_KIND AS a1_value 
		,	'직종' AS a2, 		a.JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'고정/SP구분' AS a4, 	nvl(b.sp_gb,'') AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='권병묵' 
	union 
	SELECT  '2' AS a0 
		,	'입사일자' AS a1, 		'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-') AS a1_value 
		,	'근속일자' AS a2, 		nvl(to_char(datediff(DAY,'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		nvl(b.work_group,'') AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='권병묵' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		nvl(b.address,'') AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='권병묵' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'생년월일' AS a2, 		nvl(b.BIRTH_YMD,'') AS a2_value  
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='권병묵'
 {executed in 1 msec}
2023-06-11 22:28:15.271 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@692e8cf0
2023-06-11 22:28:15.272 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-11 22:28:15.274 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  '5' AS a0 
		,	'운전면허번호' AS a1, 	nvl(b.dirver_regno)	  AS a1_value  
		,	'정규직구분' AS a2, 			nvl(b.enter_gb)  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		nvl(b.email,'')  AS a4_value 
		,	'성별' AS a5, 		a.sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='홍성진' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		a.TEAM_NM  AS a1_value  
		,	'노선' AS a2, 		nvl(b.route_nm,'')  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		a.PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		nvl(b.hobong,'') AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='홍성진' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		a.JOB_KIND AS a1_value 
		,	'직종' AS a2, 		a.JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'고정/SP구분' AS a4, 	nvl(b.sp_gb,'') AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='홍성진' 
	union 
	SELECT  '2' AS a0 
		,	'입사일자' AS a1, 		'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-') AS a1_value 
		,	'근속일자' AS a2, 		nvl(to_char(datediff(DAY,'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		nvl(b.work_group,'') AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='홍성진' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		nvl(b.address,'') AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='홍성진' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'생년월일' AS a2, 		nvl(b.BIRTH_YMD,'') AS a2_value  
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='홍성진'
 {executed in 1 msec}
2023-06-11 22:38:45.554 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@276d94ac
2023-06-11 22:38:45.555 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 22:38:45.557 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  '5' AS a0 
		,	'운전면허번호' AS a1, 	nvl(b.dirver_regno)	  AS a1_value  
		,	'정규직구분' AS a2, 			nvl(b.enter_gb)  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		nvl(b.email,'')  AS a4_value 
		,	'성별' AS a5, 		a.sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='문영식' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		a.TEAM_NM  AS a1_value  
		,	'노선' AS a2, 		nvl(b.route_nm,'')  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		a.PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		nvl(b.hobong,'') AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='문영식' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		a.JOB_KIND AS a1_value 
		,	'직종' AS a2, 		a.JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'고정/SP구분' AS a4, 	nvl(b.sp_gb,'') AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='문영식' 
	union 
	SELECT  '2' AS a0 
		,	'입사일자' AS a1, 		'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-') AS a1_value 
		,	'근속일자' AS a2, 		nvl(to_char(datediff(DAY,'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		nvl(b.work_group,'') AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='문영식' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		nvl(b.address,'') AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='문영식' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'생년월일' AS a2, 		nvl(b.BIRTH_YMD,'') AS a2_value  
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='문영식'
 {executed in 1 msec}
2023-06-11 22:38:58.807 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@f62b382c
2023-06-11 22:38:58.809 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 22:38:58.810 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  '5' AS a0 
		,	'운전면허번호' AS a1, 	nvl(b.dirver_regno)	  AS a1_value  
		,	'정규직구분' AS a2, 			nvl(b.enter_gb)  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		nvl(b.email,'')  AS a4_value 
		,	'성별' AS a5, 		a.sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='서문원' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		a.TEAM_NM  AS a1_value  
		,	'노선' AS a2, 		nvl(b.route_nm,'')  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		a.PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		nvl(b.hobong,'') AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='서문원' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		a.JOB_KIND AS a1_value 
		,	'직종' AS a2, 		a.JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'고정/SP구분' AS a4, 	nvl(b.sp_gb,'') AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='서문원' 
	union 
	SELECT  '2' AS a0 
		,	'입사일자' AS a1, 		'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-') AS a1_value 
		,	'근속일자' AS a2, 		nvl(to_char(datediff(DAY,'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		nvl(b.work_group,'') AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='서문원' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		nvl(b.address,'') AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='서문원' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'생년월일' AS a2, 		nvl(b.BIRTH_YMD,'') AS a2_value  
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='서문원'
 {executed in 1 msec}
2023-06-11 22:39:48.907 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@a305bf1b
2023-06-11 22:39:48.908 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-11 22:39:48.911 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT  '5' AS a0 
		,	'운전면허번호' AS a1, 	nvl(b.dirver_regno)	  AS a1_value  
		,	'정규직구분' AS a2, 			nvl(b.enter_gb)  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		nvl(b.email,'')  AS a4_value 
		,	'성별' AS a5, 		a.sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='손진종' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		a.TEAM_NM  AS a1_value  
		,	'노선' AS a2, 		nvl(b.route_nm,'')  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		a.PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		nvl(b.hobong,'') AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='손진종' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		a.JOB_KIND AS a1_value 
		,	'직종' AS a2, 		a.JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'고정/SP구분' AS a4, 	nvl(b.sp_gb,'') AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='손진종' 
	union 
	SELECT  '2' AS a0 
		,	'입사일자' AS a1, 		'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-') AS a1_value 
		,	'근속일자' AS a2, 		nvl(to_char(datediff(DAY,'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		nvl(b.work_group,'') AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='손진종' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		nvl(b.address,'') AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='손진종' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'생년월일' AS a2, 		nvl(b.BIRTH_YMD,'') AS a2_value  
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='손진종'
 {executed in 1 msec}
2023-06-11 22:57:15.178 INFO  [MessageBroker-1] [o.s.w.s.c.WebSocketMessageBrokerStats] - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 2, active threads = 1, queued tasks = 0, completed tasks = 1]
2023-06-11 23:03:12.710 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@d9026782
2023-06-11 23:03:12.710 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
2023-06-11 23:03:12.711 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
11. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-11 23:03:12.713 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
11. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 2 msec}
2023-06-11 23:03:12.715 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
11. select   ROWNUM AS no,a.* from    TBL_employeeInfo a where   a.company_no = '100' order by a.emp_no
 {executed in 1 msec}
2023-06-11 23:03:13.719 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@17d0d2df
2023-06-11 23:03:13.720 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
11. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 23:03:13.722 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT  '5' AS a0 
		,	'운전면허번호' AS a1, 	nvl(b.dirver_regno)	  AS a1_value  
		,	'정규직구분' AS a2, 			nvl(b.enter_gb)  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		nvl(b.email,'')  AS a4_value 
		,	'성별' AS a5, 		a.sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='박병승' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		a.TEAM_NM  AS a1_value  
		,	'노선' AS a2, 		nvl(b.route_nm,'')  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		a.PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		nvl(b.hobong,'') AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='박병승' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		a.JOB_KIND AS a1_value 
		,	'직종' AS a2, 		a.JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'고정/SP구분' AS a4, 	nvl(b.sp_gb,'') AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='박병승' 
	union 
	SELECT  '2' AS a0 
		,	'입사일자' AS a1, 		'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-') AS a1_value 
		,	'근속일자' AS a2, 		nvl(to_char(datediff(DAY,'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		nvl(b.work_group,'') AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='박병승' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		nvl(b.address,'') AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='박병승' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'생년월일' AS a2, 		nvl(b.BIRTH_YMD,'') AS a2_value  
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='박병승'
 {executed in 2 msec}
2023-06-11 23:03:50.708 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8390ca5b
2023-06-11 23:03:50.709 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
11. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-11 23:03:50.712 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT  '5' AS a0 
		,	'운전면허번호' AS a1, 	nvl(b.dirver_regno)	  AS a1_value  
		,	'정규직구분' AS a2, 			nvl(b.enter_gb)  AS a2_value 
		,	'       상실' AS a3,	'' AS a3_value 
		,	'이메일' AS a4, 		nvl(b.email,'')  AS a4_value 
		,	'성별' AS a5, 		a.sex AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='박근호' 
	union 
	SELECT  '4' AS a0 
		,	'부서' AS a1, 		a.TEAM_NM  AS a1_value  
		,	'노선' AS a2, 		nvl(b.route_nm,'')  AS a2_value 
		,	'국민연금취득' AS a3,	'' AS a3_value 
		,	'휴대폰' AS a4, 		a.PHONE_NO  AS a4_value 
		,	'호봉' AS a5, 		nvl(b.hobong,'') AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='박근호' 
	union 
	SELECT  '3' AS a0 
		,	'구분' AS a1, 		a.JOB_KIND AS a1_value 
		,	'직종' AS a2, 		a.JOB_TYPE AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'고정/SP구분' AS a4, 	nvl(b.sp_gb,'') AS a4_value 
		,	'급여계산' AS a5, 		'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='박근호' 
	union 
	SELECT  '2' AS a0 
		,	'입사일자' AS a1, 		'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-') AS a1_value 
		,	'근속일자' AS a2, 		nvl(to_char(datediff(DAY,'20'||RIGHT(a.enter_date,2) || '-'||replace(SUBSTRING(a.enter_date,0, LENGTH (a.ENTER_DATE)-3),'/','-'),to_char(SYSDATE,'yyyy-mm-dd'))),'')  AS a2_value  
		,	'건강보험취득' AS a3,	'' AS a3_value 
		,	'건강보험번호' AS a4, 	'' AS a4_value 
		,	'가입조합' AS a5, 		nvl(b.work_group,'') AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='박근호' 
	union 
	SELECT  '1' AS a0 
		,	'성명' AS a1, 		a.EMP_NM AS a1_value  
		,	'퇴사일자' AS a2, 		'' AS a2_value  
		,	'      상실' AS a3,	'' AS a3_value 
		,	'현주소' AS a4, 		nvl(b.address,'') AS a4_value 
		,	'' AS a5, '' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='박근호' 
	union 
	SELECT  '0' AS a0 
		,	'사원번호' AS a1, 		TO_CHAR( a.EMP_NO) AS a1_value  
		,	'생년월일' AS a2, 		nvl(b.BIRTH_YMD,'') AS a2_value  
		,	'고용보험취득' AS a3,	'' AS a3_value 
		,	'본적' AS a4, 		'' AS a4_value 
		,	'' AS a5, 			'' AS a5_value 
	FROM PUBLIC.TBL_EMPLOYEEINFO a LEFT OUTER JOIN TBL_DRIVERINFO b ON a.COMPANY_NO = b.COMPANY_NO  AND a.EMP_NM = b.EMP_NM 
	WHERE a.COMPANY_NO ='100' AND a.EMP_NM ='박근호'
 {executed in 2 msec}
2023-06-11 23:05:20.437 WARN  [H2 housekeeper] [com.zaxxer.hikari.pool.HikariPool] - H2 - Thread starvation or clock leap detected (housekeeper delta=1m7s595ms28µs799ns).
