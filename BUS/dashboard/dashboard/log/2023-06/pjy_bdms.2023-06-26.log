2023-06-26 02:56:04.576 WARN  [H2 housekeeper] [com.zaxxer.hikari.pool.HikariPool] - H2 - Thread starvation or clock leap detected (housekeeper delta=3h28s865ms271µs800ns).
2023-06-26 08:55:17.929 INFO  [Catalina-utility-2] [c.pjy.dashboard.listener.SessionListener] - updateUserCloseTime p00139 
2023-06-26 08:55:18.636 INFO  [Catalina-utility-2] [c.pjy.dashboard.listener.SessionListener] - currentSessionUserList ->  false
2023-06-26 08:55:18.638 INFO  [Catalina-utility-2] [c.pjy.dashboard.listener.SessionListener] - updateUserCloseTime p00139 
2023-06-26 08:55:18.638 INFO  [Catalina-utility-2] [c.pjy.dashboard.listener.SessionListener] - currentSessionUserList ->  false
2023-06-26 08:55:48.340 WARN  [H2 housekeeper] [com.zaxxer.hikari.pool.HikariPool] - H2 - Thread starvation or clock leap detected (housekeeper delta=5h59m50s738ms175µs100ns).
2023-06-26 09:30:43.467 INFO  [http-nio-10010-exec-10] [c.p.d.interceptor.LoggerInterceptor] - ============================== START ==============================
2023-06-26 09:30:43.468 INFO  [http-nio-10010-exec-10] [c.p.d.interceptor.LoggerInterceptor] -  Class       	:  class org.springframework.web.method.HandlerMethod
2023-06-26 09:30:43.468 INFO  [http-nio-10010-exec-10] [c.p.d.interceptor.LoggerInterceptor] -  Request URI 	:  /error
2023-06-26 09:30:43.468 INFO  [http-nio-10010-exec-10] [c.p.d.interceptor.LoggerInterceptor] -  Request addr	:  0:0:0:0:0:0:0:1
2023-06-26 09:30:43.468 INFO  [http-nio-10010-exec-10] [c.p.d.interceptor.LoggerInterceptor] -  Servlet URI 	:  /error
2023-06-26 09:30:45.049 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
232. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 09:30:45.050 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
232. select * from MEMBER where userId = 'p00139'
 {executed in 0 msec}
2023-06-26 09:30:45.053 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.MemberServiceImpl] - ROLE_ADMIN
2023-06-26 09:30:45.165 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.MemberServiceImpl] - pass:$2a$10$MNrQAPw.4k9j2y08eTmYEeI7oKPuaWbA97HHog.8PYep5HsRwhbae,$2a$10$h9V67TuxCLEF71cV.Q4vO.KPwvjjm8VDVPN1/5RzjeuLUmnarneMK
2023-06-26 09:30:45.266 INFO  [http-nio-10010-exec-7] [c.p.d.configuration.SecurityConfig] - authentication:: p00139
2023-06-26 09:30:49.813 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
232. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 09:30:49.814 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
232. SELECT ROUTE_NM  FROM TBL_ROUTEINFO ORDER BY 1
 {executed in 1 msec}
2023-06-26 09:30:52.453 ERROR [http-nio-10010-exec-7] [c.p.d.core.error.GlobalExceptionHandler] - handleEntityNotFoundException
java.lang.NullPointerException: Cannot invoke "com.pjy.dashboard.domain.CommonCodeVo.init()" because "vo" is null
	at com.pjy.dashboard.controller.TestController.dynamicSqlFilter(TestController.java:198)
	at jdk.internal.reflect.GeneratedMethodAccessor190.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:893)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:798)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:97)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at jdk.internal.reflect.GeneratedMethodAccessor150.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$a00254f8.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:114)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:104)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-06-26 09:30:52.455 WARN  [http-nio-10010-exec-7] [o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver] - Resolved [java.lang.NullPointerException: Cannot invoke "com.pjy.dashboard.domain.CommonCodeVo.init()" because "vo" is null]
2023-06-26 09:31:23.510 ERROR [http-nio-10010-exec-2] [c.p.d.core.error.GlobalExceptionHandler] - handleEntityNotFoundException
java.lang.NullPointerException: Cannot invoke "com.pjy.dashboard.domain.CommonCodeVo.init()" because "vo" is null
	at com.pjy.dashboard.controller.TestController.dynamicSqlFilter(TestController.java:198)
	at jdk.internal.reflect.GeneratedMethodAccessor190.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:893)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:798)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:97)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at jdk.internal.reflect.GeneratedMethodAccessor150.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$a00254f8.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:114)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:104)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-06-26 09:31:23.513 WARN  [http-nio-10010-exec-2] [o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver] - Resolved [java.lang.NullPointerException: Cannot invoke "com.pjy.dashboard.domain.CommonCodeVo.init()" because "vo" is null]
2023-06-26 10:22:22.751 INFO  [Catalina-utility-1] [c.pjy.dashboard.listener.SessionListener] - updateUserCloseTime p00139 
2023-06-26 10:22:22.752 INFO  [Catalina-utility-1] [c.pjy.dashboard.listener.SessionListener] - currentSessionUserList ->  false
2023-06-26 10:22:22.752 INFO  [Catalina-utility-1] [c.pjy.dashboard.listener.SessionListener] - updateUserCloseTime p00139 
2023-06-26 10:22:22.752 INFO  [Catalina-utility-1] [c.pjy.dashboard.listener.SessionListener] - currentSessionUserList ->  false
2023-06-26 10:31:37.666 INFO  [http-nio-10010-exec-10] [c.p.d.interceptor.LoggerInterceptor] - ============================== START ==============================
2023-06-26 10:31:37.666 INFO  [http-nio-10010-exec-10] [c.p.d.interceptor.LoggerInterceptor] -  Class       	:  class org.springframework.web.method.HandlerMethod
2023-06-26 10:31:37.666 INFO  [http-nio-10010-exec-10] [c.p.d.interceptor.LoggerInterceptor] -  Request URI 	:  /
2023-06-26 10:31:37.666 INFO  [http-nio-10010-exec-10] [c.p.d.interceptor.LoggerInterceptor] -  Request addr	:  0:0:0:0:0:0:0:1
2023-06-26 10:31:37.667 INFO  [http-nio-10010-exec-10] [c.p.d.interceptor.LoggerInterceptor] -  Servlet URI 	:  /
2023-06-26 10:31:37.685 ERROR [http-nio-10010-exec-10] [o.a.c.c.C.[Tomcat].[localhost].[/].[jsp]] - Servlet.service() for servlet [jsp] threw exception
java.lang.IllegalStateException: Cannot create a session after the response has been committed
	at org.apache.catalina.connector.Request.doGetSession(Request.java:2993)
	at org.apache.catalina.connector.Request.getSession(Request.java:2432)
	at org.apache.catalina.connector.RequestFacade.getSession(RequestFacade.java:908)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:244)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:582)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:527)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at org.apache.jasper.runtime.PageContextImpl.initialize(PageContextImpl.java:133)
	at org.apache.jasper.runtime.JspFactoryImpl.internalGetPageContext(JspFactoryImpl.java:109)
	at org.apache.jasper.runtime.JspFactoryImpl.getPageContext(JspFactoryImpl.java:60)
	at org.apache.jsp.WEB_002dINF.jsp.home_jsp._jspService(home_jsp.java:121)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:477)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:385)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:329)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:580)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:516)
	at org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequestDispatcher.include(HeaderWriterFilter.java:149)
	at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:163)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:317)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1372)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:97)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at jdk.internal.reflect.GeneratedMethodAccessor150.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$a00254f8.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:114)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:104)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-06-26 10:31:37.692 ERROR [http-nio-10010-exec-10] [o.a.c.c.C.[.[.[/].[dispatcherServlet]] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [javax.servlet.ServletException: java.lang.IllegalStateException: Cannot create a session after the response has been committed] with root cause
java.lang.IllegalStateException: Cannot create a session after the response has been committed
	at org.apache.catalina.connector.Request.doGetSession(Request.java:2993)
	at org.apache.catalina.connector.Request.getSession(Request.java:2432)
	at org.apache.catalina.connector.RequestFacade.getSession(RequestFacade.java:908)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:244)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:582)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:527)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at org.apache.jasper.runtime.PageContextImpl.initialize(PageContextImpl.java:133)
	at org.apache.jasper.runtime.JspFactoryImpl.internalGetPageContext(JspFactoryImpl.java:109)
	at org.apache.jasper.runtime.JspFactoryImpl.getPageContext(JspFactoryImpl.java:60)
	at org.apache.jsp.WEB_002dINF.jsp.home_jsp._jspService(home_jsp.java:121)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:477)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:385)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:329)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:580)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:516)
	at org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequestDispatcher.include(HeaderWriterFilter.java:149)
	at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:163)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:317)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1372)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:97)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at jdk.internal.reflect.GeneratedMethodAccessor150.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$a00254f8.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:114)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:104)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-06-26 10:31:37.694 INFO  [http-nio-10010-exec-10] [c.p.d.interceptor.LoggerInterceptor] - ============================== START ==============================
2023-06-26 10:31:37.695 INFO  [http-nio-10010-exec-10] [c.p.d.interceptor.LoggerInterceptor] -  Class       	:  class org.springframework.web.method.HandlerMethod
2023-06-26 10:31:37.695 INFO  [http-nio-10010-exec-10] [c.p.d.interceptor.LoggerInterceptor] -  Request URI 	:  /error
2023-06-26 10:31:37.695 INFO  [http-nio-10010-exec-10] [c.p.d.interceptor.LoggerInterceptor] -  Request addr	:  0:0:0:0:0:0:0:1
2023-06-26 10:31:37.695 INFO  [http-nio-10010-exec-10] [c.p.d.interceptor.LoggerInterceptor] -  Servlet URI 	:  /error
2023-06-26 10:31:37.718 ERROR [http-nio-10010-exec-10] [o.a.c.c.C.[Tomcat].[localhost].[/].[jsp]] - Servlet.service() for servlet [jsp] threw exception
java.lang.IllegalStateException: Cannot create a session after the response has been committed
	at org.apache.catalina.connector.Request.doGetSession(Request.java:2993)
	at org.apache.catalina.connector.Request.getSession(Request.java:2432)
	at org.apache.catalina.connector.RequestFacade.getSession(RequestFacade.java:908)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:244)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:582)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:244)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:582)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:527)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at org.apache.jasper.runtime.PageContextImpl.initialize(PageContextImpl.java:133)
	at org.apache.jasper.runtime.JspFactoryImpl.internalGetPageContext(JspFactoryImpl.java:109)
	at org.apache.jasper.runtime.JspFactoryImpl.getPageContext(JspFactoryImpl.java:60)
	at org.apache.jsp.WEB_002dINF.jsp.error_jsp._jspService(error_jsp.java:107)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:477)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:385)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:329)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:580)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:516)
	at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:163)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:317)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1372)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at jdk.internal.reflect.GeneratedMethodAccessor150.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$a00254f8.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-06-26 10:31:37.721 ERROR [http-nio-10010-exec-10] [o.a.c.c.C.[.[.[/].[dispatcherServlet]] - Servlet.service() for servlet [dispatcherServlet] threw exception
java.lang.IllegalStateException: Cannot create a session after the response has been committed
	at org.apache.catalina.connector.Request.doGetSession(Request.java:2993)
	at org.apache.catalina.connector.Request.getSession(Request.java:2432)
	at org.apache.catalina.connector.RequestFacade.getSession(RequestFacade.java:908)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:244)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:582)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:244)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:582)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:527)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at org.apache.jasper.runtime.PageContextImpl.initialize(PageContextImpl.java:133)
	at org.apache.jasper.runtime.JspFactoryImpl.internalGetPageContext(JspFactoryImpl.java:109)
	at org.apache.jasper.runtime.JspFactoryImpl.getPageContext(JspFactoryImpl.java:60)
	at org.apache.jsp.WEB_002dINF.jsp.error_jsp._jspService(error_jsp.java:107)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:477)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:385)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:329)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:580)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:516)
	at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:163)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:317)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1372)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at jdk.internal.reflect.GeneratedMethodAccessor150.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$a00254f8.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-06-26 10:31:37.721 ERROR [http-nio-10010-exec-10] [o.a.c.c.C.[Tomcat].[localhost]] - Exception Processing ErrorPage[errorCode=0, location=/error]
org.apache.jasper.JasperException: javax.servlet.ServletException: java.lang.IllegalStateException: Cannot create a session after the response has been committed
	at org.apache.jasper.servlet.JspServletWrapper.handleJspException(JspServletWrapper.java:639)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:500)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:385)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:329)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:580)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:516)
	at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:163)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:317)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1372)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at jdk.internal.reflect.GeneratedMethodAccessor150.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$a00254f8.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: javax.servlet.ServletException: java.lang.IllegalStateException: Cannot create a session after the response has been committed
	at org.apache.jsp.WEB_002dINF.jsp.error_jsp._jspService(error_jsp.java:144)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:477)
	... 97 common frames omitted
Caused by: java.lang.IllegalStateException: Cannot create a session after the response has been committed
	at org.apache.catalina.connector.Request.doGetSession(Request.java:2993)
	at org.apache.catalina.connector.Request.getSession(Request.java:2432)
	at org.apache.catalina.connector.RequestFacade.getSession(RequestFacade.java:908)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:244)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:582)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:244)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:582)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:527)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at org.apache.jasper.runtime.PageContextImpl.initialize(PageContextImpl.java:133)
	at org.apache.jasper.runtime.JspFactoryImpl.internalGetPageContext(JspFactoryImpl.java:109)
	at org.apache.jasper.runtime.JspFactoryImpl.getPageContext(JspFactoryImpl.java:60)
	at org.apache.jsp.WEB_002dINF.jsp.error_jsp._jspService(error_jsp.java:107)
	... 100 common frames omitted
2023-06-26 10:31:37.757 INFO  [http-nio-10010-exec-8] [c.p.d.interceptor.LoggerInterceptor] - ============================== START ==============================
2023-06-26 10:31:37.757 INFO  [http-nio-10010-exec-8] [c.p.d.interceptor.LoggerInterceptor] -  Class       	:  class org.springframework.web.method.HandlerMethod
2023-06-26 10:31:37.757 INFO  [http-nio-10010-exec-8] [c.p.d.interceptor.LoggerInterceptor] -  Request URI 	:  /error
2023-06-26 10:31:37.757 INFO  [http-nio-10010-exec-8] [c.p.d.interceptor.LoggerInterceptor] -  Request addr	:  0:0:0:0:0:0:0:1
2023-06-26 10:31:37.757 INFO  [http-nio-10010-exec-8] [c.p.d.interceptor.LoggerInterceptor] -  Servlet URI 	:  /error
2023-06-26 10:31:39.109 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
262. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 10:31:39.110 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
262. select * from MEMBER where userId = 'p00139'
 {executed in 0 msec}
2023-06-26 10:31:39.113 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.MemberServiceImpl] - ROLE_ADMIN
2023-06-26 10:31:39.316 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.MemberServiceImpl] - pass:$2a$10$MNrQAPw.4k9j2y08eTmYEeI7oKPuaWbA97HHog.8PYep5HsRwhbae,$2a$10$gDofqf9ddSHFeVkcDLKt8.1R.Hdi.kRoRmKiVcIsrzjH5QOqnJr5K
2023-06-26 10:31:39.529 INFO  [http-nio-10010-exec-10] [c.p.d.configuration.SecurityConfig] - authentication:: p00139
2023-06-26 11:22:25.324 INFO  [Catalina-utility-2] [c.pjy.dashboard.listener.SessionListener] - updateUserCloseTime p00139 
2023-06-26 11:22:25.325 INFO  [Catalina-utility-2] [c.pjy.dashboard.listener.SessionListener] - currentSessionUserList ->  false
2023-06-26 11:22:25.325 INFO  [Catalina-utility-2] [c.pjy.dashboard.listener.SessionListener] - updateUserCloseTime p00139 
2023-06-26 11:22:25.325 INFO  [Catalina-utility-2] [c.pjy.dashboard.listener.SessionListener] - currentSessionUserList ->  false
2023-06-26 11:44:46.856 WARN  [H2 housekeeper] [com.zaxxer.hikari.pool.HikariPool] - H2 - Thread starvation or clock leap detected (housekeeper delta=9m26s75ms972µs300ns).
2023-06-26 12:18:27.064 INFO  [http-nio-10010-exec-4] [c.p.d.interceptor.LoggerInterceptor] - ============================== START ==============================
2023-06-26 12:18:27.064 INFO  [http-nio-10010-exec-4] [c.p.d.interceptor.LoggerInterceptor] -  Class       	:  class org.springframework.web.method.HandlerMethod
2023-06-26 12:18:27.065 INFO  [http-nio-10010-exec-4] [c.p.d.interceptor.LoggerInterceptor] -  Request URI 	:  /
2023-06-26 12:18:27.065 INFO  [http-nio-10010-exec-4] [c.p.d.interceptor.LoggerInterceptor] -  Request addr	:  0:0:0:0:0:0:0:1
2023-06-26 12:18:27.065 INFO  [http-nio-10010-exec-4] [c.p.d.interceptor.LoggerInterceptor] -  Servlet URI 	:  /
2023-06-26 12:18:27.080 ERROR [http-nio-10010-exec-4] [o.a.c.c.C.[Tomcat].[localhost].[/].[jsp]] - Servlet.service() for servlet [jsp] threw exception
java.lang.IllegalStateException: Cannot create a session after the response has been committed
	at org.apache.catalina.connector.Request.doGetSession(Request.java:2993)
	at org.apache.catalina.connector.Request.getSession(Request.java:2432)
	at org.apache.catalina.connector.RequestFacade.getSession(RequestFacade.java:908)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:244)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:582)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:527)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at org.apache.jasper.runtime.PageContextImpl.initialize(PageContextImpl.java:133)
	at org.apache.jasper.runtime.JspFactoryImpl.internalGetPageContext(JspFactoryImpl.java:109)
	at org.apache.jasper.runtime.JspFactoryImpl.getPageContext(JspFactoryImpl.java:60)
	at org.apache.jsp.WEB_002dINF.jsp.home_jsp._jspService(home_jsp.java:121)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:477)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:385)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:329)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:580)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:516)
	at org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequestDispatcher.include(HeaderWriterFilter.java:149)
	at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:163)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:317)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1372)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:97)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at jdk.internal.reflect.GeneratedMethodAccessor150.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$a00254f8.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:114)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:104)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-06-26 12:18:27.087 ERROR [http-nio-10010-exec-4] [o.a.c.c.C.[.[.[/].[dispatcherServlet]] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [javax.servlet.ServletException: java.lang.IllegalStateException: Cannot create a session after the response has been committed] with root cause
java.lang.IllegalStateException: Cannot create a session after the response has been committed
	at org.apache.catalina.connector.Request.doGetSession(Request.java:2993)
	at org.apache.catalina.connector.Request.getSession(Request.java:2432)
	at org.apache.catalina.connector.RequestFacade.getSession(RequestFacade.java:908)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:244)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:582)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:527)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at org.apache.jasper.runtime.PageContextImpl.initialize(PageContextImpl.java:133)
	at org.apache.jasper.runtime.JspFactoryImpl.internalGetPageContext(JspFactoryImpl.java:109)
	at org.apache.jasper.runtime.JspFactoryImpl.getPageContext(JspFactoryImpl.java:60)
	at org.apache.jsp.WEB_002dINF.jsp.home_jsp._jspService(home_jsp.java:121)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:477)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:385)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:329)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:580)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:516)
	at org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequestDispatcher.include(HeaderWriterFilter.java:149)
	at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:163)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:317)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1372)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:97)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at jdk.internal.reflect.GeneratedMethodAccessor150.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$a00254f8.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:114)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:104)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-06-26 12:18:27.092 INFO  [http-nio-10010-exec-4] [c.p.d.interceptor.LoggerInterceptor] - ============================== START ==============================
2023-06-26 12:18:27.092 INFO  [http-nio-10010-exec-4] [c.p.d.interceptor.LoggerInterceptor] -  Class       	:  class org.springframework.web.method.HandlerMethod
2023-06-26 12:18:27.092 INFO  [http-nio-10010-exec-4] [c.p.d.interceptor.LoggerInterceptor] -  Request URI 	:  /error
2023-06-26 12:18:27.092 INFO  [http-nio-10010-exec-4] [c.p.d.interceptor.LoggerInterceptor] -  Request addr	:  0:0:0:0:0:0:0:1
2023-06-26 12:18:27.092 INFO  [http-nio-10010-exec-4] [c.p.d.interceptor.LoggerInterceptor] -  Servlet URI 	:  /error
2023-06-26 12:18:27.133 ERROR [http-nio-10010-exec-4] [o.a.c.c.C.[Tomcat].[localhost].[/].[jsp]] - Servlet.service() for servlet [jsp] threw exception
java.lang.IllegalStateException: Cannot create a session after the response has been committed
	at org.apache.catalina.connector.Request.doGetSession(Request.java:2993)
	at org.apache.catalina.connector.Request.getSession(Request.java:2432)
	at org.apache.catalina.connector.RequestFacade.getSession(RequestFacade.java:908)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:244)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:582)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:244)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:582)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:527)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at org.apache.jasper.runtime.PageContextImpl.initialize(PageContextImpl.java:133)
	at org.apache.jasper.runtime.JspFactoryImpl.internalGetPageContext(JspFactoryImpl.java:109)
	at org.apache.jasper.runtime.JspFactoryImpl.getPageContext(JspFactoryImpl.java:60)
	at org.apache.jsp.WEB_002dINF.jsp.error_jsp._jspService(error_jsp.java:107)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:477)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:385)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:329)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:580)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:516)
	at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:163)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:317)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1372)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at jdk.internal.reflect.GeneratedMethodAccessor150.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$a00254f8.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-06-26 12:18:27.137 ERROR [http-nio-10010-exec-4] [o.a.c.c.C.[.[.[/].[dispatcherServlet]] - Servlet.service() for servlet [dispatcherServlet] threw exception
java.lang.IllegalStateException: Cannot create a session after the response has been committed
	at org.apache.catalina.connector.Request.doGetSession(Request.java:2993)
	at org.apache.catalina.connector.Request.getSession(Request.java:2432)
	at org.apache.catalina.connector.RequestFacade.getSession(RequestFacade.java:908)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:244)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:582)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:244)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:582)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:527)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at org.apache.jasper.runtime.PageContextImpl.initialize(PageContextImpl.java:133)
	at org.apache.jasper.runtime.JspFactoryImpl.internalGetPageContext(JspFactoryImpl.java:109)
	at org.apache.jasper.runtime.JspFactoryImpl.getPageContext(JspFactoryImpl.java:60)
	at org.apache.jsp.WEB_002dINF.jsp.error_jsp._jspService(error_jsp.java:107)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:477)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:385)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:329)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:580)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:516)
	at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:163)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:317)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1372)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at jdk.internal.reflect.GeneratedMethodAccessor150.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$a00254f8.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-06-26 12:18:27.139 ERROR [http-nio-10010-exec-4] [o.a.c.c.C.[Tomcat].[localhost]] - Exception Processing ErrorPage[errorCode=0, location=/error]
org.apache.jasper.JasperException: javax.servlet.ServletException: java.lang.IllegalStateException: Cannot create a session after the response has been committed
	at org.apache.jasper.servlet.JspServletWrapper.handleJspException(JspServletWrapper.java:639)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:500)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:385)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:329)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:580)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:516)
	at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:163)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:317)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1372)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at jdk.internal.reflect.GeneratedMethodAccessor150.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$a00254f8.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: javax.servlet.ServletException: java.lang.IllegalStateException: Cannot create a session after the response has been committed
	at org.apache.jsp.WEB_002dINF.jsp.error_jsp._jspService(error_jsp.java:144)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:477)
	... 97 common frames omitted
Caused by: java.lang.IllegalStateException: Cannot create a session after the response has been committed
	at org.apache.catalina.connector.Request.doGetSession(Request.java:2993)
	at org.apache.catalina.connector.Request.getSession(Request.java:2432)
	at org.apache.catalina.connector.RequestFacade.getSession(RequestFacade.java:908)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:244)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:582)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:244)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:582)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:527)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at org.apache.jasper.runtime.PageContextImpl.initialize(PageContextImpl.java:133)
	at org.apache.jasper.runtime.JspFactoryImpl.internalGetPageContext(JspFactoryImpl.java:109)
	at org.apache.jasper.runtime.JspFactoryImpl.getPageContext(JspFactoryImpl.java:60)
	at org.apache.jsp.WEB_002dINF.jsp.error_jsp._jspService(error_jsp.java:107)
	... 100 common frames omitted
2023-06-26 12:18:27.183 INFO  [http-nio-10010-exec-6] [c.p.d.interceptor.LoggerInterceptor] - ============================== START ==============================
2023-06-26 12:18:27.183 INFO  [http-nio-10010-exec-6] [c.p.d.interceptor.LoggerInterceptor] -  Class       	:  class org.springframework.web.method.HandlerMethod
2023-06-26 12:18:27.183 INFO  [http-nio-10010-exec-6] [c.p.d.interceptor.LoggerInterceptor] -  Request URI 	:  /error
2023-06-26 12:18:27.183 INFO  [http-nio-10010-exec-6] [c.p.d.interceptor.LoggerInterceptor] -  Request addr	:  0:0:0:0:0:0:0:1
2023-06-26 12:18:27.183 INFO  [http-nio-10010-exec-6] [c.p.d.interceptor.LoggerInterceptor] -  Servlet URI 	:  /error
2023-06-26 12:18:28.636 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
322. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 12:18:28.638 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
322. select * from MEMBER where userId = 'p00139'
 {executed in 0 msec}
2023-06-26 12:18:28.642 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.MemberServiceImpl] - ROLE_ADMIN
2023-06-26 12:18:28.852 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.MemberServiceImpl] - pass:$2a$10$MNrQAPw.4k9j2y08eTmYEeI7oKPuaWbA97HHog.8PYep5HsRwhbae,$2a$10$xMmIZrkZFtYNtJqVwXKP6eJCssG3xnhXa6M/qeMIHJPlgDYEEzfr6
2023-06-26 12:18:29.060 INFO  [http-nio-10010-exec-1] [c.p.d.configuration.SecurityConfig] - authentication:: p00139
2023-06-26 13:16:30.739 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Starting PjyApplication on DESKTOP-QJPD93S with PID 25256 (D:\BUS\dashboard\dashboard\target\classes started by admin in D:\BUS\dashboard\dashboard)
2023-06-26 13:16:30.743 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - The following profiles are active: oauth
2023-06-26 13:16:30.798 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-06-26 13:16:30.798 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-06-26 13:16:33.796 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-26 13:16:33.797 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-06-26 13:16:33.941 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 134ms. Found 3 JPA repository interfaces.
2023-06-26 13:16:34.293 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-26 13:16:34.293 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2023-06-26 13:16:34.340 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.FileRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-06-26 13:16:34.341 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.MemberRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-06-26 13:16:34.341 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.RememberMeRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-06-26 13:16:34.342 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 49ms. Found 0 JDBC repository interfaces.
2023-06-26 13:16:34.779 INFO  [restartedMain] [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] - Post-processing PropertySource instances
2023-06-26 13:16:34.846 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2023-06-26 13:16:34.847 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource commandLineArgs [org.springframework.core.env.SimpleCommandLinePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-06-26 13:16:34.847 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-06-26 13:16:34.847 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-06-26 13:16:34.847 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-26 13:16:34.847 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
2023-06-26 13:16:34.847 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2023-06-26 13:16:34.847 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application-oauth.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-26 13:16:34.848 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-26 13:16:34.848 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-26 13:16:34.848 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [pjy.properties] [org.springframework.core.env.CompositePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-06-26 13:16:34.848 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [common.properties] [org.springframework.core.io.support.ResourcePropertySource] to EncryptableMapPropertySourceWrapper
2023-06-26 13:16:34.911 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'asyncConfiguration' of type [com.pjy.dashboard.configuration.AsyncConfiguration$$EnhancerBySpringCGLIB$$991b95a6] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 13:16:34.968 INFO  [restartedMain] [c.u.j.filter.DefaultLazyPropertyFilter] - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2023-06-26 13:16:35.054 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$8311f9d3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 13:16:35.141 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 13:16:35.144 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@1e618c63' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 13:16:35.148 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$a7e69c85] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 13:16:35.158 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration$$EnhancerBySpringCGLIB$$cd3bb49b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 13:16:35.163 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 13:16:35.164 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 13:16:35.189 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ea643199] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 13:16:35.220 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$69e47ecb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 13:16:35.362 INFO  [restartedMain] [c.u.j.r.DefaultLazyPropertyResolver] - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2023-06-26 13:16:35.368 INFO  [restartedMain] [c.u.j.d.DefaultLazyPropertyDetector] - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2023-06-26 13:16:35.802 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 10010 (http)
2023-06-26 13:16:35.819 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Initializing ProtocolHandler ["http-nio-10010"]
2023-06-26 13:16:35.831 INFO  [restartedMain] [org.apache.catalina.core.StandardService] - Starting service [Tomcat]
2023-06-26 13:16:35.831 INFO  [restartedMain] [org.apache.catalina.core.StandardEngine] - Starting Servlet engine: [Apache Tomcat/9.0.29]
2023-06-26 13:16:36.211 INFO  [restartedMain] [org.apache.jasper.servlet.TldScanner] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2023-06-26 13:16:36.223 INFO  [restartedMain] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring embedded WebApplicationContext
2023-06-26 13:16:36.223 INFO  [restartedMain] [o.s.web.context.ContextLoader] - Root WebApplicationContext: initialization completed in 5425 ms
2023-06-26 13:16:37.064 INFO  [restartedMain] [c.u.j.encryptor.DefaultLazyEncryptor] - Found Custom Encryptor Bean org.jasypt.encryption.pbe.PooledPBEStringEncryptor@b24bea2 with name: jasyptStringEncryptor
2023-06-26 13:16:37.112 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Starting...
2023-06-26 13:16:37.207 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.executeSql(PoolBase.java:567)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 7 msec}
2023-06-26 13:16:37.214 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Start completed.
2023-06-26 13:16:37.980 INFO  [restartedMain] [com.pjy.dashboard.filter.TestFilter] - init Pjy Filter
2023-06-26 13:16:38.399 INFO  [restartedMain] [o.hibernate.jpa.internal.util.LogHelper] - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2023-06-26 13:16:38.542 INFO  [restartedMain] [org.hibernate.Version] - HHH000412: Hibernate Core {5.3.14.Final}
2023-06-26 13:16:38.544 INFO  [restartedMain] [org.hibernate.cfg.Environment] - HHH000206: hibernate.properties not found
2023-06-26 13:16:38.747 INFO  [restartedMain] [org.hibernate.annotations.common.Version] - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2023-06-26 13:16:39.005 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 13:16:39.026 INFO  [restartedMain] [org.hibernate.dialect.Dialect] - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2023-06-26 13:16:39.795 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 13:16:39.798 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select SEQUENCE_CATALOG, SEQUENCE_SCHEMA, SEQUENCE_NAME, INCREMENT from information_schema.sequences
 {executed in 1 msec}
2023-06-26 13:16:39.852 INFO  [restartedMain] [o.s.o.j.LocalContainerEntityManagerFactoryBean] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-06-26 13:16:40.122 INFO  [restartedMain] [o.h.h.i.QueryTranslatorFactoryInitiator] - HHH000397: Using ASTQueryTranslatorFactory
2023-06-26 13:16:41.241 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService
2023-06-26 13:16:41.253 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'asyncThreadPool'
2023-06-26 13:16:41.436 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/h2-console/**'], []
2023-06-26 13:16:41.437 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/css/**'], []
2023-06-26 13:16:41.437 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/js/**'], []
2023-06-26 13:16:41.437 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/monitor/**'], []
2023-06-26 13:16:41.437 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/img/**'], []
2023-06-26 13:16:41.437 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/lib/**'], []
2023-06-26 13:16:41.437 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/main.css'], []
2023-06-26 13:16:41.437 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/common.js'], []
2023-06-26 13:16:41.437 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/resources/**'], []
2023-06-26 13:16:41.608 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@395e3fb5, org.springframework.security.web.context.SecurityContextPersistenceFilter@34c231a5, org.springframework.security.web.header.HeaderWriterFilter@70b85fa4, org.springframework.web.filter.CorsFilter@6d84bd04, org.springframework.security.web.authentication.logout.LogoutFilter@6dfbb1fc, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@174faf76, org.springframework.security.web.session.ConcurrentSessionFilter@4292044b, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@26ab4768, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@e4eeee7, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@3c7ef82f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@146f27c3, org.springframework.security.web.session.SessionManagementFilter@3894b201, org.springframework.security.web.access.ExceptionTranslationFilter@6973598d, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7ebf54c4]
2023-06-26 13:16:41.631 INFO  [restartedMain] [o.s.aop.framework.CglibAopProxy] - Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(javax.servlet.FilterConfig) throws javax.servlet.ServletException] because it is marked as final: Consider using interface-based JDK proxies instead!
2023-06-26 13:16:41.984 WARN  [restartedMain] [o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-06-26 13:16:42.057 INFO  [restartedMain] [o.s.b.a.w.s.WelcomePageHandlerMapping] - Adding welcome page: ServletContext resource [/index.html]
2023-06-26 13:16:42.491 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 13:16:43.323 INFO  [restartedMain] [o.s.b.d.a.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2023-06-26 13:16:43.352 INFO  [restartedMain] [o.s.b.a.e.web.EndpointLinksResolver] - Exposing 16 endpoint(s) beneath base path '/actuator'
2023-06-26 13:16:43.498 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskScheduler] - Initializing ExecutorService
2023-06-26 13:16:43.501 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Starting ProtocolHandler ["http-nio-10010"]
2023-06-26 13:16:43.559 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 10010 (http) with context path ''
2023-06-26 13:16:43.564 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Started PjyApplication in 13.335 seconds (JVM running for 15.974)
2023-06-26 13:16:43.565 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-06-26 13:16:43.565 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - Application started
2023-06-26 13:16:43.565 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-06-26 13:16:44.634 INFO  [RMI TCP Connection(10)-127.0.0.1] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-26 13:16:44.634 INFO  [RMI TCP Connection(10)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Initializing Servlet 'dispatcherServlet'
2023-06-26 13:16:44.656 INFO  [RMI TCP Connection(10)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Completed initialization in 22 ms
2023-06-26 13:16:56.002 INFO  [http-nio-10010-exec-1] [c.p.d.interceptor.LoggerInterceptor] - ============================== START ==============================
2023-06-26 13:16:56.003 INFO  [http-nio-10010-exec-1] [c.p.d.interceptor.LoggerInterceptor] -  Class       	:  class org.springframework.web.method.HandlerMethod
2023-06-26 13:16:56.003 INFO  [http-nio-10010-exec-1] [c.p.d.interceptor.LoggerInterceptor] -  Request URI 	:  /
2023-06-26 13:16:56.003 INFO  [http-nio-10010-exec-1] [c.p.d.interceptor.LoggerInterceptor] -  Request addr	:  0:0:0:0:0:0:0:1
2023-06-26 13:16:56.003 INFO  [http-nio-10010-exec-1] [c.p.d.interceptor.LoggerInterceptor] -  Servlet URI 	:  /
2023-06-26 13:16:56.764 ERROR [http-nio-10010-exec-1] [o.a.c.c.C.[Tomcat].[localhost].[/].[jsp]] - Servlet.service() for servlet [jsp] threw exception
java.lang.IllegalStateException: Cannot create a session after the response has been committed
	at org.apache.catalina.connector.Request.doGetSession(Request.java:2993)
	at org.apache.catalina.connector.Request.getSession(Request.java:2432)
	at org.apache.catalina.connector.RequestFacade.getSession(RequestFacade.java:908)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:244)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:582)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:527)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at org.apache.jasper.runtime.PageContextImpl.initialize(PageContextImpl.java:133)
	at org.apache.jasper.runtime.JspFactoryImpl.internalGetPageContext(JspFactoryImpl.java:109)
	at org.apache.jasper.runtime.JspFactoryImpl.getPageContext(JspFactoryImpl.java:60)
	at org.apache.jsp.WEB_002dINF.jsp.home_jsp._jspService(home_jsp.java:121)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:477)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:385)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:329)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:580)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:516)
	at org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequestDispatcher.include(HeaderWriterFilter.java:149)
	at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:163)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:317)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1372)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:97)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$418b74a4.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:114)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:104)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-06-26 13:16:56.773 ERROR [http-nio-10010-exec-1] [o.a.c.c.C.[.[.[/].[dispatcherServlet]] - Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [javax.servlet.ServletException: java.lang.IllegalStateException: Cannot create a session after the response has been committed] with root cause
java.lang.IllegalStateException: Cannot create a session after the response has been committed
	at org.apache.catalina.connector.Request.doGetSession(Request.java:2993)
	at org.apache.catalina.connector.Request.getSession(Request.java:2432)
	at org.apache.catalina.connector.RequestFacade.getSession(RequestFacade.java:908)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:244)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:582)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:527)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at org.apache.jasper.runtime.PageContextImpl.initialize(PageContextImpl.java:133)
	at org.apache.jasper.runtime.JspFactoryImpl.internalGetPageContext(JspFactoryImpl.java:109)
	at org.apache.jasper.runtime.JspFactoryImpl.getPageContext(JspFactoryImpl.java:60)
	at org.apache.jsp.WEB_002dINF.jsp.home_jsp._jspService(home_jsp.java:121)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:477)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:385)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:329)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:580)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:516)
	at org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequestDispatcher.include(HeaderWriterFilter.java:149)
	at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:163)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:317)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1372)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:97)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$418b74a4.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:114)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:104)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-06-26 13:16:56.782 INFO  [http-nio-10010-exec-1] [c.p.d.interceptor.LoggerInterceptor] - ============================== START ==============================
2023-06-26 13:16:56.782 INFO  [http-nio-10010-exec-1] [c.p.d.interceptor.LoggerInterceptor] -  Class       	:  class org.springframework.web.method.HandlerMethod
2023-06-26 13:16:56.782 INFO  [http-nio-10010-exec-1] [c.p.d.interceptor.LoggerInterceptor] -  Request URI 	:  /error
2023-06-26 13:16:56.782 INFO  [http-nio-10010-exec-1] [c.p.d.interceptor.LoggerInterceptor] -  Request addr	:  0:0:0:0:0:0:0:1
2023-06-26 13:16:56.782 INFO  [http-nio-10010-exec-1] [c.p.d.interceptor.LoggerInterceptor] -  Servlet URI 	:  /error
2023-06-26 13:16:56.924 ERROR [http-nio-10010-exec-1] [o.a.c.c.C.[Tomcat].[localhost].[/].[jsp]] - Servlet.service() for servlet [jsp] threw exception
java.lang.IllegalStateException: Cannot create a session after the response has been committed
	at org.apache.catalina.connector.Request.doGetSession(Request.java:2993)
	at org.apache.catalina.connector.Request.getSession(Request.java:2432)
	at org.apache.catalina.connector.RequestFacade.getSession(RequestFacade.java:908)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:244)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:582)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:244)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:582)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:527)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at org.apache.jasper.runtime.PageContextImpl.initialize(PageContextImpl.java:133)
	at org.apache.jasper.runtime.JspFactoryImpl.internalGetPageContext(JspFactoryImpl.java:109)
	at org.apache.jasper.runtime.JspFactoryImpl.getPageContext(JspFactoryImpl.java:60)
	at org.apache.jsp.WEB_002dINF.jsp.error_jsp._jspService(error_jsp.java:107)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:477)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:385)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:329)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:580)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:516)
	at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:163)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:317)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1372)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$418b74a4.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-06-26 13:16:56.925 ERROR [http-nio-10010-exec-1] [o.a.c.c.C.[.[.[/].[dispatcherServlet]] - Servlet.service() for servlet [dispatcherServlet] threw exception
java.lang.IllegalStateException: Cannot create a session after the response has been committed
	at org.apache.catalina.connector.Request.doGetSession(Request.java:2993)
	at org.apache.catalina.connector.Request.getSession(Request.java:2432)
	at org.apache.catalina.connector.RequestFacade.getSession(RequestFacade.java:908)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:244)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:582)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:244)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:582)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:527)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at org.apache.jasper.runtime.PageContextImpl.initialize(PageContextImpl.java:133)
	at org.apache.jasper.runtime.JspFactoryImpl.internalGetPageContext(JspFactoryImpl.java:109)
	at org.apache.jasper.runtime.JspFactoryImpl.getPageContext(JspFactoryImpl.java:60)
	at org.apache.jsp.WEB_002dINF.jsp.error_jsp._jspService(error_jsp.java:107)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:477)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:385)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:329)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:580)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:516)
	at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:163)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:317)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1372)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$418b74a4.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-06-26 13:16:56.926 ERROR [http-nio-10010-exec-1] [o.a.c.c.C.[Tomcat].[localhost]] - Exception Processing ErrorPage[errorCode=0, location=/error]
org.apache.jasper.JasperException: javax.servlet.ServletException: java.lang.IllegalStateException: Cannot create a session after the response has been committed
	at org.apache.jasper.servlet.JspServletWrapper.handleJspException(JspServletWrapper.java:639)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:500)
	at org.apache.jasper.servlet.JspServlet.serviceJspFile(JspServlet.java:385)
	at org.apache.jasper.servlet.JspServlet.service(JspServlet.java:329)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.doInclude(ApplicationDispatcher.java:580)
	at org.apache.catalina.core.ApplicationDispatcher.include(ApplicationDispatcher.java:516)
	at org.springframework.web.servlet.view.InternalResourceView.renderMergedOutputModel(InternalResourceView.java:163)
	at org.springframework.web.servlet.view.AbstractView.render(AbstractView.java:317)
	at org.springframework.web.servlet.DispatcherServlet.render(DispatcherServlet.java:1372)
	at org.springframework.web.servlet.DispatcherServlet.processDispatchResult(DispatcherServlet.java:1118)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1057)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:116)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:84)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:103)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$418b74a4.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: javax.servlet.ServletException: java.lang.IllegalStateException: Cannot create a session after the response has been committed
	at org.apache.jsp.WEB_002dINF.jsp.error_jsp._jspService(error_jsp.java:144)
	at org.apache.jasper.runtime.HttpJspBase.service(HttpJspBase.java:70)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.jasper.servlet.JspServletWrapper.service(JspServletWrapper.java:477)
	... 98 common frames omitted
Caused by: java.lang.IllegalStateException: Cannot create a session after the response has been committed
	at org.apache.catalina.connector.Request.doGetSession(Request.java:2993)
	at org.apache.catalina.connector.Request.getSession(Request.java:2432)
	at org.apache.catalina.connector.RequestFacade.getSession(RequestFacade.java:908)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:244)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:582)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:244)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:582)
	at org.apache.catalina.core.ApplicationHttpRequest.getSession(ApplicationHttpRequest.java:527)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at javax.servlet.http.HttpServletRequestWrapper.getSession(HttpServletRequestWrapper.java:253)
	at org.apache.jasper.runtime.PageContextImpl.initialize(PageContextImpl.java:133)
	at org.apache.jasper.runtime.JspFactoryImpl.internalGetPageContext(JspFactoryImpl.java:109)
	at org.apache.jasper.runtime.JspFactoryImpl.getPageContext(JspFactoryImpl.java:60)
	at org.apache.jsp.WEB_002dINF.jsp.error_jsp._jspService(error_jsp.java:107)
	... 101 common frames omitted
2023-06-26 13:16:57.288 INFO  [http-nio-10010-exec-3] [c.p.d.interceptor.LoggerInterceptor] - ============================== START ==============================
2023-06-26 13:16:57.288 INFO  [http-nio-10010-exec-3] [c.p.d.interceptor.LoggerInterceptor] -  Class       	:  class org.springframework.web.method.HandlerMethod
2023-06-26 13:16:57.288 INFO  [http-nio-10010-exec-3] [c.p.d.interceptor.LoggerInterceptor] -  Request URI 	:  /error
2023-06-26 13:16:57.288 INFO  [http-nio-10010-exec-3] [c.p.d.interceptor.LoggerInterceptor] -  Request addr	:  0:0:0:0:0:0:0:1
2023-06-26 13:16:57.288 INFO  [http-nio-10010-exec-3] [c.p.d.interceptor.LoggerInterceptor] -  Servlet URI 	:  /error
2023-06-26 13:16:58.772 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 13:16:58.781 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select * from MEMBER where userId = 'p00139'
 {executed in 1 msec}
2023-06-26 13:16:58.803 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.MemberServiceImpl] - ROLE_ADMIN
2023-06-26 13:16:58.892 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.MemberServiceImpl] - pass:$2a$10$MNrQAPw.4k9j2y08eTmYEeI7oKPuaWbA97HHog.8PYep5HsRwhbae,$2a$10$wo0u6pGEBW5eKNpd/sSnMexJm68AVh7Q7jLtGl7gmHC7Z1AY57lMq
2023-06-26 13:16:58.981 INFO  [http-nio-10010-exec-2] [c.p.d.configuration.SecurityConfig] - authentication:: p00139
2023-06-26 13:19:28.291 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@f4b53036
2023-06-26 13:19:28.368 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 13:19:28.374 ERROR [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:311)
1. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
		,	'-전제-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-01-02' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-01-02' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {FAILED after -1 msec}
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT	                                                   
		,[*]	'-전제-'  AS ROUTE_NM
		,	SUM(A.TERM_PAST_CNT) AS SUM_PAST
		,	SUM(A.TERM_LATE_CNT) AS SUM_LATE
		,	SUM(A.TERM_WIBAN_CNT) AS SUM_WIBAN
		,	AVG(A.TERM_WIBAN_CNT) AS AVG_WIBAN
		,	SUM(A.TOTAL_STATION_CNT) AS SUM_STATION
		,	ROUND(SUM(A.TERM_WIBAN_CNT*1.0) / SUM(A.TOTAL_STATION_CNT) * 100.0,2) AS RATE_WIBAN
	FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE A 
	WHERE   A.COMPANY_NO = '100' 
	AND 	A.BASE_YMD BETWEEN  '2023-01-02' AND '2023-06-26' 
	UNION 	
	SELECT  A.ROUTE_NM 
		,	SUM(A.TERM_PAST_CNT) AS SUM_PAST
		,	SUM(A.TERM_LATE_CNT) AS SUM_LATE
		,	SUM(A.TERM_WIBAN_CNT) AS SUM_WIBAN
		,	AVG(A.TERM_WIBAN_CNT) AS AVG_WIBAN
		,	SUM(A.TOTAL_STATION_CNT) AS SUM_STATION
		,	ROUND(SUM(A.TERM_WIBAN_CNT*1.0) / SUM(A.TOTAL_STATION_CNT) * 100.0,2) AS RATE_WIBAN
	FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE A 
	WHERE   A.COMPANY_NO = '100'
	AND 	A.BASE_YMD BETWEEN  '2023-01-02' AND '2023-06-26' 
	GROUP BY A.ROUTE_NM
	ORDER BY 1"; expected "TOP, LIMIT, DISTINCT, ALL, *, NOT, EXISTS, INTERSECTS, UNIQUE"; SQL statement:
SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
		,	'-전제-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-01-02' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-01-02' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1 [42001-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:453)
	at org.h2.engine.SessionRemote.done(SessionRemote.java:611)
	at org.h2.command.CommandRemote.prepare(CommandRemote.java:85)
	at org.h2.command.CommandRemote.<init>(CommandRemote.java:51)
	at org.h2.engine.SessionRemote.prepareCommand(SessionRemote.java:481)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1235)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:76)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:352)
	at net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy.prepareStatement(ConnectionSpy.java:475)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:311)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:87)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:88)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:59)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:85)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at jdk.proxy2/jdk.proxy2.$Proxy117.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:53)
	at jdk.proxy3/jdk.proxy3.$Proxy118.select_PunctualityAnalize_route(Unknown Source)
	at com.pjy.dashboard.service.DynamicSqlService.getSqlFilterMybatis(DynamicSqlService.java:155)
	at com.pjy.dashboard.controller.TestController.DynamicSqlFilterMybatis(TestController.java:190)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:893)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:798)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:97)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at jdk.internal.reflect.GeneratedMethodAccessor148.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$418b74a4.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:114)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:104)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-06-26 13:19:28.430 ERROR [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - jdbcTemplate error: 
### Error querying database.  Cause: org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT	                                                   
		,[*]	'-전제-'  AS ROUTE_NM
		,	SUM(A.TERM_PAST_CNT) AS SUM_PAST
		,	SUM(A.TERM_LATE_CNT) AS SUM_LATE
		,	SUM(A.TERM_WIBAN_CNT) AS SUM_WIBAN
		,	AVG(A.TERM_WIBAN_CNT) AS AVG_WIBAN
		,	SUM(A.TOTAL_STATION_CNT) AS SUM_STATION
		,	ROUND(SUM(A.TERM_WIBAN_CNT*1.0) / SUM(A.TOTAL_STATION_CNT) * 100.0,2) AS RATE_WIBAN
	FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE A 
	WHERE   A.COMPANY_NO = '100' 
	AND 	A.BASE_YMD BETWEEN  '2023-01-02' AND '2023-06-26' 
	UNION 	
	SELECT  A.ROUTE_NM 
		,	SUM(A.TERM_PAST_CNT) AS SUM_PAST
		,	SUM(A.TERM_LATE_CNT) AS SUM_LATE
		,	SUM(A.TERM_WIBAN_CNT) AS SUM_WIBAN
		,	AVG(A.TERM_WIBAN_CNT) AS AVG_WIBAN
		,	SUM(A.TOTAL_STATION_CNT) AS SUM_STATION
		,	ROUND(SUM(A.TERM_WIBAN_CNT*1.0) / SUM(A.TOTAL_STATION_CNT) * 100.0,2) AS RATE_WIBAN
	FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE A 
	WHERE   A.COMPANY_NO = '100'
	AND 	A.BASE_YMD BETWEEN  '2023-01-02' AND '2023-06-26' 
	GROUP BY A.ROUTE_NM
	ORDER BY 1"; expected "TOP, LIMIT, DISTINCT, ALL, *, NOT, EXISTS, INTERSECTS, UNIQUE"; SQL statement:
SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
		,	'-전제-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-01-02' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-01-02' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1 [42001-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:453)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.getSyntaxError(DbException.java:243)
	at org.h2.command.Parser.getSyntaxError(Parser.java:1053)
	at org.h2.command.Parser.readTerm(Parser.java:4479)
	at org.h2.command.Parser.readFactor(Parser.java:3343)
	at org.h2.command.Parser.readSum(Parser.java:3330)
	at org.h2.command.Parser.readConcat(Parser.java:3305)
	at org.h2.command.Parser.readCondition(Parser.java:3108)
	at org.h2.command.Parser.readExpression(Parser.java:3059)
	at org.h2.command.Parser.parseSelectExpressions(Parser.java:2931)
	at org.h2.command.Parser.parseSelect(Parser.java:2952)
	at org.h2.command.Parser.parseQuerySub(Parser.java:2817)
	at org.h2.command.Parser.parseSelectUnion(Parser.java:2649)
	at org.h2.command.Parser.parseQuery(Parser.java:2620)
	at org.h2.command.Parser.parsePrepared(Parser.java:868)
	at org.h2.command.Parser.parse(Parser.java:843)
	at org.h2.command.Parser.parse(Parser.java:819)
	at org.h2.command.Parser.prepareCommand(Parser.java:738)
	at org.h2.engine.Session.prepareLocal(Session.java:657)
	at org.h2.server.TcpServerThread.process(TcpServerThread.java:278)
	at org.h2.server.TcpServerThread.run(TcpServerThread.java:183)
	at java.lang.Thread.run(Unknown Source)

### The error may exist in file [D:\BUS\dashboard\dashboard\target\classes\mapper\h2.xml]
### The error may involve com.pjy.dashboard.mapper.h2.h2Mapper.select_PunctualityAnalize_route
### The error occurred while executing a query
### SQL: SELECT /* select_PunctualityAnalize_route : 배차정시성분석 노선별 */   , '-전제-'  AS ROUTE_NM   , sum(a.TERM_PAST_CNT) AS sum_past   , sum(a.TERM_LATE_CNT) AS sum_late   , sum(a.TERM_WIBAN_CNT) AS sum_wiban   , avg(a.TERM_WIBAN_CNT) AS avg_wiban   , sum(a.TOTAL_STATION_CNT) AS sum_station   , round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban  from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a   where   a.company_no = '100'   AND  a.BASE_YMD BETWEEN  '2023-01-02' AND '2023-06-26'   UNION    select  a.ROUTE_NM    , sum(a.TERM_PAST_CNT) AS sum_past   , sum(a.TERM_LATE_CNT) AS sum_late   , sum(a.TERM_WIBAN_CNT) AS sum_wiban   , avg(a.TERM_WIBAN_CNT) AS avg_wiban   , sum(a.TOTAL_STATION_CNT) AS sum_station   , round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban  from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a   where   a.company_no = '100'  AND  a.BASE_YMD BETWEEN  '2023-01-02' AND '2023-06-26'   GROUP BY a.ROUTE_NM  ORDER BY 1
### Cause: org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT	                                                   
		,[*]	'-전제-'  AS ROUTE_NM
		,	SUM(A.TERM_PAST_CNT) AS SUM_PAST
		,	SUM(A.TERM_LATE_CNT) AS SUM_LATE
		,	SUM(A.TERM_WIBAN_CNT) AS SUM_WIBAN
		,	AVG(A.TERM_WIBAN_CNT) AS AVG_WIBAN
		,	SUM(A.TOTAL_STATION_CNT) AS SUM_STATION
		,	ROUND(SUM(A.TERM_WIBAN_CNT*1.0) / SUM(A.TOTAL_STATION_CNT) * 100.0,2) AS RATE_WIBAN
	FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE A 
	WHERE   A.COMPANY_NO = '100' 
	AND 	A.BASE_YMD BETWEEN  '2023-01-02' AND '2023-06-26' 
	UNION 	
	SELECT  A.ROUTE_NM 
		,	SUM(A.TERM_PAST_CNT) AS SUM_PAST
		,	SUM(A.TERM_LATE_CNT) AS SUM_LATE
		,	SUM(A.TERM_WIBAN_CNT) AS SUM_WIBAN
		,	AVG(A.TERM_WIBAN_CNT) AS AVG_WIBAN
		,	SUM(A.TOTAL_STATION_CNT) AS SUM_STATION
		,	ROUND(SUM(A.TERM_WIBAN_CNT*1.0) / SUM(A.TOTAL_STATION_CNT) * 100.0,2) AS RATE_WIBAN
	FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE A 
	WHERE   A.COMPANY_NO = '100'
	AND 	A.BASE_YMD BETWEEN  '2023-01-02' AND '2023-06-26' 
	GROUP BY A.ROUTE_NM
	ORDER BY 1"; expected "TOP, LIMIT, DISTINCT, ALL, *, NOT, EXISTS, INTERSECTS, UNIQUE"; SQL statement:
SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
		,	'-전제-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-01-02' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-01-02' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1 [42001-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:453)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.getSyntaxError(DbException.java:243)
	at org.h2.command.Parser.getSyntaxError(Parser.java:1053)
	at org.h2.command.Parser.readTerm(Parser.java:4479)
	at org.h2.command.Parser.readFactor(Parser.java:3343)
	at org.h2.command.Parser.readSum(Parser.java:3330)
	at org.h2.command.Parser.readConcat(Parser.java:3305)
	at org.h2.command.Parser.readCondition(Parser.java:3108)
	at org.h2.command.Parser.readExpression(Parser.java:3059)
	at org.h2.command.Parser.parseSelectExpressions(Parser.java:2931)
	at org.h2.command.Parser.parseSelect(Parser.java:2952)
	at org.h2.command.Parser.parseQuerySub(Parser.java:2817)
	at org.h2.command.Parser.parseSelectUnion(Parser.java:2649)
	at org.h2.command.Parser.parseQuery(Parser.java:2620)
	at org.h2.command.Parser.parsePrepared(Parser.java:868)
	at org.h2.command.Parser.parse(Parser.java:843)
	at org.h2.command.Parser.parse(Parser.java:819)
	at org.h2.command.Parser.prepareCommand(Parser.java:738)
	at org.h2.engine.Session.prepareLocal(Session.java:657)
	at org.h2.server.TcpServerThread.process(TcpServerThread.java:278)
	at org.h2.server.TcpServerThread.run(TcpServerThread.java:183)
	at java.lang.Thread.run(Unknown Source)

; bad SQL grammar []; nested exception is org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT	                                                   
		,[*]	'-전제-'  AS ROUTE_NM
		,	SUM(A.TERM_PAST_CNT) AS SUM_PAST
		,	SUM(A.TERM_LATE_CNT) AS SUM_LATE
		,	SUM(A.TERM_WIBAN_CNT) AS SUM_WIBAN
		,	AVG(A.TERM_WIBAN_CNT) AS AVG_WIBAN
		,	SUM(A.TOTAL_STATION_CNT) AS SUM_STATION
		,	ROUND(SUM(A.TERM_WIBAN_CNT*1.0) / SUM(A.TOTAL_STATION_CNT) * 100.0,2) AS RATE_WIBAN
	FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE A 
	WHERE   A.COMPANY_NO = '100' 
	AND 	A.BASE_YMD BETWEEN  '2023-01-02' AND '2023-06-26' 
	UNION 	
	SELECT  A.ROUTE_NM 
		,	SUM(A.TERM_PAST_CNT) AS SUM_PAST
		,	SUM(A.TERM_LATE_CNT) AS SUM_LATE
		,	SUM(A.TERM_WIBAN_CNT) AS SUM_WIBAN
		,	AVG(A.TERM_WIBAN_CNT) AS AVG_WIBAN
		,	SUM(A.TOTAL_STATION_CNT) AS SUM_STATION
		,	ROUND(SUM(A.TERM_WIBAN_CNT*1.0) / SUM(A.TOTAL_STATION_CNT) * 100.0,2) AS RATE_WIBAN
	FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE A 
	WHERE   A.COMPANY_NO = '100'
	AND 	A.BASE_YMD BETWEEN  '2023-01-02' AND '2023-06-26' 
	GROUP BY A.ROUTE_NM
	ORDER BY 1"; expected "TOP, LIMIT, DISTINCT, ALL, *, NOT, EXISTS, INTERSECTS, UNIQUE"; SQL statement:
SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
		,	'-전제-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-01-02' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-01-02' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1 [42001-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:453)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.getSyntaxError(DbException.java:243)
	at org.h2.command.Parser.getSyntaxError(Parser.java:1053)
	at org.h2.command.Parser.readTerm(Parser.java:4479)
	at org.h2.command.Parser.readFactor(Parser.java:3343)
	at org.h2.command.Parser.readSum(Parser.java:3330)
	at org.h2.command.Parser.readConcat(Parser.java:3305)
	at org.h2.command.Parser.readCondition(Parser.java:3108)
	at org.h2.command.Parser.readExpression(Parser.java:3059)
	at org.h2.command.Parser.parseSelectExpressions(Parser.java:2931)
	at org.h2.command.Parser.parseSelect(Parser.java:2952)
	at org.h2.command.Parser.parseQuerySub(Parser.java:2817)
	at org.h2.command.Parser.parseSelectUnion(Parser.java:2649)
	at org.h2.command.Parser.parseQuery(Parser.java:2620)
	at org.h2.command.Parser.parsePrepared(Parser.java:868)
	at org.h2.command.Parser.parse(Parser.java:843)
	at org.h2.command.Parser.parse(Parser.java:819)
	at org.h2.command.Parser.prepareCommand(Parser.java:738)
	at org.h2.engine.Session.prepareLocal(Session.java:657)
	at org.h2.server.TcpServerThread.process(TcpServerThread.java:278)
	at org.h2.server.TcpServerThread.run(TcpServerThread.java:183)
	at java.lang.Thread.run(Unknown Source)

2023-06-26 13:19:28.444 WARN  [http-nio-10010-exec-4] [o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver] - Resolved [com.pjy.dashboard.core.error.exception.BusinessException: jdbcTemplate query error]
2023-06-26 13:20:07.892 INFO  [RMI TCP Connection(17)-127.0.0.1] [o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin] - Application shutdown requested.
2023-06-26 13:20:07.922 INFO  [RMI TCP Connection(17)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Shutting down ExecutorService 'asyncThreadPool'
2023-06-26 13:20:07.925 INFO  [RMI TCP Connection(17)-127.0.0.1] [com.zaxxer.hikari.HikariDataSource] - H2 - Shutdown initiated...
2023-06-26 13:20:07.936 INFO  [RMI TCP Connection(17)-127.0.0.1] [com.zaxxer.hikari.HikariDataSource] - H2 - Shutdown completed.
2023-06-26 13:20:07.972 INFO  [RMI TCP Connection(17)-127.0.0.1] [com.pjy.dashboard.filter.TestFilter] - destroy Pjy Filter
2023-06-26 13:20:11.980 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Starting PjyApplication on DESKTOP-QJPD93S with PID 21836 (D:\BUS\dashboard\dashboard\target\classes started by admin in D:\BUS\dashboard\dashboard)
2023-06-26 13:20:11.986 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - The following profiles are active: oauth
2023-06-26 13:20:12.051 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-06-26 13:20:12.051 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-06-26 13:20:13.302 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-26 13:20:13.303 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-06-26 13:20:13.458 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 145ms. Found 3 JPA repository interfaces.
2023-06-26 13:20:13.834 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-26 13:20:13.834 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2023-06-26 13:20:13.882 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.FileRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-06-26 13:20:13.883 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.MemberRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-06-26 13:20:13.884 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.RememberMeRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-06-26 13:20:13.884 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 50ms. Found 0 JDBC repository interfaces.
2023-06-26 13:20:14.358 INFO  [restartedMain] [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] - Post-processing PropertySource instances
2023-06-26 13:20:14.440 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2023-06-26 13:20:14.441 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource commandLineArgs [org.springframework.core.env.SimpleCommandLinePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-06-26 13:20:14.441 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-06-26 13:20:14.441 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-06-26 13:20:14.441 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-26 13:20:14.442 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
2023-06-26 13:20:14.442 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2023-06-26 13:20:14.442 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application-oauth.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-26 13:20:14.442 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-26 13:20:14.443 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-26 13:20:14.446 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [pjy.properties] [org.springframework.core.env.CompositePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-06-26 13:20:14.446 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [common.properties] [org.springframework.core.io.support.ResourcePropertySource] to EncryptableMapPropertySourceWrapper
2023-06-26 13:20:14.512 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'asyncConfiguration' of type [com.pjy.dashboard.configuration.AsyncConfiguration$$EnhancerBySpringCGLIB$$5d787cd0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 13:20:14.568 INFO  [restartedMain] [c.u.j.filter.DefaultLazyPropertyFilter] - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2023-06-26 13:20:14.669 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$476ee0fd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 13:20:14.750 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 13:20:14.753 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@2845619e' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 13:20:14.755 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$6c4383af] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 13:20:14.767 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration$$EnhancerBySpringCGLIB$$91989bc5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 13:20:14.772 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 13:20:14.774 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 13:20:14.797 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$aec118c3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 13:20:14.829 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$2e4165f5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 13:20:14.970 INFO  [restartedMain] [c.u.j.r.DefaultLazyPropertyResolver] - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2023-06-26 13:20:14.976 INFO  [restartedMain] [c.u.j.d.DefaultLazyPropertyDetector] - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2023-06-26 13:20:15.424 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 10010 (http)
2023-06-26 13:20:15.442 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Initializing ProtocolHandler ["http-nio-10010"]
2023-06-26 13:20:15.458 INFO  [restartedMain] [org.apache.catalina.core.StandardService] - Starting service [Tomcat]
2023-06-26 13:20:15.459 INFO  [restartedMain] [org.apache.catalina.core.StandardEngine] - Starting Servlet engine: [Apache Tomcat/9.0.29]
2023-06-26 13:20:15.862 INFO  [restartedMain] [org.apache.jasper.servlet.TldScanner] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2023-06-26 13:20:15.875 INFO  [restartedMain] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring embedded WebApplicationContext
2023-06-26 13:20:15.876 INFO  [restartedMain] [o.s.web.context.ContextLoader] - Root WebApplicationContext: initialization completed in 3824 ms
2023-06-26 13:20:16.758 INFO  [restartedMain] [c.u.j.encryptor.DefaultLazyEncryptor] - Found Custom Encryptor Bean org.jasypt.encryption.pbe.PooledPBEStringEncryptor@65ab6b1 with name: jasyptStringEncryptor
2023-06-26 13:20:16.817 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Starting...
2023-06-26 13:20:16.910 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.executeSql(PoolBase.java:567)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 7 msec}
2023-06-26 13:20:16.916 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Start completed.
2023-06-26 13:20:17.746 INFO  [restartedMain] [com.pjy.dashboard.filter.TestFilter] - init Pjy Filter
2023-06-26 13:20:18.079 INFO  [restartedMain] [o.hibernate.jpa.internal.util.LogHelper] - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2023-06-26 13:20:18.164 INFO  [restartedMain] [org.hibernate.Version] - HHH000412: Hibernate Core {5.3.14.Final}
2023-06-26 13:20:18.166 INFO  [restartedMain] [org.hibernate.cfg.Environment] - HHH000206: hibernate.properties not found
2023-06-26 13:20:18.323 INFO  [restartedMain] [org.hibernate.annotations.common.Version] - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2023-06-26 13:20:18.571 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 13:20:18.591 INFO  [restartedMain] [org.hibernate.dialect.Dialect] - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2023-06-26 13:20:19.344 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 13:20:19.348 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select SEQUENCE_CATALOG, SEQUENCE_SCHEMA, SEQUENCE_NAME, INCREMENT from information_schema.sequences
 {executed in 2 msec}
2023-06-26 13:20:19.409 INFO  [restartedMain] [o.s.o.j.LocalContainerEntityManagerFactoryBean] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-06-26 13:20:19.683 INFO  [restartedMain] [o.h.h.i.QueryTranslatorFactoryInitiator] - HHH000397: Using ASTQueryTranslatorFactory
2023-06-26 13:20:20.798 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService
2023-06-26 13:20:20.810 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'asyncThreadPool'
2023-06-26 13:20:21.006 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/h2-console/**'], []
2023-06-26 13:20:21.006 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/css/**'], []
2023-06-26 13:20:21.007 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/js/**'], []
2023-06-26 13:20:21.007 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/monitor/**'], []
2023-06-26 13:20:21.007 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/img/**'], []
2023-06-26 13:20:21.007 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/lib/**'], []
2023-06-26 13:20:21.007 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/main.css'], []
2023-06-26 13:20:21.007 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/common.js'], []
2023-06-26 13:20:21.007 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/resources/**'], []
2023-06-26 13:20:21.179 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@18663c78, org.springframework.security.web.context.SecurityContextPersistenceFilter@16595621, org.springframework.security.web.header.HeaderWriterFilter@40307f10, org.springframework.web.filter.CorsFilter@73ff1963, org.springframework.security.web.authentication.logout.LogoutFilter@62b5fc95, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@78432d8d, org.springframework.security.web.session.ConcurrentSessionFilter@1cd26f28, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@7cce6a9d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@582e1228, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@193439b5, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@50b2f39f, org.springframework.security.web.session.SessionManagementFilter@68c03221, org.springframework.security.web.access.ExceptionTranslationFilter@584ebe74, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7abeb4d2]
2023-06-26 13:20:21.206 INFO  [restartedMain] [o.s.aop.framework.CglibAopProxy] - Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(javax.servlet.FilterConfig) throws javax.servlet.ServletException] because it is marked as final: Consider using interface-based JDK proxies instead!
2023-06-26 13:20:21.575 WARN  [restartedMain] [o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-06-26 13:20:21.663 INFO  [restartedMain] [o.s.b.a.w.s.WelcomePageHandlerMapping] - Adding welcome page: ServletContext resource [/index.html]
2023-06-26 13:20:22.134 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 13:20:23.206 INFO  [restartedMain] [o.s.b.d.a.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2023-06-26 13:20:23.245 INFO  [restartedMain] [o.s.b.a.e.web.EndpointLinksResolver] - Exposing 16 endpoint(s) beneath base path '/actuator'
2023-06-26 13:20:23.415 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskScheduler] - Initializing ExecutorService
2023-06-26 13:20:23.420 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Starting ProtocolHandler ["http-nio-10010"]
2023-06-26 13:20:23.503 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 10010 (http) with context path ''
2023-06-26 13:20:23.509 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Started PjyApplication in 12.045 seconds (JVM running for 13.558)
2023-06-26 13:20:23.510 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-06-26 13:20:23.510 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - Application started
2023-06-26 13:20:23.510 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-06-26 13:20:24.453 INFO  [RMI TCP Connection(9)-127.0.0.1] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-26 13:20:24.453 INFO  [RMI TCP Connection(9)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Initializing Servlet 'dispatcherServlet'
2023-06-26 13:20:24.481 INFO  [RMI TCP Connection(9)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Completed initialization in 28 ms
2023-06-26 13:20:27.795 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@f4b53036
2023-06-26 13:20:27.865 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 13:20:27.874 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-전제-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-01-02' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-01-02' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 13:22:22.530 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@b40bc4a4
2023-06-26 13:22:22.532 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 13:22:22.535 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-전제-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-02-01' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-02-01' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 13:22:45.532 INFO  [RMI TCP Connection(14)-127.0.0.1] [o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin] - Application shutdown requested.
2023-06-26 13:22:45.567 INFO  [RMI TCP Connection(14)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Shutting down ExecutorService 'asyncThreadPool'
2023-06-26 13:22:45.569 INFO  [RMI TCP Connection(14)-127.0.0.1] [com.zaxxer.hikari.HikariDataSource] - H2 - Shutdown initiated...
2023-06-26 13:22:45.577 INFO  [RMI TCP Connection(14)-127.0.0.1] [com.zaxxer.hikari.HikariDataSource] - H2 - Shutdown completed.
2023-06-26 13:22:45.607 INFO  [RMI TCP Connection(14)-127.0.0.1] [com.pjy.dashboard.filter.TestFilter] - destroy Pjy Filter
2023-06-26 13:22:49.458 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Starting PjyApplication on DESKTOP-QJPD93S with PID 6124 (D:\BUS\dashboard\dashboard\target\classes started by admin in D:\BUS\dashboard\dashboard)
2023-06-26 13:22:49.464 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - The following profiles are active: oauth
2023-06-26 13:22:49.522 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-06-26 13:22:49.522 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-06-26 13:22:50.701 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-26 13:22:50.701 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-06-26 13:22:50.872 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 159ms. Found 3 JPA repository interfaces.
2023-06-26 13:22:51.216 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-26 13:22:51.216 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2023-06-26 13:22:51.262 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.FileRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-06-26 13:22:51.263 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.MemberRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-06-26 13:22:51.263 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.RememberMeRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-06-26 13:22:51.264 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 48ms. Found 0 JDBC repository interfaces.
2023-06-26 13:22:51.706 INFO  [restartedMain] [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] - Post-processing PropertySource instances
2023-06-26 13:22:51.781 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2023-06-26 13:22:51.781 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource commandLineArgs [org.springframework.core.env.SimpleCommandLinePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-06-26 13:22:51.781 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-06-26 13:22:51.781 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-06-26 13:22:51.781 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-26 13:22:51.782 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
2023-06-26 13:22:51.782 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2023-06-26 13:22:51.782 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application-oauth.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-26 13:22:51.782 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-26 13:22:51.782 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-26 13:22:51.783 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [pjy.properties] [org.springframework.core.env.CompositePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-06-26 13:22:51.783 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [common.properties] [org.springframework.core.io.support.ResourcePropertySource] to EncryptableMapPropertySourceWrapper
2023-06-26 13:22:51.845 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'asyncConfiguration' of type [com.pjy.dashboard.configuration.AsyncConfiguration$$EnhancerBySpringCGLIB$$f69e5b3f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 13:22:51.897 INFO  [restartedMain] [c.u.j.filter.DefaultLazyPropertyFilter] - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2023-06-26 13:22:51.987 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$e094bf6c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 13:22:52.073 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 13:22:52.076 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@2c7d62d' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 13:22:52.082 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$569621e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 13:22:52.092 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration$$EnhancerBySpringCGLIB$$2abe7a34] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 13:22:52.096 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 13:22:52.098 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 13:22:52.120 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$47e6f732] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 13:22:52.150 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$c7674464] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 13:22:52.281 INFO  [restartedMain] [c.u.j.r.DefaultLazyPropertyResolver] - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2023-06-26 13:22:52.286 INFO  [restartedMain] [c.u.j.d.DefaultLazyPropertyDetector] - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2023-06-26 13:22:52.713 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 10010 (http)
2023-06-26 13:22:52.730 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Initializing ProtocolHandler ["http-nio-10010"]
2023-06-26 13:22:52.740 INFO  [restartedMain] [org.apache.catalina.core.StandardService] - Starting service [Tomcat]
2023-06-26 13:22:52.740 INFO  [restartedMain] [org.apache.catalina.core.StandardEngine] - Starting Servlet engine: [Apache Tomcat/9.0.29]
2023-06-26 13:22:53.115 INFO  [restartedMain] [org.apache.jasper.servlet.TldScanner] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2023-06-26 13:22:53.128 INFO  [restartedMain] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring embedded WebApplicationContext
2023-06-26 13:22:53.128 INFO  [restartedMain] [o.s.web.context.ContextLoader] - Root WebApplicationContext: initialization completed in 3606 ms
2023-06-26 13:22:53.971 INFO  [restartedMain] [c.u.j.encryptor.DefaultLazyEncryptor] - Found Custom Encryptor Bean org.jasypt.encryption.pbe.PooledPBEStringEncryptor@1c03679b with name: jasyptStringEncryptor
2023-06-26 13:22:54.029 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Starting...
2023-06-26 13:22:54.112 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.executeSql(PoolBase.java:567)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 7 msec}
2023-06-26 13:22:54.117 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Start completed.
2023-06-26 13:22:54.901 INFO  [restartedMain] [com.pjy.dashboard.filter.TestFilter] - init Pjy Filter
2023-06-26 13:22:55.225 INFO  [restartedMain] [o.hibernate.jpa.internal.util.LogHelper] - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2023-06-26 13:22:55.299 INFO  [restartedMain] [org.hibernate.Version] - HHH000412: Hibernate Core {5.3.14.Final}
2023-06-26 13:22:55.301 INFO  [restartedMain] [org.hibernate.cfg.Environment] - HHH000206: hibernate.properties not found
2023-06-26 13:22:55.459 INFO  [restartedMain] [org.hibernate.annotations.common.Version] - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2023-06-26 13:22:55.696 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 13:22:55.713 INFO  [restartedMain] [org.hibernate.dialect.Dialect] - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2023-06-26 13:22:56.423 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 13:22:56.426 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select SEQUENCE_CATALOG, SEQUENCE_SCHEMA, SEQUENCE_NAME, INCREMENT from information_schema.sequences
 {executed in 1 msec}
2023-06-26 13:22:56.482 INFO  [restartedMain] [o.s.o.j.LocalContainerEntityManagerFactoryBean] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-06-26 13:22:56.733 INFO  [restartedMain] [o.h.h.i.QueryTranslatorFactoryInitiator] - HHH000397: Using ASTQueryTranslatorFactory
2023-06-26 13:22:57.791 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService
2023-06-26 13:22:57.802 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'asyncThreadPool'
2023-06-26 13:22:57.989 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/h2-console/**'], []
2023-06-26 13:22:57.989 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/css/**'], []
2023-06-26 13:22:57.989 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/js/**'], []
2023-06-26 13:22:57.989 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/monitor/**'], []
2023-06-26 13:22:57.989 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/img/**'], []
2023-06-26 13:22:57.989 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/lib/**'], []
2023-06-26 13:22:57.989 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/main.css'], []
2023-06-26 13:22:57.990 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/common.js'], []
2023-06-26 13:22:57.990 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/resources/**'], []
2023-06-26 13:22:58.152 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2616ed6a, org.springframework.security.web.context.SecurityContextPersistenceFilter@6f9c4519, org.springframework.security.web.header.HeaderWriterFilter@3735fa4e, org.springframework.web.filter.CorsFilter@2f66946, org.springframework.security.web.authentication.logout.LogoutFilter@1dce4e0f, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@5e0ffef7, org.springframework.security.web.session.ConcurrentSessionFilter@6a478cbe, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@5ff50832, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@65150c00, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@63bc74a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@782bb1c0, org.springframework.security.web.session.SessionManagementFilter@39b39cfa, org.springframework.security.web.access.ExceptionTranslationFilter@3752b8b6, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@21e6dadf]
2023-06-26 13:22:58.174 INFO  [restartedMain] [o.s.aop.framework.CglibAopProxy] - Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(javax.servlet.FilterConfig) throws javax.servlet.ServletException] because it is marked as final: Consider using interface-based JDK proxies instead!
2023-06-26 13:22:58.536 WARN  [restartedMain] [o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-06-26 13:22:58.616 INFO  [restartedMain] [o.s.b.a.w.s.WelcomePageHandlerMapping] - Adding welcome page: ServletContext resource [/index.html]
2023-06-26 13:22:59.045 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 13:22:59.841 INFO  [restartedMain] [o.s.b.d.a.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2023-06-26 13:22:59.869 INFO  [restartedMain] [o.s.b.a.e.web.EndpointLinksResolver] - Exposing 16 endpoint(s) beneath base path '/actuator'
2023-06-26 13:23:00.009 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskScheduler] - Initializing ExecutorService
2023-06-26 13:23:00.013 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Starting ProtocolHandler ["http-nio-10010"]
2023-06-26 13:23:00.060 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 10010 (http) with context path ''
2023-06-26 13:23:00.065 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Started PjyApplication in 11.067 seconds (JVM running for 12.414)
2023-06-26 13:23:00.065 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-06-26 13:23:00.066 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - Application started
2023-06-26 13:23:00.066 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-06-26 13:23:00.824 INFO  [RMI TCP Connection(9)-127.0.0.1] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-26 13:23:00.825 INFO  [RMI TCP Connection(9)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Initializing Servlet 'dispatcherServlet'
2023-06-26 13:23:00.844 INFO  [RMI TCP Connection(9)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Completed initialization in 19 ms
2023-06-26 13:23:33.930 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1a9eaf8b
2023-06-26 13:23:34.018 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 13:23:34.027 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-회사-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-03-01' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-03-01' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 2 msec}
2023-06-26 13:24:07.066 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1a9eaf8b
2023-06-26 13:24:07.067 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 13:24:07.069 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-회사-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-03-01' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-03-01' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 13:26:11.031 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1a9eaf8b
2023-06-26 13:26:11.033 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 13:26:11.034 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-회사-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-03-01' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-03-01' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 13:28:12.697 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1a9eaf8b
2023-06-26 13:28:12.698 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 13:28:12.700 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-회사-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-03-01' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-03-01' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 13:29:15.112 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 13:29:15.115 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select * from MEMBER where userId = 'p00139'
 {executed in 1 msec}
2023-06-26 13:29:15.137 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.MemberServiceImpl] - ROLE_ADMIN
2023-06-26 13:29:15.227 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.MemberServiceImpl] - pass:$2a$10$MNrQAPw.4k9j2y08eTmYEeI7oKPuaWbA97HHog.8PYep5HsRwhbae,$2a$10$smGJUTrxIQmPWN1TMcgUzOjaNgkPEh4jXut57z22GPTrDoiZ0acJ6
2023-06-26 13:29:15.390 INFO  [http-nio-10010-exec-9] [c.p.d.configuration.SecurityConfig] - authentication:: p00139
2023-06-26 13:29:21.567 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1a9eaf8b
2023-06-26 13:29:21.568 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 13:29:21.570 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-회사-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-03-01' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-03-01' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 13:29:41.084 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1a9eaf8b
2023-06-26 13:29:41.085 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 13:29:41.087 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-회사-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-03-01' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-03-01' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 13:30:48.454 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@81319a72
2023-06-26 13:30:48.455 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 13:30:48.457 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-회사-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-04-01' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-04-01' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 13:31:25.640 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@81319a72
2023-06-26 13:31:25.643 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 13:31:25.645 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-회사-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-04-01' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-04-01' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 13:31:43.823 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f00dbd2
2023-06-26 13:31:43.824 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 13:31:43.826 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-회사-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 13:57:07.465 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Starting PjyApplication on DESKTOP-QJPD93S with PID 27520 (D:\BUS\dashboard\dashboard\target\classes started by admin in D:\BUS\dashboard\dashboard)
2023-06-26 13:57:07.469 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - The following profiles are active: oauth
2023-06-26 13:57:07.522 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-06-26 13:57:07.522 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-06-26 13:57:08.723 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-26 13:57:08.724 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-06-26 13:57:08.885 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 149ms. Found 3 JPA repository interfaces.
2023-06-26 13:57:09.244 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-26 13:57:09.244 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2023-06-26 13:57:09.292 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.FileRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-06-26 13:57:09.293 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.MemberRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-06-26 13:57:09.294 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.RememberMeRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-06-26 13:57:09.294 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 50ms. Found 0 JDBC repository interfaces.
2023-06-26 13:57:09.742 INFO  [restartedMain] [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] - Post-processing PropertySource instances
2023-06-26 13:57:09.813 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2023-06-26 13:57:09.813 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource commandLineArgs [org.springframework.core.env.SimpleCommandLinePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-06-26 13:57:09.813 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-06-26 13:57:09.813 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-06-26 13:57:09.813 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-26 13:57:09.814 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
2023-06-26 13:57:09.814 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2023-06-26 13:57:09.814 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application-oauth.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-26 13:57:09.814 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-26 13:57:09.814 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-26 13:57:09.814 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [pjy.properties] [org.springframework.core.env.CompositePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-06-26 13:57:09.814 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [common.properties] [org.springframework.core.io.support.ResourcePropertySource] to EncryptableMapPropertySourceWrapper
2023-06-26 13:57:09.876 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'asyncConfiguration' of type [com.pjy.dashboard.configuration.AsyncConfiguration$$EnhancerBySpringCGLIB$$c41f711] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 13:57:09.931 INFO  [restartedMain] [c.u.j.filter.DefaultLazyPropertyFilter] - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2023-06-26 13:57:10.026 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$f6385b3e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 13:57:10.111 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 13:57:10.114 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@21aa9f5c' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 13:57:10.115 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$1b0cfdf0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 13:57:10.125 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration$$EnhancerBySpringCGLIB$$40621606] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 13:57:10.131 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 13:57:10.132 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 13:57:10.155 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$5d8a9304] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 13:57:10.188 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$dd0ae036] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 13:57:10.329 INFO  [restartedMain] [c.u.j.r.DefaultLazyPropertyResolver] - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2023-06-26 13:57:10.335 INFO  [restartedMain] [c.u.j.d.DefaultLazyPropertyDetector] - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2023-06-26 13:57:10.795 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 10010 (http)
2023-06-26 13:57:10.813 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Initializing ProtocolHandler ["http-nio-10010"]
2023-06-26 13:57:10.824 INFO  [restartedMain] [org.apache.catalina.core.StandardService] - Starting service [Tomcat]
2023-06-26 13:57:10.824 INFO  [restartedMain] [org.apache.catalina.core.StandardEngine] - Starting Servlet engine: [Apache Tomcat/9.0.29]
2023-06-26 13:57:11.193 INFO  [restartedMain] [org.apache.jasper.servlet.TldScanner] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2023-06-26 13:57:11.204 INFO  [restartedMain] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring embedded WebApplicationContext
2023-06-26 13:57:11.204 INFO  [restartedMain] [o.s.web.context.ContextLoader] - Root WebApplicationContext: initialization completed in 3682 ms
2023-06-26 13:57:12.066 INFO  [restartedMain] [c.u.j.encryptor.DefaultLazyEncryptor] - Found Custom Encryptor Bean org.jasypt.encryption.pbe.PooledPBEStringEncryptor@4250fedc with name: jasyptStringEncryptor
2023-06-26 13:57:12.117 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Starting...
2023-06-26 13:57:12.203 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.executeSql(PoolBase.java:567)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 7 msec}
2023-06-26 13:57:12.211 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Start completed.
2023-06-26 13:57:12.974 INFO  [restartedMain] [com.pjy.dashboard.filter.TestFilter] - init Pjy Filter
2023-06-26 13:57:13.302 INFO  [restartedMain] [o.hibernate.jpa.internal.util.LogHelper] - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2023-06-26 13:57:13.377 INFO  [restartedMain] [org.hibernate.Version] - HHH000412: Hibernate Core {5.3.14.Final}
2023-06-26 13:57:13.378 INFO  [restartedMain] [org.hibernate.cfg.Environment] - HHH000206: hibernate.properties not found
2023-06-26 13:57:13.529 INFO  [restartedMain] [org.hibernate.annotations.common.Version] - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2023-06-26 13:57:13.766 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 13:57:13.784 INFO  [restartedMain] [org.hibernate.dialect.Dialect] - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2023-06-26 13:57:14.506 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 13:57:14.509 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select SEQUENCE_CATALOG, SEQUENCE_SCHEMA, SEQUENCE_NAME, INCREMENT from information_schema.sequences
 {executed in 1 msec}
2023-06-26 13:57:14.560 INFO  [restartedMain] [o.s.o.j.LocalContainerEntityManagerFactoryBean] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-06-26 13:57:14.809 INFO  [restartedMain] [o.h.h.i.QueryTranslatorFactoryInitiator] - HHH000397: Using ASTQueryTranslatorFactory
2023-06-26 13:57:15.898 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService
2023-06-26 13:57:15.907 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'asyncThreadPool'
2023-06-26 13:57:16.106 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/h2-console/**'], []
2023-06-26 13:57:16.107 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/css/**'], []
2023-06-26 13:57:16.107 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/js/**'], []
2023-06-26 13:57:16.107 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/monitor/**'], []
2023-06-26 13:57:16.107 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/img/**'], []
2023-06-26 13:57:16.108 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/lib/**'], []
2023-06-26 13:57:16.108 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/main.css'], []
2023-06-26 13:57:16.108 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/common.js'], []
2023-06-26 13:57:16.108 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/resources/**'], []
2023-06-26 13:57:16.289 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@df3f754, org.springframework.security.web.context.SecurityContextPersistenceFilter@6145ac88, org.springframework.security.web.header.HeaderWriterFilter@6ea9c75, org.springframework.web.filter.CorsFilter@51b6dd27, org.springframework.security.web.authentication.logout.LogoutFilter@6b4b42da, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@26ee6b18, org.springframework.security.web.session.ConcurrentSessionFilter@6d03cee4, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@627bbe4, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@43f5c3ad, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@52b7d95a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@256779df, org.springframework.security.web.session.SessionManagementFilter@398324c0, org.springframework.security.web.access.ExceptionTranslationFilter@1beac32e, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@cfafe69]
2023-06-26 13:57:16.316 INFO  [restartedMain] [o.s.aop.framework.CglibAopProxy] - Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(javax.servlet.FilterConfig) throws javax.servlet.ServletException] because it is marked as final: Consider using interface-based JDK proxies instead!
2023-06-26 13:57:16.702 WARN  [restartedMain] [o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-06-26 13:57:16.778 INFO  [restartedMain] [o.s.b.a.w.s.WelcomePageHandlerMapping] - Adding welcome page: ServletContext resource [/index.html]
2023-06-26 13:57:17.209 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 13:57:18.067 INFO  [restartedMain] [o.s.b.d.a.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2023-06-26 13:57:18.095 INFO  [restartedMain] [o.s.b.a.e.web.EndpointLinksResolver] - Exposing 16 endpoint(s) beneath base path '/actuator'
2023-06-26 13:57:18.240 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskScheduler] - Initializing ExecutorService
2023-06-26 13:57:18.244 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Starting ProtocolHandler ["http-nio-10010"]
2023-06-26 13:57:18.308 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 10010 (http) with context path ''
2023-06-26 13:57:18.313 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Started PjyApplication in 11.32 seconds (JVM running for 12.66)
2023-06-26 13:57:18.314 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-06-26 13:57:18.314 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - Application started
2023-06-26 13:57:18.314 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-06-26 13:57:19.207 INFO  [RMI TCP Connection(8)-127.0.0.1] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-26 13:57:19.207 INFO  [RMI TCP Connection(8)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Initializing Servlet 'dispatcherServlet'
2023-06-26 13:57:19.227 INFO  [RMI TCP Connection(8)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Completed initialization in 20 ms
2023-06-26 14:02:52.296 INFO  [RMI TCP Connection(18)-127.0.0.1] [o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin] - Application shutdown requested.
2023-06-26 14:02:52.324 INFO  [RMI TCP Connection(18)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Shutting down ExecutorService 'asyncThreadPool'
2023-06-26 14:02:52.329 INFO  [RMI TCP Connection(18)-127.0.0.1] [com.zaxxer.hikari.HikariDataSource] - H2 - Shutdown initiated...
2023-06-26 14:02:52.337 INFO  [RMI TCP Connection(18)-127.0.0.1] [com.zaxxer.hikari.HikariDataSource] - H2 - Shutdown completed.
2023-06-26 14:02:52.387 INFO  [RMI TCP Connection(18)-127.0.0.1] [com.pjy.dashboard.filter.TestFilter] - destroy Pjy Filter
2023-06-26 14:02:56.083 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Starting PjyApplication on DESKTOP-QJPD93S with PID 23876 (D:\BUS\dashboard\dashboard\target\classes started by admin in D:\BUS\dashboard\dashboard)
2023-06-26 14:02:56.087 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - The following profiles are active: oauth
2023-06-26 14:02:56.155 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-06-26 14:02:56.155 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-06-26 14:02:57.370 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-26 14:02:57.371 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-06-26 14:02:57.530 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 148ms. Found 3 JPA repository interfaces.
2023-06-26 14:02:57.887 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-26 14:02:57.887 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2023-06-26 14:02:57.933 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.FileRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-06-26 14:02:57.933 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.MemberRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-06-26 14:02:57.934 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.RememberMeRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-06-26 14:02:57.934 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 47ms. Found 0 JDBC repository interfaces.
2023-06-26 14:02:58.378 INFO  [restartedMain] [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] - Post-processing PropertySource instances
2023-06-26 14:02:58.448 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2023-06-26 14:02:58.449 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource commandLineArgs [org.springframework.core.env.SimpleCommandLinePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-06-26 14:02:58.449 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-06-26 14:02:58.449 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-06-26 14:02:58.449 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-26 14:02:58.449 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
2023-06-26 14:02:58.450 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2023-06-26 14:02:58.450 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application-oauth.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-26 14:02:58.450 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-26 14:02:58.450 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-26 14:02:58.450 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [pjy.properties] [org.springframework.core.env.CompositePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-06-26 14:02:58.450 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [common.properties] [org.springframework.core.io.support.ResourcePropertySource] to EncryptableMapPropertySourceWrapper
2023-06-26 14:02:58.519 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'asyncConfiguration' of type [com.pjy.dashboard.configuration.AsyncConfiguration$$EnhancerBySpringCGLIB$$51633e38] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 14:02:58.574 INFO  [restartedMain] [c.u.j.filter.DefaultLazyPropertyFilter] - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2023-06-26 14:02:58.663 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$3b59a265] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 14:02:58.748 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 14:02:58.750 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@570f0f77' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 14:02:58.755 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$602e4517] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 14:02:58.767 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration$$EnhancerBySpringCGLIB$$85835d2d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 14:02:58.771 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 14:02:58.772 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 14:02:58.796 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$a2abda2b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 14:02:58.826 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$222c275d] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 14:02:58.963 INFO  [restartedMain] [c.u.j.r.DefaultLazyPropertyResolver] - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2023-06-26 14:02:58.970 INFO  [restartedMain] [c.u.j.d.DefaultLazyPropertyDetector] - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2023-06-26 14:02:59.394 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 10010 (http)
2023-06-26 14:02:59.410 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Initializing ProtocolHandler ["http-nio-10010"]
2023-06-26 14:02:59.423 INFO  [restartedMain] [org.apache.catalina.core.StandardService] - Starting service [Tomcat]
2023-06-26 14:02:59.424 INFO  [restartedMain] [org.apache.catalina.core.StandardEngine] - Starting Servlet engine: [Apache Tomcat/9.0.29]
2023-06-26 14:02:59.813 INFO  [restartedMain] [org.apache.jasper.servlet.TldScanner] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2023-06-26 14:02:59.826 INFO  [restartedMain] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring embedded WebApplicationContext
2023-06-26 14:02:59.827 INFO  [restartedMain] [o.s.web.context.ContextLoader] - Root WebApplicationContext: initialization completed in 3672 ms
2023-06-26 14:03:00.671 INFO  [restartedMain] [c.u.j.encryptor.DefaultLazyEncryptor] - Found Custom Encryptor Bean org.jasypt.encryption.pbe.PooledPBEStringEncryptor@6b601556 with name: jasyptStringEncryptor
2023-06-26 14:03:00.719 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Starting...
2023-06-26 14:03:00.819 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.executeSql(PoolBase.java:567)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 7 msec}
2023-06-26 14:03:00.823 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Start completed.
2023-06-26 14:03:01.583 INFO  [restartedMain] [com.pjy.dashboard.filter.TestFilter] - init Pjy Filter
2023-06-26 14:03:01.915 INFO  [restartedMain] [o.hibernate.jpa.internal.util.LogHelper] - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2023-06-26 14:03:01.993 INFO  [restartedMain] [org.hibernate.Version] - HHH000412: Hibernate Core {5.3.14.Final}
2023-06-26 14:03:01.995 INFO  [restartedMain] [org.hibernate.cfg.Environment] - HHH000206: hibernate.properties not found
2023-06-26 14:03:02.150 INFO  [restartedMain] [org.hibernate.annotations.common.Version] - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2023-06-26 14:03:02.409 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 14:03:02.426 INFO  [restartedMain] [org.hibernate.dialect.Dialect] - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2023-06-26 14:03:03.162 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 14:03:03.165 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select SEQUENCE_CATALOG, SEQUENCE_SCHEMA, SEQUENCE_NAME, INCREMENT from information_schema.sequences
 {executed in 1 msec}
2023-06-26 14:03:03.216 INFO  [restartedMain] [o.s.o.j.LocalContainerEntityManagerFactoryBean] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-06-26 14:03:03.472 INFO  [restartedMain] [o.h.h.i.QueryTranslatorFactoryInitiator] - HHH000397: Using ASTQueryTranslatorFactory
2023-06-26 14:03:04.529 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService
2023-06-26 14:03:04.541 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'asyncThreadPool'
2023-06-26 14:03:04.733 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/h2-console/**'], []
2023-06-26 14:03:04.734 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/css/**'], []
2023-06-26 14:03:04.734 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/js/**'], []
2023-06-26 14:03:04.734 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/monitor/**'], []
2023-06-26 14:03:04.734 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/img/**'], []
2023-06-26 14:03:04.734 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/lib/**'], []
2023-06-26 14:03:04.734 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/main.css'], []
2023-06-26 14:03:04.734 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/common.js'], []
2023-06-26 14:03:04.734 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/resources/**'], []
2023-06-26 14:03:04.902 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4380e854, org.springframework.security.web.context.SecurityContextPersistenceFilter@280f03cd, org.springframework.security.web.header.HeaderWriterFilter@4b2c32d1, org.springframework.web.filter.CorsFilter@24332d2d, org.springframework.security.web.authentication.logout.LogoutFilter@50117a48, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@2bb34a0f, org.springframework.security.web.session.ConcurrentSessionFilter@8e14259, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@39b39cfa, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@15926431, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@63b9e214, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5ed191ec, org.springframework.security.web.session.SessionManagementFilter@54c24140, org.springframework.security.web.access.ExceptionTranslationFilter@11db1d1c, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@62bcf381]
2023-06-26 14:03:04.923 INFO  [restartedMain] [o.s.aop.framework.CglibAopProxy] - Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(javax.servlet.FilterConfig) throws javax.servlet.ServletException] because it is marked as final: Consider using interface-based JDK proxies instead!
2023-06-26 14:03:05.269 WARN  [restartedMain] [o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-06-26 14:03:05.349 INFO  [restartedMain] [o.s.b.a.w.s.WelcomePageHandlerMapping] - Adding welcome page: ServletContext resource [/index.html]
2023-06-26 14:03:05.774 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 14:03:06.621 INFO  [restartedMain] [o.s.b.d.a.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2023-06-26 14:03:06.650 INFO  [restartedMain] [o.s.b.a.e.web.EndpointLinksResolver] - Exposing 16 endpoint(s) beneath base path '/actuator'
2023-06-26 14:03:06.793 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskScheduler] - Initializing ExecutorService
2023-06-26 14:03:06.796 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Starting ProtocolHandler ["http-nio-10010"]
2023-06-26 14:03:06.852 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 10010 (http) with context path ''
2023-06-26 14:03:06.859 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Started PjyApplication in 11.229 seconds (JVM running for 12.596)
2023-06-26 14:03:06.860 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-06-26 14:03:06.860 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - Application started
2023-06-26 14:03:06.860 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-06-26 14:03:07.909 INFO  [RMI TCP Connection(10)-127.0.0.1] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-26 14:03:07.909 INFO  [RMI TCP Connection(10)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Initializing Servlet 'dispatcherServlet'
2023-06-26 14:03:07.930 INFO  [RMI TCP Connection(10)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Completed initialization in 21 ms
2023-06-26 14:03:32.719 INFO  [http-nio-10010-exec-3] [c.p.d.interceptor.LoggerInterceptor] - ============================== START ==============================
2023-06-26 14:03:32.719 INFO  [http-nio-10010-exec-3] [c.p.d.interceptor.LoggerInterceptor] -  Class       	:  class org.springframework.web.method.HandlerMethod
2023-06-26 14:03:32.720 INFO  [http-nio-10010-exec-3] [c.p.d.interceptor.LoggerInterceptor] -  Request URI 	:  /error
2023-06-26 14:03:32.720 INFO  [http-nio-10010-exec-3] [c.p.d.interceptor.LoggerInterceptor] -  Request addr	:  0:0:0:0:0:0:0:1
2023-06-26 14:03:32.721 INFO  [http-nio-10010-exec-3] [c.p.d.interceptor.LoggerInterceptor] -  Servlet URI 	:  /error
2023-06-26 14:03:34.213 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 14:03:34.220 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select * from MEMBER where userId = 'p00139'
 {executed in 0 msec}
2023-06-26 14:03:34.242 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.MemberServiceImpl] - ROLE_ADMIN
2023-06-26 14:03:34.338 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.MemberServiceImpl] - pass:$2a$10$MNrQAPw.4k9j2y08eTmYEeI7oKPuaWbA97HHog.8PYep5HsRwhbae,$2a$10$Opcm.BnHhkoJRl2MijLBW.lf8i7B1CppvnDsmA0t3YIBDbHzRskeS
2023-06-26 14:03:34.435 INFO  [http-nio-10010-exec-7] [c.p.d.configuration.SecurityConfig] - authentication:: p00139
2023-06-26 14:03:44.207 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@e7c48559
2023-06-26 14:03:44.277 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 14:03:44.282 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-회사-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 2 msec}
2023-06-26 14:03:47.022 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1643b53d
2023-06-26 14:03:47.023 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 14:03:47.027 ERROR [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:311)
1. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
		,	SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('-회사-','-회사',a.ROUTE_NM,'-회사-')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {FAILED after -1 msec}
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT                                                    
		,[*]	SUBSTRING(A.BASE_YMD ,1,7) AS BASE_YM
		,	SUM(A.TERM_PAST_CNT) AS SUM_PAST
		,	SUM(A.TERM_LATE_CNT) AS SUM_LATE
		,	SUM(A.TERM_WIBAN_CNT) AS SUM_WIBAN
		,	AVG(A.TERM_WIBAN_CNT) AS AVG_WIBAN
		,	SUM(A.TOTAL_STATION_CNT) AS SUM_STATION
		,	ROUND(SUM(A.TERM_WIBAN_CNT*1.0) / SUM(A.TOTAL_STATION_CNT) * 100.0,2) AS RATE_WIBAN
	FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE A 
	WHERE   A.COMPANY_NO = '100' 
	AND 	A.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	AND 	A.ROUTE_NM = DECODE('-회사-','-회사',A.ROUTE_NM,'-회사-')
	GROUP BY  SUBSTRING(A.BASE_YMD ,1,7)
	ORDER BY 1"; expected "TOP, LIMIT, DISTINCT, ALL, *, NOT, EXISTS, INTERSECTS, UNIQUE"; SQL statement:
select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
		,	SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('-회사-','-회사',a.ROUTE_NM,'-회사-')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1 [42001-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:453)
	at org.h2.engine.SessionRemote.done(SessionRemote.java:611)
	at org.h2.command.CommandRemote.prepare(CommandRemote.java:85)
	at org.h2.command.CommandRemote.<init>(CommandRemote.java:51)
	at org.h2.engine.SessionRemote.prepareCommand(SessionRemote.java:481)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1235)
	at org.h2.jdbc.JdbcPreparedStatement.<init>(JdbcPreparedStatement.java:76)
	at org.h2.jdbc.JdbcConnection.prepareStatement(JdbcConnection.java:352)
	at net.sf.log4jdbc.sql.jdbcapi.ConnectionSpy.prepareStatement(ConnectionSpy.java:475)
	at com.zaxxer.hikari.pool.ProxyConnection.prepareStatement(ProxyConnection.java:311)
	at com.zaxxer.hikari.pool.HikariProxyConnection.prepareStatement(HikariProxyConnection.java)
	at org.apache.ibatis.executor.statement.PreparedStatementHandler.instantiateStatement(PreparedStatementHandler.java:87)
	at org.apache.ibatis.executor.statement.BaseStatementHandler.prepare(BaseStatementHandler.java:88)
	at org.apache.ibatis.executor.statement.RoutingStatementHandler.prepare(RoutingStatementHandler.java:59)
	at org.apache.ibatis.executor.SimpleExecutor.prepareStatement(SimpleExecutor.java:85)
	at org.apache.ibatis.executor.SimpleExecutor.doQuery(SimpleExecutor.java:62)
	at org.apache.ibatis.executor.BaseExecutor.queryFromDatabase(BaseExecutor.java:324)
	at org.apache.ibatis.executor.BaseExecutor.query(BaseExecutor.java:156)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:109)
	at org.apache.ibatis.executor.CachingExecutor.query(CachingExecutor.java:83)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:148)
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectList(DefaultSqlSession.java:141)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:434)
	at jdk.proxy2/jdk.proxy2.$Proxy117.selectList(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectList(SqlSessionTemplate.java:231)
	at org.apache.ibatis.binding.MapperMethod.executeForMany(MapperMethod.java:137)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:75)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:53)
	at jdk.proxy3/jdk.proxy3.$Proxy118.select_PunctualityAnalize_month(Unknown Source)
	at com.pjy.dashboard.service.DynamicSqlService.getSqlFilterMybatis(DynamicSqlService.java:157)
	at com.pjy.dashboard.controller.TestController.DynamicSqlFilterMybatis(TestController.java:190)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:893)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:798)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:97)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at jdk.internal.reflect.GeneratedMethodAccessor149.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$f2ebdf20.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:114)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:104)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-06-26 14:03:47.082 ERROR [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - jdbcTemplate error: 
### Error querying database.  Cause: org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT                                                    
		,[*]	SUBSTRING(A.BASE_YMD ,1,7) AS BASE_YM
		,	SUM(A.TERM_PAST_CNT) AS SUM_PAST
		,	SUM(A.TERM_LATE_CNT) AS SUM_LATE
		,	SUM(A.TERM_WIBAN_CNT) AS SUM_WIBAN
		,	AVG(A.TERM_WIBAN_CNT) AS AVG_WIBAN
		,	SUM(A.TOTAL_STATION_CNT) AS SUM_STATION
		,	ROUND(SUM(A.TERM_WIBAN_CNT*1.0) / SUM(A.TOTAL_STATION_CNT) * 100.0,2) AS RATE_WIBAN
	FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE A 
	WHERE   A.COMPANY_NO = '100' 
	AND 	A.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	AND 	A.ROUTE_NM = DECODE('-회사-','-회사',A.ROUTE_NM,'-회사-')
	GROUP BY  SUBSTRING(A.BASE_YMD ,1,7)
	ORDER BY 1"; expected "TOP, LIMIT, DISTINCT, ALL, *, NOT, EXISTS, INTERSECTS, UNIQUE"; SQL statement:
select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
		,	SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('-회사-','-회사',a.ROUTE_NM,'-회사-')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1 [42001-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:453)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.getSyntaxError(DbException.java:243)
	at org.h2.command.Parser.getSyntaxError(Parser.java:1053)
	at org.h2.command.Parser.readTerm(Parser.java:4479)
	at org.h2.command.Parser.readFactor(Parser.java:3343)
	at org.h2.command.Parser.readSum(Parser.java:3330)
	at org.h2.command.Parser.readConcat(Parser.java:3305)
	at org.h2.command.Parser.readCondition(Parser.java:3108)
	at org.h2.command.Parser.readExpression(Parser.java:3059)
	at org.h2.command.Parser.parseSelectExpressions(Parser.java:2931)
	at org.h2.command.Parser.parseSelect(Parser.java:2952)
	at org.h2.command.Parser.parseQuerySub(Parser.java:2817)
	at org.h2.command.Parser.parseSelectUnion(Parser.java:2649)
	at org.h2.command.Parser.parseQuery(Parser.java:2620)
	at org.h2.command.Parser.parsePrepared(Parser.java:868)
	at org.h2.command.Parser.parse(Parser.java:843)
	at org.h2.command.Parser.parse(Parser.java:819)
	at org.h2.command.Parser.prepareCommand(Parser.java:738)
	at org.h2.engine.Session.prepareLocal(Session.java:657)
	at org.h2.server.TcpServerThread.process(TcpServerThread.java:278)
	at org.h2.server.TcpServerThread.run(TcpServerThread.java:183)
	at java.lang.Thread.run(Unknown Source)

### The error may exist in file [D:\BUS\dashboard\dashboard\target\classes\mapper\h2.xml]
### The error may involve com.pjy.dashboard.mapper.h2.h2Mapper.select_PunctualityAnalize_month
### The error occurred while executing a query
### SQL: select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */   , SUBSTRING(a.BASE_YMD ,1,7) AS base_ym   , sum(a.TERM_PAST_CNT) AS sum_past   , sum(a.TERM_LATE_CNT) AS sum_late   , sum(a.TERM_WIBAN_CNT) AS sum_wiban   , avg(a.TERM_WIBAN_CNT) AS avg_wiban   , sum(a.TOTAL_STATION_CNT) AS sum_station   , round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban  from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a   where   a.company_no = '100'   AND  a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26'   AND  a.ROUTE_NM = decode('-회사-','-회사',a.ROUTE_NM,'-회사-')  GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)  ORDER BY 1
### Cause: org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT                                                    
		,[*]	SUBSTRING(A.BASE_YMD ,1,7) AS BASE_YM
		,	SUM(A.TERM_PAST_CNT) AS SUM_PAST
		,	SUM(A.TERM_LATE_CNT) AS SUM_LATE
		,	SUM(A.TERM_WIBAN_CNT) AS SUM_WIBAN
		,	AVG(A.TERM_WIBAN_CNT) AS AVG_WIBAN
		,	SUM(A.TOTAL_STATION_CNT) AS SUM_STATION
		,	ROUND(SUM(A.TERM_WIBAN_CNT*1.0) / SUM(A.TOTAL_STATION_CNT) * 100.0,2) AS RATE_WIBAN
	FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE A 
	WHERE   A.COMPANY_NO = '100' 
	AND 	A.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	AND 	A.ROUTE_NM = DECODE('-회사-','-회사',A.ROUTE_NM,'-회사-')
	GROUP BY  SUBSTRING(A.BASE_YMD ,1,7)
	ORDER BY 1"; expected "TOP, LIMIT, DISTINCT, ALL, *, NOT, EXISTS, INTERSECTS, UNIQUE"; SQL statement:
select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
		,	SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('-회사-','-회사',a.ROUTE_NM,'-회사-')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1 [42001-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:453)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.getSyntaxError(DbException.java:243)
	at org.h2.command.Parser.getSyntaxError(Parser.java:1053)
	at org.h2.command.Parser.readTerm(Parser.java:4479)
	at org.h2.command.Parser.readFactor(Parser.java:3343)
	at org.h2.command.Parser.readSum(Parser.java:3330)
	at org.h2.command.Parser.readConcat(Parser.java:3305)
	at org.h2.command.Parser.readCondition(Parser.java:3108)
	at org.h2.command.Parser.readExpression(Parser.java:3059)
	at org.h2.command.Parser.parseSelectExpressions(Parser.java:2931)
	at org.h2.command.Parser.parseSelect(Parser.java:2952)
	at org.h2.command.Parser.parseQuerySub(Parser.java:2817)
	at org.h2.command.Parser.parseSelectUnion(Parser.java:2649)
	at org.h2.command.Parser.parseQuery(Parser.java:2620)
	at org.h2.command.Parser.parsePrepared(Parser.java:868)
	at org.h2.command.Parser.parse(Parser.java:843)
	at org.h2.command.Parser.parse(Parser.java:819)
	at org.h2.command.Parser.prepareCommand(Parser.java:738)
	at org.h2.engine.Session.prepareLocal(Session.java:657)
	at org.h2.server.TcpServerThread.process(TcpServerThread.java:278)
	at org.h2.server.TcpServerThread.run(TcpServerThread.java:183)
	at java.lang.Thread.run(Unknown Source)

; bad SQL grammar []; nested exception is org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT                                                    
		,[*]	SUBSTRING(A.BASE_YMD ,1,7) AS BASE_YM
		,	SUM(A.TERM_PAST_CNT) AS SUM_PAST
		,	SUM(A.TERM_LATE_CNT) AS SUM_LATE
		,	SUM(A.TERM_WIBAN_CNT) AS SUM_WIBAN
		,	AVG(A.TERM_WIBAN_CNT) AS AVG_WIBAN
		,	SUM(A.TOTAL_STATION_CNT) AS SUM_STATION
		,	ROUND(SUM(A.TERM_WIBAN_CNT*1.0) / SUM(A.TOTAL_STATION_CNT) * 100.0,2) AS RATE_WIBAN
	FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE A 
	WHERE   A.COMPANY_NO = '100' 
	AND 	A.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	AND 	A.ROUTE_NM = DECODE('-회사-','-회사',A.ROUTE_NM,'-회사-')
	GROUP BY  SUBSTRING(A.BASE_YMD ,1,7)
	ORDER BY 1"; expected "TOP, LIMIT, DISTINCT, ALL, *, NOT, EXISTS, INTERSECTS, UNIQUE"; SQL statement:
select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
		,	SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('-회사-','-회사',a.ROUTE_NM,'-회사-')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1 [42001-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:453)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.getSyntaxError(DbException.java:243)
	at org.h2.command.Parser.getSyntaxError(Parser.java:1053)
	at org.h2.command.Parser.readTerm(Parser.java:4479)
	at org.h2.command.Parser.readFactor(Parser.java:3343)
	at org.h2.command.Parser.readSum(Parser.java:3330)
	at org.h2.command.Parser.readConcat(Parser.java:3305)
	at org.h2.command.Parser.readCondition(Parser.java:3108)
	at org.h2.command.Parser.readExpression(Parser.java:3059)
	at org.h2.command.Parser.parseSelectExpressions(Parser.java:2931)
	at org.h2.command.Parser.parseSelect(Parser.java:2952)
	at org.h2.command.Parser.parseQuerySub(Parser.java:2817)
	at org.h2.command.Parser.parseSelectUnion(Parser.java:2649)
	at org.h2.command.Parser.parseQuery(Parser.java:2620)
	at org.h2.command.Parser.parsePrepared(Parser.java:868)
	at org.h2.command.Parser.parse(Parser.java:843)
	at org.h2.command.Parser.parse(Parser.java:819)
	at org.h2.command.Parser.prepareCommand(Parser.java:738)
	at org.h2.engine.Session.prepareLocal(Session.java:657)
	at org.h2.server.TcpServerThread.process(TcpServerThread.java:278)
	at org.h2.server.TcpServerThread.run(TcpServerThread.java:183)
	at java.lang.Thread.run(Unknown Source)

2023-06-26 14:03:47.095 WARN  [http-nio-10010-exec-3] [o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver] - Resolved [com.pjy.dashboard.core.error.exception.BusinessException: jdbcTemplate query error]
2023-06-26 14:04:22.954 INFO  [RMI TCP Connection(12)-127.0.0.1] [o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin] - Application shutdown requested.
2023-06-26 14:04:22.989 INFO  [RMI TCP Connection(12)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Shutting down ExecutorService 'asyncThreadPool'
2023-06-26 14:04:22.992 INFO  [RMI TCP Connection(12)-127.0.0.1] [com.zaxxer.hikari.HikariDataSource] - H2 - Shutdown initiated...
2023-06-26 14:04:23.000 INFO  [RMI TCP Connection(12)-127.0.0.1] [com.zaxxer.hikari.HikariDataSource] - H2 - Shutdown completed.
2023-06-26 14:04:23.047 INFO  [RMI TCP Connection(12)-127.0.0.1] [com.pjy.dashboard.filter.TestFilter] - destroy Pjy Filter
2023-06-26 14:04:26.754 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Starting PjyApplication on DESKTOP-QJPD93S with PID 21448 (D:\BUS\dashboard\dashboard\target\classes started by admin in D:\BUS\dashboard\dashboard)
2023-06-26 14:04:26.760 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - The following profiles are active: oauth
2023-06-26 14:04:26.817 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-06-26 14:04:26.817 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-06-26 14:04:27.991 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-26 14:04:27.991 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-06-26 14:04:28.161 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 159ms. Found 3 JPA repository interfaces.
2023-06-26 14:04:28.512 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-26 14:04:28.513 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2023-06-26 14:04:28.559 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.FileRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-06-26 14:04:28.560 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.MemberRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-06-26 14:04:28.561 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.RememberMeRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-06-26 14:04:28.561 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 48ms. Found 0 JDBC repository interfaces.
2023-06-26 14:04:29.003 INFO  [restartedMain] [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] - Post-processing PropertySource instances
2023-06-26 14:04:29.080 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2023-06-26 14:04:29.080 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource commandLineArgs [org.springframework.core.env.SimpleCommandLinePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-06-26 14:04:29.080 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-06-26 14:04:29.081 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-06-26 14:04:29.081 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-26 14:04:29.081 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
2023-06-26 14:04:29.081 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2023-06-26 14:04:29.081 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application-oauth.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-26 14:04:29.081 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-26 14:04:29.082 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-26 14:04:29.082 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [pjy.properties] [org.springframework.core.env.CompositePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-06-26 14:04:29.082 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [common.properties] [org.springframework.core.io.support.ResourcePropertySource] to EncryptableMapPropertySourceWrapper
2023-06-26 14:04:29.155 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'asyncConfiguration' of type [com.pjy.dashboard.configuration.AsyncConfiguration$$EnhancerBySpringCGLIB$$73715747] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 14:04:29.208 INFO  [restartedMain] [c.u.j.filter.DefaultLazyPropertyFilter] - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2023-06-26 14:04:29.303 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$5d67bb74] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 14:04:29.390 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 14:04:29.392 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@32918747' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 14:04:29.393 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$823c5e26] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 14:04:29.404 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration$$EnhancerBySpringCGLIB$$a791763c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 14:04:29.408 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 14:04:29.410 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 14:04:29.438 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$c4b9f33a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 14:04:29.468 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$443a406c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 14:04:29.599 INFO  [restartedMain] [c.u.j.r.DefaultLazyPropertyResolver] - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2023-06-26 14:04:29.604 INFO  [restartedMain] [c.u.j.d.DefaultLazyPropertyDetector] - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2023-06-26 14:04:30.025 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 10010 (http)
2023-06-26 14:04:30.042 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Initializing ProtocolHandler ["http-nio-10010"]
2023-06-26 14:04:30.056 INFO  [restartedMain] [org.apache.catalina.core.StandardService] - Starting service [Tomcat]
2023-06-26 14:04:30.056 INFO  [restartedMain] [org.apache.catalina.core.StandardEngine] - Starting Servlet engine: [Apache Tomcat/9.0.29]
2023-06-26 14:04:30.442 INFO  [restartedMain] [org.apache.jasper.servlet.TldScanner] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2023-06-26 14:04:30.453 INFO  [restartedMain] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring embedded WebApplicationContext
2023-06-26 14:04:30.453 INFO  [restartedMain] [o.s.web.context.ContextLoader] - Root WebApplicationContext: initialization completed in 3636 ms
2023-06-26 14:04:31.307 INFO  [restartedMain] [c.u.j.encryptor.DefaultLazyEncryptor] - Found Custom Encryptor Bean org.jasypt.encryption.pbe.PooledPBEStringEncryptor@69c9a291 with name: jasyptStringEncryptor
2023-06-26 14:04:31.366 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Starting...
2023-06-26 14:04:31.450 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.executeSql(PoolBase.java:567)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 8 msec}
2023-06-26 14:04:31.454 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Start completed.
2023-06-26 14:04:32.244 INFO  [restartedMain] [com.pjy.dashboard.filter.TestFilter] - init Pjy Filter
2023-06-26 14:04:32.572 INFO  [restartedMain] [o.hibernate.jpa.internal.util.LogHelper] - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2023-06-26 14:04:32.647 INFO  [restartedMain] [org.hibernate.Version] - HHH000412: Hibernate Core {5.3.14.Final}
2023-06-26 14:04:32.649 INFO  [restartedMain] [org.hibernate.cfg.Environment] - HHH000206: hibernate.properties not found
2023-06-26 14:04:32.803 INFO  [restartedMain] [org.hibernate.annotations.common.Version] - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2023-06-26 14:04:33.037 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 14:04:33.054 INFO  [restartedMain] [org.hibernate.dialect.Dialect] - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2023-06-26 14:04:33.777 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 14:04:33.780 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select SEQUENCE_CATALOG, SEQUENCE_SCHEMA, SEQUENCE_NAME, INCREMENT from information_schema.sequences
 {executed in 2 msec}
2023-06-26 14:04:33.832 INFO  [restartedMain] [o.s.o.j.LocalContainerEntityManagerFactoryBean] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-06-26 14:04:34.089 INFO  [restartedMain] [o.h.h.i.QueryTranslatorFactoryInitiator] - HHH000397: Using ASTQueryTranslatorFactory
2023-06-26 14:04:35.186 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService
2023-06-26 14:04:35.197 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'asyncThreadPool'
2023-06-26 14:04:35.389 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/h2-console/**'], []
2023-06-26 14:04:35.389 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/css/**'], []
2023-06-26 14:04:35.390 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/js/**'], []
2023-06-26 14:04:35.390 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/monitor/**'], []
2023-06-26 14:04:35.390 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/img/**'], []
2023-06-26 14:04:35.390 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/lib/**'], []
2023-06-26 14:04:35.390 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/main.css'], []
2023-06-26 14:04:35.390 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/common.js'], []
2023-06-26 14:04:35.390 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/resources/**'], []
2023-06-26 14:04:35.551 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@66a20887, org.springframework.security.web.context.SecurityContextPersistenceFilter@6e002525, org.springframework.security.web.header.HeaderWriterFilter@579e4cd7, org.springframework.web.filter.CorsFilter@701607e4, org.springframework.security.web.authentication.logout.LogoutFilter@5684e5a, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@51b6dd27, org.springframework.security.web.session.ConcurrentSessionFilter@52b7d95a, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@4539df59, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1fb61d16, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5e435b7e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2575c4d0, org.springframework.security.web.session.SessionManagementFilter@371f34c1, org.springframework.security.web.access.ExceptionTranslationFilter@212e7555, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6af9e36d]
2023-06-26 14:04:35.573 INFO  [restartedMain] [o.s.aop.framework.CglibAopProxy] - Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(javax.servlet.FilterConfig) throws javax.servlet.ServletException] because it is marked as final: Consider using interface-based JDK proxies instead!
2023-06-26 14:04:35.934 WARN  [restartedMain] [o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-06-26 14:04:36.008 INFO  [restartedMain] [o.s.b.a.w.s.WelcomePageHandlerMapping] - Adding welcome page: ServletContext resource [/index.html]
2023-06-26 14:04:36.452 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 14:04:37.259 INFO  [restartedMain] [o.s.b.d.a.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2023-06-26 14:04:37.287 INFO  [restartedMain] [o.s.b.a.e.web.EndpointLinksResolver] - Exposing 16 endpoint(s) beneath base path '/actuator'
2023-06-26 14:04:37.428 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskScheduler] - Initializing ExecutorService
2023-06-26 14:04:37.431 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Starting ProtocolHandler ["http-nio-10010"]
2023-06-26 14:04:37.475 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 10010 (http) with context path ''
2023-06-26 14:04:37.480 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Started PjyApplication in 11.198 seconds (JVM running for 12.533)
2023-06-26 14:04:37.481 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-06-26 14:04:37.481 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - Application started
2023-06-26 14:04:37.481 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-06-26 14:04:38.586 INFO  [RMI TCP Connection(8)-127.0.0.1] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-26 14:04:38.586 INFO  [RMI TCP Connection(8)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Initializing Servlet 'dispatcherServlet'
2023-06-26 14:04:38.608 INFO  [RMI TCP Connection(8)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Completed initialization in 22 ms
2023-06-26 14:05:30.032 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@e7c48559
2023-06-26 14:05:30.123 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 14:05:30.132 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-회사-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 14:05:33.858 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1643b53d
2023-06-26 14:05:33.859 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 14:05:33.861 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('-회사-','-회사',a.ROUTE_NM,'-회사-')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 14:07:01.776 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@ffdb9e8b
2023-06-26 14:07:01.778 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 14:07:01.780 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('20번','-회사',a.ROUTE_NM,'20번')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 14:07:24.817 INFO  [RMI TCP Connection(14)-127.0.0.1] [o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin] - Application shutdown requested.
2023-06-26 14:07:24.845 INFO  [RMI TCP Connection(14)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Shutting down ExecutorService 'asyncThreadPool'
2023-06-26 14:07:24.848 INFO  [RMI TCP Connection(14)-127.0.0.1] [com.zaxxer.hikari.HikariDataSource] - H2 - Shutdown initiated...
2023-06-26 14:07:24.857 INFO  [RMI TCP Connection(14)-127.0.0.1] [com.zaxxer.hikari.HikariDataSource] - H2 - Shutdown completed.
2023-06-26 14:07:24.908 INFO  [RMI TCP Connection(14)-127.0.0.1] [com.pjy.dashboard.filter.TestFilter] - destroy Pjy Filter
2023-06-26 14:07:36.400 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Starting PjyApplication on DESKTOP-QJPD93S with PID 27436 (D:\BUS\dashboard\dashboard\target\classes started by admin in D:\BUS\dashboard\dashboard)
2023-06-26 14:07:36.405 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - The following profiles are active: oauth
2023-06-26 14:07:36.461 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-06-26 14:07:36.461 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-06-26 14:07:37.637 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-26 14:07:37.638 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-06-26 14:07:37.799 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 151ms. Found 3 JPA repository interfaces.
2023-06-26 14:07:38.144 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-26 14:07:38.144 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2023-06-26 14:07:38.191 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.FileRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-06-26 14:07:38.191 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.MemberRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-06-26 14:07:38.192 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.RememberMeRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-06-26 14:07:38.192 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 48ms. Found 0 JDBC repository interfaces.
2023-06-26 14:07:38.651 INFO  [restartedMain] [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] - Post-processing PropertySource instances
2023-06-26 14:07:38.721 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2023-06-26 14:07:38.722 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource commandLineArgs [org.springframework.core.env.SimpleCommandLinePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-06-26 14:07:38.723 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-06-26 14:07:38.723 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-06-26 14:07:38.723 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-26 14:07:38.723 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
2023-06-26 14:07:38.723 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2023-06-26 14:07:38.724 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application-oauth.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-26 14:07:38.724 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-26 14:07:38.724 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-26 14:07:38.724 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [pjy.properties] [org.springframework.core.env.CompositePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-06-26 14:07:38.724 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [common.properties] [org.springframework.core.io.support.ResourcePropertySource] to EncryptableMapPropertySourceWrapper
2023-06-26 14:07:38.786 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'asyncConfiguration' of type [com.pjy.dashboard.configuration.AsyncConfiguration$$EnhancerBySpringCGLIB$$e21903fa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 14:07:38.837 INFO  [restartedMain] [c.u.j.filter.DefaultLazyPropertyFilter] - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2023-06-26 14:07:38.924 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$cc0f6827] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 14:07:39.007 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 14:07:39.009 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@42b2a282' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 14:07:39.014 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$f0e40ad9] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 14:07:39.024 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration$$EnhancerBySpringCGLIB$$163922ef] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 14:07:39.029 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 14:07:39.031 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 14:07:39.053 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$33619fed] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 14:07:39.085 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$b2e1ed1f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 14:07:39.220 INFO  [restartedMain] [c.u.j.r.DefaultLazyPropertyResolver] - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2023-06-26 14:07:39.224 INFO  [restartedMain] [c.u.j.d.DefaultLazyPropertyDetector] - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2023-06-26 14:07:39.658 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 10010 (http)
2023-06-26 14:07:39.675 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Initializing ProtocolHandler ["http-nio-10010"]
2023-06-26 14:07:39.688 INFO  [restartedMain] [org.apache.catalina.core.StandardService] - Starting service [Tomcat]
2023-06-26 14:07:39.688 INFO  [restartedMain] [org.apache.catalina.core.StandardEngine] - Starting Servlet engine: [Apache Tomcat/9.0.29]
2023-06-26 14:07:40.067 INFO  [restartedMain] [org.apache.jasper.servlet.TldScanner] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2023-06-26 14:07:40.078 INFO  [restartedMain] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring embedded WebApplicationContext
2023-06-26 14:07:40.078 INFO  [restartedMain] [o.s.web.context.ContextLoader] - Root WebApplicationContext: initialization completed in 3616 ms
2023-06-26 14:07:40.948 INFO  [restartedMain] [c.u.j.encryptor.DefaultLazyEncryptor] - Found Custom Encryptor Bean org.jasypt.encryption.pbe.PooledPBEStringEncryptor@19c6935c with name: jasyptStringEncryptor
2023-06-26 14:07:40.992 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Starting...
2023-06-26 14:07:41.088 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.executeSql(PoolBase.java:567)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 10 msec}
2023-06-26 14:07:41.093 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Start completed.
2023-06-26 14:07:41.866 INFO  [restartedMain] [com.pjy.dashboard.filter.TestFilter] - init Pjy Filter
2023-06-26 14:07:42.195 INFO  [restartedMain] [o.hibernate.jpa.internal.util.LogHelper] - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2023-06-26 14:07:42.277 INFO  [restartedMain] [org.hibernate.Version] - HHH000412: Hibernate Core {5.3.14.Final}
2023-06-26 14:07:42.280 INFO  [restartedMain] [org.hibernate.cfg.Environment] - HHH000206: hibernate.properties not found
2023-06-26 14:07:42.446 INFO  [restartedMain] [org.hibernate.annotations.common.Version] - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2023-06-26 14:07:42.680 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 14:07:42.697 INFO  [restartedMain] [org.hibernate.dialect.Dialect] - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2023-06-26 14:07:43.421 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 14:07:43.424 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select SEQUENCE_CATALOG, SEQUENCE_SCHEMA, SEQUENCE_NAME, INCREMENT from information_schema.sequences
 {executed in 1 msec}
2023-06-26 14:07:43.474 INFO  [restartedMain] [o.s.o.j.LocalContainerEntityManagerFactoryBean] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-06-26 14:07:43.731 INFO  [restartedMain] [o.h.h.i.QueryTranslatorFactoryInitiator] - HHH000397: Using ASTQueryTranslatorFactory
2023-06-26 14:07:44.813 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService
2023-06-26 14:07:44.824 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'asyncThreadPool'
2023-06-26 14:07:45.011 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/h2-console/**'], []
2023-06-26 14:07:45.011 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/css/**'], []
2023-06-26 14:07:45.011 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/js/**'], []
2023-06-26 14:07:45.011 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/monitor/**'], []
2023-06-26 14:07:45.011 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/img/**'], []
2023-06-26 14:07:45.011 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/lib/**'], []
2023-06-26 14:07:45.011 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/main.css'], []
2023-06-26 14:07:45.011 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/common.js'], []
2023-06-26 14:07:45.011 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/resources/**'], []
2023-06-26 14:07:45.171 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@28c5f6ed, org.springframework.security.web.context.SecurityContextPersistenceFilter@29de5140, org.springframework.security.web.header.HeaderWriterFilter@1beac32e, org.springframework.web.filter.CorsFilter@6a53b0b4, org.springframework.security.web.authentication.logout.LogoutFilter@103b212a, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@6f5339d8, org.springframework.security.web.session.ConcurrentSessionFilter@1c894ea8, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@8ba3f55, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6c103c52, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@43f5c3ad, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1ee93ae3, org.springframework.security.web.session.SessionManagementFilter@23287181, org.springframework.security.web.access.ExceptionTranslationFilter@59e10db4, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3cb8b98]
2023-06-26 14:07:45.202 INFO  [restartedMain] [o.s.aop.framework.CglibAopProxy] - Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(javax.servlet.FilterConfig) throws javax.servlet.ServletException] because it is marked as final: Consider using interface-based JDK proxies instead!
2023-06-26 14:07:45.577 WARN  [restartedMain] [o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-06-26 14:07:45.651 INFO  [restartedMain] [o.s.b.a.w.s.WelcomePageHandlerMapping] - Adding welcome page: ServletContext resource [/index.html]
2023-06-26 14:07:46.080 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 14:07:46.873 INFO  [restartedMain] [o.s.b.d.a.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2023-06-26 14:07:46.909 INFO  [restartedMain] [o.s.b.a.e.web.EndpointLinksResolver] - Exposing 16 endpoint(s) beneath base path '/actuator'
2023-06-26 14:07:47.052 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskScheduler] - Initializing ExecutorService
2023-06-26 14:07:47.056 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Starting ProtocolHandler ["http-nio-10010"]
2023-06-26 14:07:47.114 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 10010 (http) with context path ''
2023-06-26 14:07:47.119 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Started PjyApplication in 11.206 seconds (JVM running for 12.539)
2023-06-26 14:07:47.119 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-06-26 14:07:47.120 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - Application started
2023-06-26 14:07:47.120 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-06-26 14:07:48.212 INFO  [RMI TCP Connection(9)-127.0.0.1] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-26 14:07:48.212 INFO  [RMI TCP Connection(9)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Initializing Servlet 'dispatcherServlet'
2023-06-26 14:07:48.233 INFO  [RMI TCP Connection(9)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Completed initialization in 21 ms
2023-06-26 14:08:33.671 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@101ec1de
2023-06-26 14:08:33.740 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 14:08:33.748 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-회사-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 14:08:35.219 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1643b53d
2023-06-26 14:08:35.221 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 14:08:35.223 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('-회사-','-회사-',a.ROUTE_NM,'-회사-')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 14:09:30.427 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@e7c48559
2023-06-26 14:09:30.428 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 14:09:30.430 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-회사-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 14:09:32.022 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1643b53d
2023-06-26 14:09:32.023 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 14:09:32.024 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('-회사-','-회사-',a.ROUTE_NM,'-회사-')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 14:09:33.077 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@2778e4f2
2023-06-26 14:09:33.078 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 14:09:33.080 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select  /* select_PunctualityAnalize_day : 배차정시성분석 일별 */
			a.BASE_YMD
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	AND 	a.BASE_YMD like  '2023-05' || '%' 
	AND 	a.ROUTE_NM = decode('-회사-','-회사-',a.ROUTE_NM,'-회사-')
	GROUP BY  a.BASE_YMD
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 14:09:35.517 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@c55b6acc
2023-06-26 14:09:35.518 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 14:09:35.520 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 14:09:36.687 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@6139748f
2023-06-26 14:09:36.689 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 14:09:36.691 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select  /* select_PunctualityAnalize_day : 배차정시성분석 일별 */
			a.BASE_YMD
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	AND 	a.BASE_YMD like  '2023-06' || '%' 
	AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번')
	GROUP BY  a.BASE_YMD
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 14:11:34.280 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@dd7988c4
2023-06-26 14:11:34.281 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 14:11:34.284 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-회사-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-04' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-04' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 14:11:37.761 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@f590a1f6
2023-06-26 14:11:37.766 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 2 msec}
2023-06-26 14:11:37.768 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-04' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 14:11:39.340 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@56ee77fa
2023-06-26 14:11:39.341 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 14:11:39.343 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select  /* select_PunctualityAnalize_day : 배차정시성분석 일별 */
			a.BASE_YMD
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-04' AND '2023-06-26' 
	AND 	a.BASE_YMD like  '2023-06' || '%' 
	AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번')
	GROUP BY  a.BASE_YMD
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 14:13:23.618 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@e7c48559
2023-06-26 14:13:23.619 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 14:13:23.621 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-회사-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 14:13:25.542 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@ffdb9e8b
2023-06-26 14:13:25.544 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 14:13:25.545 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 14:13:27.188 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@ffdb9e8b
2023-06-26 14:13:27.189 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 14:13:27.190 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 14:13:28.318 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@6139748f
2023-06-26 14:13:28.320 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 14:13:28.322 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select  /* select_PunctualityAnalize_day : 배차정시성분석 일별 */
			a.BASE_YMD
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	AND 	a.BASE_YMD like  '2023-06' || '%' 
	AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번')
	GROUP BY  a.BASE_YMD
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 14:16:30.095 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@363d324b
2023-06-26 14:16:30.097 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 14:16:30.099 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-회사-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-03' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-03' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 14:16:31.530 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@4e544b7d
2023-06-26 14:16:31.530 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 14:16:31.532 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-03' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 14:16:32.734 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@afb22181
2023-06-26 14:16:32.735 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 14:16:32.737 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select  /* select_PunctualityAnalize_day : 배차정시성분석 일별 */
			a.BASE_YMD
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-03' AND '2023-06-26' 
	AND 	a.BASE_YMD like  '2023-06' || '%' 
	AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번')
	GROUP BY  a.BASE_YMD
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 14:16:55.764 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f00dbd2
2023-06-26 14:16:55.766 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 14:16:55.768 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-회사-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 14:16:57.129 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@2a106e49
2023-06-26 14:16:57.130 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 14:16:57.132 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('21번','-회사-',a.ROUTE_NM,'21번')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 14:16:58.229 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8b6e444d
2023-06-26 14:16:58.229 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 14:16:58.231 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select  /* select_PunctualityAnalize_day : 배차정시성분석 일별 */
			a.BASE_YMD
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.BASE_YMD like  '2023-06' || '%' 
	AND 	a.ROUTE_NM = decode('21번','-회사-',a.ROUTE_NM,'21번')
	GROUP BY  a.BASE_YMD
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 14:18:34.720 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f00dbd2
2023-06-26 14:18:34.721 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 14:18:34.723 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-회사-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 14:18:36.494 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@a717f504
2023-06-26 14:18:36.496 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 14:18:36.497 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 14:18:37.346 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@875cb08
2023-06-26 14:18:37.346 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 14:18:37.347 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select  /* select_PunctualityAnalize_day : 배차정시성분석 일별 */
			a.BASE_YMD
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.BASE_YMD like  '2023-06' || '%' 
	AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번')
	GROUP BY  a.BASE_YMD
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 14:19:02.283 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f00dbd2
2023-06-26 14:19:02.284 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 14:19:02.286 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-회사-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 14:19:03.660 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@bd800bb6
2023-06-26 14:19:03.661 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 14:19:03.663 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('-회사-','-회사-',a.ROUTE_NM,'-회사-')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 14:19:05.015 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1edde1ba
2023-06-26 14:19:05.016 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 14:19:05.017 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select  /* select_PunctualityAnalize_day : 배차정시성분석 일별 */
			a.BASE_YMD
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.BASE_YMD like  '2023-06' || '%' 
	AND 	a.ROUTE_NM = decode('-회사-','-회사-',a.ROUTE_NM,'-회사-')
	GROUP BY  a.BASE_YMD
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 14:19:29.440 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@ceb53b6b
2023-06-26 14:19:29.441 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 14:19:29.442 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select  /* select_PunctualityAnalize_day : 배차정시성분석 일별 */
			a.BASE_YMD
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.BASE_YMD like  '2023-05' || '%' 
	AND 	a.ROUTE_NM = decode('-회사-','-회사-',a.ROUTE_NM,'-회사-')
	GROUP BY  a.BASE_YMD
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 14:19:31.146 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1edde1ba
2023-06-26 14:19:31.148 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 14:19:31.149 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select  /* select_PunctualityAnalize_day : 배차정시성분석 일별 */
			a.BASE_YMD
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.BASE_YMD like  '2023-06' || '%' 
	AND 	a.ROUTE_NM = decode('-회사-','-회사-',a.ROUTE_NM,'-회사-')
	GROUP BY  a.BASE_YMD
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 14:28:41.800 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@ceb53b6b
2023-06-26 14:28:41.801 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
11. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 14:28:41.804 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select  /* select_PunctualityAnalize_day : 배차정시성분석 일별 */
			a.BASE_YMD
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.BASE_YMD like  '2023-05' || '%' 
	AND 	a.ROUTE_NM = decode('-회사-','-회사-',a.ROUTE_NM,'-회사-')
	GROUP BY  a.BASE_YMD
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 15:15:29.866 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@e7c48559
2023-06-26 15:15:29.868 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 15:15:29.870 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-회사-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 15:15:30.725 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@ffdb9e8b
2023-06-26 15:15:30.727 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 15:15:30.728 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 15:16:27.623 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f00dbd2
2023-06-26 15:16:27.625 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 15:16:27.627 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-회사-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 15:16:28.372 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@a717f504
2023-06-26 15:16:28.373 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 15:16:28.375 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 15:16:29.149 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@875cb08
2023-06-26 15:16:29.150 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 15:16:29.154 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. select  /* select_PunctualityAnalize_day : 배차정시성분석 일별 */
			a.BASE_YMD
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.BASE_YMD like  '2023-06' || '%' 
	AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번')
	GROUP BY  a.BASE_YMD
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 15:16:30.458 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@cee8ec97
2023-06-26 15:16:30.458 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - filterType={getRouteCommonInfo} 
2023-06-26 15:16:30.499 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
2023-06-26 15:16:30.510 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 2 msec}
2023-06-26 15:16:30.511 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
31. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 0 msec}
2023-06-26 15:16:30.515 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
31. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 0 msec}
2023-06-26 15:17:00.487 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@e7c48559
2023-06-26 15:17:00.489 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 15:17:00.491 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-회사-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 15:17:01.124 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@bbfa1812
2023-06-26 15:17:01.125 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 15:17:01.127 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('5-1번','-회사-',a.ROUTE_NM,'5-1번')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 15:17:01.985 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@cd2f47c7
2023-06-26 15:17:01.986 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 15:17:01.987 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. select  /* select_PunctualityAnalize_day : 배차정시성분석 일별 */
			a.BASE_YMD
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	AND 	a.BASE_YMD like  '2023-05' || '%' 
	AND 	a.ROUTE_NM = decode('5-1번','-회사-',a.ROUTE_NM,'5-1번')
	GROUP BY  a.BASE_YMD
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 15:17:02.974 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8662f7ec
2023-06-26 15:17:02.974 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - filterType={getRouteCommonInfo} 
2023-06-26 15:17:02.975 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '5-1번' AND		a.CODE =  '배차정시성대상회차'
2023-06-26 15:17:02.975 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 15:17:02.976 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
31. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '5-1번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 1 msec}
2023-06-26 15:17:02.977 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
31. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '5-1번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 0 msec}
2023-06-26 15:17:02.990 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@fb790900
2023-06-26 15:17:02.990 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_INFO_DETAIL} 
2023-06-26 15:17:02.991 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select  1 AS seq,a.* from    TBL_ARRANGE_PUNCTUALITY_INFO a where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-05-28' AND 	a.ROUTE_NM = decode('5-1번','-회사-',a.ROUTE_NM,'5-1번') and		a.col000 = '버스ID' union select  2 AS seq, b.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a JOIN TBL_ARRANGE_PUNCTUALITY_INFO b ON a.COMPANY_NO =b.COMPANY_NO AND a.BASE_YMD =b.BASE_YMD AND a.ROUTE_NM =b.ROUTE_NM AND a.COL000 =b.COL000 AND a.COL002 =b.COL002 where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-05-28' AND 	a.ROUTE_NM = decode('5-1번','-회사-',a.ROUTE_NM,'5-1번') ORDER BY 1
2023-06-26 15:17:02.996 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
31. select  1 AS seq,a.* from    TBL_ARRANGE_PUNCTUALITY_INFO a where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-05-28' AND 	a.ROUTE_NM = decode('5-1번','-회사-',a.ROUTE_NM,'5-1번') and		a.col000 = '버스ID' union select  2 AS seq, b.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a JOIN TBL_ARRANGE_PUNCTUALITY_INFO b ON a.COMPANY_NO =b.COMPANY_NO AND a.BASE_YMD =b.BASE_YMD AND a.ROUTE_NM =b.ROUTE_NM AND a.COL000 =b.COL000 AND a.COL002 =b.COL002 where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-05-28' AND 	a.ROUTE_NM = decode('5-1번','-회사-',a.ROUTE_NM,'5-1번') ORDER BY 1
 {executed in 4 msec}
2023-06-26 15:17:03.003 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
31. select  1 AS seq,a.* from    TBL_ARRANGE_PUNCTUALITY_INFO a where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-05-28' AND 	a.ROUTE_NM = decode('5-1번','-회사-',a.ROUTE_NM,'5-1번') and		a.col000 = '버스ID' union select  2 AS seq, b.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a JOIN TBL_ARRANGE_PUNCTUALITY_INFO b ON a.COMPANY_NO =b.COMPANY_NO AND a.BASE_YMD =b.BASE_YMD AND a.ROUTE_NM =b.ROUTE_NM AND a.COL000 =b.COL000 AND a.COL002 =b.COL002 where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-05-28' AND 	a.ROUTE_NM = decode('5-1번','-회사-',a.ROUTE_NM,'5-1번') ORDER BY 1
 {executed in 7 msec}
2023-06-26 15:17:49.925 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 15:17:49.928 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
31. select * from MEMBER where userId = 'p00139'
 {executed in 1 msec}
2023-06-26 15:17:49.955 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.MemberServiceImpl] - ROLE_ADMIN
2023-06-26 15:17:50.050 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.MemberServiceImpl] - pass:$2a$10$MNrQAPw.4k9j2y08eTmYEeI7oKPuaWbA97HHog.8PYep5HsRwhbae,$2a$10$9/y89rQs9t1ZN/07F6LUZ.wyzNsd05mWR1R7zi5qRGNGuWqCZpELu
2023-06-26 15:17:50.222 INFO  [http-nio-10010-exec-1] [c.p.d.configuration.SecurityConfig] - authentication:: p00139
2023-06-26 15:17:56.450 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@e7c48559
2023-06-26 15:17:56.452 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 15:17:56.454 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-회사-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 2 msec}
2023-06-26 15:17:57.231 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@ffdb9e8b
2023-06-26 15:17:57.233 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 15:17:57.235 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 15:17:58.255 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@6139748f
2023-06-26 15:17:58.257 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 15:17:58.258 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. select  /* select_PunctualityAnalize_day : 배차정시성분석 일별 */
			a.BASE_YMD
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	AND 	a.BASE_YMD like  '2023-06' || '%' 
	AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번')
	GROUP BY  a.BASE_YMD
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 15:18:00.332 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1064ad67
2023-06-26 15:18:00.332 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - filterType={getRouteCommonInfo} 
2023-06-26 15:18:00.333 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
2023-06-26 15:18:00.334 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 15:18:00.334 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
31. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 0 msec}
2023-06-26 15:18:00.335 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
31. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 1 msec}
2023-06-26 15:18:00.350 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@857abe7b
2023-06-26 15:18:00.350 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_INFO_DETAIL} 
2023-06-26 15:18:00.350 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select  1 AS seq,a.* from    TBL_ARRANGE_PUNCTUALITY_INFO a where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-02' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') and		a.col000 = '버스ID' union select  2 AS seq, b.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a JOIN TBL_ARRANGE_PUNCTUALITY_INFO b ON a.COMPANY_NO =b.COMPANY_NO AND a.BASE_YMD =b.BASE_YMD AND a.ROUTE_NM =b.ROUTE_NM AND a.COL000 =b.COL000 AND a.COL002 =b.COL002 where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-02' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') ORDER BY 1
2023-06-26 15:18:00.361 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
31. select  1 AS seq,a.* from    TBL_ARRANGE_PUNCTUALITY_INFO a where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-02' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') and		a.col000 = '버스ID' union select  2 AS seq, b.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a JOIN TBL_ARRANGE_PUNCTUALITY_INFO b ON a.COMPANY_NO =b.COMPANY_NO AND a.BASE_YMD =b.BASE_YMD AND a.ROUTE_NM =b.ROUTE_NM AND a.COL000 =b.COL000 AND a.COL002 =b.COL002 where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-02' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') ORDER BY 1
 {executed in 11 msec}
2023-06-26 15:18:00.368 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
31. select  1 AS seq,a.* from    TBL_ARRANGE_PUNCTUALITY_INFO a where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-02' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') and		a.col000 = '버스ID' union select  2 AS seq, b.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a JOIN TBL_ARRANGE_PUNCTUALITY_INFO b ON a.COMPANY_NO =b.COMPANY_NO AND a.BASE_YMD =b.BASE_YMD AND a.ROUTE_NM =b.ROUTE_NM AND a.COL000 =b.COL000 AND a.COL002 =b.COL002 where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-02' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') ORDER BY 1
 {executed in 6 msec}
2023-06-26 15:18:30.559 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@e7c48559
2023-06-26 15:18:30.560 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 15:18:30.562 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-회사-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 15:18:31.477 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@ffdb9e8b
2023-06-26 15:18:31.478 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 15:18:31.479 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 15:18:32.238 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@6139748f
2023-06-26 15:18:32.239 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 15:18:32.240 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. select  /* select_PunctualityAnalize_day : 배차정시성분석 일별 */
			a.BASE_YMD
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	AND 	a.BASE_YMD like  '2023-06' || '%' 
	AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번')
	GROUP BY  a.BASE_YMD
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 15:18:33.171 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@27ac961e
2023-06-26 15:18:33.171 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - filterType={getRouteCommonInfo} 
2023-06-26 15:18:33.172 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
2023-06-26 15:18:33.173 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 15:18:33.174 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
31. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 1 msec}
2023-06-26 15:18:33.175 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
31. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 1 msec}
2023-06-26 15:18:33.188 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@9cc2a732
2023-06-26 15:18:33.188 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_INFO_DETAIL} 
2023-06-26 15:18:33.188 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select  1 AS seq,a.* from    TBL_ARRANGE_PUNCTUALITY_INFO a where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') and		a.col000 = '버스ID' union select  2 AS seq, b.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a JOIN TBL_ARRANGE_PUNCTUALITY_INFO b ON a.COMPANY_NO =b.COMPANY_NO AND a.BASE_YMD =b.BASE_YMD AND a.ROUTE_NM =b.ROUTE_NM AND a.COL000 =b.COL000 AND a.COL002 =b.COL002 where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') ORDER BY 1
2023-06-26 15:18:33.195 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
31. select  1 AS seq,a.* from    TBL_ARRANGE_PUNCTUALITY_INFO a where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') and		a.col000 = '버스ID' union select  2 AS seq, b.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a JOIN TBL_ARRANGE_PUNCTUALITY_INFO b ON a.COMPANY_NO =b.COMPANY_NO AND a.BASE_YMD =b.BASE_YMD AND a.ROUTE_NM =b.ROUTE_NM AND a.COL000 =b.COL000 AND a.COL002 =b.COL002 where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') ORDER BY 1
 {executed in 5 msec}
2023-06-26 15:18:33.201 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
31. select  1 AS seq,a.* from    TBL_ARRANGE_PUNCTUALITY_INFO a where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') and		a.col000 = '버스ID' union select  2 AS seq, b.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a JOIN TBL_ARRANGE_PUNCTUALITY_INFO b ON a.COMPANY_NO =b.COMPANY_NO AND a.BASE_YMD =b.BASE_YMD AND a.ROUTE_NM =b.ROUTE_NM AND a.COL000 =b.COL000 AND a.COL002 =b.COL002 where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') ORDER BY 1
 {executed in 5 msec}
2023-06-26 15:19:28.533 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f00dbd2
2023-06-26 15:19:28.534 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 15:19:28.537 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-회사-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 15:19:29.318 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@a717f504
2023-06-26 15:19:29.320 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 15:19:29.321 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 15:19:30.113 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@875cb08
2023-06-26 15:19:30.116 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 15:19:30.117 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. select  /* select_PunctualityAnalize_day : 배차정시성분석 일별 */
			a.BASE_YMD
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.BASE_YMD like  '2023-06' || '%' 
	AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번')
	GROUP BY  a.BASE_YMD
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 15:19:31.007 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@b7a103e0
2023-06-26 15:19:31.007 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - filterType={getRouteCommonInfo} 
2023-06-26 15:19:31.008 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
2023-06-26 15:19:31.008 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 15:19:31.009 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
31. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 0 msec}
2023-06-26 15:19:31.010 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
31. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 1 msec}
2023-06-26 15:19:31.026 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@2cb714f4
2023-06-26 15:19:31.026 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_INFO_DETAIL} 
2023-06-26 15:19:31.026 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select  1 AS seq,a.* from    TBL_ARRANGE_PUNCTUALITY_INFO a where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-02' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') and		a.col000 = '버스ID' union select  2 AS seq, b.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a JOIN TBL_ARRANGE_PUNCTUALITY_INFO b ON a.COMPANY_NO =b.COMPANY_NO AND a.BASE_YMD =b.BASE_YMD AND a.ROUTE_NM =b.ROUTE_NM AND a.COL000 =b.COL000 AND a.COL002 =b.COL002 where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-02' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') ORDER BY 1
2023-06-26 15:19:31.032 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
31. select  1 AS seq,a.* from    TBL_ARRANGE_PUNCTUALITY_INFO a where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-02' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') and		a.col000 = '버스ID' union select  2 AS seq, b.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a JOIN TBL_ARRANGE_PUNCTUALITY_INFO b ON a.COMPANY_NO =b.COMPANY_NO AND a.BASE_YMD =b.BASE_YMD AND a.ROUTE_NM =b.ROUTE_NM AND a.COL000 =b.COL000 AND a.COL002 =b.COL002 where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-02' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') ORDER BY 1
 {executed in 5 msec}
2023-06-26 15:19:31.038 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
31. select  1 AS seq,a.* from    TBL_ARRANGE_PUNCTUALITY_INFO a where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-02' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') and		a.col000 = '버스ID' union select  2 AS seq, b.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a JOIN TBL_ARRANGE_PUNCTUALITY_INFO b ON a.COMPANY_NO =b.COMPANY_NO AND a.BASE_YMD =b.BASE_YMD AND a.ROUTE_NM =b.ROUTE_NM AND a.COL000 =b.COL000 AND a.COL002 =b.COL002 where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-02' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') ORDER BY 1
 {executed in 6 msec}
2023-06-26 15:26:31.096 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f00dbd2
2023-06-26 15:26:31.097 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 15:26:31.099 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-회사-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 15:26:31.985 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@a717f504
2023-06-26 15:26:31.985 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 15:26:31.986 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 15:26:32.777 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@875cb08
2023-06-26 15:26:32.778 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 15:26:32.779 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. select  /* select_PunctualityAnalize_day : 배차정시성분석 일별 */
			a.BASE_YMD
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.BASE_YMD like  '2023-06' || '%' 
	AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번')
	GROUP BY  a.BASE_YMD
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 15:26:33.761 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@cee8ec97
2023-06-26 15:26:33.761 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - filterType={getRouteCommonInfo} 
2023-06-26 15:26:33.767 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
2023-06-26 15:26:33.768 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 15:26:33.769 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
31. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 1 msec}
2023-06-26 15:26:33.770 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
31. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 0 msec}
2023-06-26 15:26:33.783 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@43fefdab
2023-06-26 15:26:33.783 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_INFO_DETAIL} 
2023-06-26 15:26:33.784 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select  1 AS seq,'' TERM, '' TERM_85,'' TERM_125,0 TERM_PAST_CNT,0 TERM_LATE_CNT, 0 TERM_WIBAN_CNT,0 a.TOTAL_STATION_CNT,a.* from    TBL_ARRANGE_PUNCTUALITY_INFO a where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') and		a.col000 = '버스ID' union select  2 AS seq, a.TERM,a.TERM_85,a.TERM_125,a.TERM_PAST_CNT,a.TERM_LATE_CNT,a.TERM_WIBAN_CNT,a.TOTAL_STATION_CNT,b.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a JOIN TBL_ARRANGE_PUNCTUALITY_INFO b ON a.COMPANY_NO =b.COMPANY_NO AND a.BASE_YMD =b.BASE_YMD AND a.ROUTE_NM =b.ROUTE_NM AND a.COL000 =b.COL000 AND a.COL002 =b.COL002 where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') ORDER BY 1
2023-06-26 15:26:33.787 ERROR [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
31. select  1 AS seq,'' TERM, '' TERM_85,'' TERM_125,0 TERM_PAST_CNT,0 TERM_LATE_CNT, 0 TERM_WIBAN_CNT,0 a.TOTAL_STATION_CNT,a.* from    TBL_ARRANGE_PUNCTUALITY_INFO a where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') and		a.col000 = '버스ID' union select  2 AS seq, a.TERM,a.TERM_85,a.TERM_125,a.TERM_PAST_CNT,a.TERM_LATE_CNT,a.TERM_WIBAN_CNT,a.TOTAL_STATION_CNT,b.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a JOIN TBL_ARRANGE_PUNCTUALITY_INFO b ON a.COMPANY_NO =b.COMPANY_NO AND a.BASE_YMD =b.BASE_YMD AND a.ROUTE_NM =b.ROUTE_NM AND a.COL000 =b.COL000 AND a.COL002 =b.COL002 where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') ORDER BY 1
 {FAILED after 1 msec}
org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT  1 AS SEQ,'' TERM, '' TERM_85,'' TERM_125,0 TERM_PAST_CNT,0 TERM_LATE_CNT, 0 TERM_WIBAN_CNT,0 A.[*]TOTAL_STATION_CNT,A.* FROM    TBL_ARRANGE_PUNCTUALITY_INFO A WHERE   A.COMPANY_NO = '100' AND 	A.BASE_YMD =  '2023-06-01' AND 	A.ROUTE_NM = DECODE('20번','-회사-',A.ROUTE_NM,'20번') AND		A.COL000 = '버스ID' UNION SELECT  2 AS SEQ, A.TERM,A.TERM_85,A.TERM_125,A.TERM_PAST_CNT,A.TERM_LATE_CNT,A.TERM_WIBAN_CNT,A.TOTAL_STATION_CNT,B.* FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE A JOIN TBL_ARRANGE_PUNCTUALITY_INFO B ON A.COMPANY_NO =B.COMPANY_NO AND A.BASE_YMD =B.BASE_YMD AND A.ROUTE_NM =B.ROUTE_NM AND A.COL000 =B.COL000 AND A.COL002 =B.COL002 WHERE   A.COMPANY_NO = '100' AND 	A.BASE_YMD =  '2023-06-01' AND 	A.ROUTE_NM = DECODE('20번','-회사-',A.ROUTE_NM,'20번') ORDER BY 1"; SQL statement:
select  1 AS seq,'' TERM, '' TERM_85,'' TERM_125,0 TERM_PAST_CNT,0 TERM_LATE_CNT, 0 TERM_WIBAN_CNT,0 a.TOTAL_STATION_CNT,a.* from    TBL_ARRANGE_PUNCTUALITY_INFO a where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') and		a.col000 = '버스ID' union select  2 AS seq, a.TERM,a.TERM_85,a.TERM_125,a.TERM_PAST_CNT,a.TERM_LATE_CNT,a.TERM_WIBAN_CNT,a.TOTAL_STATION_CNT,b.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a JOIN TBL_ARRANGE_PUNCTUALITY_INFO b ON a.COMPANY_NO =b.COMPANY_NO AND a.BASE_YMD =b.BASE_YMD AND a.ROUTE_NM =b.ROUTE_NM AND a.COL000 =b.COL000 AND a.COL002 =b.COL002 where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') ORDER BY 1 [42000-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:453)
	at org.h2.engine.SessionRemote.done(SessionRemote.java:611)
	at org.h2.command.CommandRemote.prepare(CommandRemote.java:85)
	at org.h2.command.CommandRemote.<init>(CommandRemote.java:51)
	at org.h2.engine.SessionRemote.prepareCommand(SessionRemote.java:481)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1235)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:78)
	at net.sf.log4jdbc.sql.jdbcapi.StatementSpy.executeQuery(StatementSpy.java:731)
	at com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
	at com.zaxxer.hikari.pool.HikariProxyStatement.executeQuery(HikariProxyStatement.java)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:439)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:376)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:452)
	at com.pjy.dashboard.dao.DynamicSqlDao.getHeaderBySql(DynamicSqlDao.java:209)
	at com.pjy.dashboard.dao.DynamicSqlDao$$FastClassBySpringCGLIB$$8af24191.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at com.pjy.dashboard.dao.DynamicSqlH2Dao$$EnhancerBySpringCGLIB$$9c59c98a.getHeaderBySql(<generated>)
	at com.pjy.dashboard.service.DynamicSqlService.getHeaderBySql(DynamicSqlService.java:69)
	at com.pjy.dashboard.service.DynamicSqlService.getSqlFilter(DynamicSqlService.java:129)
	at com.pjy.dashboard.controller.TestController.dynamicSqlFilter(TestController.java:207)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:893)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:798)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:97)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at jdk.internal.reflect.GeneratedMethodAccessor147.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$2cf0e58f.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:114)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:104)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-06-26 15:26:33.834 ERROR [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - jdbcTemplate error: StatementCallback; bad SQL grammar [select  1 AS seq,'' TERM, '' TERM_85,'' TERM_125,0 TERM_PAST_CNT,0 TERM_LATE_CNT, 0 TERM_WIBAN_CNT,0 a.TOTAL_STATION_CNT,a.* from    TBL_ARRANGE_PUNCTUALITY_INFO a where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') and		a.col000 = '버스ID' union select  2 AS seq, a.TERM,a.TERM_85,a.TERM_125,a.TERM_PAST_CNT,a.TERM_LATE_CNT,a.TERM_WIBAN_CNT,a.TOTAL_STATION_CNT,b.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a JOIN TBL_ARRANGE_PUNCTUALITY_INFO b ON a.COMPANY_NO =b.COMPANY_NO AND a.BASE_YMD =b.BASE_YMD AND a.ROUTE_NM =b.ROUTE_NM AND a.COL000 =b.COL000 AND a.COL002 =b.COL002 where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') ORDER BY 1]; nested exception is org.h2.jdbc.JdbcSQLSyntaxErrorException: Syntax error in SQL statement "SELECT  1 AS SEQ,'' TERM, '' TERM_85,'' TERM_125,0 TERM_PAST_CNT,0 TERM_LATE_CNT, 0 TERM_WIBAN_CNT,0 A.[*]TOTAL_STATION_CNT,A.* FROM    TBL_ARRANGE_PUNCTUALITY_INFO A WHERE   A.COMPANY_NO = '100' AND 	A.BASE_YMD =  '2023-06-01' AND 	A.ROUTE_NM = DECODE('20번','-회사-',A.ROUTE_NM,'20번') AND		A.COL000 = '버스ID' UNION SELECT  2 AS SEQ, A.TERM,A.TERM_85,A.TERM_125,A.TERM_PAST_CNT,A.TERM_LATE_CNT,A.TERM_WIBAN_CNT,A.TOTAL_STATION_CNT,B.* FROM    TBL_ARRANGE_PUNCTUALITY_ANALIZE A JOIN TBL_ARRANGE_PUNCTUALITY_INFO B ON A.COMPANY_NO =B.COMPANY_NO AND A.BASE_YMD =B.BASE_YMD AND A.ROUTE_NM =B.ROUTE_NM AND A.COL000 =B.COL000 AND A.COL002 =B.COL002 WHERE   A.COMPANY_NO = '100' AND 	A.BASE_YMD =  '2023-06-01' AND 	A.ROUTE_NM = DECODE('20번','-회사-',A.ROUTE_NM,'20번') ORDER BY 1"; SQL statement:
select  1 AS seq,'' TERM, '' TERM_85,'' TERM_125,0 TERM_PAST_CNT,0 TERM_LATE_CNT, 0 TERM_WIBAN_CNT,0 a.TOTAL_STATION_CNT,a.* from    TBL_ARRANGE_PUNCTUALITY_INFO a where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') and		a.col000 = '버스ID' union select  2 AS seq, a.TERM,a.TERM_85,a.TERM_125,a.TERM_PAST_CNT,a.TERM_LATE_CNT,a.TERM_WIBAN_CNT,a.TOTAL_STATION_CNT,b.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a JOIN TBL_ARRANGE_PUNCTUALITY_INFO b ON a.COMPANY_NO =b.COMPANY_NO AND a.BASE_YMD =b.BASE_YMD AND a.ROUTE_NM =b.ROUTE_NM AND a.COL000 =b.COL000 AND a.COL002 =b.COL002 where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') ORDER BY 1 [42000-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:453)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.message.DbException.getSyntaxError(DbException.java:229)
	at org.h2.command.Parser.getSyntaxError(Parser.java:1051)
	at org.h2.command.Parser.prepareCommand(Parser.java:741)
	at org.h2.engine.Session.prepareLocal(Session.java:657)
	at org.h2.server.TcpServerThread.process(TcpServerThread.java:278)
	at org.h2.server.TcpServerThread.run(TcpServerThread.java:183)
	at java.lang.Thread.run(Unknown Source)

2023-06-26 15:26:33.851 WARN  [http-nio-10010-exec-1] [o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver] - Resolved [com.pjy.dashboard.core.error.exception.BusinessException: jdbcTemplate query error]
2023-06-26 15:27:17.242 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f00dbd2
2023-06-26 15:27:17.243 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
40. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 15:27:17.245 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
40. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-회사-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 15:27:18.240 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@a717f504
2023-06-26 15:27:18.241 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
40. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 15:27:18.243 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
40. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 15:27:18.972 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@875cb08
2023-06-26 15:27:18.973 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
40. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 15:27:18.975 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
40. select  /* select_PunctualityAnalize_day : 배차정시성분석 일별 */
			a.BASE_YMD
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.BASE_YMD like  '2023-06' || '%' 
	AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번')
	GROUP BY  a.BASE_YMD
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 15:27:20.022 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@cee8ec97
2023-06-26 15:27:20.022 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - filterType={getRouteCommonInfo} 
2023-06-26 15:27:20.028 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
2023-06-26 15:27:20.029 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
40. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 15:27:20.030 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
40. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 0 msec}
2023-06-26 15:27:20.031 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
40. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 0 msec}
2023-06-26 15:27:20.042 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@43fefdab
2023-06-26 15:27:20.042 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_INFO_DETAIL} 
2023-06-26 15:27:20.042 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select  1 AS seq,'' TERM, '' TERM_85,'' TERM_125,0 TERM_PAST_CNT,0 TERM_LATE_CNT, 0 TERM_WIBAN_CNT,0 TOTAL_STATION_CNT,a.* from    TBL_ARRANGE_PUNCTUALITY_INFO a where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') and		a.col000 = '버스ID' union select  2 AS seq, a.TERM,a.TERM_85,a.TERM_125,a.TERM_PAST_CNT,a.TERM_LATE_CNT,a.TERM_WIBAN_CNT,a.TOTAL_STATION_CNT,b.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a JOIN TBL_ARRANGE_PUNCTUALITY_INFO b ON a.COMPANY_NO =b.COMPANY_NO AND a.BASE_YMD =b.BASE_YMD AND a.ROUTE_NM =b.ROUTE_NM AND a.COL000 =b.COL000 AND a.COL002 =b.COL002 where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') ORDER BY 1
2023-06-26 15:27:20.049 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
40. select  1 AS seq,'' TERM, '' TERM_85,'' TERM_125,0 TERM_PAST_CNT,0 TERM_LATE_CNT, 0 TERM_WIBAN_CNT,0 TOTAL_STATION_CNT,a.* from    TBL_ARRANGE_PUNCTUALITY_INFO a where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') and		a.col000 = '버스ID' union select  2 AS seq, a.TERM,a.TERM_85,a.TERM_125,a.TERM_PAST_CNT,a.TERM_LATE_CNT,a.TERM_WIBAN_CNT,a.TOTAL_STATION_CNT,b.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a JOIN TBL_ARRANGE_PUNCTUALITY_INFO b ON a.COMPANY_NO =b.COMPANY_NO AND a.BASE_YMD =b.BASE_YMD AND a.ROUTE_NM =b.ROUTE_NM AND a.COL000 =b.COL000 AND a.COL002 =b.COL002 where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') ORDER BY 1
 {executed in 6 msec}
2023-06-26 15:27:20.055 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
40. select  1 AS seq,'' TERM, '' TERM_85,'' TERM_125,0 TERM_PAST_CNT,0 TERM_LATE_CNT, 0 TERM_WIBAN_CNT,0 TOTAL_STATION_CNT,a.* from    TBL_ARRANGE_PUNCTUALITY_INFO a where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') and		a.col000 = '버스ID' union select  2 AS seq, a.TERM,a.TERM_85,a.TERM_125,a.TERM_PAST_CNT,a.TERM_LATE_CNT,a.TERM_WIBAN_CNT,a.TOTAL_STATION_CNT,b.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a JOIN TBL_ARRANGE_PUNCTUALITY_INFO b ON a.COMPANY_NO =b.COMPANY_NO AND a.BASE_YMD =b.BASE_YMD AND a.ROUTE_NM =b.ROUTE_NM AND a.COL000 =b.COL000 AND a.COL002 =b.COL002 where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') ORDER BY 1
 {executed in 6 msec}
2023-06-26 15:31:31.176 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@e7c48559
2023-06-26 15:31:31.177 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
41. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 15:31:31.179 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-회사-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 15:31:32.646 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1643b53d
2023-06-26 15:31:32.647 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
41. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 15:31:32.648 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('-회사-','-회사-',a.ROUTE_NM,'-회사-')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 15:31:34.279 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@ffdb9e8b
2023-06-26 15:31:34.280 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
41. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 15:31:34.282 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 15:31:35.577 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@6139748f
2023-06-26 15:31:35.578 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
41. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 15:31:35.579 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. select  /* select_PunctualityAnalize_day : 배차정시성분석 일별 */
			a.BASE_YMD
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	AND 	a.BASE_YMD like  '2023-06' || '%' 
	AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번')
	GROUP BY  a.BASE_YMD
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 15:31:36.857 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1064ad67
2023-06-26 15:31:36.857 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - filterType={getRouteCommonInfo} 
2023-06-26 15:31:36.861 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
2023-06-26 15:31:36.862 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
41. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 15:31:36.863 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
41. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 0 msec}
2023-06-26 15:31:36.864 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
41. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 0 msec}
2023-06-26 15:31:36.880 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@857abe7b
2023-06-26 15:31:36.880 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_INFO_DETAIL} 
2023-06-26 15:31:36.880 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select  1 AS seq,'-' TERM, '-' TERM_85,'-' TERM_125,0 TERM_PAST_CNT,0 TERM_LATE_CNT, 0 TERM_WIBAN_CNT,0 TOTAL_STATION_CNT,a.* from    TBL_ARRANGE_PUNCTUALITY_INFO a where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-02' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') and		a.col000 = '버스ID' union select  2 AS seq, a.TERM,a.TERM_85,a.TERM_125,a.TERM_PAST_CNT,a.TERM_LATE_CNT,a.TERM_WIBAN_CNT,a.TOTAL_STATION_CNT,b.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a JOIN TBL_ARRANGE_PUNCTUALITY_INFO b ON a.COMPANY_NO =b.COMPANY_NO AND a.BASE_YMD =b.BASE_YMD AND a.ROUTE_NM =b.ROUTE_NM AND a.COL000 =b.COL000 AND a.COL002 =b.COL002 where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-02' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') ORDER BY 1
2023-06-26 15:31:36.887 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
41. select  1 AS seq,'-' TERM, '-' TERM_85,'-' TERM_125,0 TERM_PAST_CNT,0 TERM_LATE_CNT, 0 TERM_WIBAN_CNT,0 TOTAL_STATION_CNT,a.* from    TBL_ARRANGE_PUNCTUALITY_INFO a where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-02' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') and		a.col000 = '버스ID' union select  2 AS seq, a.TERM,a.TERM_85,a.TERM_125,a.TERM_PAST_CNT,a.TERM_LATE_CNT,a.TERM_WIBAN_CNT,a.TOTAL_STATION_CNT,b.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a JOIN TBL_ARRANGE_PUNCTUALITY_INFO b ON a.COMPANY_NO =b.COMPANY_NO AND a.BASE_YMD =b.BASE_YMD AND a.ROUTE_NM =b.ROUTE_NM AND a.COL000 =b.COL000 AND a.COL002 =b.COL002 where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-02' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') ORDER BY 1
 {executed in 7 msec}
2023-06-26 15:31:36.895 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
41. select  1 AS seq,'-' TERM, '-' TERM_85,'-' TERM_125,0 TERM_PAST_CNT,0 TERM_LATE_CNT, 0 TERM_WIBAN_CNT,0 TOTAL_STATION_CNT,a.* from    TBL_ARRANGE_PUNCTUALITY_INFO a where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-02' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') and		a.col000 = '버스ID' union select  2 AS seq, a.TERM,a.TERM_85,a.TERM_125,a.TERM_PAST_CNT,a.TERM_LATE_CNT,a.TERM_WIBAN_CNT,a.TOTAL_STATION_CNT,b.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a JOIN TBL_ARRANGE_PUNCTUALITY_INFO b ON a.COMPANY_NO =b.COMPANY_NO AND a.BASE_YMD =b.BASE_YMD AND a.ROUTE_NM =b.ROUTE_NM AND a.COL000 =b.COL000 AND a.COL002 =b.COL002 where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-02' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') ORDER BY 1
 {executed in 7 msec}
2023-06-26 15:33:06.910 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@e7c48559
2023-06-26 15:33:06.911 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
41. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 15:33:06.913 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-회사-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 15:33:08.143 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@82d417d0
2023-06-26 15:33:08.144 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
41. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 15:33:08.146 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('21번','-회사-',a.ROUTE_NM,'21번')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 15:33:08.890 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@e431edd4
2023-06-26 15:33:08.891 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
41. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 15:33:08.893 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. select  /* select_PunctualityAnalize_day : 배차정시성분석 일별 */
			a.BASE_YMD
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	AND 	a.BASE_YMD like  '2023-06' || '%' 
	AND 	a.ROUTE_NM = decode('21번','-회사-',a.ROUTE_NM,'21번')
	GROUP BY  a.BASE_YMD
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 15:33:09.947 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@aaa50f63
2023-06-26 15:33:09.947 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - filterType={getRouteCommonInfo} 
2023-06-26 15:33:09.947 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '21번' AND		a.CODE =  '배차정시성대상회차'
2023-06-26 15:33:09.948 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
41. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 15:33:09.949 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
41. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '21번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 0 msec}
2023-06-26 15:33:09.950 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
41. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '21번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 0 msec}
2023-06-26 15:33:09.966 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1fbb2077
2023-06-26 15:33:09.982 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_INFO_DETAIL} 
2023-06-26 15:33:09.983 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select  1 AS seq,'-' TERM, '-' TERM_85,'-' TERM_125,0 TERM_PAST_CNT,0 TERM_LATE_CNT, 0 TERM_WIBAN_CNT,0 TOTAL_STATION_CNT,a.* from    TBL_ARRANGE_PUNCTUALITY_INFO a where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('21번','-회사-',a.ROUTE_NM,'21번') and		a.col000 = '버스ID' union select  2 AS seq, a.TERM,a.TERM_85,a.TERM_125,a.TERM_PAST_CNT,a.TERM_LATE_CNT,a.TERM_WIBAN_CNT,a.TOTAL_STATION_CNT,b.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a JOIN TBL_ARRANGE_PUNCTUALITY_INFO b ON a.COMPANY_NO =b.COMPANY_NO AND a.BASE_YMD =b.BASE_YMD AND a.ROUTE_NM =b.ROUTE_NM AND a.COL000 =b.COL000 AND a.COL002 =b.COL002 where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('21번','-회사-',a.ROUTE_NM,'21번') ORDER BY 1
2023-06-26 15:33:09.989 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
41. select  1 AS seq,'-' TERM, '-' TERM_85,'-' TERM_125,0 TERM_PAST_CNT,0 TERM_LATE_CNT, 0 TERM_WIBAN_CNT,0 TOTAL_STATION_CNT,a.* from    TBL_ARRANGE_PUNCTUALITY_INFO a where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('21번','-회사-',a.ROUTE_NM,'21번') and		a.col000 = '버스ID' union select  2 AS seq, a.TERM,a.TERM_85,a.TERM_125,a.TERM_PAST_CNT,a.TERM_LATE_CNT,a.TERM_WIBAN_CNT,a.TOTAL_STATION_CNT,b.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a JOIN TBL_ARRANGE_PUNCTUALITY_INFO b ON a.COMPANY_NO =b.COMPANY_NO AND a.BASE_YMD =b.BASE_YMD AND a.ROUTE_NM =b.ROUTE_NM AND a.COL000 =b.COL000 AND a.COL002 =b.COL002 where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('21번','-회사-',a.ROUTE_NM,'21번') ORDER BY 1
 {executed in 5 msec}
2023-06-26 15:33:09.994 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
41. select  1 AS seq,'-' TERM, '-' TERM_85,'-' TERM_125,0 TERM_PAST_CNT,0 TERM_LATE_CNT, 0 TERM_WIBAN_CNT,0 TOTAL_STATION_CNT,a.* from    TBL_ARRANGE_PUNCTUALITY_INFO a where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('21번','-회사-',a.ROUTE_NM,'21번') and		a.col000 = '버스ID' union select  2 AS seq, a.TERM,a.TERM_85,a.TERM_125,a.TERM_PAST_CNT,a.TERM_LATE_CNT,a.TERM_WIBAN_CNT,a.TOTAL_STATION_CNT,b.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a JOIN TBL_ARRANGE_PUNCTUALITY_INFO b ON a.COMPANY_NO =b.COMPANY_NO AND a.BASE_YMD =b.BASE_YMD AND a.ROUTE_NM =b.ROUTE_NM AND a.COL000 =b.COL000 AND a.COL002 =b.COL002 where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('21번','-회사-',a.ROUTE_NM,'21번') ORDER BY 1
 {executed in 5 msec}
2023-06-26 15:41:17.067 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@e7c48559
2023-06-26 15:41:17.069 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
41. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 15:41:17.071 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-회사-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 2 msec}
2023-06-26 15:41:17.971 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@82d417d0
2023-06-26 15:41:17.973 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
41. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 15:41:17.974 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('21번','-회사-',a.ROUTE_NM,'21번')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 15:41:19.606 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@e431edd4
2023-06-26 15:41:19.607 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
41. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 15:41:19.609 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. select  /* select_PunctualityAnalize_day : 배차정시성분석 일별 */
			a.BASE_YMD
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	AND 	a.BASE_YMD like  '2023-06' || '%' 
	AND 	a.ROUTE_NM = decode('21번','-회사-',a.ROUTE_NM,'21번')
	GROUP BY  a.BASE_YMD
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 15:41:20.508 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@aaa50f63
2023-06-26 15:41:20.508 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - filterType={getRouteCommonInfo} 
2023-06-26 15:41:20.513 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '21번' AND		a.CODE =  '배차정시성대상회차'
2023-06-26 15:41:20.514 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
41. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 15:41:20.515 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
41. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '21번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 0 msec}
2023-06-26 15:41:20.516 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
41. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '21번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 0 msec}
2023-06-26 15:41:20.529 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1fbb2077
2023-06-26 15:41:20.530 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_INFO_DETAIL} 
2023-06-26 15:41:20.530 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select  1 AS seq,'-' TERM, '-' TERM_85,'-' TERM_125,0 as TERM_PAST_CNT,0 as TERM_LATE_CNT, 0 as TERM_WIBAN_CNT,0 as TOTAL_STATION_CNT,a.* from    TBL_ARRANGE_PUNCTUALITY_INFO a where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('21번','-회사-',a.ROUTE_NM,'21번') and		a.col000 = '버스ID' union select  2 AS seq, a.TERM,a.TERM_85,a.TERM_125,a.TERM_PAST_CNT,a.TERM_LATE_CNT,a.TERM_WIBAN_CNT,a.TOTAL_STATION_CNT,b.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a JOIN TBL_ARRANGE_PUNCTUALITY_INFO b ON a.COMPANY_NO =b.COMPANY_NO AND a.BASE_YMD =b.BASE_YMD AND a.ROUTE_NM =b.ROUTE_NM AND a.COL000 =b.COL000 AND a.COL002 =b.COL002 where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('21번','-회사-',a.ROUTE_NM,'21번') ORDER BY 1
2023-06-26 15:41:20.534 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
41. select  1 AS seq,'-' TERM, '-' TERM_85,'-' TERM_125,0 as TERM_PAST_CNT,0 as TERM_LATE_CNT, 0 as TERM_WIBAN_CNT,0 as TOTAL_STATION_CNT,a.* from    TBL_ARRANGE_PUNCTUALITY_INFO a where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('21번','-회사-',a.ROUTE_NM,'21번') and		a.col000 = '버스ID' union select  2 AS seq, a.TERM,a.TERM_85,a.TERM_125,a.TERM_PAST_CNT,a.TERM_LATE_CNT,a.TERM_WIBAN_CNT,a.TOTAL_STATION_CNT,b.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a JOIN TBL_ARRANGE_PUNCTUALITY_INFO b ON a.COMPANY_NO =b.COMPANY_NO AND a.BASE_YMD =b.BASE_YMD AND a.ROUTE_NM =b.ROUTE_NM AND a.COL000 =b.COL000 AND a.COL002 =b.COL002 where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('21번','-회사-',a.ROUTE_NM,'21번') ORDER BY 1
 {executed in 4 msec}
2023-06-26 15:41:20.539 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
41. select  1 AS seq,'-' TERM, '-' TERM_85,'-' TERM_125,0 as TERM_PAST_CNT,0 as TERM_LATE_CNT, 0 as TERM_WIBAN_CNT,0 as TOTAL_STATION_CNT,a.* from    TBL_ARRANGE_PUNCTUALITY_INFO a where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('21번','-회사-',a.ROUTE_NM,'21번') and		a.col000 = '버스ID' union select  2 AS seq, a.TERM,a.TERM_85,a.TERM_125,a.TERM_PAST_CNT,a.TERM_LATE_CNT,a.TERM_WIBAN_CNT,a.TOTAL_STATION_CNT,b.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a JOIN TBL_ARRANGE_PUNCTUALITY_INFO b ON a.COMPANY_NO =b.COMPANY_NO AND a.BASE_YMD =b.BASE_YMD AND a.ROUTE_NM =b.ROUTE_NM AND a.COL000 =b.COL000 AND a.COL002 =b.COL002 where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('21번','-회사-',a.ROUTE_NM,'21번') ORDER BY 1
 {executed in 4 msec}
2023-06-26 15:43:00.345 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f00dbd2
2023-06-26 15:43:00.347 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
41. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 15:43:00.348 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-회사-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 15:43:01.736 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@a717f504
2023-06-26 15:43:01.738 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
41. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 15:43:01.738 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 15:43:02.617 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@875cb08
2023-06-26 15:43:02.618 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
41. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 15:43:02.620 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. select  /* select_PunctualityAnalize_day : 배차정시성분석 일별 */
			a.BASE_YMD
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.BASE_YMD like  '2023-06' || '%' 
	AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번')
	GROUP BY  a.BASE_YMD
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 15:43:03.607 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@cee8ec97
2023-06-26 15:43:03.608 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - filterType={getRouteCommonInfo} 
2023-06-26 15:43:03.608 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
2023-06-26 15:43:03.608 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
41. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 15:43:03.609 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
41. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 1 msec}
2023-06-26 15:43:03.610 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
41. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 0 msec}
2023-06-26 15:43:03.626 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@43fefdab
2023-06-26 15:43:03.626 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_INFO_DETAIL} 
2023-06-26 15:43:03.626 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select  1 AS seq,'-' TERM, '-' TERM_85,'-' TERM_125,0 as TERM_PAST_CNT,0 as TERM_LATE_CNT, 0 as TERM_WIBAN_CNT,0 as TOTAL_STATION_CNT,a.* from    TBL_ARRANGE_PUNCTUALITY_INFO a where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') and		a.col000 = '버스ID' union select  2 AS seq, a.TERM,a.TERM_85,a.TERM_125,a.TERM_PAST_CNT,a.TERM_LATE_CNT,a.TERM_WIBAN_CNT,a.TOTAL_STATION_CNT,b.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a JOIN TBL_ARRANGE_PUNCTUALITY_INFO b ON a.COMPANY_NO =b.COMPANY_NO AND a.BASE_YMD =b.BASE_YMD AND a.ROUTE_NM =b.ROUTE_NM AND a.COL000 =b.COL000 AND a.COL002 =b.COL002 where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') ORDER BY 1
2023-06-26 15:43:03.633 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
41. select  1 AS seq,'-' TERM, '-' TERM_85,'-' TERM_125,0 as TERM_PAST_CNT,0 as TERM_LATE_CNT, 0 as TERM_WIBAN_CNT,0 as TOTAL_STATION_CNT,a.* from    TBL_ARRANGE_PUNCTUALITY_INFO a where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') and		a.col000 = '버스ID' union select  2 AS seq, a.TERM,a.TERM_85,a.TERM_125,a.TERM_PAST_CNT,a.TERM_LATE_CNT,a.TERM_WIBAN_CNT,a.TOTAL_STATION_CNT,b.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a JOIN TBL_ARRANGE_PUNCTUALITY_INFO b ON a.COMPANY_NO =b.COMPANY_NO AND a.BASE_YMD =b.BASE_YMD AND a.ROUTE_NM =b.ROUTE_NM AND a.COL000 =b.COL000 AND a.COL002 =b.COL002 where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') ORDER BY 1
 {executed in 7 msec}
2023-06-26 15:43:03.640 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
41. select  1 AS seq,'-' TERM, '-' TERM_85,'-' TERM_125,0 as TERM_PAST_CNT,0 as TERM_LATE_CNT, 0 as TERM_WIBAN_CNT,0 as TOTAL_STATION_CNT,a.* from    TBL_ARRANGE_PUNCTUALITY_INFO a where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') and		a.col000 = '버스ID' union select  2 AS seq, a.TERM,a.TERM_85,a.TERM_125,a.TERM_PAST_CNT,a.TERM_LATE_CNT,a.TERM_WIBAN_CNT,a.TOTAL_STATION_CNT,b.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a JOIN TBL_ARRANGE_PUNCTUALITY_INFO b ON a.COMPANY_NO =b.COMPANY_NO AND a.BASE_YMD =b.BASE_YMD AND a.ROUTE_NM =b.ROUTE_NM AND a.COL000 =b.COL000 AND a.COL002 =b.COL002 where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') ORDER BY 1
 {executed in 5 msec}
2023-06-26 15:44:48.742 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f00dbd2
2023-06-26 15:44:48.743 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
41. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 15:44:48.744 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-회사-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 15:44:49.618 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@a717f504
2023-06-26 15:44:49.619 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
41. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 15:44:49.621 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 15:44:50.298 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@875cb08
2023-06-26 15:44:50.299 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
41. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 15:44:50.303 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. select  /* select_PunctualityAnalize_day : 배차정시성분석 일별 */
			a.BASE_YMD
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.BASE_YMD like  '2023-06' || '%' 
	AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번')
	GROUP BY  a.BASE_YMD
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 15:44:51.127 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@cee8ec97
2023-06-26 15:44:51.127 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - filterType={getRouteCommonInfo} 
2023-06-26 15:44:51.127 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
2023-06-26 15:44:51.128 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
41. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 15:44:51.128 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
41. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 0 msec}
2023-06-26 15:44:51.130 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
41. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 0 msec}
2023-06-26 15:44:51.145 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@43fefdab
2023-06-26 15:44:51.145 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_INFO_DETAIL} 
2023-06-26 15:44:51.145 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select  1 AS seq,'-' TERM, '-' TERM_85,'-' TERM_125,0 as TERM_PAST_CNT,0 as TERM_LATE_CNT, 0 as TERM_WIBAN_CNT,0 as TOTAL_STATION_CNT,a.* from    TBL_ARRANGE_PUNCTUALITY_INFO a where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') and		a.col000 = '버스ID' union select  2 AS seq, a.TERM,a.TERM_85,a.TERM_125,a.TERM_PAST_CNT,a.TERM_LATE_CNT,a.TERM_WIBAN_CNT,a.TOTAL_STATION_CNT,b.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a JOIN TBL_ARRANGE_PUNCTUALITY_INFO b ON a.COMPANY_NO =b.COMPANY_NO AND a.BASE_YMD =b.BASE_YMD AND a.ROUTE_NM =b.ROUTE_NM AND a.COL000 =b.COL000 AND a.COL002 =b.COL002 where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') ORDER BY 1
2023-06-26 15:44:51.151 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
41. select  1 AS seq,'-' TERM, '-' TERM_85,'-' TERM_125,0 as TERM_PAST_CNT,0 as TERM_LATE_CNT, 0 as TERM_WIBAN_CNT,0 as TOTAL_STATION_CNT,a.* from    TBL_ARRANGE_PUNCTUALITY_INFO a where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') and		a.col000 = '버스ID' union select  2 AS seq, a.TERM,a.TERM_85,a.TERM_125,a.TERM_PAST_CNT,a.TERM_LATE_CNT,a.TERM_WIBAN_CNT,a.TOTAL_STATION_CNT,b.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a JOIN TBL_ARRANGE_PUNCTUALITY_INFO b ON a.COMPANY_NO =b.COMPANY_NO AND a.BASE_YMD =b.BASE_YMD AND a.ROUTE_NM =b.ROUTE_NM AND a.COL000 =b.COL000 AND a.COL002 =b.COL002 where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') ORDER BY 1
 {executed in 6 msec}
2023-06-26 15:44:51.158 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
41. select  1 AS seq,'-' TERM, '-' TERM_85,'-' TERM_125,0 as TERM_PAST_CNT,0 as TERM_LATE_CNT, 0 as TERM_WIBAN_CNT,0 as TOTAL_STATION_CNT,a.* from    TBL_ARRANGE_PUNCTUALITY_INFO a where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') and		a.col000 = '버스ID' union select  2 AS seq, a.TERM,a.TERM_85,a.TERM_125,a.TERM_PAST_CNT,a.TERM_LATE_CNT,a.TERM_WIBAN_CNT,a.TOTAL_STATION_CNT,b.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a JOIN TBL_ARRANGE_PUNCTUALITY_INFO b ON a.COMPANY_NO =b.COMPANY_NO AND a.BASE_YMD =b.BASE_YMD AND a.ROUTE_NM =b.ROUTE_NM AND a.COL000 =b.COL000 AND a.COL002 =b.COL002 where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') ORDER BY 1
 {executed in 5 msec}
2023-06-26 15:47:40.921 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@e7c48559
2023-06-26 15:47:40.923 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
51. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 15:47:40.924 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-회사-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 15:47:42.027 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@ffdb9e8b
2023-06-26 15:47:42.028 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
51. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 15:47:42.030 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 15:47:42.721 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@6139748f
2023-06-26 15:47:42.722 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
51. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 15:47:42.724 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. select  /* select_PunctualityAnalize_day : 배차정시성분석 일별 */
			a.BASE_YMD
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	AND 	a.BASE_YMD like  '2023-06' || '%' 
	AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번')
	GROUP BY  a.BASE_YMD
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 15:47:43.695 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1064ad67
2023-06-26 15:47:43.695 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - filterType={getRouteCommonInfo} 
2023-06-26 15:47:43.695 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
2023-06-26 15:47:43.696 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
51. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 15:47:43.697 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
51. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 1 msec}
2023-06-26 15:47:43.698 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
51. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 1 msec}
2023-06-26 15:47:43.712 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@857abe7b
2023-06-26 15:47:43.712 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_INFO_DETAIL} 
2023-06-26 15:47:43.712 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select  1 AS seq,'-' TERM, '-' TERM_85,'-' TERM_125,0 as TERM_PAST_CNT,0 as TERM_LATE_CNT, 0 as TERM_WIBAN_CNT,0 as TOTAL_STATION_CNT,a.* from    TBL_ARRANGE_PUNCTUALITY_INFO a where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-02' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') and		a.col000 = '버스ID' union select  2 AS seq, a.TERM,a.TERM_85,a.TERM_125,a.TERM_PAST_CNT,a.TERM_LATE_CNT,a.TERM_WIBAN_CNT,a.TOTAL_STATION_CNT,b.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a JOIN TBL_ARRANGE_PUNCTUALITY_INFO b ON a.COMPANY_NO =b.COMPANY_NO AND a.BASE_YMD =b.BASE_YMD AND a.ROUTE_NM =b.ROUTE_NM AND a.COL000 =b.COL000 AND a.COL002 =b.COL002 where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-02' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') ORDER BY 1
2023-06-26 15:47:43.718 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
51. select  1 AS seq,'-' TERM, '-' TERM_85,'-' TERM_125,0 as TERM_PAST_CNT,0 as TERM_LATE_CNT, 0 as TERM_WIBAN_CNT,0 as TOTAL_STATION_CNT,a.* from    TBL_ARRANGE_PUNCTUALITY_INFO a where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-02' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') and		a.col000 = '버스ID' union select  2 AS seq, a.TERM,a.TERM_85,a.TERM_125,a.TERM_PAST_CNT,a.TERM_LATE_CNT,a.TERM_WIBAN_CNT,a.TOTAL_STATION_CNT,b.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a JOIN TBL_ARRANGE_PUNCTUALITY_INFO b ON a.COMPANY_NO =b.COMPANY_NO AND a.BASE_YMD =b.BASE_YMD AND a.ROUTE_NM =b.ROUTE_NM AND a.COL000 =b.COL000 AND a.COL002 =b.COL002 where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-02' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') ORDER BY 1
 {executed in 6 msec}
2023-06-26 15:47:43.724 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
51. select  1 AS seq,'-' TERM, '-' TERM_85,'-' TERM_125,0 as TERM_PAST_CNT,0 as TERM_LATE_CNT, 0 as TERM_WIBAN_CNT,0 as TOTAL_STATION_CNT,a.* from    TBL_ARRANGE_PUNCTUALITY_INFO a where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-02' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') and		a.col000 = '버스ID' union select  2 AS seq, a.TERM,a.TERM_85,a.TERM_125,a.TERM_PAST_CNT,a.TERM_LATE_CNT,a.TERM_WIBAN_CNT,a.TOTAL_STATION_CNT,b.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a JOIN TBL_ARRANGE_PUNCTUALITY_INFO b ON a.COMPANY_NO =b.COMPANY_NO AND a.BASE_YMD =b.BASE_YMD AND a.ROUTE_NM =b.ROUTE_NM AND a.COL000 =b.COL000 AND a.COL002 =b.COL002 where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-02' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') ORDER BY 1
 {executed in 5 msec}
2023-06-26 15:49:40.857 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f00dbd2
2023-06-26 15:49:40.858 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
51. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 15:49:40.860 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-회사-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 15:49:41.884 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@a717f504
2023-06-26 15:49:41.885 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
51. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 15:49:41.887 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 15:49:42.759 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@875cb08
2023-06-26 15:49:42.760 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
51. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 15:49:42.762 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. select  /* select_PunctualityAnalize_day : 배차정시성분석 일별 */
			a.BASE_YMD
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.BASE_YMD like  '2023-06' || '%' 
	AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번')
	GROUP BY  a.BASE_YMD
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 15:49:43.772 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@cee8ec97
2023-06-26 15:49:43.772 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - filterType={getRouteCommonInfo} 
2023-06-26 15:49:43.772 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
2023-06-26 15:49:43.773 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
51. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 15:49:43.774 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
51. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 1 msec}
2023-06-26 15:49:43.775 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
51. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 1 msec}
2023-06-26 15:49:43.791 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@43fefdab
2023-06-26 15:49:43.791 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_INFO_DETAIL} 
2023-06-26 15:49:43.791 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select  1 AS seq,'-' TERM, '-' TERM_85,'-' TERM_125,0 as TERM_PAST_CNT,0 as TERM_LATE_CNT, 0 as TERM_WIBAN_CNT,0 as TOTAL_STATION_CNT,a.* from    TBL_ARRANGE_PUNCTUALITY_INFO a where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') and		a.col000 = '버스ID' union select  2 AS seq, a.TERM,a.TERM_85,a.TERM_125,a.TERM_PAST_CNT,a.TERM_LATE_CNT,a.TERM_WIBAN_CNT,a.TOTAL_STATION_CNT,b.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a JOIN TBL_ARRANGE_PUNCTUALITY_INFO b ON a.COMPANY_NO =b.COMPANY_NO AND a.BASE_YMD =b.BASE_YMD AND a.ROUTE_NM =b.ROUTE_NM AND a.COL000 =b.COL000 AND a.COL002 =b.COL002 where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') ORDER BY 1
2023-06-26 15:49:43.797 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
51. select  1 AS seq,'-' TERM, '-' TERM_85,'-' TERM_125,0 as TERM_PAST_CNT,0 as TERM_LATE_CNT, 0 as TERM_WIBAN_CNT,0 as TOTAL_STATION_CNT,a.* from    TBL_ARRANGE_PUNCTUALITY_INFO a where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') and		a.col000 = '버스ID' union select  2 AS seq, a.TERM,a.TERM_85,a.TERM_125,a.TERM_PAST_CNT,a.TERM_LATE_CNT,a.TERM_WIBAN_CNT,a.TOTAL_STATION_CNT,b.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a JOIN TBL_ARRANGE_PUNCTUALITY_INFO b ON a.COMPANY_NO =b.COMPANY_NO AND a.BASE_YMD =b.BASE_YMD AND a.ROUTE_NM =b.ROUTE_NM AND a.COL000 =b.COL000 AND a.COL002 =b.COL002 where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') ORDER BY 1
 {executed in 6 msec}
2023-06-26 15:49:43.805 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
51. select  1 AS seq,'-' TERM, '-' TERM_85,'-' TERM_125,0 as TERM_PAST_CNT,0 as TERM_LATE_CNT, 0 as TERM_WIBAN_CNT,0 as TOTAL_STATION_CNT,a.* from    TBL_ARRANGE_PUNCTUALITY_INFO a where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') and		a.col000 = '버스ID' union select  2 AS seq, a.TERM,a.TERM_85,a.TERM_125,a.TERM_PAST_CNT,a.TERM_LATE_CNT,a.TERM_WIBAN_CNT,a.TOTAL_STATION_CNT,b.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a JOIN TBL_ARRANGE_PUNCTUALITY_INFO b ON a.COMPANY_NO =b.COMPANY_NO AND a.BASE_YMD =b.BASE_YMD AND a.ROUTE_NM =b.ROUTE_NM AND a.COL000 =b.COL000 AND a.COL002 =b.COL002 where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') ORDER BY 1
 {executed in 8 msec}
2023-06-26 15:52:12.677 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@e7c48559
2023-06-26 15:52:12.679 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
51. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 15:52:12.680 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-회사-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 15:52:13.327 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@82d417d0
2023-06-26 15:52:13.328 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
51. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 15:52:13.329 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('21번','-회사-',a.ROUTE_NM,'21번')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 15:52:14.306 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@e431edd4
2023-06-26 15:52:14.307 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
51. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 15:52:14.308 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. select  /* select_PunctualityAnalize_day : 배차정시성분석 일별 */
			a.BASE_YMD
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	AND 	a.BASE_YMD like  '2023-06' || '%' 
	AND 	a.ROUTE_NM = decode('21번','-회사-',a.ROUTE_NM,'21번')
	GROUP BY  a.BASE_YMD
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 15:52:15.112 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@aaa50f63
2023-06-26 15:52:15.112 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - filterType={getRouteCommonInfo} 
2023-06-26 15:52:15.122 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '21번' AND		a.CODE =  '배차정시성대상회차'
2023-06-26 15:52:15.123 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
51. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 15:52:15.124 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
51. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '21번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 0 msec}
2023-06-26 15:52:15.125 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
51. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '21번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 0 msec}
2023-06-26 15:52:15.139 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1fbb2077
2023-06-26 15:52:15.139 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_INFO_DETAIL} 
2023-06-26 15:52:15.139 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select  1 AS seq,'-' TERM, '-' TERM_85,'-' TERM_125,'0' as TERM_PAST_CNT,'0' as TERM_LATE_CNT, '0' as TERM_WIBAN_CNT,'0' as TOTAL_STATION_CNT,a.* from    TBL_ARRANGE_PUNCTUALITY_INFO a where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('21번','-회사-',a.ROUTE_NM,'21번') and		a.col000 = '버스ID' union select  2 AS seq, a.TERM,a.TERM_85,a.TERM_125,a.TERM_PAST_CNT,a.TERM_LATE_CNT,a.TERM_WIBAN_CNT,a.TOTAL_STATION_CNT,b.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a JOIN TBL_ARRANGE_PUNCTUALITY_INFO b ON a.COMPANY_NO =b.COMPANY_NO AND a.BASE_YMD =b.BASE_YMD AND a.ROUTE_NM =b.ROUTE_NM AND a.COL000 =b.COL000 AND a.COL002 =b.COL002 where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('21번','-회사-',a.ROUTE_NM,'21번') ORDER BY 1
2023-06-26 15:52:15.144 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
51. select  1 AS seq,'-' TERM, '-' TERM_85,'-' TERM_125,'0' as TERM_PAST_CNT,'0' as TERM_LATE_CNT, '0' as TERM_WIBAN_CNT,'0' as TOTAL_STATION_CNT,a.* from    TBL_ARRANGE_PUNCTUALITY_INFO a where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('21번','-회사-',a.ROUTE_NM,'21번') and		a.col000 = '버스ID' union select  2 AS seq, a.TERM,a.TERM_85,a.TERM_125,a.TERM_PAST_CNT,a.TERM_LATE_CNT,a.TERM_WIBAN_CNT,a.TOTAL_STATION_CNT,b.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a JOIN TBL_ARRANGE_PUNCTUALITY_INFO b ON a.COMPANY_NO =b.COMPANY_NO AND a.BASE_YMD =b.BASE_YMD AND a.ROUTE_NM =b.ROUTE_NM AND a.COL000 =b.COL000 AND a.COL002 =b.COL002 where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('21번','-회사-',a.ROUTE_NM,'21번') ORDER BY 1
 {executed in 5 msec}
2023-06-26 15:52:15.150 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
51. select  1 AS seq,'-' TERM, '-' TERM_85,'-' TERM_125,'0' as TERM_PAST_CNT,'0' as TERM_LATE_CNT, '0' as TERM_WIBAN_CNT,'0' as TOTAL_STATION_CNT,a.* from    TBL_ARRANGE_PUNCTUALITY_INFO a where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('21번','-회사-',a.ROUTE_NM,'21번') and		a.col000 = '버스ID' union select  2 AS seq, a.TERM,a.TERM_85,a.TERM_125,a.TERM_PAST_CNT,a.TERM_LATE_CNT,a.TERM_WIBAN_CNT,a.TOTAL_STATION_CNT,b.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a JOIN TBL_ARRANGE_PUNCTUALITY_INFO b ON a.COMPANY_NO =b.COMPANY_NO AND a.BASE_YMD =b.BASE_YMD AND a.ROUTE_NM =b.ROUTE_NM AND a.COL000 =b.COL000 AND a.COL002 =b.COL002 where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('21번','-회사-',a.ROUTE_NM,'21번') ORDER BY 1
 {executed in 5 msec}
2023-06-26 15:54:09.199 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f00dbd2
2023-06-26 15:54:09.200 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
51. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 15:54:09.202 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-회사-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 15:54:10.213 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@a717f504
2023-06-26 15:54:10.214 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
51. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 15:54:10.215 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 15:54:10.859 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@875cb08
2023-06-26 15:54:10.860 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
51. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 15:54:10.862 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. select  /* select_PunctualityAnalize_day : 배차정시성분석 일별 */
			a.BASE_YMD
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.BASE_YMD like  '2023-06' || '%' 
	AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번')
	GROUP BY  a.BASE_YMD
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 15:54:11.698 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@cee8ec97
2023-06-26 15:54:11.698 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - filterType={getRouteCommonInfo} 
2023-06-26 15:54:11.702 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
2023-06-26 15:54:11.703 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
51. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 15:54:11.704 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
51. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 0 msec}
2023-06-26 15:54:11.706 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
51. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 0 msec}
2023-06-26 15:54:11.719 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@43fefdab
2023-06-26 15:54:11.720 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_INFO_DETAIL} 
2023-06-26 15:54:11.720 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select  1 AS seq,'-' TERM, '-' TERM_85,'-' TERM_125,'-' as TERM_PAST_CNT,'-' as TERM_LATE_CNT, '-' as TERM_WIBAN_CNT,'-' as TOTAL_STATION_CNT,a.* from    TBL_ARRANGE_PUNCTUALITY_INFO a where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') and		a.col000 = '버스ID' union select  2 AS seq, a.TERM,a.TERM_85,a.TERM_125,a.TERM_PAST_CNT,a.TERM_LATE_CNT,a.TERM_WIBAN_CNT,a.TOTAL_STATION_CNT,b.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a JOIN TBL_ARRANGE_PUNCTUALITY_INFO b ON a.COMPANY_NO =b.COMPANY_NO AND a.BASE_YMD =b.BASE_YMD AND a.ROUTE_NM =b.ROUTE_NM AND a.COL000 =b.COL000 AND a.COL002 =b.COL002 where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') ORDER BY 1
2023-06-26 15:54:11.724 ERROR [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
51. select  1 AS seq,'-' TERM, '-' TERM_85,'-' TERM_125,'-' as TERM_PAST_CNT,'-' as TERM_LATE_CNT, '-' as TERM_WIBAN_CNT,'-' as TOTAL_STATION_CNT,a.* from    TBL_ARRANGE_PUNCTUALITY_INFO a where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') and		a.col000 = '버스ID' union select  2 AS seq, a.TERM,a.TERM_85,a.TERM_125,a.TERM_PAST_CNT,a.TERM_LATE_CNT,a.TERM_WIBAN_CNT,a.TOTAL_STATION_CNT,b.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a JOIN TBL_ARRANGE_PUNCTUALITY_INFO b ON a.COMPANY_NO =b.COMPANY_NO AND a.BASE_YMD =b.BASE_YMD AND a.ROUTE_NM =b.ROUTE_NM AND a.COL000 =b.COL000 AND a.COL002 =b.COL002 where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') ORDER BY 1
 {FAILED after 3 msec}
org.h2.jdbc.JdbcSQLDataException: Data conversion error converting "-"; SQL statement:
select  1 AS seq,'-' TERM, '-' TERM_85,'-' TERM_125,'-' as TERM_PAST_CNT,'-' as TERM_LATE_CNT, '-' as TERM_WIBAN_CNT,'-' as TOTAL_STATION_CNT,a.* from    TBL_ARRANGE_PUNCTUALITY_INFO a where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') and		a.col000 = '버스ID' union select  2 AS seq, a.TERM,a.TERM_85,a.TERM_125,a.TERM_PAST_CNT,a.TERM_LATE_CNT,a.TERM_WIBAN_CNT,a.TOTAL_STATION_CNT,b.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a JOIN TBL_ARRANGE_PUNCTUALITY_INFO b ON a.COMPANY_NO =b.COMPANY_NO AND a.BASE_YMD =b.BASE_YMD AND a.ROUTE_NM =b.ROUTE_NM AND a.COL000 =b.COL000 AND a.COL002 =b.COL002 where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') ORDER BY 1 [22018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:457)
	at org.h2.engine.SessionRemote.done(SessionRemote.java:611)
	at org.h2.command.CommandRemote.executeQuery(CommandRemote.java:178)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:85)
	at net.sf.log4jdbc.sql.jdbcapi.StatementSpy.executeQuery(StatementSpy.java:731)
	at com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
	at com.zaxxer.hikari.pool.HikariProxyStatement.executeQuery(HikariProxyStatement.java)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:439)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:376)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:452)
	at com.pjy.dashboard.dao.DynamicSqlDao.getHeaderBySql(DynamicSqlDao.java:209)
	at com.pjy.dashboard.dao.DynamicSqlDao$$FastClassBySpringCGLIB$$8af24191.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at com.pjy.dashboard.dao.DynamicSqlH2Dao$$EnhancerBySpringCGLIB$$9c59c98a.getHeaderBySql(<generated>)
	at com.pjy.dashboard.service.DynamicSqlService.getHeaderBySql(DynamicSqlService.java:69)
	at com.pjy.dashboard.service.DynamicSqlService.getSqlFilter(DynamicSqlService.java:129)
	at com.pjy.dashboard.controller.TestController.dynamicSqlFilter(TestController.java:207)
	at jdk.internal.reflect.GeneratedMethodAccessor167.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:893)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:798)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:97)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at jdk.internal.reflect.GeneratedMethodAccessor147.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$2cf0e58f.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:114)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:104)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-06-26 15:54:11.726 ERROR [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - jdbcTemplate error: StatementCallback; SQL [select  1 AS seq,'-' TERM, '-' TERM_85,'-' TERM_125,'-' as TERM_PAST_CNT,'-' as TERM_LATE_CNT, '-' as TERM_WIBAN_CNT,'-' as TOTAL_STATION_CNT,a.* from    TBL_ARRANGE_PUNCTUALITY_INFO a where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') and		a.col000 = '버스ID' union select  2 AS seq, a.TERM,a.TERM_85,a.TERM_125,a.TERM_PAST_CNT,a.TERM_LATE_CNT,a.TERM_WIBAN_CNT,a.TOTAL_STATION_CNT,b.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a JOIN TBL_ARRANGE_PUNCTUALITY_INFO b ON a.COMPANY_NO =b.COMPANY_NO AND a.BASE_YMD =b.BASE_YMD AND a.ROUTE_NM =b.ROUTE_NM AND a.COL000 =b.COL000 AND a.COL002 =b.COL002 where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') ORDER BY 1]; Data conversion error converting "-"; SQL statement:
select  1 AS seq,'-' TERM, '-' TERM_85,'-' TERM_125,'-' as TERM_PAST_CNT,'-' as TERM_LATE_CNT, '-' as TERM_WIBAN_CNT,'-' as TOTAL_STATION_CNT,a.* from    TBL_ARRANGE_PUNCTUALITY_INFO a where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') and		a.col000 = '버스ID' union select  2 AS seq, a.TERM,a.TERM_85,a.TERM_125,a.TERM_PAST_CNT,a.TERM_LATE_CNT,a.TERM_WIBAN_CNT,a.TOTAL_STATION_CNT,b.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a JOIN TBL_ARRANGE_PUNCTUALITY_INFO b ON a.COMPANY_NO =b.COMPANY_NO AND a.BASE_YMD =b.BASE_YMD AND a.ROUTE_NM =b.ROUTE_NM AND a.COL000 =b.COL000 AND a.COL002 =b.COL002 where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') ORDER BY 1 [22018-200]; nested exception is org.h2.jdbc.JdbcSQLDataException: Data conversion error converting "-"; SQL statement:
select  1 AS seq,'-' TERM, '-' TERM_85,'-' TERM_125,'-' as TERM_PAST_CNT,'-' as TERM_LATE_CNT, '-' as TERM_WIBAN_CNT,'-' as TOTAL_STATION_CNT,a.* from    TBL_ARRANGE_PUNCTUALITY_INFO a where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') and		a.col000 = '버스ID' union select  2 AS seq, a.TERM,a.TERM_85,a.TERM_125,a.TERM_PAST_CNT,a.TERM_LATE_CNT,a.TERM_WIBAN_CNT,a.TOTAL_STATION_CNT,b.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a JOIN TBL_ARRANGE_PUNCTUALITY_INFO b ON a.COMPANY_NO =b.COMPANY_NO AND a.BASE_YMD =b.BASE_YMD AND a.ROUTE_NM =b.ROUTE_NM AND a.COL000 =b.COL000 AND a.COL002 =b.COL002 where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') ORDER BY 1 [22018-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:457)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:194)
	at org.h2.value.Value.convertTo(Value.java:875)
	at org.h2.value.Value.convertTo(Value.java:772)
	at org.h2.command.dml.SelectUnion.convert(SelectUnion.java:114)
	at org.h2.command.dml.SelectUnion.queryWithoutCache(SelectUnion.java:186)
	at org.h2.command.dml.Query.queryWithoutCacheLazyCheck(Query.java:201)
	at org.h2.command.dml.Query.query(Query.java:465)
	at org.h2.command.dml.Query.query(Query.java:451)
	at org.h2.command.CommandContainer.query(CommandContainer.java:285)
	at org.h2.command.Command.executeQuery(Command.java:195)
	at org.h2.server.TcpServerThread.process(TcpServerThread.java:343)
	at org.h2.server.TcpServerThread.run(TcpServerThread.java:183)
	at java.lang.Thread.run(Unknown Source)
Caused by: java.lang.NumberFormatException: For input string: "-"
	at java.lang.NumberFormatException.forInputString(Unknown Source)
	at java.lang.Integer.parseInt(Unknown Source)
	at java.lang.Integer.parseInt(Unknown Source)
	at org.h2.value.Value.convertToInt(Value.java:982)
	at org.h2.value.Value.convertTo(Value.java:806)
	... 11 more

2023-06-26 15:54:11.727 WARN  [http-nio-10010-exec-7] [o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver] - Resolved [com.pjy.dashboard.core.error.exception.BusinessException: jdbcTemplate query error]
2023-06-26 15:54:33.528 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@e7c48559
2023-06-26 15:54:33.529 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
51. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 15:54:33.531 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-회사-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 15:54:34.193 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@ffdb9e8b
2023-06-26 15:54:34.194 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
51. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 15:54:34.196 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 15:54:34.793 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@6139748f
2023-06-26 15:54:34.794 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
51. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 15:54:34.795 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. select  /* select_PunctualityAnalize_day : 배차정시성분석 일별 */
			a.BASE_YMD
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	AND 	a.BASE_YMD like  '2023-06' || '%' 
	AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번')
	GROUP BY  a.BASE_YMD
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 15:54:35.743 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1064ad67
2023-06-26 15:54:35.743 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - filterType={getRouteCommonInfo} 
2023-06-26 15:54:35.747 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
2023-06-26 15:54:35.748 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
51. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 15:54:35.749 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
51. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 0 msec}
2023-06-26 15:54:35.750 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
51. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 0 msec}
2023-06-26 15:54:35.763 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@857abe7b
2023-06-26 15:54:35.763 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_INFO_DETAIL} 
2023-06-26 15:54:35.763 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select  1 AS seq,'-' TERM, '-' TERM_85,'-' TERM_125,'0' as TERM_PAST_CNT,'0' as TERM_LATE_CNT, '0' as TERM_WIBAN_CNT,'0' as TOTAL_STATION_CNT,a.* from    TBL_ARRANGE_PUNCTUALITY_INFO a where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-02' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') and		a.col000 = '버스ID' union select  2 AS seq, a.TERM,a.TERM_85,a.TERM_125,a.TERM_PAST_CNT,a.TERM_LATE_CNT,a.TERM_WIBAN_CNT,a.TOTAL_STATION_CNT,b.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a JOIN TBL_ARRANGE_PUNCTUALITY_INFO b ON a.COMPANY_NO =b.COMPANY_NO AND a.BASE_YMD =b.BASE_YMD AND a.ROUTE_NM =b.ROUTE_NM AND a.COL000 =b.COL000 AND a.COL002 =b.COL002 where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-02' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') ORDER BY 1
2023-06-26 15:54:35.772 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
51. select  1 AS seq,'-' TERM, '-' TERM_85,'-' TERM_125,'0' as TERM_PAST_CNT,'0' as TERM_LATE_CNT, '0' as TERM_WIBAN_CNT,'0' as TOTAL_STATION_CNT,a.* from    TBL_ARRANGE_PUNCTUALITY_INFO a where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-02' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') and		a.col000 = '버스ID' union select  2 AS seq, a.TERM,a.TERM_85,a.TERM_125,a.TERM_PAST_CNT,a.TERM_LATE_CNT,a.TERM_WIBAN_CNT,a.TOTAL_STATION_CNT,b.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a JOIN TBL_ARRANGE_PUNCTUALITY_INFO b ON a.COMPANY_NO =b.COMPANY_NO AND a.BASE_YMD =b.BASE_YMD AND a.ROUTE_NM =b.ROUTE_NM AND a.COL000 =b.COL000 AND a.COL002 =b.COL002 where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-02' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') ORDER BY 1
 {executed in 8 msec}
2023-06-26 15:54:35.779 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
51. select  1 AS seq,'-' TERM, '-' TERM_85,'-' TERM_125,'0' as TERM_PAST_CNT,'0' as TERM_LATE_CNT, '0' as TERM_WIBAN_CNT,'0' as TOTAL_STATION_CNT,a.* from    TBL_ARRANGE_PUNCTUALITY_INFO a where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-02' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') and		a.col000 = '버스ID' union select  2 AS seq, a.TERM,a.TERM_85,a.TERM_125,a.TERM_PAST_CNT,a.TERM_LATE_CNT,a.TERM_WIBAN_CNT,a.TOTAL_STATION_CNT,b.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a JOIN TBL_ARRANGE_PUNCTUALITY_INFO b ON a.COMPANY_NO =b.COMPANY_NO AND a.BASE_YMD =b.BASE_YMD AND a.ROUTE_NM =b.ROUTE_NM AND a.COL000 =b.COL000 AND a.COL002 =b.COL002 where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-02' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') ORDER BY 1
 {executed in 6 msec}
2023-06-26 15:59:36.993 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f00dbd2
2023-06-26 15:59:36.994 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
51. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 15:59:36.996 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-회사-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 15:59:38.370 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@2a106e49
2023-06-26 15:59:38.372 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
51. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 15:59:38.374 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('21번','-회사-',a.ROUTE_NM,'21번')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 15:59:39.157 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8b6e444d
2023-06-26 15:59:39.159 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
51. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 15:59:39.159 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. select  /* select_PunctualityAnalize_day : 배차정시성분석 일별 */
			a.BASE_YMD
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.BASE_YMD like  '2023-06' || '%' 
	AND 	a.ROUTE_NM = decode('21번','-회사-',a.ROUTE_NM,'21번')
	GROUP BY  a.BASE_YMD
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 15:59:40.084 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@51e165dc
2023-06-26 15:59:40.084 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - filterType={getRouteCommonInfo} 
2023-06-26 15:59:40.084 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '21번' AND		a.CODE =  '배차정시성대상회차'
2023-06-26 15:59:40.085 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
51. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 15:59:40.086 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
51. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '21번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 1 msec}
2023-06-26 15:59:40.088 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
51. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '21번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 1 msec}
2023-06-26 15:59:40.099 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@c6f776f0
2023-06-26 15:59:40.099 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_INFO_DETAIL} 
2023-06-26 15:59:40.100 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select  1 AS seq,'-' TERM, '-' TERM_85,'-' TERM_125,'0' as TERM_PAST_CNT,'0' as TERM_LATE_CNT, '0' as TERM_WIBAN_CNT,'0' as TOTAL_STATION_CNT,a.* from    TBL_ARRANGE_PUNCTUALITY_INFO a where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('21번','-회사-',a.ROUTE_NM,'21번') and		a.col000 = '버스ID' union select  2 AS seq, a.TERM,a.TERM_85,a.TERM_125,a.TERM_PAST_CNT,a.TERM_LATE_CNT,a.TERM_WIBAN_CNT,a.TOTAL_STATION_CNT,b.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a JOIN TBL_ARRANGE_PUNCTUALITY_INFO b ON a.COMPANY_NO =b.COMPANY_NO AND a.BASE_YMD =b.BASE_YMD AND a.ROUTE_NM =b.ROUTE_NM AND a.COL000 =b.COL000 AND a.COL002 =b.COL002 where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('21번','-회사-',a.ROUTE_NM,'21번') ORDER BY 1
2023-06-26 15:59:40.105 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
51. select  1 AS seq,'-' TERM, '-' TERM_85,'-' TERM_125,'0' as TERM_PAST_CNT,'0' as TERM_LATE_CNT, '0' as TERM_WIBAN_CNT,'0' as TOTAL_STATION_CNT,a.* from    TBL_ARRANGE_PUNCTUALITY_INFO a where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('21번','-회사-',a.ROUTE_NM,'21번') and		a.col000 = '버스ID' union select  2 AS seq, a.TERM,a.TERM_85,a.TERM_125,a.TERM_PAST_CNT,a.TERM_LATE_CNT,a.TERM_WIBAN_CNT,a.TOTAL_STATION_CNT,b.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a JOIN TBL_ARRANGE_PUNCTUALITY_INFO b ON a.COMPANY_NO =b.COMPANY_NO AND a.BASE_YMD =b.BASE_YMD AND a.ROUTE_NM =b.ROUTE_NM AND a.COL000 =b.COL000 AND a.COL002 =b.COL002 where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('21번','-회사-',a.ROUTE_NM,'21번') ORDER BY 1
 {executed in 5 msec}
2023-06-26 15:59:40.110 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
51. select  1 AS seq,'-' TERM, '-' TERM_85,'-' TERM_125,'0' as TERM_PAST_CNT,'0' as TERM_LATE_CNT, '0' as TERM_WIBAN_CNT,'0' as TOTAL_STATION_CNT,a.* from    TBL_ARRANGE_PUNCTUALITY_INFO a where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('21번','-회사-',a.ROUTE_NM,'21번') and		a.col000 = '버스ID' union select  2 AS seq, a.TERM,a.TERM_85,a.TERM_125,a.TERM_PAST_CNT,a.TERM_LATE_CNT,a.TERM_WIBAN_CNT,a.TOTAL_STATION_CNT,b.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a JOIN TBL_ARRANGE_PUNCTUALITY_INFO b ON a.COMPANY_NO =b.COMPANY_NO AND a.BASE_YMD =b.BASE_YMD AND a.ROUTE_NM =b.ROUTE_NM AND a.COL000 =b.COL000 AND a.COL002 =b.COL002 where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('21번','-회사-',a.ROUTE_NM,'21번') ORDER BY 1
 {executed in 4 msec}
2023-06-26 16:10:20.024 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@e7c48559
2023-06-26 16:10:20.026 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
61. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 16:10:20.027 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-회사-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 16:10:20.898 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@ffdb9e8b
2023-06-26 16:10:20.899 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
61. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 16:10:20.901 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 16:10:21.774 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@6139748f
2023-06-26 16:10:21.775 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
61. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 16:10:21.777 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. select  /* select_PunctualityAnalize_day : 배차정시성분석 일별 */
			a.BASE_YMD
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	AND 	a.BASE_YMD like  '2023-06' || '%' 
	AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번')
	GROUP BY  a.BASE_YMD
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 16:10:22.588 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1064ad67
2023-06-26 16:10:22.589 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - filterType={getRouteCommonInfo} 
2023-06-26 16:10:22.589 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
2023-06-26 16:10:22.589 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
61. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 16:10:22.590 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
61. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 1 msec}
2023-06-26 16:10:22.591 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
61. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 1 msec}
2023-06-26 16:10:22.607 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@857abe7b
2023-06-26 16:10:22.607 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_INFO_DETAIL} 
2023-06-26 16:10:22.607 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select  1 AS seq,'-' TERM, '-' TERM_85,'-' TERM_125,'0' as TERM_PAST_CNT,'0' as TERM_LATE_CNT, '0' as TERM_WIBAN_CNT,'0' as TOTAL_STATION_CNT,a.* from    TBL_ARRANGE_PUNCTUALITY_INFO a where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-02' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') and		a.col000 = '버스ID' union select  2 AS seq, a.TERM,a.TERM_85,a.TERM_125,a.TERM_PAST_CNT,a.TERM_LATE_CNT,a.TERM_WIBAN_CNT,a.TOTAL_STATION_CNT,b.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a JOIN TBL_ARRANGE_PUNCTUALITY_INFO b ON a.COMPANY_NO =b.COMPANY_NO AND a.BASE_YMD =b.BASE_YMD AND a.ROUTE_NM =b.ROUTE_NM AND a.COL000 =b.COL000 AND a.COL002 =b.COL002 where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-02' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') ORDER BY 1
2023-06-26 16:10:22.613 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
61. select  1 AS seq,'-' TERM, '-' TERM_85,'-' TERM_125,'0' as TERM_PAST_CNT,'0' as TERM_LATE_CNT, '0' as TERM_WIBAN_CNT,'0' as TOTAL_STATION_CNT,a.* from    TBL_ARRANGE_PUNCTUALITY_INFO a where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-02' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') and		a.col000 = '버스ID' union select  2 AS seq, a.TERM,a.TERM_85,a.TERM_125,a.TERM_PAST_CNT,a.TERM_LATE_CNT,a.TERM_WIBAN_CNT,a.TOTAL_STATION_CNT,b.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a JOIN TBL_ARRANGE_PUNCTUALITY_INFO b ON a.COMPANY_NO =b.COMPANY_NO AND a.BASE_YMD =b.BASE_YMD AND a.ROUTE_NM =b.ROUTE_NM AND a.COL000 =b.COL000 AND a.COL002 =b.COL002 where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-02' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') ORDER BY 1
 {executed in 6 msec}
2023-06-26 16:10:22.621 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
61. select  1 AS seq,'-' TERM, '-' TERM_85,'-' TERM_125,'0' as TERM_PAST_CNT,'0' as TERM_LATE_CNT, '0' as TERM_WIBAN_CNT,'0' as TOTAL_STATION_CNT,a.* from    TBL_ARRANGE_PUNCTUALITY_INFO a where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-02' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') and		a.col000 = '버스ID' union select  2 AS seq, a.TERM,a.TERM_85,a.TERM_125,a.TERM_PAST_CNT,a.TERM_LATE_CNT,a.TERM_WIBAN_CNT,a.TOTAL_STATION_CNT,b.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a JOIN TBL_ARRANGE_PUNCTUALITY_INFO b ON a.COMPANY_NO =b.COMPANY_NO AND a.BASE_YMD =b.BASE_YMD AND a.ROUTE_NM =b.ROUTE_NM AND a.COL000 =b.COL000 AND a.COL002 =b.COL002 where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-02' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') ORDER BY 1
 {executed in 6 msec}
2023-06-26 16:10:44.280 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@e7c48559
2023-06-26 16:10:44.281 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
61. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 16:10:44.283 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-회사-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 16:10:45.684 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@ffdb9e8b
2023-06-26 16:10:45.685 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
61. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 16:10:45.687 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 16:10:47.235 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@6139748f
2023-06-26 16:10:47.236 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
61. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 16:10:47.238 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. select  /* select_PunctualityAnalize_day : 배차정시성분석 일별 */
			a.BASE_YMD
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	AND 	a.BASE_YMD like  '2023-06' || '%' 
	AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번')
	GROUP BY  a.BASE_YMD
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 16:10:48.168 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1064ad67
2023-06-26 16:10:48.168 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - filterType={getRouteCommonInfo} 
2023-06-26 16:10:48.168 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
2023-06-26 16:10:48.169 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
61. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 16:10:48.170 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
61. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 0 msec}
2023-06-26 16:10:48.172 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
61. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 0 msec}
2023-06-26 16:10:48.185 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@857abe7b
2023-06-26 16:10:48.186 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_INFO_DETAIL} 
2023-06-26 16:10:48.186 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select  1 AS seq,'-' TERM, '-' TERM_85,'-' TERM_125,'0' as TERM_PAST_CNT,'0' as TERM_LATE_CNT, '0' as TERM_WIBAN_CNT,'0' as TOTAL_STATION_CNT,a.* from    TBL_ARRANGE_PUNCTUALITY_INFO a where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-02' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') and		a.col000 = '버스ID' union select  2 AS seq, a.TERM,a.TERM_85,a.TERM_125,a.TERM_PAST_CNT,a.TERM_LATE_CNT,a.TERM_WIBAN_CNT,a.TOTAL_STATION_CNT,b.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a JOIN TBL_ARRANGE_PUNCTUALITY_INFO b ON a.COMPANY_NO =b.COMPANY_NO AND a.BASE_YMD =b.BASE_YMD AND a.ROUTE_NM =b.ROUTE_NM AND a.COL000 =b.COL000 AND a.COL002 =b.COL002 where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-02' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') ORDER BY 1
2023-06-26 16:10:48.192 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
61. select  1 AS seq,'-' TERM, '-' TERM_85,'-' TERM_125,'0' as TERM_PAST_CNT,'0' as TERM_LATE_CNT, '0' as TERM_WIBAN_CNT,'0' as TOTAL_STATION_CNT,a.* from    TBL_ARRANGE_PUNCTUALITY_INFO a where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-02' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') and		a.col000 = '버스ID' union select  2 AS seq, a.TERM,a.TERM_85,a.TERM_125,a.TERM_PAST_CNT,a.TERM_LATE_CNT,a.TERM_WIBAN_CNT,a.TOTAL_STATION_CNT,b.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a JOIN TBL_ARRANGE_PUNCTUALITY_INFO b ON a.COMPANY_NO =b.COMPANY_NO AND a.BASE_YMD =b.BASE_YMD AND a.ROUTE_NM =b.ROUTE_NM AND a.COL000 =b.COL000 AND a.COL002 =b.COL002 where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-02' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') ORDER BY 1
 {executed in 6 msec}
2023-06-26 16:10:48.198 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
61. select  1 AS seq,'-' TERM, '-' TERM_85,'-' TERM_125,'0' as TERM_PAST_CNT,'0' as TERM_LATE_CNT, '0' as TERM_WIBAN_CNT,'0' as TOTAL_STATION_CNT,a.* from    TBL_ARRANGE_PUNCTUALITY_INFO a where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-02' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') and		a.col000 = '버스ID' union select  2 AS seq, a.TERM,a.TERM_85,a.TERM_125,a.TERM_PAST_CNT,a.TERM_LATE_CNT,a.TERM_WIBAN_CNT,a.TOTAL_STATION_CNT,b.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a JOIN TBL_ARRANGE_PUNCTUALITY_INFO b ON a.COMPANY_NO =b.COMPANY_NO AND a.BASE_YMD =b.BASE_YMD AND a.ROUTE_NM =b.ROUTE_NM AND a.COL000 =b.COL000 AND a.COL002 =b.COL002 where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-02' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') ORDER BY 1
 {executed in 5 msec}
2023-06-26 16:17:56.239 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f00dbd2
2023-06-26 16:17:56.240 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
61. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 16:17:56.242 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-회사-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 16:17:57.209 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@a717f504
2023-06-26 16:17:57.210 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
61. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 16:17:57.212 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 16:17:58.419 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@875cb08
2023-06-26 16:17:58.420 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
61. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 16:17:58.421 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. select  /* select_PunctualityAnalize_day : 배차정시성분석 일별 */
			a.BASE_YMD
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.BASE_YMD like  '2023-06' || '%' 
	AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번')
	GROUP BY  a.BASE_YMD
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 16:17:59.604 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@b7a103e0
2023-06-26 16:17:59.604 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - filterType={getRouteCommonInfo} 
2023-06-26 16:17:59.604 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
2023-06-26 16:17:59.605 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
61. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 16:17:59.605 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
61. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 0 msec}
2023-06-26 16:17:59.606 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
61. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 1 msec}
2023-06-26 16:17:59.621 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@2cb714f4
2023-06-26 16:17:59.621 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_INFO_DETAIL} 
2023-06-26 16:17:59.621 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select  1 AS seq,'-' TERM, '-' TERM_85,'-' TERM_125,'0' as TERM_PAST_CNT,'0' as TERM_LATE_CNT, '0' as TERM_WIBAN_CNT,'0' as TOTAL_STATION_CNT,a.* from    TBL_ARRANGE_PUNCTUALITY_INFO a where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-02' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') and		a.col000 = '버스ID' union select  2 AS seq, a.TERM,a.TERM_85,a.TERM_125,a.TERM_PAST_CNT,a.TERM_LATE_CNT,a.TERM_WIBAN_CNT,a.TOTAL_STATION_CNT,b.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a JOIN TBL_ARRANGE_PUNCTUALITY_INFO b ON a.COMPANY_NO =b.COMPANY_NO AND a.BASE_YMD =b.BASE_YMD AND a.ROUTE_NM =b.ROUTE_NM AND a.COL000 =b.COL000 AND a.COL002 =b.COL002 where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-02' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') ORDER BY 1
2023-06-26 16:17:59.626 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
61. select  1 AS seq,'-' TERM, '-' TERM_85,'-' TERM_125,'0' as TERM_PAST_CNT,'0' as TERM_LATE_CNT, '0' as TERM_WIBAN_CNT,'0' as TOTAL_STATION_CNT,a.* from    TBL_ARRANGE_PUNCTUALITY_INFO a where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-02' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') and		a.col000 = '버스ID' union select  2 AS seq, a.TERM,a.TERM_85,a.TERM_125,a.TERM_PAST_CNT,a.TERM_LATE_CNT,a.TERM_WIBAN_CNT,a.TOTAL_STATION_CNT,b.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a JOIN TBL_ARRANGE_PUNCTUALITY_INFO b ON a.COMPANY_NO =b.COMPANY_NO AND a.BASE_YMD =b.BASE_YMD AND a.ROUTE_NM =b.ROUTE_NM AND a.COL000 =b.COL000 AND a.COL002 =b.COL002 where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-02' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') ORDER BY 1
 {executed in 5 msec}
2023-06-26 16:17:59.633 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
61. select  1 AS seq,'-' TERM, '-' TERM_85,'-' TERM_125,'0' as TERM_PAST_CNT,'0' as TERM_LATE_CNT, '0' as TERM_WIBAN_CNT,'0' as TOTAL_STATION_CNT,a.* from    TBL_ARRANGE_PUNCTUALITY_INFO a where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-02' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') and		a.col000 = '버스ID' union select  2 AS seq, a.TERM,a.TERM_85,a.TERM_125,a.TERM_PAST_CNT,a.TERM_LATE_CNT,a.TERM_WIBAN_CNT,a.TOTAL_STATION_CNT,b.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a JOIN TBL_ARRANGE_PUNCTUALITY_INFO b ON a.COMPANY_NO =b.COMPANY_NO AND a.BASE_YMD =b.BASE_YMD AND a.ROUTE_NM =b.ROUTE_NM AND a.COL000 =b.COL000 AND a.COL002 =b.COL002 where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-02' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') ORDER BY 1
 {executed in 6 msec}
2023-06-26 16:19:00.164 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f00dbd2
2023-06-26 16:19:00.165 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
61. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 16:19:00.167 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-회사-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 16:19:03.229 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@2a106e49
2023-06-26 16:19:03.230 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
61. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 16:19:03.231 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('21번','-회사-',a.ROUTE_NM,'21번')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 16:19:04.040 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8b6e444d
2023-06-26 16:19:04.041 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
61. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 16:19:04.043 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. select  /* select_PunctualityAnalize_day : 배차정시성분석 일별 */
			a.BASE_YMD
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.BASE_YMD like  '2023-06' || '%' 
	AND 	a.ROUTE_NM = decode('21번','-회사-',a.ROUTE_NM,'21번')
	GROUP BY  a.BASE_YMD
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 16:19:04.722 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@51e165dc
2023-06-26 16:19:04.722 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - filterType={getRouteCommonInfo} 
2023-06-26 16:19:04.722 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '21번' AND		a.CODE =  '배차정시성대상회차'
2023-06-26 16:19:04.724 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
61. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 16:19:04.725 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
61. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '21번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 1 msec}
2023-06-26 16:19:04.726 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
61. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '21번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 1 msec}
2023-06-26 16:19:04.741 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@c6f776f0
2023-06-26 16:19:04.741 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_INFO_DETAIL} 
2023-06-26 16:19:04.741 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select  1 AS seq,'-' TERM, '-' TERM_85,'-' TERM_125,'0' as TERM_PAST_CNT,'0' as TERM_LATE_CNT, '0' as TERM_WIBAN_CNT,'0' as TOTAL_STATION_CNT,a.* from    TBL_ARRANGE_PUNCTUALITY_INFO a where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('21번','-회사-',a.ROUTE_NM,'21번') and		a.col000 = '버스ID' union select  2 AS seq, a.TERM,a.TERM_85,a.TERM_125,a.TERM_PAST_CNT,a.TERM_LATE_CNT,a.TERM_WIBAN_CNT,a.TOTAL_STATION_CNT,b.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a JOIN TBL_ARRANGE_PUNCTUALITY_INFO b ON a.COMPANY_NO =b.COMPANY_NO AND a.BASE_YMD =b.BASE_YMD AND a.ROUTE_NM =b.ROUTE_NM AND a.COL000 =b.COL000 AND a.COL002 =b.COL002 where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('21번','-회사-',a.ROUTE_NM,'21번') ORDER BY 1
2023-06-26 16:19:04.746 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
61. select  1 AS seq,'-' TERM, '-' TERM_85,'-' TERM_125,'0' as TERM_PAST_CNT,'0' as TERM_LATE_CNT, '0' as TERM_WIBAN_CNT,'0' as TOTAL_STATION_CNT,a.* from    TBL_ARRANGE_PUNCTUALITY_INFO a where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('21번','-회사-',a.ROUTE_NM,'21번') and		a.col000 = '버스ID' union select  2 AS seq, a.TERM,a.TERM_85,a.TERM_125,a.TERM_PAST_CNT,a.TERM_LATE_CNT,a.TERM_WIBAN_CNT,a.TOTAL_STATION_CNT,b.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a JOIN TBL_ARRANGE_PUNCTUALITY_INFO b ON a.COMPANY_NO =b.COMPANY_NO AND a.BASE_YMD =b.BASE_YMD AND a.ROUTE_NM =b.ROUTE_NM AND a.COL000 =b.COL000 AND a.COL002 =b.COL002 where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('21번','-회사-',a.ROUTE_NM,'21번') ORDER BY 1
 {executed in 5 msec}
2023-06-26 16:19:04.751 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
61. select  1 AS seq,'-' TERM, '-' TERM_85,'-' TERM_125,'0' as TERM_PAST_CNT,'0' as TERM_LATE_CNT, '0' as TERM_WIBAN_CNT,'0' as TOTAL_STATION_CNT,a.* from    TBL_ARRANGE_PUNCTUALITY_INFO a where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('21번','-회사-',a.ROUTE_NM,'21번') and		a.col000 = '버스ID' union select  2 AS seq, a.TERM,a.TERM_85,a.TERM_125,a.TERM_PAST_CNT,a.TERM_LATE_CNT,a.TERM_WIBAN_CNT,a.TOTAL_STATION_CNT,b.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a JOIN TBL_ARRANGE_PUNCTUALITY_INFO b ON a.COMPANY_NO =b.COMPANY_NO AND a.BASE_YMD =b.BASE_YMD AND a.ROUTE_NM =b.ROUTE_NM AND a.COL000 =b.COL000 AND a.COL002 =b.COL002 where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('21번','-회사-',a.ROUTE_NM,'21번') ORDER BY 1
 {executed in 4 msec}
2023-06-26 16:22:43.754 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@e7c48559
2023-06-26 16:22:43.755 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
61. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 16:22:43.757 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-회사-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 16:22:44.618 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@82d417d0
2023-06-26 16:22:44.619 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
61. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 16:22:44.620 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('21번','-회사-',a.ROUTE_NM,'21번')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 16:22:45.196 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@e431edd4
2023-06-26 16:22:45.197 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
61. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 16:22:45.198 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. select  /* select_PunctualityAnalize_day : 배차정시성분석 일별 */
			a.BASE_YMD
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	AND 	a.BASE_YMD like  '2023-06' || '%' 
	AND 	a.ROUTE_NM = decode('21번','-회사-',a.ROUTE_NM,'21번')
	GROUP BY  a.BASE_YMD
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 16:22:45.795 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@aaa50f63
2023-06-26 16:22:45.795 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - filterType={getRouteCommonInfo} 
2023-06-26 16:22:45.799 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '21번' AND		a.CODE =  '배차정시성대상회차'
2023-06-26 16:22:45.800 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
61. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 16:22:45.801 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
61. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '21번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 0 msec}
2023-06-26 16:22:45.802 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
61. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '21번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 1 msec}
2023-06-26 16:22:45.814 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1fbb2077
2023-06-26 16:22:45.814 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_INFO_DETAIL} 
2023-06-26 16:22:45.814 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select  1 AS seq,'-' TERM, '-' TERM_85,'-' TERM_125,'0' as TERM_PAST_CNT,'0' as TERM_LATE_CNT, '0' as TERM_WIBAN_CNT,'0' as TOTAL_STATION_CNT,a.* from    TBL_ARRANGE_PUNCTUALITY_INFO a where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('21번','-회사-',a.ROUTE_NM,'21번') and		a.col000 = '버스ID' union select  2 AS seq, a.TERM,a.TERM_85,a.TERM_125,a.TERM_PAST_CNT,a.TERM_LATE_CNT,a.TERM_WIBAN_CNT,a.TOTAL_STATION_CNT,b.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a JOIN TBL_ARRANGE_PUNCTUALITY_INFO b ON a.COMPANY_NO =b.COMPANY_NO AND a.BASE_YMD =b.BASE_YMD AND a.ROUTE_NM =b.ROUTE_NM AND a.COL000 =b.COL000 AND a.COL002 =b.COL002 where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('21번','-회사-',a.ROUTE_NM,'21번') ORDER BY 1,a.col001,a.col002,a.col003
2023-06-26 16:22:45.818 ERROR [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
61. select  1 AS seq,'-' TERM, '-' TERM_85,'-' TERM_125,'0' as TERM_PAST_CNT,'0' as TERM_LATE_CNT, '0' as TERM_WIBAN_CNT,'0' as TOTAL_STATION_CNT,a.* from    TBL_ARRANGE_PUNCTUALITY_INFO a where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('21번','-회사-',a.ROUTE_NM,'21번') and		a.col000 = '버스ID' union select  2 AS seq, a.TERM,a.TERM_85,a.TERM_125,a.TERM_PAST_CNT,a.TERM_LATE_CNT,a.TERM_WIBAN_CNT,a.TOTAL_STATION_CNT,b.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a JOIN TBL_ARRANGE_PUNCTUALITY_INFO b ON a.COMPANY_NO =b.COMPANY_NO AND a.BASE_YMD =b.BASE_YMD AND a.ROUTE_NM =b.ROUTE_NM AND a.COL000 =b.COL000 AND a.COL002 =b.COL002 where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('21번','-회사-',a.ROUTE_NM,'21번') ORDER BY 1,a.col001,a.col002,a.col003
 {FAILED after 2 msec}
org.h2.jdbc.JdbcSQLSyntaxErrorException: Order by expression "A.COL001" must be in the result list in this case; SQL statement:
select  1 AS seq,'-' TERM, '-' TERM_85,'-' TERM_125,'0' as TERM_PAST_CNT,'0' as TERM_LATE_CNT, '0' as TERM_WIBAN_CNT,'0' as TOTAL_STATION_CNT,a.* from    TBL_ARRANGE_PUNCTUALITY_INFO a where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('21번','-회사-',a.ROUTE_NM,'21번') and		a.col000 = '버스ID' union select  2 AS seq, a.TERM,a.TERM_85,a.TERM_125,a.TERM_PAST_CNT,a.TERM_LATE_CNT,a.TERM_WIBAN_CNT,a.TOTAL_STATION_CNT,b.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a JOIN TBL_ARRANGE_PUNCTUALITY_INFO b ON a.COMPANY_NO =b.COMPANY_NO AND a.BASE_YMD =b.BASE_YMD AND a.ROUTE_NM =b.ROUTE_NM AND a.COL000 =b.COL000 AND a.COL002 =b.COL002 where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('21번','-회사-',a.ROUTE_NM,'21번') ORDER BY 1,a.col001,a.col002,a.col003 [90068-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:576)
	at org.h2.engine.SessionRemote.done(SessionRemote.java:611)
	at org.h2.command.CommandRemote.prepare(CommandRemote.java:85)
	at org.h2.command.CommandRemote.<init>(CommandRemote.java:51)
	at org.h2.engine.SessionRemote.prepareCommand(SessionRemote.java:481)
	at org.h2.jdbc.JdbcConnection.prepareCommand(JdbcConnection.java:1235)
	at org.h2.jdbc.JdbcStatement.executeQuery(JdbcStatement.java:78)
	at net.sf.log4jdbc.sql.jdbcapi.StatementSpy.executeQuery(StatementSpy.java:731)
	at com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
	at com.zaxxer.hikari.pool.HikariProxyStatement.executeQuery(HikariProxyStatement.java)
	at org.springframework.jdbc.core.JdbcTemplate$1QueryStatementCallback.doInStatement(JdbcTemplate.java:439)
	at org.springframework.jdbc.core.JdbcTemplate.execute(JdbcTemplate.java:376)
	at org.springframework.jdbc.core.JdbcTemplate.query(JdbcTemplate.java:452)
	at com.pjy.dashboard.dao.DynamicSqlDao.getHeaderBySql(DynamicSqlDao.java:209)
	at com.pjy.dashboard.dao.DynamicSqlDao$$FastClassBySpringCGLIB$$8af24191.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:685)
	at com.pjy.dashboard.dao.DynamicSqlH2Dao$$EnhancerBySpringCGLIB$$9c59c98a.getHeaderBySql(<generated>)
	at com.pjy.dashboard.service.DynamicSqlService.getHeaderBySql(DynamicSqlService.java:69)
	at com.pjy.dashboard.service.DynamicSqlService.getSqlFilter(DynamicSqlService.java:129)
	at com.pjy.dashboard.controller.TestController.dynamicSqlFilter(TestController.java:207)
	at jdk.internal.reflect.GeneratedMethodAccessor167.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:893)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:798)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:97)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at jdk.internal.reflect.GeneratedMethodAccessor147.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$2cf0e58f.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:114)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:104)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
2023-06-26 16:22:45.819 ERROR [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - jdbcTemplate error: StatementCallback; bad SQL grammar [select  1 AS seq,'-' TERM, '-' TERM_85,'-' TERM_125,'0' as TERM_PAST_CNT,'0' as TERM_LATE_CNT, '0' as TERM_WIBAN_CNT,'0' as TOTAL_STATION_CNT,a.* from    TBL_ARRANGE_PUNCTUALITY_INFO a where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('21번','-회사-',a.ROUTE_NM,'21번') and		a.col000 = '버스ID' union select  2 AS seq, a.TERM,a.TERM_85,a.TERM_125,a.TERM_PAST_CNT,a.TERM_LATE_CNT,a.TERM_WIBAN_CNT,a.TOTAL_STATION_CNT,b.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a JOIN TBL_ARRANGE_PUNCTUALITY_INFO b ON a.COMPANY_NO =b.COMPANY_NO AND a.BASE_YMD =b.BASE_YMD AND a.ROUTE_NM =b.ROUTE_NM AND a.COL000 =b.COL000 AND a.COL002 =b.COL002 where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('21번','-회사-',a.ROUTE_NM,'21번') ORDER BY 1,a.col001,a.col002,a.col003]; nested exception is org.h2.jdbc.JdbcSQLSyntaxErrorException: Order by expression "A.COL001" must be in the result list in this case; SQL statement:
select  1 AS seq,'-' TERM, '-' TERM_85,'-' TERM_125,'0' as TERM_PAST_CNT,'0' as TERM_LATE_CNT, '0' as TERM_WIBAN_CNT,'0' as TOTAL_STATION_CNT,a.* from    TBL_ARRANGE_PUNCTUALITY_INFO a where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('21번','-회사-',a.ROUTE_NM,'21번') and		a.col000 = '버스ID' union select  2 AS seq, a.TERM,a.TERM_85,a.TERM_125,a.TERM_PAST_CNT,a.TERM_LATE_CNT,a.TERM_WIBAN_CNT,a.TOTAL_STATION_CNT,b.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a JOIN TBL_ARRANGE_PUNCTUALITY_INFO b ON a.COMPANY_NO =b.COMPANY_NO AND a.BASE_YMD =b.BASE_YMD AND a.ROUTE_NM =b.ROUTE_NM AND a.COL000 =b.COL000 AND a.COL002 =b.COL002 where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('21번','-회사-',a.ROUTE_NM,'21번') ORDER BY 1,a.col001,a.col002,a.col003 [90068-200]
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:576)
	at org.h2.message.DbException.getJdbcSQLException(DbException.java:429)
	at org.h2.message.DbException.get(DbException.java:205)
	at org.h2.message.DbException.get(DbException.java:181)
	at org.h2.command.dml.Query.initExpression(Query.java:607)
	at org.h2.command.dml.Query.initOrder(Query.java:525)
	at org.h2.command.dml.SelectUnion.prepare(SelectUnion.java:282)
	at org.h2.command.Parser.prepareCommand(Parser.java:744)
	at org.h2.engine.Session.prepareLocal(Session.java:657)
	at org.h2.server.TcpServerThread.process(TcpServerThread.java:278)
	at org.h2.server.TcpServerThread.run(TcpServerThread.java:183)
	at java.lang.Thread.run(Unknown Source)

2023-06-26 16:22:45.820 WARN  [http-nio-10010-exec-2] [o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver] - Resolved [com.pjy.dashboard.core.error.exception.BusinessException: jdbcTemplate query error]
2023-06-26 16:24:36.047 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f00dbd2
2023-06-26 16:24:36.048 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
61. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 16:24:36.050 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-회사-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 16:24:37.028 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@a717f504
2023-06-26 16:24:37.030 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
61. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 16:24:37.031 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 16:24:37.911 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@875cb08
2023-06-26 16:24:37.912 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
61. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 16:24:37.914 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
61. select  /* select_PunctualityAnalize_day : 배차정시성분석 일별 */
			a.BASE_YMD
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.BASE_YMD like  '2023-06' || '%' 
	AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번')
	GROUP BY  a.BASE_YMD
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 16:24:38.793 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@cee8ec97
2023-06-26 16:24:38.793 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - filterType={getRouteCommonInfo} 
2023-06-26 16:24:38.797 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
2023-06-26 16:24:38.797 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
61. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 16:24:38.798 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
61. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 0 msec}
2023-06-26 16:24:38.799 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
61. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 1 msec}
2023-06-26 16:24:38.813 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@43fefdab
2023-06-26 16:24:38.813 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_INFO_DETAIL} 
2023-06-26 16:24:38.813 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select  1 AS seq,'-' TERM, '-' TERM_85,'-' TERM_125,'0' as TERM_PAST_CNT,'0' as TERM_LATE_CNT, '0' as TERM_WIBAN_CNT,'0' as TOTAL_STATION_CNT,a.* from    TBL_ARRANGE_PUNCTUALITY_INFO a where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') and		a.col000 = '버스ID' union select  2 AS seq, a.TERM,a.TERM_85,a.TERM_125,a.TERM_PAST_CNT,a.TERM_LATE_CNT,a.TERM_WIBAN_CNT,a.TOTAL_STATION_CNT,b.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a JOIN TBL_ARRANGE_PUNCTUALITY_INFO b ON a.COMPANY_NO =b.COMPANY_NO AND a.BASE_YMD =b.BASE_YMD AND a.ROUTE_NM =b.ROUTE_NM AND a.COL000 =b.COL000 AND a.COL002 =b.COL002 where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') ORDER BY 1,col001,col002,col003
2023-06-26 16:24:38.819 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
61. select  1 AS seq,'-' TERM, '-' TERM_85,'-' TERM_125,'0' as TERM_PAST_CNT,'0' as TERM_LATE_CNT, '0' as TERM_WIBAN_CNT,'0' as TOTAL_STATION_CNT,a.* from    TBL_ARRANGE_PUNCTUALITY_INFO a where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') and		a.col000 = '버스ID' union select  2 AS seq, a.TERM,a.TERM_85,a.TERM_125,a.TERM_PAST_CNT,a.TERM_LATE_CNT,a.TERM_WIBAN_CNT,a.TOTAL_STATION_CNT,b.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a JOIN TBL_ARRANGE_PUNCTUALITY_INFO b ON a.COMPANY_NO =b.COMPANY_NO AND a.BASE_YMD =b.BASE_YMD AND a.ROUTE_NM =b.ROUTE_NM AND a.COL000 =b.COL000 AND a.COL002 =b.COL002 where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') ORDER BY 1,col001,col002,col003
 {executed in 6 msec}
2023-06-26 16:24:38.826 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
61. select  1 AS seq,'-' TERM, '-' TERM_85,'-' TERM_125,'0' as TERM_PAST_CNT,'0' as TERM_LATE_CNT, '0' as TERM_WIBAN_CNT,'0' as TOTAL_STATION_CNT,a.* from    TBL_ARRANGE_PUNCTUALITY_INFO a where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') and		a.col000 = '버스ID' union select  2 AS seq, a.TERM,a.TERM_85,a.TERM_125,a.TERM_PAST_CNT,a.TERM_LATE_CNT,a.TERM_WIBAN_CNT,a.TOTAL_STATION_CNT,b.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a JOIN TBL_ARRANGE_PUNCTUALITY_INFO b ON a.COMPANY_NO =b.COMPANY_NO AND a.BASE_YMD =b.BASE_YMD AND a.ROUTE_NM =b.ROUTE_NM AND a.COL000 =b.COL000 AND a.COL002 =b.COL002 where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') ORDER BY 1,col001,col002,col003
 {executed in 5 msec}
2023-06-26 16:30:33.039 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f00dbd2
2023-06-26 16:30:33.040 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 16:30:33.041 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-회사-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 16:30:34.178 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@2a106e49
2023-06-26 16:30:34.179 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 16:30:34.180 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('21번','-회사-',a.ROUTE_NM,'21번')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 16:30:35.071 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8b6e444d
2023-06-26 16:30:35.072 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 16:30:35.073 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. select  /* select_PunctualityAnalize_day : 배차정시성분석 일별 */
			a.BASE_YMD
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.BASE_YMD like  '2023-06' || '%' 
	AND 	a.ROUTE_NM = decode('21번','-회사-',a.ROUTE_NM,'21번')
	GROUP BY  a.BASE_YMD
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 16:30:35.807 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@51e165dc
2023-06-26 16:30:35.807 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - filterType={getRouteCommonInfo} 
2023-06-26 16:30:35.807 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '21번' AND		a.CODE =  '배차정시성대상회차'
2023-06-26 16:30:35.808 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 16:30:35.809 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '21번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 1 msec}
2023-06-26 16:30:35.810 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '21번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 1 msec}
2023-06-26 16:30:35.823 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@c6f776f0
2023-06-26 16:30:35.823 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_INFO_DETAIL} 
2023-06-26 16:30:35.823 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select  1 AS seq,'-' TERM, '-' TERM_85,'-' TERM_125,'0' as TERM_PAST_CNT,'0' as TERM_LATE_CNT, '0' as TERM_WIBAN_CNT,'0' as TOTAL_STATION_CNT,a.* from    TBL_ARRANGE_PUNCTUALITY_INFO a where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('21번','-회사-',a.ROUTE_NM,'21번') and		a.col000 = '버스ID' union select  2 AS seq, a.TERM,a.TERM_85,a.TERM_125,a.TERM_PAST_CNT,a.TERM_LATE_CNT,a.TERM_WIBAN_CNT,a.TOTAL_STATION_CNT,b.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a JOIN TBL_ARRANGE_PUNCTUALITY_INFO b ON a.COMPANY_NO =b.COMPANY_NO AND a.BASE_YMD =b.BASE_YMD AND a.ROUTE_NM =b.ROUTE_NM AND a.COL000 =b.COL000 AND a.COL002 =b.COL002 where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('21번','-회사-',a.ROUTE_NM,'21번') ORDER BY 1,col001,col002,col003
2023-06-26 16:30:35.827 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. select  1 AS seq,'-' TERM, '-' TERM_85,'-' TERM_125,'0' as TERM_PAST_CNT,'0' as TERM_LATE_CNT, '0' as TERM_WIBAN_CNT,'0' as TOTAL_STATION_CNT,a.* from    TBL_ARRANGE_PUNCTUALITY_INFO a where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('21번','-회사-',a.ROUTE_NM,'21번') and		a.col000 = '버스ID' union select  2 AS seq, a.TERM,a.TERM_85,a.TERM_125,a.TERM_PAST_CNT,a.TERM_LATE_CNT,a.TERM_WIBAN_CNT,a.TOTAL_STATION_CNT,b.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a JOIN TBL_ARRANGE_PUNCTUALITY_INFO b ON a.COMPANY_NO =b.COMPANY_NO AND a.BASE_YMD =b.BASE_YMD AND a.ROUTE_NM =b.ROUTE_NM AND a.COL000 =b.COL000 AND a.COL002 =b.COL002 where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('21번','-회사-',a.ROUTE_NM,'21번') ORDER BY 1,col001,col002,col003
 {executed in 4 msec}
2023-06-26 16:30:35.832 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. select  1 AS seq,'-' TERM, '-' TERM_85,'-' TERM_125,'0' as TERM_PAST_CNT,'0' as TERM_LATE_CNT, '0' as TERM_WIBAN_CNT,'0' as TOTAL_STATION_CNT,a.* from    TBL_ARRANGE_PUNCTUALITY_INFO a where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('21번','-회사-',a.ROUTE_NM,'21번') and		a.col000 = '버스ID' union select  2 AS seq, a.TERM,a.TERM_85,a.TERM_125,a.TERM_PAST_CNT,a.TERM_LATE_CNT,a.TERM_WIBAN_CNT,a.TOTAL_STATION_CNT,b.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a JOIN TBL_ARRANGE_PUNCTUALITY_INFO b ON a.COMPANY_NO =b.COMPANY_NO AND a.BASE_YMD =b.BASE_YMD AND a.ROUTE_NM =b.ROUTE_NM AND a.COL000 =b.COL000 AND a.COL002 =b.COL002 where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('21번','-회사-',a.ROUTE_NM,'21번') ORDER BY 1,col001,col002,col003
 {executed in 3 msec}
2023-06-26 16:32:27.322 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@363d324b
2023-06-26 16:32:27.324 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 16:32:27.325 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-회사-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-03' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-03' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 16:32:28.126 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@4e544b7d
2023-06-26 16:32:28.128 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 2 msec}
2023-06-26 16:32:28.129 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-03' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 16:32:29.096 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@afb22181
2023-06-26 16:32:29.097 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 16:32:29.098 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. select  /* select_PunctualityAnalize_day : 배차정시성분석 일별 */
			a.BASE_YMD
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-03' AND '2023-06-26' 
	AND 	a.BASE_YMD like  '2023-06' || '%' 
	AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번')
	GROUP BY  a.BASE_YMD
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 16:32:30.117 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@5edd5a59
2023-06-26 16:32:30.117 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - filterType={getRouteCommonInfo} 
2023-06-26 16:32:30.117 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
2023-06-26 16:32:30.118 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 16:32:30.119 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 0 msec}
2023-06-26 16:32:30.120 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 1 msec}
2023-06-26 16:32:30.130 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@d3f36b6d
2023-06-26 16:32:30.130 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_INFO_DETAIL} 
2023-06-26 16:32:30.130 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select  1 AS seq,'-' TERM, '-' TERM_85,'-' TERM_125,'0' as TERM_PAST_CNT,'0' as TERM_LATE_CNT, '0' as TERM_WIBAN_CNT,'0' as TOTAL_STATION_CNT,a.* from    TBL_ARRANGE_PUNCTUALITY_INFO a where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-02' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') and		a.col000 = '버스ID' union select  2 AS seq, a.TERM,a.TERM_85,a.TERM_125,a.TERM_PAST_CNT,a.TERM_LATE_CNT,a.TERM_WIBAN_CNT,a.TOTAL_STATION_CNT,b.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a JOIN TBL_ARRANGE_PUNCTUALITY_INFO b ON a.COMPANY_NO =b.COMPANY_NO AND a.BASE_YMD =b.BASE_YMD AND a.ROUTE_NM =b.ROUTE_NM AND a.COL000 =b.COL000 AND a.COL002 =b.COL002 where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-02' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') ORDER BY 1,col001,col002,col003
2023-06-26 16:32:30.143 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. select  1 AS seq,'-' TERM, '-' TERM_85,'-' TERM_125,'0' as TERM_PAST_CNT,'0' as TERM_LATE_CNT, '0' as TERM_WIBAN_CNT,'0' as TOTAL_STATION_CNT,a.* from    TBL_ARRANGE_PUNCTUALITY_INFO a where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-02' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') and		a.col000 = '버스ID' union select  2 AS seq, a.TERM,a.TERM_85,a.TERM_125,a.TERM_PAST_CNT,a.TERM_LATE_CNT,a.TERM_WIBAN_CNT,a.TOTAL_STATION_CNT,b.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a JOIN TBL_ARRANGE_PUNCTUALITY_INFO b ON a.COMPANY_NO =b.COMPANY_NO AND a.BASE_YMD =b.BASE_YMD AND a.ROUTE_NM =b.ROUTE_NM AND a.COL000 =b.COL000 AND a.COL002 =b.COL002 where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-02' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') ORDER BY 1,col001,col002,col003
 {executed in 6 msec}
2023-06-26 16:32:30.149 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. select  1 AS seq,'-' TERM, '-' TERM_85,'-' TERM_125,'0' as TERM_PAST_CNT,'0' as TERM_LATE_CNT, '0' as TERM_WIBAN_CNT,'0' as TOTAL_STATION_CNT,a.* from    TBL_ARRANGE_PUNCTUALITY_INFO a where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-02' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') and		a.col000 = '버스ID' union select  2 AS seq, a.TERM,a.TERM_85,a.TERM_125,a.TERM_PAST_CNT,a.TERM_LATE_CNT,a.TERM_WIBAN_CNT,a.TOTAL_STATION_CNT,b.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a JOIN TBL_ARRANGE_PUNCTUALITY_INFO b ON a.COMPANY_NO =b.COMPANY_NO AND a.BASE_YMD =b.BASE_YMD AND a.ROUTE_NM =b.ROUTE_NM AND a.COL000 =b.COL000 AND a.COL002 =b.COL002 where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-02' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') ORDER BY 1,col001,col002,col003
 {executed in 5 msec}
2023-06-26 16:32:31.308 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@ef85520d
2023-06-26 16:32:31.309 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - filterType={getRouteCommonInfo} 
2023-06-26 16:32:31.309 INFO  [http-nio-10010-exec-2] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
2023-06-26 16:32:31.309 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 16:32:31.310 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 1 msec}
2023-06-26 16:32:31.311 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 1 msec}
2023-06-26 16:32:31.324 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@649b6321
2023-06-26 16:32:31.324 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_INFO_DETAIL} 
2023-06-26 16:32:31.324 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select  1 AS seq,'-' TERM, '-' TERM_85,'-' TERM_125,'0' as TERM_PAST_CNT,'0' as TERM_LATE_CNT, '0' as TERM_WIBAN_CNT,'0' as TOTAL_STATION_CNT,a.* from    TBL_ARRANGE_PUNCTUALITY_INFO a where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') and		a.col000 = '버스ID' union select  2 AS seq, a.TERM,a.TERM_85,a.TERM_125,a.TERM_PAST_CNT,a.TERM_LATE_CNT,a.TERM_WIBAN_CNT,a.TOTAL_STATION_CNT,b.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a JOIN TBL_ARRANGE_PUNCTUALITY_INFO b ON a.COMPANY_NO =b.COMPANY_NO AND a.BASE_YMD =b.BASE_YMD AND a.ROUTE_NM =b.ROUTE_NM AND a.COL000 =b.COL000 AND a.COL002 =b.COL002 where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') ORDER BY 1,col001,col002,col003
2023-06-26 16:32:31.330 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. select  1 AS seq,'-' TERM, '-' TERM_85,'-' TERM_125,'0' as TERM_PAST_CNT,'0' as TERM_LATE_CNT, '0' as TERM_WIBAN_CNT,'0' as TOTAL_STATION_CNT,a.* from    TBL_ARRANGE_PUNCTUALITY_INFO a where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') and		a.col000 = '버스ID' union select  2 AS seq, a.TERM,a.TERM_85,a.TERM_125,a.TERM_PAST_CNT,a.TERM_LATE_CNT,a.TERM_WIBAN_CNT,a.TOTAL_STATION_CNT,b.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a JOIN TBL_ARRANGE_PUNCTUALITY_INFO b ON a.COMPANY_NO =b.COMPANY_NO AND a.BASE_YMD =b.BASE_YMD AND a.ROUTE_NM =b.ROUTE_NM AND a.COL000 =b.COL000 AND a.COL002 =b.COL002 where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') ORDER BY 1,col001,col002,col003
 {executed in 6 msec}
2023-06-26 16:32:31.336 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. select  1 AS seq,'-' TERM, '-' TERM_85,'-' TERM_125,'0' as TERM_PAST_CNT,'0' as TERM_LATE_CNT, '0' as TERM_WIBAN_CNT,'0' as TOTAL_STATION_CNT,a.* from    TBL_ARRANGE_PUNCTUALITY_INFO a where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') and		a.col000 = '버스ID' union select  2 AS seq, a.TERM,a.TERM_85,a.TERM_125,a.TERM_PAST_CNT,a.TERM_LATE_CNT,a.TERM_WIBAN_CNT,a.TOTAL_STATION_CNT,b.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a JOIN TBL_ARRANGE_PUNCTUALITY_INFO b ON a.COMPANY_NO =b.COMPANY_NO AND a.BASE_YMD =b.BASE_YMD AND a.ROUTE_NM =b.ROUTE_NM AND a.COL000 =b.COL000 AND a.COL002 =b.COL002 where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-01' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') ORDER BY 1,col001,col002,col003
 {executed in 6 msec}
2023-06-26 16:45:04.929 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@e7c48559
2023-06-26 16:45:04.930 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 16:45:04.932 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-회사-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 16:45:06.204 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@ffdb9e8b
2023-06-26 16:45:06.206 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 16:45:06.207 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 16:45:07.220 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@6139748f
2023-06-26 16:45:07.221 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 16:45:07.222 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. select  /* select_PunctualityAnalize_day : 배차정시성분석 일별 */
			a.BASE_YMD
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	AND 	a.BASE_YMD like  '2023-06' || '%' 
	AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번')
	GROUP BY  a.BASE_YMD
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 16:45:08.357 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1064ad67
2023-06-26 16:45:08.357 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - filterType={getRouteCommonInfo} 
2023-06-26 16:45:08.361 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
2023-06-26 16:45:08.362 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 16:45:08.363 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 0 msec}
2023-06-26 16:45:08.363 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. select   a.am_seq_array, a.pm_seq_array, wiban_gijun,wiban_min_value,wiban_max_value from    TBM_ROUTE_COMMON_INFO a where   a.company_no = '100' AND     a.ROUTE_NM   = '20번' AND		a.CODE =  '배차정시성대상회차'
 {executed in 0 msec}
2023-06-26 16:45:08.375 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@857abe7b
2023-06-26 16:45:08.375 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - filterType={TBL_ARRANGE_PUNCTUALITY_INFO_DETAIL} 
2023-06-26 16:45:08.375 INFO  [http-nio-10010-exec-10] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : select  1 AS seq,'-' TERM, '-' TERM_85,'-' TERM_125,'0' as TERM_PAST_CNT,'0' as TERM_LATE_CNT, '0' as TERM_WIBAN_CNT,'0' as TOTAL_STATION_CNT,a.* from    TBL_ARRANGE_PUNCTUALITY_INFO a where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-02' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') and		a.col000 = '버스ID' union select  2 AS seq, a.TERM,a.TERM_85,a.TERM_125,a.TERM_PAST_CNT,a.TERM_LATE_CNT,a.TERM_WIBAN_CNT,a.TOTAL_STATION_CNT,b.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a JOIN TBL_ARRANGE_PUNCTUALITY_INFO b ON a.COMPANY_NO =b.COMPANY_NO AND a.BASE_YMD =b.BASE_YMD AND a.ROUTE_NM =b.ROUTE_NM AND a.COL000 =b.COL000 AND a.COL002 =b.COL002 where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-02' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') ORDER BY 1,col002,col003
2023-06-26 16:45:08.382 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. select  1 AS seq,'-' TERM, '-' TERM_85,'-' TERM_125,'0' as TERM_PAST_CNT,'0' as TERM_LATE_CNT, '0' as TERM_WIBAN_CNT,'0' as TOTAL_STATION_CNT,a.* from    TBL_ARRANGE_PUNCTUALITY_INFO a where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-02' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') and		a.col000 = '버스ID' union select  2 AS seq, a.TERM,a.TERM_85,a.TERM_125,a.TERM_PAST_CNT,a.TERM_LATE_CNT,a.TERM_WIBAN_CNT,a.TOTAL_STATION_CNT,b.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a JOIN TBL_ARRANGE_PUNCTUALITY_INFO b ON a.COMPANY_NO =b.COMPANY_NO AND a.BASE_YMD =b.BASE_YMD AND a.ROUTE_NM =b.ROUTE_NM AND a.COL000 =b.COL000 AND a.COL002 =b.COL002 where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-02' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') ORDER BY 1,col002,col003
 {executed in 6 msec}
2023-06-26 16:45:08.388 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
71. select  1 AS seq,'-' TERM, '-' TERM_85,'-' TERM_125,'0' as TERM_PAST_CNT,'0' as TERM_LATE_CNT, '0' as TERM_WIBAN_CNT,'0' as TOTAL_STATION_CNT,a.* from    TBL_ARRANGE_PUNCTUALITY_INFO a where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-02' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') and		a.col000 = '버스ID' union select  2 AS seq, a.TERM,a.TERM_85,a.TERM_125,a.TERM_PAST_CNT,a.TERM_LATE_CNT,a.TERM_WIBAN_CNT,a.TOTAL_STATION_CNT,b.* from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a JOIN TBL_ARRANGE_PUNCTUALITY_INFO b ON a.COMPANY_NO =b.COMPANY_NO AND a.BASE_YMD =b.BASE_YMD AND a.ROUTE_NM =b.ROUTE_NM AND a.COL000 =b.COL000 AND a.COL002 =b.COL002 where   a.company_no = '100' AND 	a.BASE_YMD =  '2023-06-02' AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번') ORDER BY 1,col002,col003
 {executed in 6 msec}
2023-06-26 17:12:52.115 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Starting PjyApplication on DESKTOP-QJPD93S with PID 3700 (D:\BUS\dashboard\dashboard\target\classes started by admin in D:\BUS\dashboard\dashboard)
2023-06-26 17:12:52.121 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - The following profiles are active: oauth
2023-06-26 17:12:52.183 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-06-26 17:12:52.183 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-06-26 17:12:53.377 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-26 17:12:53.377 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-06-26 17:12:53.531 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 143ms. Found 3 JPA repository interfaces.
2023-06-26 17:12:53.883 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-26 17:12:53.884 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2023-06-26 17:12:53.930 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.FileRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-06-26 17:12:53.930 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.MemberRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-06-26 17:12:53.931 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.RememberMeRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-06-26 17:12:53.931 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 47ms. Found 0 JDBC repository interfaces.
2023-06-26 17:12:54.394 INFO  [restartedMain] [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] - Post-processing PropertySource instances
2023-06-26 17:12:54.464 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2023-06-26 17:12:54.465 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource commandLineArgs [org.springframework.core.env.SimpleCommandLinePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-06-26 17:12:54.465 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-06-26 17:12:54.465 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-06-26 17:12:54.465 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-26 17:12:54.467 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
2023-06-26 17:12:54.467 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2023-06-26 17:12:54.467 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application-oauth.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-26 17:12:54.467 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-26 17:12:54.467 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-26 17:12:54.467 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [pjy.properties] [org.springframework.core.env.CompositePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-06-26 17:12:54.467 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [common.properties] [org.springframework.core.io.support.ResourcePropertySource] to EncryptableMapPropertySourceWrapper
2023-06-26 17:12:54.531 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'asyncConfiguration' of type [com.pjy.dashboard.configuration.AsyncConfiguration$$EnhancerBySpringCGLIB$$f63cfbb5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 17:12:54.584 INFO  [restartedMain] [c.u.j.filter.DefaultLazyPropertyFilter] - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2023-06-26 17:12:54.675 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$e0335fe2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 17:12:54.759 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 17:12:54.762 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@7139d38f' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 17:12:54.767 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$5080294] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 17:12:54.779 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration$$EnhancerBySpringCGLIB$$2a5d1aaa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 17:12:54.784 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 17:12:54.785 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 17:12:54.809 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$478597a8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 17:12:54.841 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$c705e4da] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 17:12:54.994 INFO  [restartedMain] [c.u.j.r.DefaultLazyPropertyResolver] - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2023-06-26 17:12:54.999 INFO  [restartedMain] [c.u.j.d.DefaultLazyPropertyDetector] - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2023-06-26 17:12:55.415 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 10010 (http)
2023-06-26 17:12:55.432 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Initializing ProtocolHandler ["http-nio-10010"]
2023-06-26 17:12:55.443 INFO  [restartedMain] [org.apache.catalina.core.StandardService] - Starting service [Tomcat]
2023-06-26 17:12:55.443 INFO  [restartedMain] [org.apache.catalina.core.StandardEngine] - Starting Servlet engine: [Apache Tomcat/9.0.29]
2023-06-26 17:12:55.815 INFO  [restartedMain] [org.apache.jasper.servlet.TldScanner] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2023-06-26 17:12:55.828 INFO  [restartedMain] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring embedded WebApplicationContext
2023-06-26 17:12:55.828 INFO  [restartedMain] [o.s.web.context.ContextLoader] - Root WebApplicationContext: initialization completed in 3645 ms
2023-06-26 17:12:56.680 INFO  [restartedMain] [c.u.j.encryptor.DefaultLazyEncryptor] - Found Custom Encryptor Bean org.jasypt.encryption.pbe.PooledPBEStringEncryptor@21b7e783 with name: jasyptStringEncryptor
2023-06-26 17:12:56.731 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Starting...
2023-06-26 17:12:56.817 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.executeSql(PoolBase.java:567)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 9 msec}
2023-06-26 17:12:56.832 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Start completed.
2023-06-26 17:12:57.575 INFO  [restartedMain] [com.pjy.dashboard.filter.TestFilter] - init Pjy Filter
2023-06-26 17:12:57.904 INFO  [restartedMain] [o.hibernate.jpa.internal.util.LogHelper] - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2023-06-26 17:12:57.981 INFO  [restartedMain] [org.hibernate.Version] - HHH000412: Hibernate Core {5.3.14.Final}
2023-06-26 17:12:57.983 INFO  [restartedMain] [org.hibernate.cfg.Environment] - HHH000206: hibernate.properties not found
2023-06-26 17:12:58.141 INFO  [restartedMain] [org.hibernate.annotations.common.Version] - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2023-06-26 17:12:58.381 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 17:12:58.400 INFO  [restartedMain] [org.hibernate.dialect.Dialect] - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2023-06-26 17:12:59.128 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 17:12:59.131 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select SEQUENCE_CATALOG, SEQUENCE_SCHEMA, SEQUENCE_NAME, INCREMENT from information_schema.sequences
 {executed in 1 msec}
2023-06-26 17:12:59.183 INFO  [restartedMain] [o.s.o.j.LocalContainerEntityManagerFactoryBean] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-06-26 17:12:59.437 INFO  [restartedMain] [o.h.h.i.QueryTranslatorFactoryInitiator] - HHH000397: Using ASTQueryTranslatorFactory
2023-06-26 17:13:00.497 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService
2023-06-26 17:13:00.508 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'asyncThreadPool'
2023-06-26 17:13:00.691 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/h2-console/**'], []
2023-06-26 17:13:00.691 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/css/**'], []
2023-06-26 17:13:00.691 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/js/**'], []
2023-06-26 17:13:00.691 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/monitor/**'], []
2023-06-26 17:13:00.691 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/img/**'], []
2023-06-26 17:13:00.691 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/lib/**'], []
2023-06-26 17:13:00.691 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/main.css'], []
2023-06-26 17:13:00.691 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/common.js'], []
2023-06-26 17:13:00.692 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/resources/**'], []
2023-06-26 17:13:00.878 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@8f95951, org.springframework.security.web.context.SecurityContextPersistenceFilter@235b0b17, org.springframework.security.web.header.HeaderWriterFilter@3e10635, org.springframework.web.filter.CorsFilter@3cf5a455, org.springframework.security.web.authentication.logout.LogoutFilter@4e784c59, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@65e78d59, org.springframework.security.web.session.ConcurrentSessionFilter@376c3db5, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@e3a5a1c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4e54753, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4253238b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2e17cba9, org.springframework.security.web.session.SessionManagementFilter@7a1e332e, org.springframework.security.web.access.ExceptionTranslationFilter@146f98a2, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4d58c8ac]
2023-06-26 17:13:00.901 INFO  [restartedMain] [o.s.aop.framework.CglibAopProxy] - Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(javax.servlet.FilterConfig) throws javax.servlet.ServletException] because it is marked as final: Consider using interface-based JDK proxies instead!
2023-06-26 17:13:01.298 WARN  [restartedMain] [o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-06-26 17:13:01.379 INFO  [restartedMain] [o.s.b.a.w.s.WelcomePageHandlerMapping] - Adding welcome page: ServletContext resource [/index.html]
2023-06-26 17:13:01.812 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 17:13:02.619 INFO  [restartedMain] [o.s.b.d.a.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2023-06-26 17:13:02.646 INFO  [restartedMain] [o.s.b.a.e.web.EndpointLinksResolver] - Exposing 16 endpoint(s) beneath base path '/actuator'
2023-06-26 17:13:02.794 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskScheduler] - Initializing ExecutorService
2023-06-26 17:13:02.798 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Starting ProtocolHandler ["http-nio-10010"]
2023-06-26 17:13:02.851 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 10010 (http) with context path ''
2023-06-26 17:13:02.855 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Started PjyApplication in 11.233 seconds (JVM running for 12.629)
2023-06-26 17:13:02.856 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-06-26 17:13:02.856 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - Application started
2023-06-26 17:13:02.856 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-06-26 17:13:03.722 INFO  [RMI TCP Connection(10)-127.0.0.1] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-26 17:13:03.722 INFO  [RMI TCP Connection(10)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Initializing Servlet 'dispatcherServlet'
2023-06-26 17:13:03.745 INFO  [RMI TCP Connection(10)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Completed initialization in 23 ms
2023-06-26 17:13:23.260 INFO  [http-nio-10010-exec-3] [c.p.d.interceptor.LoggerInterceptor] - ============================== START ==============================
2023-06-26 17:13:23.261 INFO  [http-nio-10010-exec-3] [c.p.d.interceptor.LoggerInterceptor] -  Class       	:  class org.springframework.web.method.HandlerMethod
2023-06-26 17:13:23.261 INFO  [http-nio-10010-exec-3] [c.p.d.interceptor.LoggerInterceptor] -  Request URI 	:  /error
2023-06-26 17:13:23.261 INFO  [http-nio-10010-exec-3] [c.p.d.interceptor.LoggerInterceptor] -  Request addr	:  0:0:0:0:0:0:0:1
2023-06-26 17:13:23.262 INFO  [http-nio-10010-exec-3] [c.p.d.interceptor.LoggerInterceptor] -  Servlet URI 	:  /error
2023-06-26 17:13:24.654 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 17:13:24.661 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select * from MEMBER where userId = 'p00139'
 {executed in 0 msec}
2023-06-26 17:13:24.682 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.MemberServiceImpl] - ROLE_ADMIN
2023-06-26 17:13:24.779 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.MemberServiceImpl] - pass:$2a$10$MNrQAPw.4k9j2y08eTmYEeI7oKPuaWbA97HHog.8PYep5HsRwhbae,$2a$10$qbGBQ00B85TP9OVipH9tZuCt/0T9YZqi8cz.JFeZcQMWo3ezFt4zi
2023-06-26 17:13:24.874 INFO  [http-nio-10010-exec-7] [c.p.d.configuration.SecurityConfig] - authentication:: p00139
2023-06-26 17:17:10.324 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f00dbd2
2023-06-26 17:17:10.410 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 17:17:10.415 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-회사-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 17:17:11.903 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@a717f504
2023-06-26 17:17:11.905 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 17:17:11.907 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 17:17:12.619 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@875cb08
2023-06-26 17:17:12.621 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 17:17:12.623 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select  /* select_PunctualityAnalize_day : 배차정시성분석 일별 */
			a.BASE_YMD
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.BASE_YMD like  '2023-06' || '%' 
	AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번')
	GROUP BY  a.BASE_YMD
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 17:17:13.385 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@7b8f6d96
2023-06-26 17:17:13.386 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 17:17:13.389 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select  /* select_PunctualityAnalize_detail : 배차정시성분석 일별 */
			a.BASE_YMD
		,	a.ROUTE_NM
		,	a.TERM
		,	a.TERM_85
		,	a.TERM_125
		,	a.TERM_PAST_CNT
		,	a.TERM_LATE_CNT
		,	a.TERM_WIBAN_CNT
		,	a.TOTAL_STATION_CNT
		,	round((a.TERM_WIBAN_CNT*1.0) / (a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD =  '2023-06-01' 
	AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번')
	ORDER BY a.col002,a.col003
 {executed in 1 msec}
2023-06-26 17:18:40.669 INFO  [RMI TCP Connection(18)-127.0.0.1] [o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin] - Application shutdown requested.
2023-06-26 17:18:40.699 INFO  [RMI TCP Connection(18)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Shutting down ExecutorService 'asyncThreadPool'
2023-06-26 17:18:40.701 INFO  [RMI TCP Connection(18)-127.0.0.1] [com.zaxxer.hikari.HikariDataSource] - H2 - Shutdown initiated...
2023-06-26 17:18:40.709 INFO  [RMI TCP Connection(18)-127.0.0.1] [com.zaxxer.hikari.HikariDataSource] - H2 - Shutdown completed.
2023-06-26 17:18:40.757 INFO  [RMI TCP Connection(18)-127.0.0.1] [com.pjy.dashboard.filter.TestFilter] - destroy Pjy Filter
2023-06-26 17:20:54.957 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Starting PjyApplication on DESKTOP-QJPD93S with PID 26504 (D:\BUS\dashboard\dashboard\target\classes started by admin in D:\BUS\dashboard\dashboard)
2023-06-26 17:20:54.962 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - The following profiles are active: oauth
2023-06-26 17:20:55.019 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-06-26 17:20:55.019 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-06-26 17:20:56.240 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-26 17:20:56.240 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-06-26 17:20:56.399 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 149ms. Found 3 JPA repository interfaces.
2023-06-26 17:20:56.756 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-26 17:20:56.757 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2023-06-26 17:20:56.804 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.FileRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-06-26 17:20:56.805 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.MemberRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-06-26 17:20:56.806 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.RememberMeRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-06-26 17:20:56.806 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 49ms. Found 0 JDBC repository interfaces.
2023-06-26 17:20:57.257 INFO  [restartedMain] [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] - Post-processing PropertySource instances
2023-06-26 17:20:57.334 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2023-06-26 17:20:57.335 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource commandLineArgs [org.springframework.core.env.SimpleCommandLinePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-06-26 17:20:57.335 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-06-26 17:20:57.335 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-06-26 17:20:57.335 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-26 17:20:57.336 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
2023-06-26 17:20:57.336 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2023-06-26 17:20:57.336 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application-oauth.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-26 17:20:57.336 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-26 17:20:57.336 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-26 17:20:57.337 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [pjy.properties] [org.springframework.core.env.CompositePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-06-26 17:20:57.337 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [common.properties] [org.springframework.core.io.support.ResourcePropertySource] to EncryptableMapPropertySourceWrapper
2023-06-26 17:20:57.398 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'asyncConfiguration' of type [com.pjy.dashboard.configuration.AsyncConfiguration$$EnhancerBySpringCGLIB$$310c6fcb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 17:20:57.450 INFO  [restartedMain] [c.u.j.filter.DefaultLazyPropertyFilter] - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2023-06-26 17:20:57.549 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$1b02d3f8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 17:20:57.635 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 17:20:57.637 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@4d8ae7e2' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 17:20:57.639 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$3fd776aa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 17:20:57.651 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration$$EnhancerBySpringCGLIB$$652c8ec0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 17:20:57.655 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 17:20:57.656 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 17:20:57.680 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$82550bbe] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 17:20:57.712 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$1d558f0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 17:20:57.847 INFO  [restartedMain] [c.u.j.r.DefaultLazyPropertyResolver] - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2023-06-26 17:20:57.852 INFO  [restartedMain] [c.u.j.d.DefaultLazyPropertyDetector] - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2023-06-26 17:20:58.300 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 10010 (http)
2023-06-26 17:20:58.318 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Initializing ProtocolHandler ["http-nio-10010"]
2023-06-26 17:20:58.329 INFO  [restartedMain] [org.apache.catalina.core.StandardService] - Starting service [Tomcat]
2023-06-26 17:20:58.329 INFO  [restartedMain] [org.apache.catalina.core.StandardEngine] - Starting Servlet engine: [Apache Tomcat/9.0.29]
2023-06-26 17:20:58.700 INFO  [restartedMain] [org.apache.jasper.servlet.TldScanner] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2023-06-26 17:20:58.712 INFO  [restartedMain] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring embedded WebApplicationContext
2023-06-26 17:20:58.712 INFO  [restartedMain] [o.s.web.context.ContextLoader] - Root WebApplicationContext: initialization completed in 3693 ms
2023-06-26 17:20:59.668 INFO  [restartedMain] [c.u.j.encryptor.DefaultLazyEncryptor] - Found Custom Encryptor Bean org.jasypt.encryption.pbe.PooledPBEStringEncryptor@7e26918c with name: jasyptStringEncryptor
2023-06-26 17:20:59.710 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Starting...
2023-06-26 17:20:59.799 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.executeSql(PoolBase.java:567)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 8 msec}
2023-06-26 17:20:59.804 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Start completed.
2023-06-26 17:21:00.620 INFO  [restartedMain] [com.pjy.dashboard.filter.TestFilter] - init Pjy Filter
2023-06-26 17:21:00.960 INFO  [restartedMain] [o.hibernate.jpa.internal.util.LogHelper] - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2023-06-26 17:21:01.040 INFO  [restartedMain] [org.hibernate.Version] - HHH000412: Hibernate Core {5.3.14.Final}
2023-06-26 17:21:01.041 INFO  [restartedMain] [org.hibernate.cfg.Environment] - HHH000206: hibernate.properties not found
2023-06-26 17:21:01.209 INFO  [restartedMain] [org.hibernate.annotations.common.Version] - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2023-06-26 17:21:01.460 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 17:21:01.477 INFO  [restartedMain] [org.hibernate.dialect.Dialect] - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2023-06-26 17:21:02.175 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 17:21:02.178 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select SEQUENCE_CATALOG, SEQUENCE_SCHEMA, SEQUENCE_NAME, INCREMENT from information_schema.sequences
 {executed in 1 msec}
2023-06-26 17:21:02.230 INFO  [restartedMain] [o.s.o.j.LocalContainerEntityManagerFactoryBean] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-06-26 17:21:02.484 INFO  [restartedMain] [o.h.h.i.QueryTranslatorFactoryInitiator] - HHH000397: Using ASTQueryTranslatorFactory
2023-06-26 17:21:03.560 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService
2023-06-26 17:21:03.573 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'asyncThreadPool'
2023-06-26 17:21:03.754 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/h2-console/**'], []
2023-06-26 17:21:03.754 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/css/**'], []
2023-06-26 17:21:03.755 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/js/**'], []
2023-06-26 17:21:03.755 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/monitor/**'], []
2023-06-26 17:21:03.755 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/img/**'], []
2023-06-26 17:21:03.755 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/lib/**'], []
2023-06-26 17:21:03.755 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/main.css'], []
2023-06-26 17:21:03.755 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/common.js'], []
2023-06-26 17:21:03.755 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/resources/**'], []
2023-06-26 17:21:03.917 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@54dfa3, org.springframework.security.web.context.SecurityContextPersistenceFilter@6f5339d8, org.springframework.security.web.header.HeaderWriterFilter@11db940d, org.springframework.web.filter.CorsFilter@f5d737b, org.springframework.security.web.authentication.logout.LogoutFilter@28c5f6ed, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@1651cf85, org.springframework.security.web.session.ConcurrentSessionFilter@725b1ea9, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@38fbd590, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@46fe8b1b, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@4209b234, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7fb4bbc5, org.springframework.security.web.session.SessionManagementFilter@5fe4477f, org.springframework.security.web.access.ExceptionTranslationFilter@cfafe69, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@3fd2eeaf]
2023-06-26 17:21:03.939 INFO  [restartedMain] [o.s.aop.framework.CglibAopProxy] - Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(javax.servlet.FilterConfig) throws javax.servlet.ServletException] because it is marked as final: Consider using interface-based JDK proxies instead!
2023-06-26 17:21:04.296 WARN  [restartedMain] [o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-06-26 17:21:04.378 INFO  [restartedMain] [o.s.b.a.w.s.WelcomePageHandlerMapping] - Adding welcome page: ServletContext resource [/index.html]
2023-06-26 17:21:04.788 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 17:21:05.595 INFO  [restartedMain] [o.s.b.d.a.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2023-06-26 17:21:05.621 INFO  [restartedMain] [o.s.b.a.e.web.EndpointLinksResolver] - Exposing 16 endpoint(s) beneath base path '/actuator'
2023-06-26 17:21:05.764 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskScheduler] - Initializing ExecutorService
2023-06-26 17:21:05.767 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Starting ProtocolHandler ["http-nio-10010"]
2023-06-26 17:21:05.813 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 10010 (http) with context path ''
2023-06-26 17:21:05.818 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Started PjyApplication in 11.322 seconds (JVM running for 12.705)
2023-06-26 17:21:05.819 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-06-26 17:21:05.820 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - Application started
2023-06-26 17:21:05.820 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-06-26 17:21:06.673 INFO  [RMI TCP Connection(9)-127.0.0.1] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-26 17:21:06.673 INFO  [RMI TCP Connection(9)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Initializing Servlet 'dispatcherServlet'
2023-06-26 17:21:06.699 INFO  [RMI TCP Connection(9)-127.0.0.1] [o.s.web.servlet.DispatcherServlet] - Completed initialization in 26 ms
2023-06-26 17:24:33.478 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@e7c48559
2023-06-26 17:24:33.548 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 17:24:33.557 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-회사-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 17:24:35.729 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@82d417d0
2023-06-26 17:24:35.731 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 17:24:35.733 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('21번','-회사-',a.ROUTE_NM,'21번')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 17:24:37.453 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@e431edd4
2023-06-26 17:24:37.455 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 17:24:37.456 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select  /* select_PunctualityAnalize_day : 배차정시성분석 일별 */
			a.BASE_YMD
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	AND 	a.BASE_YMD like  '2023-06' || '%' 
	AND 	a.ROUTE_NM = decode('21번','-회사-',a.ROUTE_NM,'21번')
	GROUP BY  a.BASE_YMD
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 17:24:38.631 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@574b9062
2023-06-26 17:24:38.633 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 17:24:38.636 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select  /* select_PunctualityAnalize_detail : 배차정시성분석 일별 */
			a.BASE_YMD
		,	a.ROUTE_NM
		,	a.COL001
		,	a.COL002
		,	a.COL003
		,	a.COL004
		,	a.TERM
		,	a.TERM_85
		,	a.TERM_125
		,	a.TERM_PAST_CNT
		,	a.TERM_LATE_CNT
		,	a.TERM_WIBAN_CNT
		,	a.TOTAL_STATION_CNT
		,	round((a.TERM_WIBAN_CNT*1.0) / (a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD =  '2023-06-01' 
	AND 	a.ROUTE_NM = decode('21번','-회사-',a.ROUTE_NM,'21번')
	ORDER BY a.col002,a.col003
 {executed in 1 msec}
2023-06-26 17:26:18.107 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@ef56c2b4
2023-06-26 17:26:18.108 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 17:26:18.109 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('-회사-','-회사-',a.ROUTE_NM,'-회사-')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 17:26:23.646 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@d8eeac02
2023-06-26 17:26:23.647 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 17:26:23.649 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 17:26:26.221 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@5be72547
2023-06-26 17:26:26.222 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 17:26:26.223 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('21번','-회사-',a.ROUTE_NM,'21번')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 17:26:27.383 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@950d2589
2023-06-26 17:26:27.384 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 17:26:27.386 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('5-1번','-회사-',a.ROUTE_NM,'5-1번')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 17:26:29.627 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@ef56c2b4
2023-06-26 17:26:29.629 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 2 msec}
2023-06-26 17:26:29.631 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('-회사-','-회사-',a.ROUTE_NM,'-회사-')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 17:26:38.822 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@3b0c2628
2023-06-26 17:26:38.823 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 17:26:38.825 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select  /* select_PunctualityAnalize_day : 배차정시성분석 일별 */
			a.BASE_YMD
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	AND 	a.BASE_YMD like  '2023-06' || '%' 
	AND 	a.ROUTE_NM = decode('-회사-','-회사-',a.ROUTE_NM,'-회사-')
	GROUP BY  a.BASE_YMD
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 17:26:39.891 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@eae37fd9
2023-06-26 17:26:39.892 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 17:26:39.893 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select  /* select_PunctualityAnalize_day : 배차정시성분석 일별 */
			a.BASE_YMD
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	AND 	a.BASE_YMD like  '2023-05' || '%' 
	AND 	a.ROUTE_NM = decode('-회사-','-회사-',a.ROUTE_NM,'-회사-')
	GROUP BY  a.BASE_YMD
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 17:26:40.966 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@3b0c2628
2023-06-26 17:26:40.967 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 17:26:40.969 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select  /* select_PunctualityAnalize_day : 배차정시성분석 일별 */
			a.BASE_YMD
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	AND 	a.BASE_YMD like  '2023-06' || '%' 
	AND 	a.ROUTE_NM = decode('-회사-','-회사-',a.ROUTE_NM,'-회사-')
	GROUP BY  a.BASE_YMD
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 17:41:36.140 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f00dbd2
2023-06-26 17:41:36.142 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
11. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 17:41:36.144 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-회사-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 2 msec}
2023-06-26 17:41:38.195 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@a717f504
2023-06-26 17:41:38.197 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
11. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 17:41:38.198 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 17:41:39.246 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@875cb08
2023-06-26 17:41:39.248 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
11. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 17:41:39.250 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select  /* select_PunctualityAnalize_day : 배차정시성분석 일별 */
			a.BASE_YMD
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.BASE_YMD like  '2023-06' || '%' 
	AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번')
	GROUP BY  a.BASE_YMD
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 17:41:40.628 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@644784df
2023-06-26 17:41:40.630 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
11. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 17:41:40.631 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select  /* select_PunctualityAnalize_detail : 배차정시성분석 일별 */
			a.BASE_YMD
		,	a.ROUTE_NM
		,	a.COL001
		,	a.COL002
		,	a.COL003
		,	a.COL004
		,	a.TERM
		,	a.TERM_85
		,	a.TERM_125
		,	a.TERM_PAST_CNT
		,	a.TERM_LATE_CNT
		,	a.TERM_WIBAN_CNT
		,	a.TOTAL_STATION_CNT
		,	round((a.TERM_WIBAN_CNT*1.0) / (a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD =  '2023-06-02' 
	AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번')
	ORDER BY a.col002,a.col003
 {executed in 1 msec}
2023-06-26 17:43:04.608 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@e7c48559
2023-06-26 17:43:04.609 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
11. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 17:43:04.611 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-회사-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 17:43:06.132 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1643b53d
2023-06-26 17:43:06.134 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
11. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 17:43:06.135 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('-회사-','-회사-',a.ROUTE_NM,'-회사-')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 17:43:07.310 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@2778e4f2
2023-06-26 17:43:07.311 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
11. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 17:43:07.313 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select  /* select_PunctualityAnalize_day : 배차정시성분석 일별 */
			a.BASE_YMD
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	AND 	a.BASE_YMD like  '2023-05' || '%' 
	AND 	a.ROUTE_NM = decode('-회사-','-회사-',a.ROUTE_NM,'-회사-')
	GROUP BY  a.BASE_YMD
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 17:43:08.480 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8d531616
2023-06-26 17:43:08.481 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
11. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 17:43:08.483 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select  /* select_PunctualityAnalize_detail : 배차정시성분석 일별 */
			a.BASE_YMD
		,	a.ROUTE_NM
		,	a.COL001
		,	a.COL002
		,	a.COL003
		,	a.COL004
		,	a.TERM
		,	a.TERM_85
		,	a.TERM_125
		,	a.TERM_PAST_CNT
		,	a.TERM_LATE_CNT
		,	a.TERM_WIBAN_CNT
		,	a.TOTAL_STATION_CNT
		,	round((a.TERM_WIBAN_CNT*1.0) / (a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD =  '2023-05-28' 
	AND 	a.ROUTE_NM = decode('-회사-','-회사-',a.ROUTE_NM,'-회사-')
	ORDER BY a.col002,a.col003
 {executed in 1 msec}
2023-06-26 17:47:05.561 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@e7c48559
2023-06-26 17:47:05.563 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
11. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 17:47:05.565 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-회사-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 17:47:07.585 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1643b53d
2023-06-26 17:47:07.586 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
11. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 17:47:07.587 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('-회사-','-회사-',a.ROUTE_NM,'-회사-')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 17:47:08.725 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@2778e4f2
2023-06-26 17:47:08.726 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
11. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 17:47:08.728 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select  /* select_PunctualityAnalize_day : 배차정시성분석 일별 */
			a.BASE_YMD
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	AND 	a.BASE_YMD like  '2023-05' || '%' 
	AND 	a.ROUTE_NM = decode('-회사-','-회사-',a.ROUTE_NM,'-회사-')
	GROUP BY  a.BASE_YMD
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 17:47:10.186 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8d531616
2023-06-26 17:47:10.187 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
11. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 17:47:10.188 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select  /* select_PunctualityAnalize_detail : 배차정시성분석 일별 */
			a.BASE_YMD
		,	a.ROUTE_NM
		,	a.COL001
		,	a.COL002
		,	a.COL003
		,	a.COL004
		,	a.TERM
		,	a.TERM_85
		,	a.TERM_125
		,	a.TERM_PAST_CNT
		,	a.TERM_LATE_CNT
		,	a.TERM_WIBAN_CNT
		,	a.TOTAL_STATION_CNT
		,	round((a.TERM_WIBAN_CNT*1.0) / (a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD =  '2023-05-28' 
	AND 	a.ROUTE_NM = decode('-회사-','-회사-',a.ROUTE_NM,'-회사-')
	ORDER BY a.col002,a.col003
 {executed in 0 msec}
2023-06-26 17:47:55.328 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f00dbd2
2023-06-26 17:47:55.330 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
11. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 17:47:55.332 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-회사-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 17:47:56.846 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@bd800bb6
2023-06-26 17:47:56.847 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
11. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 17:47:56.849 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('-회사-','-회사-',a.ROUTE_NM,'-회사-')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 17:47:57.985 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@ceb53b6b
2023-06-26 17:47:57.986 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
11. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 17:47:57.987 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select  /* select_PunctualityAnalize_day : 배차정시성분석 일별 */
			a.BASE_YMD
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.BASE_YMD like  '2023-05' || '%' 
	AND 	a.ROUTE_NM = decode('-회사-','-회사-',a.ROUTE_NM,'-회사-')
	GROUP BY  a.BASE_YMD
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 17:48:00.273 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@348f6c8f
2023-06-26 17:48:00.274 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
11. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 17:48:00.275 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select  /* select_PunctualityAnalize_detail : 배차정시성분석 일별 */
			a.BASE_YMD
		,	a.ROUTE_NM
		,	a.COL001
		,	a.COL002
		,	a.COL003
		,	a.COL004
		,	a.TERM
		,	a.TERM_85
		,	a.TERM_125
		,	a.TERM_PAST_CNT
		,	a.TERM_LATE_CNT
		,	a.TERM_WIBAN_CNT
		,	a.TOTAL_STATION_CNT
		,	round((a.TERM_WIBAN_CNT*1.0) / (a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD =  '2023-05-28' 
	AND 	a.ROUTE_NM = decode('-회사-','-회사-',a.ROUTE_NM,'-회사-')
	ORDER BY a.col002,a.col003
 {executed in 0 msec}
2023-06-26 17:50:59.103 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f00dbd2
2023-06-26 17:50:59.104 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
11. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 17:50:59.106 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-회사-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 17:51:04.837 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@bd800bb6
2023-06-26 17:51:04.838 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
11. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 17:51:04.839 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('-회사-','-회사-',a.ROUTE_NM,'-회사-')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 17:51:59.647 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@e7c48559
2023-06-26 17:51:59.649 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
11. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 17:51:59.651 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-회사-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 17:52:00.963 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1643b53d
2023-06-26 17:52:00.964 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
11. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 17:52:00.965 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
11. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('-회사-','-회사-',a.ROUTE_NM,'-회사-')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 19:57:03.932 WARN  [H2 housekeeper] [com.zaxxer.hikari.pool.HikariPool] - H2 - Thread starvation or clock leap detected (housekeeper delta=2h5m3s632ms313µs600ns).
2023-06-26 19:57:32.513 INFO  [Catalina-utility-2] [c.pjy.dashboard.listener.SessionListener] - updateUserCloseTime p00139 
2023-06-26 19:57:32.513 INFO  [Catalina-utility-2] [c.pjy.dashboard.listener.SessionListener] - currentSessionUserList ->  false
2023-06-26 19:57:32.514 INFO  [Catalina-utility-2] [c.pjy.dashboard.listener.SessionListener] - updateUserCloseTime p00139 
2023-06-26 19:57:32.514 INFO  [Catalina-utility-2] [c.pjy.dashboard.listener.SessionListener] - currentSessionUserList ->  false
2023-06-26 20:21:36.316 INFO  [http-nio-10010-exec-10] [c.p.d.interceptor.LoggerInterceptor] - ============================== START ==============================
2023-06-26 20:21:36.317 INFO  [http-nio-10010-exec-10] [c.p.d.interceptor.LoggerInterceptor] -  Class       	:  class org.springframework.web.method.HandlerMethod
2023-06-26 20:21:36.317 INFO  [http-nio-10010-exec-10] [c.p.d.interceptor.LoggerInterceptor] -  Request URI 	:  /error
2023-06-26 20:21:36.317 INFO  [http-nio-10010-exec-10] [c.p.d.interceptor.LoggerInterceptor] -  Request addr	:  0:0:0:0:0:0:0:1
2023-06-26 20:21:36.317 INFO  [http-nio-10010-exec-10] [c.p.d.interceptor.LoggerInterceptor] -  Servlet URI 	:  /error
2023-06-26 20:21:38.428 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 20:21:38.432 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
31. select * from MEMBER where userId = 'p00139'
 {executed in 1 msec}
2023-06-26 20:21:38.453 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.MemberServiceImpl] - ROLE_ADMIN
2023-06-26 20:21:38.544 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.MemberServiceImpl] - pass:$2a$10$MNrQAPw.4k9j2y08eTmYEeI7oKPuaWbA97HHog.8PYep5HsRwhbae,$2a$10$vRz34FJqEkJ7pwvu0fj6nehHpa6weDDwYNiAIQM6ewiawmuXH8q8a
2023-06-26 20:21:38.632 INFO  [http-nio-10010-exec-7] [c.p.d.configuration.SecurityConfig] - authentication:: p00139
2023-06-26 20:21:47.513 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f00dbd2
2023-06-26 20:21:47.514 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 20:21:47.517 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-회사-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 20:21:49.213 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@a717f504
2023-06-26 20:21:49.214 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 20:21:49.216 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 20:21:50.248 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@875cb08
2023-06-26 20:21:50.250 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 20:21:50.251 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. select  /* select_PunctualityAnalize_day : 배차정시성분석 일별 */
			a.BASE_YMD
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.BASE_YMD like  '2023-06' || '%' 
	AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번')
	GROUP BY  a.BASE_YMD
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 20:21:51.187 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@7b8f6d96
2023-06-26 20:21:51.188 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 20:21:51.190 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. select  /* select_PunctualityAnalize_detail : 배차정시성분석 일별 */
			a.BASE_YMD
		,	a.ROUTE_NM
		,	a.COL001
		,	a.COL002
		,	a.COL003
		,	a.COL004
		,	a.TERM
		,	a.TERM_85
		,	a.TERM_125
		,	a.TERM_PAST_CNT
		,	a.TERM_LATE_CNT
		,	a.TERM_WIBAN_CNT
		,	a.TOTAL_STATION_CNT
		,	round((a.TERM_WIBAN_CNT*1.0) / (a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD =  '2023-06-01' 
	AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번')
	ORDER BY a.col002,a.col003
 {executed in 1 msec}
2023-06-26 20:23:23.416 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@363d324b
2023-06-26 20:23:23.417 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 20:23:23.419 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-회사-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-03' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-03' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 20:23:31.050 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@4e544b7d
2023-06-26 20:23:31.051 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 20:23:31.052 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-03' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 20:23:36.116 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@d14cc4c2
2023-06-26 20:23:36.118 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 20:23:36.119 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-03' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('21번','-회사-',a.ROUTE_NM,'21번')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 20:23:37.777 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@32aa9ac6
2023-06-26 20:23:37.778 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 20:23:37.780 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. select  /* select_PunctualityAnalize_day : 배차정시성분석 일별 */
			a.BASE_YMD
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-03' AND '2023-06-26' 
	AND 	a.BASE_YMD like  '2023-06' || '%' 
	AND 	a.ROUTE_NM = decode('21번','-회사-',a.ROUTE_NM,'21번')
	GROUP BY  a.BASE_YMD
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 21:07:54.438 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@e7c48559
2023-06-26 21:07:54.440 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
51. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 21:07:54.442 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-회사-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 21:10:41.056 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@e7c48559
2023-06-26 21:10:41.057 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
51. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 21:10:41.059 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-회사-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 21:11:22.210 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@363d324b
2023-06-26 21:11:22.211 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
51. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 21:11:22.212 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
51. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-회사-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-03' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-03' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 21:11:40.370 ERROR [http-nio-10010-exec-6] [c.p.d.core.error.GlobalExceptionHandler] - handleEntityNotFoundException
com.google.gson.JsonSyntaxException: java.lang.IllegalStateException: Expected a string but was BEGIN_OBJECT at line 1 column 139 path $.routeNm
	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(ReflectiveTypeAdapterFactory.java:226)
	at com.google.gson.Gson.fromJson(Gson.java:932)
	at com.google.gson.Gson.fromJson(Gson.java:897)
	at com.google.gson.Gson.fromJson(Gson.java:846)
	at com.google.gson.Gson.fromJson(Gson.java:817)
	at com.pjy.dashboard.controller.TestController.DynamicSqlFilterMybatis(TestController.java:180)
	at jdk.internal.reflect.GeneratedMethodAccessor155.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:105)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:893)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:798)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doGet(FrameworkServlet.java:898)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:634)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.servlet.resource.ResourceUrlEncodingFilter.doFilter(ResourceUrlEncodingFilter.java:64)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.web.trace.servlet.HttpTraceFilter.doFilterInternal(HttpTraceFilter.java:88)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:320)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.invoke(FilterSecurityInterceptor.java:127)
	at org.springframework.security.web.access.intercept.FilterSecurityInterceptor.doFilter(FilterSecurityInterceptor.java:91)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.access.ExceptionTranslationFilter.doFilter(ExceptionTranslationFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.SessionManagementFilter.doFilter(SessionManagementFilter.java:137)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AnonymousAuthenticationFilter.doFilter(AnonymousAuthenticationFilter.java:111)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter.doFilter(SecurityContextHolderAwareRequestFilter.java:170)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.savedrequest.RequestCacheAwareFilter.doFilter(RequestCacheAwareFilter.java:63)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.www.BasicAuthenticationFilter.doFilterInternal(BasicAuthenticationFilter.java:158)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.session.ConcurrentSessionFilter.doFilter(ConcurrentSessionFilter.java:155)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.AbstractAuthenticationProcessingFilter.doFilter(AbstractAuthenticationProcessingFilter.java:200)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.authentication.logout.LogoutFilter.doFilter(LogoutFilter.java:116)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.web.filter.CorsFilter.doFilterInternal(CorsFilter.java:97)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.header.HeaderWriterFilter.doFilterInternal(HeaderWriterFilter.java:74)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.SecurityContextPersistenceFilter.doFilter(SecurityContextPersistenceFilter.java:105)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter.doFilterInternal(WebAsyncManagerIntegrationFilter.java:56)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.springframework.security.web.FilterChainProxy$VirtualFilterChain.doFilter(FilterChainProxy.java:334)
	at org.springframework.security.web.FilterChainProxy.doFilterInternal(FilterChainProxy.java:215)
	at org.springframework.security.web.FilterChainProxy.doFilter(FilterChainProxy.java:178)
	at org.springframework.security.web.FilterChainProxy$$FastClassBySpringCGLIB$$f101c706.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:750)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.pjy.dashboard.aop.LogAspect.handleRequestRejectedException(LogAspect.java:147)
	at jdk.internal.reflect.GeneratedMethodAccessor146.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at org.springframework.security.web.FilterChainProxy$$EnhancerBySpringCGLIB$$119e1bd9.doFilter(<generated>)
	at org.springframework.web.filter.DelegatingFilterProxy.invokeDelegate(DelegatingFilterProxy.java:358)
	at org.springframework.web.filter.DelegatingFilterProxy.doFilter(DelegatingFilterProxy.java:271)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.HiddenHttpMethodFilter.doFilterInternal(HiddenHttpMethodFilter.java:94)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.filterAndRecordMetrics(WebMvcMetricsFilter.java:114)
	at org.springframework.boot.actuate.metrics.web.servlet.WebMvcMetricsFilter.doFilterInternal(WebMvcMetricsFilter.java:104)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.base/java.lang.Thread.run(Thread.java:833)
Caused by: java.lang.IllegalStateException: Expected a string but was BEGIN_OBJECT at line 1 column 139 path $.routeNm
	at com.google.gson.stream.JsonReader.nextString(JsonReader.java:826)
	at com.google.gson.internal.bind.TypeAdapters$16.read(TypeAdapters.java:402)
	at com.google.gson.internal.bind.TypeAdapters$16.read(TypeAdapters.java:390)
	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$1.read(ReflectiveTypeAdapterFactory.java:131)
	at com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$Adapter.read(ReflectiveTypeAdapterFactory.java:222)
	... 127 common frames omitted
2023-06-26 21:11:40.383 WARN  [http-nio-10010-exec-6] [o.s.w.s.m.m.a.ExceptionHandlerExceptionResolver] - Resolved [com.google.gson.JsonSyntaxException: java.lang.IllegalStateException: Expected a string but was BEGIN_OBJECT at line 1 column 139 path $.routeNm]
2023-06-26 21:41:22.692 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@132211eb
2023-06-26 21:41:22.693 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 21:41:22.694 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-회사-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-06-26' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-06-26' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 21:41:52.749 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f00dbd2
2023-06-26 21:41:52.751 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 21:41:52.753 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-회사-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 2 msec}
2023-06-26 21:41:55.500 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@bd800bb6
2023-06-26 21:41:55.502 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 21:41:55.504 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('-회사-','-회사-',a.ROUTE_NM,'-회사-')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 21:42:59.852 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f00dbd2
2023-06-26 21:42:59.853 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 21:42:59.855 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-회사-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 21:43:01.397 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@bd800bb6
2023-06-26 21:43:01.399 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 21:43:01.400 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('-회사-','-회사-',a.ROUTE_NM,'-회사-')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 21:43:20.197 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@e7c48559
2023-06-26 21:43:20.198 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 21:43:20.199 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-회사-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 21:43:21.811 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1643b53d
2023-06-26 21:43:21.812 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 21:43:21.813 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('-회사-','-회사-',a.ROUTE_NM,'-회사-')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 21:45:12.347 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@e7c48559
2023-06-26 21:45:12.349 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 21:45:12.351 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-회사-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 21:45:14.033 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1643b53d
2023-06-26 21:45:14.034 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 21:45:14.035 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('-회사-','-회사-',a.ROUTE_NM,'-회사-')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 21:49:58.111 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@e7c48559
2023-06-26 21:49:58.112 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 21:49:58.113 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-회사-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 21:49:59.784 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1643b53d
2023-06-26 21:49:59.785 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 21:49:59.785 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('-회사-','-회사-',a.ROUTE_NM,'-회사-')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 21:51:02.584 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@81319a72
2023-06-26 21:51:02.585 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 21:51:02.587 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-회사-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-04-01' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-04-01' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 2 msec}
2023-06-26 21:51:03.986 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@afb0ca56
2023-06-26 21:51:03.987 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 21:51:03.988 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-04-01' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('-회사-','-회사-',a.ROUTE_NM,'-회사-')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 21:54:32.466 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f00dbd2
2023-06-26 21:54:32.467 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 21:54:32.469 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-회사-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 21:54:34.284 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@bd800bb6
2023-06-26 21:54:34.285 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 21:54:34.286 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('-회사-','-회사-',a.ROUTE_NM,'-회사-')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 21:54:43.417 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@bd800bb6
2023-06-26 21:54:43.418 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 21:54:43.419 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('-회사-','-회사-',a.ROUTE_NM,'-회사-')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 21:54:46.559 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@bd800bb6
2023-06-26 21:54:46.560 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 21:54:46.561 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('-회사-','-회사-',a.ROUTE_NM,'-회사-')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 21:54:48.146 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@bd800bb6
2023-06-26 21:54:48.147 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 21:54:48.148 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('-회사-','-회사-',a.ROUTE_NM,'-회사-')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 21:54:50.201 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@bd800bb6
2023-06-26 21:54:50.203 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
71. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 21:54:50.205 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
71. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('-회사-','-회사-',a.ROUTE_NM,'-회사-')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 21:56:22.126 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@e7c48559
2023-06-26 21:56:22.127 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
81. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 21:56:22.129 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-회사-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 21:56:23.814 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1643b53d
2023-06-26 21:56:23.815 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
81. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 21:56:23.817 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('-회사-','-회사-',a.ROUTE_NM,'-회사-')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 22:12:28.004 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f00dbd2
2023-06-26 22:12:28.005 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
81. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 22:12:28.007 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-회사-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 22:12:29.375 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@bd800bb6
2023-06-26 22:12:29.376 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
81. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 22:12:29.377 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('-회사-','-회사-',a.ROUTE_NM,'-회사-')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 22:13:51.721 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@e7c48559
2023-06-26 22:13:51.722 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
81. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 22:13:51.725 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-회사-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 22:13:53.067 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@1643b53d
2023-06-26 22:13:53.069 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
81. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 22:13:53.070 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('-회사-','-회사-',a.ROUTE_NM,'-회사-')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 22:15:12.805 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f00dbd2
2023-06-26 22:15:12.806 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
81. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 22:15:12.807 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-회사-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 22:15:14.438 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@bd800bb6
2023-06-26 22:15:14.439 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
81. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 22:15:14.441 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
81. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('-회사-','-회사-',a.ROUTE_NM,'-회사-')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 22:16:08.693 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f00dbd2
2023-06-26 22:16:08.694 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
91. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 22:16:08.697 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-회사-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 22:16:09.925 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@bd800bb6
2023-06-26 22:16:09.926 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
91. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 22:16:09.927 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('-회사-','-회사-',a.ROUTE_NM,'-회사-')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 22:16:19.203 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@a717f504
2023-06-26 22:16:19.205 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
91. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 22:16:19.206 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 22:16:21.186 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@2a106e49
2023-06-26 22:16:21.187 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
91. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 22:16:21.188 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('21번','-회사-',a.ROUTE_NM,'21번')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 22:16:39.688 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@63366e8b
2023-06-26 22:16:39.689 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
91. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 22:16:39.690 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('5-1번','-회사-',a.ROUTE_NM,'5-1번')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 22:16:50.317 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@bd800bb6
2023-06-26 22:16:50.317 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
91. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 22:16:50.318 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('-회사-','-회사-',a.ROUTE_NM,'-회사-')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 22:17:40.921 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@a717f504
2023-06-26 22:17:40.922 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
91. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 22:17:40.923 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 22:17:43.701 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@a717f504
2023-06-26 22:17:43.703 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
91. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 22:17:43.704 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 22:17:46.365 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@bd800bb6
2023-06-26 22:17:46.366 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
91. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 22:17:46.367 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('-회사-','-회사-',a.ROUTE_NM,'-회사-')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 22:18:04.827 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@e7c48559
2023-06-26 22:18:04.828 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
91. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 22:18:04.830 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-회사-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 22:18:28.991 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
91. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 22:18:28.993 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
91. select * from MEMBER where userId = 'p00139'
 {executed in 1 msec}
2023-06-26 22:18:28.996 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.MemberServiceImpl] - ROLE_ADMIN
2023-06-26 22:18:29.089 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.MemberServiceImpl] - pass:$2a$10$MNrQAPw.4k9j2y08eTmYEeI7oKPuaWbA97HHog.8PYep5HsRwhbae,$2a$10$z2BiXm57592ExKj3YiIiqu.ywdordRfP.czPOcKXvqblHAHcm1Ami
2023-06-26 22:18:29.182 INFO  [http-nio-10010-exec-5] [c.p.d.configuration.SecurityConfig] - authentication:: p00139
2023-06-26 22:18:37.810 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f00dbd2
2023-06-26 22:18:37.811 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
91. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 22:18:37.814 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-회사-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 22:18:40.464 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@bd800bb6
2023-06-26 22:18:40.464 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
91. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 22:18:40.466 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('-회사-','-회사-',a.ROUTE_NM,'-회사-')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 22:19:24.751 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@363d324b
2023-06-26 22:19:24.752 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
91. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 22:19:24.754 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-회사-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-03' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-03' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 22:19:26.069 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@64bc622f
2023-06-26 22:19:26.070 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
91. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 22:19:26.072 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-03' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('-회사-','-회사-',a.ROUTE_NM,'-회사-')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 22:19:41.347 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f00dbd2
2023-06-26 22:19:41.348 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
91. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 22:19:41.350 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-회사-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 22:19:44.570 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@bd800bb6
2023-06-26 22:19:44.571 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
91. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 22:19:44.572 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('-회사-','-회사-',a.ROUTE_NM,'-회사-')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 22:20:06.355 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f00dbd2
2023-06-26 22:20:06.357 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
91. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 22:20:06.358 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-회사-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 22:20:07.913 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@bd800bb6
2023-06-26 22:20:07.914 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
91. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 22:20:07.915 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('-회사-','-회사-',a.ROUTE_NM,'-회사-')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 22:20:16.645 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@bd800bb6
2023-06-26 22:20:16.646 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
91. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 22:20:16.647 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('-회사-','-회사-',a.ROUTE_NM,'-회사-')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 22:20:19.541 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@a717f504
2023-06-26 22:20:19.543 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
91. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 22:20:19.544 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 22:20:26.969 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@a717f504
2023-06-26 22:20:26.970 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
91. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 22:20:26.971 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 22:20:28.705 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@a717f504
2023-06-26 22:20:28.706 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
91. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 22:20:28.707 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 22:21:25.034 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f00dbd2
2023-06-26 22:21:25.035 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
91. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 22:21:25.036 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-회사-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 22:21:28.219 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@bd800bb6
2023-06-26 22:21:28.220 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
91. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 22:21:28.221 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('-회사-','-회사-',a.ROUTE_NM,'-회사-')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 22:21:53.007 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f00dbd2
2023-06-26 22:21:53.008 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
91. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 22:21:53.008 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-회사-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 22:21:54.818 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@bd800bb6
2023-06-26 22:21:54.820 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
91. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 22:21:54.820 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('-회사-','-회사-',a.ROUTE_NM,'-회사-')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 22:22:53.543 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@e7c48559
2023-06-26 22:22:53.544 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
91. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 22:22:53.545 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-회사-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 22:23:19.365 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f00dbd2
2023-06-26 22:23:19.366 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
91. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 22:23:19.368 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-회사-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 22:23:21.488 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@bd800bb6
2023-06-26 22:23:21.489 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
91. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 22:23:21.490 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('-회사-','-회사-',a.ROUTE_NM,'-회사-')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 22:24:29.588 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f00dbd2
2023-06-26 22:24:29.589 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
91. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 22:24:29.589 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-회사-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 22:24:31.208 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@bd800bb6
2023-06-26 22:24:31.209 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
91. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 22:24:31.210 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('-회사-','-회사-',a.ROUTE_NM,'-회사-')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 22:25:08.807 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@363d324b
2023-06-26 22:25:08.808 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
91. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 22:25:08.809 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-회사-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-03' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-03' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 22:25:10.367 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@64bc622f
2023-06-26 22:25:10.369 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
91. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 22:25:10.369 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-03' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('-회사-','-회사-',a.ROUTE_NM,'-회사-')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 22:27:06.619 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f00dbd2
2023-06-26 22:27:06.621 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
91. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 22:27:06.622 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-회사-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 22:27:07.927 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@bd800bb6
2023-06-26 22:27:07.928 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
91. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 22:27:07.928 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('-회사-','-회사-',a.ROUTE_NM,'-회사-')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 22:27:55.612 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f00dbd2
2023-06-26 22:27:55.613 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
91. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 22:27:55.614 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-회사-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 22:27:56.862 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@bd800bb6
2023-06-26 22:27:56.863 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
91. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 22:27:56.864 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('-회사-','-회사-',a.ROUTE_NM,'-회사-')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 22:28:45.741 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f00dbd2
2023-06-26 22:28:45.742 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
91. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 22:28:45.743 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-회사-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 22:28:47.120 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@bd800bb6
2023-06-26 22:28:47.121 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
91. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 22:28:47.122 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('-회사-','-회사-',a.ROUTE_NM,'-회사-')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 22:28:59.532 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@363d324b
2023-06-26 22:28:59.533 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
91. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 22:28:59.534 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-회사-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-03' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-03' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 22:29:01.123 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@64bc622f
2023-06-26 22:29:01.124 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
91. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 22:29:01.125 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-03' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('-회사-','-회사-',a.ROUTE_NM,'-회사-')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 22:29:48.137 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f00dbd2
2023-06-26 22:29:48.138 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
91. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 22:29:48.140 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-회사-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 2 msec}
2023-06-26 22:29:49.832 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@bd800bb6
2023-06-26 22:29:49.833 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
91. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 22:29:49.834 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('-회사-','-회사-',a.ROUTE_NM,'-회사-')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 22:30:50.470 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f00dbd2
2023-06-26 22:30:50.471 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
91. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 22:30:50.473 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-회사-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 22:30:51.891 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@bd800bb6
2023-06-26 22:30:51.891 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
91. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 22:30:51.892 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('-회사-','-회사-',a.ROUTE_NM,'-회사-')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 22:33:33.962 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f00dbd2
2023-06-26 22:33:33.963 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
91. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 22:33:33.965 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-회사-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 22:33:35.065 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@bd800bb6
2023-06-26 22:33:35.066 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
91. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 22:33:35.067 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('-회사-','-회사-',a.ROUTE_NM,'-회사-')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 22:33:52.526 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f00dbd2
2023-06-26 22:33:52.527 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
91. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 22:33:52.529 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-회사-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 22:33:53.859 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@bd800bb6
2023-06-26 22:33:53.860 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
91. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 22:33:53.861 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('-회사-','-회사-',a.ROUTE_NM,'-회사-')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 22:34:12.883 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f00dbd2
2023-06-26 22:34:12.884 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
91. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 22:34:12.886 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-회사-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 22:34:14.267 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@bd800bb6
2023-06-26 22:34:14.268 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
91. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 22:34:14.269 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
91. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('-회사-','-회사-',a.ROUTE_NM,'-회사-')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 22:35:04.266 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f00dbd2
2023-06-26 22:35:04.267 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
92. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 22:35:04.269 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
92. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-회사-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 22:35:05.902 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@bd800bb6
2023-06-26 22:35:05.902 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
92. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 22:35:05.904 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
92. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('-회사-','-회사-',a.ROUTE_NM,'-회사-')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 22:35:40.766 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f00dbd2
2023-06-26 22:35:40.767 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
101. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 22:35:40.769 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
101. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-회사-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 22:35:42.208 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@bd800bb6
2023-06-26 22:35:42.209 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
101. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 22:35:42.210 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
101. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('-회사-','-회사-',a.ROUTE_NM,'-회사-')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 22:35:51.982 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@bd800bb6
2023-06-26 22:35:51.983 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
101. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 22:35:51.984 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
101. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('-회사-','-회사-',a.ROUTE_NM,'-회사-')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 22:35:54.935 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@a717f504
2023-06-26 22:35:54.936 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
101. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 22:35:54.937 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
101. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 22:35:56.932 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@a717f504
2023-06-26 22:35:56.933 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
101. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 22:35:56.935 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
101. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('20번','-회사-',a.ROUTE_NM,'20번')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 22:35:59.043 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@2a106e49
2023-06-26 22:35:59.044 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
101. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 22:35:59.045 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
101. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('21번','-회사-',a.ROUTE_NM,'21번')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 22:36:00.046 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@63366e8b
2023-06-26 22:36:00.047 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
101. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 22:36:00.048 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
101. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('5-1번','-회사-',a.ROUTE_NM,'5-1번')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 22:36:03.567 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@bd800bb6
2023-06-26 22:36:03.568 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
101. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 22:36:03.568 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
101. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('-회사-','-회사-',a.ROUTE_NM,'-회사-')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 22:38:16.940 INFO  [RMI TCP Connection(208)-127.0.0.1] [o.s.b.a.SpringApplicationAdminMXBeanRegistrar$SpringApplicationAdmin] - Application shutdown requested.
2023-06-26 22:38:16.976 INFO  [RMI TCP Connection(208)-127.0.0.1] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Shutting down ExecutorService 'asyncThreadPool'
2023-06-26 22:38:16.979 INFO  [RMI TCP Connection(208)-127.0.0.1] [com.zaxxer.hikari.HikariDataSource] - H2 - Shutdown initiated...
2023-06-26 22:38:16.985 INFO  [RMI TCP Connection(208)-127.0.0.1] [com.zaxxer.hikari.HikariDataSource] - H2 - Shutdown completed.
2023-06-26 22:38:17.017 INFO  [RMI TCP Connection(208)-127.0.0.1] [com.pjy.dashboard.filter.TestFilter] - destroy Pjy Filter
2023-06-26 22:38:21.702 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Starting PjyApplication on DESKTOP-QJPD93S with PID 1644 (D:\BUS\dashboard\dashboard\target\classes started by admin in D:\BUS\dashboard\dashboard)
2023-06-26 22:38:21.707 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - The following profiles are active: oauth
2023-06-26 22:38:21.763 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - Devtools property defaults active! Set 'spring.devtools.add-properties' to 'false' to disable
2023-06-26 22:38:21.763 INFO  [restartedMain] [o.s.b.d.e.DevToolsPropertyDefaultsPostProcessor] - For additional web related logging consider setting the 'logging.level.web' property to 'DEBUG'
2023-06-26 22:38:23.127 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-26 22:38:23.127 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-06-26 22:38:23.280 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 143ms. Found 3 JPA repository interfaces.
2023-06-26 22:38:23.622 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Multiple Spring Data modules found, entering strict repository configuration mode!
2023-06-26 22:38:23.623 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Bootstrapping Spring Data JDBC repositories in DEFAULT mode.
2023-06-26 22:38:23.668 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.FileRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-06-26 22:38:23.669 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.MemberRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-06-26 22:38:23.670 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationExtensionSupport] - Spring Data JDBC - Could not safely identify store assignment for repository candidate interface com.pjy.dashboard.core.dao.jpa.h2.RememberMeRepository. If you want this repository to be a JDBC repository, consider annotating your entities with one of these annotations: org.springframework.data.relational.core.mapping.Table.
2023-06-26 22:38:23.671 INFO  [restartedMain] [o.s.d.r.c.RepositoryConfigurationDelegate] - Finished Spring Data repository scanning in 48ms. Found 0 JDBC repository interfaces.
2023-06-26 22:38:24.108 INFO  [restartedMain] [c.u.j.c.EnableEncryptablePropertiesBeanFactoryPostProcessor] - Post-processing PropertySource instances
2023-06-26 22:38:24.178 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource configurationProperties [org.springframework.boot.context.properties.source.ConfigurationPropertySourcesPropertySource] to AOP Proxy
2023-06-26 22:38:24.179 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource commandLineArgs [org.springframework.core.env.SimpleCommandLinePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-06-26 22:38:24.179 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletConfigInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-06-26 22:38:24.179 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource servletContextInitParams [org.springframework.core.env.PropertySource$StubPropertySource] to EncryptablePropertySourceWrapper
2023-06-26 22:38:24.179 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemProperties [org.springframework.core.env.PropertiesPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-26 22:38:24.179 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource systemEnvironment [org.springframework.boot.env.SystemEnvironmentPropertySourceEnvironmentPostProcessor$OriginAwareSystemEnvironmentPropertySource] to EncryptableSystemEnvironmentPropertySourceWrapper
2023-06-26 22:38:24.179 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource random [org.springframework.boot.env.RandomValuePropertySource] to EncryptablePropertySourceWrapper
2023-06-26 22:38:24.180 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application-oauth.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-26 22:38:24.180 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource applicationConfig: [classpath:/application.properties] [org.springframework.boot.env.OriginTrackedMapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-26 22:38:24.180 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource devtools [org.springframework.core.env.MapPropertySource] to EncryptableMapPropertySourceWrapper
2023-06-26 22:38:24.180 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [pjy.properties] [org.springframework.core.env.CompositePropertySource] to EncryptableEnumerablePropertySourceWrapper
2023-06-26 22:38:24.180 INFO  [restartedMain] [c.u.j.EncryptablePropertySourceConverter] - Converting PropertySource class path resource [common.properties] [org.springframework.core.io.support.ResourcePropertySource] to EncryptableMapPropertySourceWrapper
2023-06-26 22:38:24.241 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'asyncConfiguration' of type [com.pjy.dashboard.configuration.AsyncConfiguration$$EnhancerBySpringCGLIB$$abad8ca7] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 22:38:24.298 INFO  [restartedMain] [c.u.j.filter.DefaultLazyPropertyFilter] - Property Filter custom Bean not found with name 'encryptablePropertyFilter'. Initializing Default Property Filter
2023-06-26 22:38:24.387 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration' of type [org.springframework.security.config.annotation.configuration.ObjectPostProcessorConfiguration$$EnhancerBySpringCGLIB$$95a3f0d4] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 22:38:24.473 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'objectPostProcessor' of type [org.springframework.security.config.annotation.configuration.AutowireBeanFactoryObjectPostProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 22:38:24.476 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@7045b309' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 22:38:24.481 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration' of type [org.springframework.security.config.annotation.method.configuration.GlobalMethodSecurityConfiguration$$EnhancerBySpringCGLIB$$ba789386] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 22:38:24.492 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration' of type [org.springframework.security.config.annotation.method.configuration.Jsr250MetadataSourceConfiguration$$EnhancerBySpringCGLIB$$dfcdab9c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 22:38:24.496 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'jsr250MethodSecurityMetadataSource' of type [org.springframework.security.access.annotation.Jsr250MethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 22:38:24.498 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 22:38:24.519 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$fcf6289a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 22:38:24.549 INFO  [restartedMain] [o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker] - Bean 'org.springframework.hateoas.config.HateoasConfiguration' of type [org.springframework.hateoas.config.HateoasConfiguration$$EnhancerBySpringCGLIB$$7c7675cc] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2023-06-26 22:38:24.684 INFO  [restartedMain] [c.u.j.r.DefaultLazyPropertyResolver] - Property Resolver custom Bean not found with name 'encryptablePropertyResolver'. Initializing Default Property Resolver
2023-06-26 22:38:24.689 INFO  [restartedMain] [c.u.j.d.DefaultLazyPropertyDetector] - Property Detector custom Bean not found with name 'encryptablePropertyDetector'. Initializing Default Property Detector
2023-06-26 22:38:25.154 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat initialized with port(s): 10010 (http)
2023-06-26 22:38:25.173 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Initializing ProtocolHandler ["http-nio-10010"]
2023-06-26 22:38:25.184 INFO  [restartedMain] [org.apache.catalina.core.StandardService] - Starting service [Tomcat]
2023-06-26 22:38:25.184 INFO  [restartedMain] [org.apache.catalina.core.StandardEngine] - Starting Servlet engine: [Apache Tomcat/9.0.29]
2023-06-26 22:38:25.565 INFO  [restartedMain] [org.apache.jasper.servlet.TldScanner] - At least one JAR was scanned for TLDs yet contained no TLDs. Enable debug logging for this logger for a complete list of JARs that were scanned but no TLDs were found in them. Skipping unneeded JARs during scanning can improve startup time and JSP compilation time.
2023-06-26 22:38:25.577 INFO  [restartedMain] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring embedded WebApplicationContext
2023-06-26 22:38:25.577 INFO  [restartedMain] [o.s.web.context.ContextLoader] - Root WebApplicationContext: initialization completed in 3813 ms
2023-06-26 22:38:26.404 INFO  [restartedMain] [c.u.j.encryptor.DefaultLazyEncryptor] - Found Custom Encryptor Bean org.jasypt.encryption.pbe.PooledPBEStringEncryptor@56c36a8a with name: jasyptStringEncryptor
2023-06-26 22:38:26.452 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Starting...
2023-06-26 22:38:26.540 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.executeSql(PoolBase.java:567)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 7 msec}
2023-06-26 22:38:26.545 INFO  [restartedMain] [com.zaxxer.hikari.HikariDataSource] - H2 - Start completed.
2023-06-26 22:38:27.332 INFO  [restartedMain] [com.pjy.dashboard.filter.TestFilter] - init Pjy Filter
2023-06-26 22:38:27.673 INFO  [restartedMain] [o.hibernate.jpa.internal.util.LogHelper] - HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2023-06-26 22:38:27.761 INFO  [restartedMain] [org.hibernate.Version] - HHH000412: Hibernate Core {5.3.14.Final}
2023-06-26 22:38:27.764 INFO  [restartedMain] [org.hibernate.cfg.Environment] - HHH000206: hibernate.properties not found
2023-06-26 22:38:27.937 INFO  [restartedMain] [org.hibernate.annotations.common.Version] - HCANN000001: Hibernate Commons Annotations {5.0.4.Final}
2023-06-26 22:38:28.169 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 22:38:28.186 INFO  [restartedMain] [org.hibernate.dialect.Dialect] - HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
2023-06-26 22:38:28.945 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 22:38:28.947 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. select SEQUENCE_CATALOG, SEQUENCE_SCHEMA, SEQUENCE_NAME, INCREMENT from information_schema.sequences
 {executed in 1 msec}
2023-06-26 22:38:29.008 INFO  [restartedMain] [o.s.o.j.LocalContainerEntityManagerFactoryBean] - Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-06-26 22:38:29.271 INFO  [restartedMain] [o.h.h.i.QueryTranslatorFactoryInitiator] - HHH000397: Using ASTQueryTranslatorFactory
2023-06-26 22:38:30.337 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService
2023-06-26 22:38:30.348 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskExecutor] - Initializing ExecutorService 'asyncThreadPool'
2023-06-26 22:38:30.530 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/h2-console/**'], []
2023-06-26 22:38:30.530 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/css/**'], []
2023-06-26 22:38:30.531 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/js/**'], []
2023-06-26 22:38:30.531 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/monitor/**'], []
2023-06-26 22:38:30.531 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/img/**'], []
2023-06-26 22:38:30.531 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/lib/**'], []
2023-06-26 22:38:30.531 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/main.css'], []
2023-06-26 22:38:30.531 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/common.js'], []
2023-06-26 22:38:30.531 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: Ant [pattern='/resources/**'], []
2023-06-26 22:38:30.692 INFO  [restartedMain] [o.s.s.web.DefaultSecurityFilterChain] - Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@13a73e5b, org.springframework.security.web.context.SecurityContextPersistenceFilter@5e59c224, org.springframework.security.web.header.HeaderWriterFilter@16595621, org.springframework.web.filter.CorsFilter@2cde87f3, org.springframework.security.web.authentication.logout.LogoutFilter@1b936921, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@d2b625f, org.springframework.security.web.session.ConcurrentSessionFilter@62b5fc95, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@479be1a3, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2cb90da6, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@f027fed, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@315f75, org.springframework.security.web.session.SessionManagementFilter@7b6af610, org.springframework.security.web.access.ExceptionTranslationFilter@3e974bd6, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@23afd7c4]
2023-06-26 22:38:30.714 INFO  [restartedMain] [o.s.aop.framework.CglibAopProxy] - Unable to proxy interface-implementing method [public final void org.springframework.web.filter.GenericFilterBean.init(javax.servlet.FilterConfig) throws javax.servlet.ServletException] because it is marked as final: Consider using interface-based JDK proxies instead!
2023-06-26 22:38:31.074 WARN  [restartedMain] [o.s.b.a.o.j.JpaBaseConfiguration$JpaWebConfiguration$JpaWebMvcConfiguration] - spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-06-26 22:38:31.147 INFO  [restartedMain] [o.s.b.a.w.s.WelcomePageHandlerMapping] - Adding welcome page: ServletContext resource [/index.html]
2023-06-26 22:38:31.618 DEBUG [restartedMain] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 22:38:32.433 INFO  [restartedMain] [o.s.b.d.a.OptionalLiveReloadServer] - LiveReload server is running on port 35729
2023-06-26 22:38:32.461 INFO  [restartedMain] [o.s.b.a.e.web.EndpointLinksResolver] - Exposing 16 endpoint(s) beneath base path '/actuator'
2023-06-26 22:38:32.610 INFO  [restartedMain] [o.s.s.concurrent.ThreadPoolTaskScheduler] - Initializing ExecutorService
2023-06-26 22:38:32.614 INFO  [restartedMain] [o.apache.coyote.http11.Http11NioProtocol] - Starting ProtocolHandler ["http-nio-10010"]
2023-06-26 22:38:32.673 INFO  [restartedMain] [o.s.b.w.embedded.tomcat.TomcatWebServer] - Tomcat started on port(s): 10010 (http) with context path ''
2023-06-26 22:38:32.678 INFO  [restartedMain] [com.pjy.dashboard.PjyApplication] - Started PjyApplication in 11.457 seconds (JVM running for 13.845)
2023-06-26 22:38:32.679 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-06-26 22:38:32.679 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - Application started
2023-06-26 22:38:32.679 INFO  [restartedMain] [com.pjy.dashboard.AppStartedListener] - =====================
2023-06-26 22:38:32.726 INFO  [http-nio-10010-exec-1] [o.a.c.c.C.[Tomcat].[localhost].[/]] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2023-06-26 22:38:32.726 INFO  [http-nio-10010-exec-1] [o.s.web.servlet.DispatcherServlet] - Initializing Servlet 'dispatcherServlet'
2023-06-26 22:38:32.765 INFO  [http-nio-10010-exec-1] [o.s.web.servlet.DispatcherServlet] - Completed initialization in 39 ms
2023-06-26 22:38:32.832 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@bd800bb6
2023-06-26 22:38:32.904 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 22:38:32.911 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('-회사-','-전체-',a.ROUTE_NM,'-회사-')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 22:38:38.230 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@cdc32f09
2023-06-26 22:38:38.232 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 22:38:38.235 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-전체-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 22:38:39.757 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@514eef86
2023-06-26 22:38:39.758 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 22:38:39.760 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('-전체-','-전체-',a.ROUTE_NM,'-전체-')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 22:39:00.324 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 22:39:00.328 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.executeQuery(ProxyPreparedStatement.java:52)
1. select * from MEMBER where userId = 'p00139'
 {executed in 1 msec}
2023-06-26 22:39:00.351 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.MemberServiceImpl] - ROLE_ADMIN
2023-06-26 22:39:00.447 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.MemberServiceImpl] - pass:$2a$10$MNrQAPw.4k9j2y08eTmYEeI7oKPuaWbA97HHog.8PYep5HsRwhbae,$2a$10$YfJv3iXB873q.jjRzbBpjOtMLUCv4JMhTmJSZqSK5UTkYq0ToXZNu
2023-06-26 22:39:00.613 INFO  [http-nio-10010-exec-3] [c.p.d.configuration.SecurityConfig] - authentication:: p00139
2023-06-26 22:39:02.854 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 22:39:02.855 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. SELECT ROUTE_NM  FROM TBL_ROUTEINFO ORDER BY 1
 {executed in 1 msec}
2023-06-26 22:39:05.305 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@25ff3d5c
2023-06-26 22:39:05.306 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - filterType={danagerAnal_Step} 
2023-06-26 22:39:05.306 INFO  [http-nio-10010-exec-7] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT a.danger_level ,	decode(a.danger_level,'매우위험',5,'위험',4,'주의',3,'보통',2,'양호',1,0)  AS danger_level_no ,	listagg(a.base_ym,',') WITHIN group(ORDER BY base_ym) AS base_ym ,	listagg(a.danger_cnt||'(' || a.rate || '%)',',') WITHIN group(ORDER BY base_ym) AS rate ,	sum(danger_cnt)  AS total FROM ( SELECT a.* ,	ROUND( (danger_cnt / SUM(danger_cnt) OVER (PARTITION BY base_ym)),2) RATe FROM (	SELECT 	b.base_ym ,	b.danger_level ,	count(b.danger_level) AS danger_cnt FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym between '2023-06' and '2023-06' GROUP BY b.base_ym,b.danger_level ) a union	 SELECT 	b.base_ym ,	'합계' ,	count(b.danger_level) AS danger_cnt ,	0 FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym between '2023-06' and '2023-06' GROUP BY b.base_ym ) a GROUP BY a.danger_level ORDER BY 2 desc
2023-06-26 22:39:05.308 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 22:39:05.310 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. SELECT a.danger_level ,	decode(a.danger_level,'매우위험',5,'위험',4,'주의',3,'보통',2,'양호',1,0)  AS danger_level_no ,	listagg(a.base_ym,',') WITHIN group(ORDER BY base_ym) AS base_ym ,	listagg(a.danger_cnt||'(' || a.rate || '%)',',') WITHIN group(ORDER BY base_ym) AS rate ,	sum(danger_cnt)  AS total FROM ( SELECT a.* ,	ROUND( (danger_cnt / SUM(danger_cnt) OVER (PARTITION BY base_ym)),2) RATe FROM (	SELECT 	b.base_ym ,	b.danger_level ,	count(b.danger_level) AS danger_cnt FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym between '2023-06' and '2023-06' GROUP BY b.base_ym,b.danger_level ) a union	 SELECT 	b.base_ym ,	'합계' ,	count(b.danger_level) AS danger_cnt ,	0 FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym between '2023-06' and '2023-06' GROUP BY b.base_ym ) a GROUP BY a.danger_level ORDER BY 2 desc
 {executed in 2 msec}
2023-06-26 22:39:05.312 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. SELECT a.danger_level ,	decode(a.danger_level,'매우위험',5,'위험',4,'주의',3,'보통',2,'양호',1,0)  AS danger_level_no ,	listagg(a.base_ym,',') WITHIN group(ORDER BY base_ym) AS base_ym ,	listagg(a.danger_cnt||'(' || a.rate || '%)',',') WITHIN group(ORDER BY base_ym) AS rate ,	sum(danger_cnt)  AS total FROM ( SELECT a.* ,	ROUND( (danger_cnt / SUM(danger_cnt) OVER (PARTITION BY base_ym)),2) RATe FROM (	SELECT 	b.base_ym ,	b.danger_level ,	count(b.danger_level) AS danger_cnt FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym between '2023-06' and '2023-06' GROUP BY b.base_ym,b.danger_level ) a union	 SELECT 	b.base_ym ,	'합계' ,	count(b.danger_level) AS danger_cnt ,	0 FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym between '2023-06' and '2023-06' GROUP BY b.base_ym ) a GROUP BY a.danger_level ORDER BY 2 desc
 {executed in 1 msec}
2023-06-26 22:39:05.334 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@c792ed50
2023-06-26 22:39:05.334 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - filterType={danagerAnal_Driver} 
2023-06-26 22:39:05.334 INFO  [http-nio-10010-exec-5] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : WITH ymInfo AS ( SELECT DISTINCT base_ym FROM TBL_DANGER_DRIVING_INFO a WHERE a.company_no = '100' AND   a.base_ym between '2023-06' and '2023-06' ),empinfo AS ( SELECT  DISTINCT emp_nm FROM TBL_DANGER_DRIVING_INFO a WHERE a.company_no = '100' AND   a.base_ym between '2023-06' and '2023-06' ),targetInfo AS ( SELECT a.*,b.* FROM ymInfo a JOIN empinfo b )	 SELECT a.emp_nm, b.sp_gb ,	listagg(a.base_ym,',') WITHIN group(ORDER BY base_ym) AS base_ym ,	listagg(a.danger_level,',') WITHIN group(ORDER BY base_ym) AS rate ,	listagg(a.danger_level_no,',') WITHIN group(ORDER BY base_ym) AS danger_level_no ,	sum(danger_level_no)  AS total FROM (	SELECT 	x.base_ym ,	x.emp_nm ,	nvl(b.danger_level,'-')  AS danger_level ,	decode(b.danger_level,'매우위험',5,'위험',4,'주의',3,'보통',2,'양호',1,0)  AS danger_level_no FROM targetInfo x  LEFT OUTER join TBL_DANGER_DRIVING_INFO b on x.emp_nm = b.emp_nm AND x.base_ym = b.base_ym and b.company_no = '100' ) a,TBL_DRIVERINFO b where a.emp_nm = b.emp_nm and   b.company_no = '100' and	  b.route_nm like  '' || '%' GROUP BY a.emp_nm ORDER BY 1
2023-06-26 22:39:05.348 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. WITH ymInfo AS ( SELECT DISTINCT base_ym FROM TBL_DANGER_DRIVING_INFO a WHERE a.company_no = '100' AND   a.base_ym between '2023-06' and '2023-06' ),empinfo AS ( SELECT  DISTINCT emp_nm FROM TBL_DANGER_DRIVING_INFO a WHERE a.company_no = '100' AND   a.base_ym between '2023-06' and '2023-06' ),targetInfo AS ( SELECT a.*,b.* FROM ymInfo a JOIN empinfo b )	 SELECT a.emp_nm, b.sp_gb ,	listagg(a.base_ym,',') WITHIN group(ORDER BY base_ym) AS base_ym ,	listagg(a.danger_level,',') WITHIN group(ORDER BY base_ym) AS rate ,	listagg(a.danger_level_no,',') WITHIN group(ORDER BY base_ym) AS danger_level_no ,	sum(danger_level_no)  AS total FROM (	SELECT 	x.base_ym ,	x.emp_nm ,	nvl(b.danger_level,'-')  AS danger_level ,	decode(b.danger_level,'매우위험',5,'위험',4,'주의',3,'보통',2,'양호',1,0)  AS danger_level_no FROM targetInfo x  LEFT OUTER join TBL_DANGER_DRIVING_INFO b on x.emp_nm = b.emp_nm AND x.base_ym = b.base_ym and b.company_no = '100' ) a,TBL_DRIVERINFO b where a.emp_nm = b.emp_nm and   b.company_no = '100' and	  b.route_nm like  '' || '%' GROUP BY a.emp_nm ORDER BY 1
 {executed in 12 msec}
2023-06-26 22:39:05.359 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. WITH ymInfo AS ( SELECT DISTINCT base_ym FROM TBL_DANGER_DRIVING_INFO a WHERE a.company_no = '100' AND   a.base_ym between '2023-06' and '2023-06' ),empinfo AS ( SELECT  DISTINCT emp_nm FROM TBL_DANGER_DRIVING_INFO a WHERE a.company_no = '100' AND   a.base_ym between '2023-06' and '2023-06' ),targetInfo AS ( SELECT a.*,b.* FROM ymInfo a JOIN empinfo b )	 SELECT a.emp_nm, b.sp_gb ,	listagg(a.base_ym,',') WITHIN group(ORDER BY base_ym) AS base_ym ,	listagg(a.danger_level,',') WITHIN group(ORDER BY base_ym) AS rate ,	listagg(a.danger_level_no,',') WITHIN group(ORDER BY base_ym) AS danger_level_no ,	sum(danger_level_no)  AS total FROM (	SELECT 	x.base_ym ,	x.emp_nm ,	nvl(b.danger_level,'-')  AS danger_level ,	decode(b.danger_level,'매우위험',5,'위험',4,'주의',3,'보통',2,'양호',1,0)  AS danger_level_no FROM targetInfo x  LEFT OUTER join TBL_DANGER_DRIVING_INFO b on x.emp_nm = b.emp_nm AND x.base_ym = b.base_ym and b.company_no = '100' ) a,TBL_DRIVERINFO b where a.emp_nm = b.emp_nm and   b.company_no = '100' and	  b.route_nm like  '' || '%' GROUP BY a.emp_nm ORDER BY 1
 {executed in 10 msec}
2023-06-26 22:39:08.769 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@e1d18cff
2023-06-26 22:39:08.769 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - filterType={danagerAnal_Step} 
2023-06-26 22:39:08.769 INFO  [http-nio-10010-exec-1] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT a.danger_level ,	decode(a.danger_level,'매우위험',5,'위험',4,'주의',3,'보통',2,'양호',1,0)  AS danger_level_no ,	listagg(a.base_ym,',') WITHIN group(ORDER BY base_ym) AS base_ym ,	listagg(a.danger_cnt||'(' || a.rate || '%)',',') WITHIN group(ORDER BY base_ym) AS rate ,	sum(danger_cnt)  AS total FROM ( SELECT a.* ,	ROUND( (danger_cnt / SUM(danger_cnt) OVER (PARTITION BY base_ym)),2) RATe FROM (	SELECT 	b.base_ym ,	b.danger_level ,	count(b.danger_level) AS danger_cnt FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym between '2023-01' and '2023-06' GROUP BY b.base_ym,b.danger_level ) a union	 SELECT 	b.base_ym ,	'합계' ,	count(b.danger_level) AS danger_cnt ,	0 FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym between '2023-01' and '2023-06' GROUP BY b.base_ym ) a GROUP BY a.danger_level ORDER BY 2 desc
2023-06-26 22:39:08.770 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 22:39:08.775 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. SELECT a.danger_level ,	decode(a.danger_level,'매우위험',5,'위험',4,'주의',3,'보통',2,'양호',1,0)  AS danger_level_no ,	listagg(a.base_ym,',') WITHIN group(ORDER BY base_ym) AS base_ym ,	listagg(a.danger_cnt||'(' || a.rate || '%)',',') WITHIN group(ORDER BY base_ym) AS rate ,	sum(danger_cnt)  AS total FROM ( SELECT a.* ,	ROUND( (danger_cnt / SUM(danger_cnt) OVER (PARTITION BY base_ym)),2) RATe FROM (	SELECT 	b.base_ym ,	b.danger_level ,	count(b.danger_level) AS danger_cnt FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym between '2023-01' and '2023-06' GROUP BY b.base_ym,b.danger_level ) a union	 SELECT 	b.base_ym ,	'합계' ,	count(b.danger_level) AS danger_cnt ,	0 FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym between '2023-01' and '2023-06' GROUP BY b.base_ym ) a GROUP BY a.danger_level ORDER BY 2 desc
 {executed in 4 msec}
2023-06-26 22:39:08.777 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. SELECT a.danger_level ,	decode(a.danger_level,'매우위험',5,'위험',4,'주의',3,'보통',2,'양호',1,0)  AS danger_level_no ,	listagg(a.base_ym,',') WITHIN group(ORDER BY base_ym) AS base_ym ,	listagg(a.danger_cnt||'(' || a.rate || '%)',',') WITHIN group(ORDER BY base_ym) AS rate ,	sum(danger_cnt)  AS total FROM ( SELECT a.* ,	ROUND( (danger_cnt / SUM(danger_cnt) OVER (PARTITION BY base_ym)),2) RATe FROM (	SELECT 	b.base_ym ,	b.danger_level ,	count(b.danger_level) AS danger_cnt FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym between '2023-01' and '2023-06' GROUP BY b.base_ym,b.danger_level ) a union	 SELECT 	b.base_ym ,	'합계' ,	count(b.danger_level) AS danger_cnt ,	0 FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym between '2023-01' and '2023-06' GROUP BY b.base_ym ) a GROUP BY a.danger_level ORDER BY 2 desc
 {executed in 1 msec}
2023-06-26 22:39:08.819 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@83653cf3
2023-06-26 22:39:08.819 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - filterType={danagerAnal_Driver} 
2023-06-26 22:39:08.820 INFO  [http-nio-10010-exec-4] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : WITH ymInfo AS ( SELECT DISTINCT base_ym FROM TBL_DANGER_DRIVING_INFO a WHERE a.company_no = '100' AND   a.base_ym between '2023-01' and '2023-06' ),empinfo AS ( SELECT  DISTINCT emp_nm FROM TBL_DANGER_DRIVING_INFO a WHERE a.company_no = '100' AND   a.base_ym between '2023-01' and '2023-06' ),targetInfo AS ( SELECT a.*,b.* FROM ymInfo a JOIN empinfo b )	 SELECT a.emp_nm, b.sp_gb ,	listagg(a.base_ym,',') WITHIN group(ORDER BY base_ym) AS base_ym ,	listagg(a.danger_level,',') WITHIN group(ORDER BY base_ym) AS rate ,	listagg(a.danger_level_no,',') WITHIN group(ORDER BY base_ym) AS danger_level_no ,	sum(danger_level_no)  AS total FROM (	SELECT 	x.base_ym ,	x.emp_nm ,	nvl(b.danger_level,'-')  AS danger_level ,	decode(b.danger_level,'매우위험',5,'위험',4,'주의',3,'보통',2,'양호',1,0)  AS danger_level_no FROM targetInfo x  LEFT OUTER join TBL_DANGER_DRIVING_INFO b on x.emp_nm = b.emp_nm AND x.base_ym = b.base_ym and b.company_no = '100' ) a,TBL_DRIVERINFO b where a.emp_nm = b.emp_nm and   b.company_no = '100' and	  b.route_nm like  '' || '%' GROUP BY a.emp_nm ORDER BY 1
2023-06-26 22:39:08.860 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. WITH ymInfo AS ( SELECT DISTINCT base_ym FROM TBL_DANGER_DRIVING_INFO a WHERE a.company_no = '100' AND   a.base_ym between '2023-01' and '2023-06' ),empinfo AS ( SELECT  DISTINCT emp_nm FROM TBL_DANGER_DRIVING_INFO a WHERE a.company_no = '100' AND   a.base_ym between '2023-01' and '2023-06' ),targetInfo AS ( SELECT a.*,b.* FROM ymInfo a JOIN empinfo b )	 SELECT a.emp_nm, b.sp_gb ,	listagg(a.base_ym,',') WITHIN group(ORDER BY base_ym) AS base_ym ,	listagg(a.danger_level,',') WITHIN group(ORDER BY base_ym) AS rate ,	listagg(a.danger_level_no,',') WITHIN group(ORDER BY base_ym) AS danger_level_no ,	sum(danger_level_no)  AS total FROM (	SELECT 	x.base_ym ,	x.emp_nm ,	nvl(b.danger_level,'-')  AS danger_level ,	decode(b.danger_level,'매우위험',5,'위험',4,'주의',3,'보통',2,'양호',1,0)  AS danger_level_no FROM targetInfo x  LEFT OUTER join TBL_DANGER_DRIVING_INFO b on x.emp_nm = b.emp_nm AND x.base_ym = b.base_ym and b.company_no = '100' ) a,TBL_DRIVERINFO b where a.emp_nm = b.emp_nm and   b.company_no = '100' and	  b.route_nm like  '' || '%' GROUP BY a.emp_nm ORDER BY 1
 {executed in 40 msec}
2023-06-26 22:39:08.895 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. WITH ymInfo AS ( SELECT DISTINCT base_ym FROM TBL_DANGER_DRIVING_INFO a WHERE a.company_no = '100' AND   a.base_ym between '2023-01' and '2023-06' ),empinfo AS ( SELECT  DISTINCT emp_nm FROM TBL_DANGER_DRIVING_INFO a WHERE a.company_no = '100' AND   a.base_ym between '2023-01' and '2023-06' ),targetInfo AS ( SELECT a.*,b.* FROM ymInfo a JOIN empinfo b )	 SELECT a.emp_nm, b.sp_gb ,	listagg(a.base_ym,',') WITHIN group(ORDER BY base_ym) AS base_ym ,	listagg(a.danger_level,',') WITHIN group(ORDER BY base_ym) AS rate ,	listagg(a.danger_level_no,',') WITHIN group(ORDER BY base_ym) AS danger_level_no ,	sum(danger_level_no)  AS total FROM (	SELECT 	x.base_ym ,	x.emp_nm ,	nvl(b.danger_level,'-')  AS danger_level ,	decode(b.danger_level,'매우위험',5,'위험',4,'주의',3,'보통',2,'양호',1,0)  AS danger_level_no FROM targetInfo x  LEFT OUTER join TBL_DANGER_DRIVING_INFO b on x.emp_nm = b.emp_nm AND x.base_ym = b.base_ym and b.company_no = '100' ) a,TBL_DRIVERINFO b where a.emp_nm = b.emp_nm and   b.company_no = '100' and	  b.route_nm like  '' || '%' GROUP BY a.emp_nm ORDER BY 1
 {executed in 34 msec}
2023-06-26 22:39:09.103 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@7897038f
2023-06-26 22:39:09.103 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - filterType={danagerAnal_Employee} 
2023-06-26 22:39:09.103 INFO  [http-nio-10010-exec-8] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT 	b.base_ym, b.emp_nm,b.danger_km100,b.DANGER_ACT_CNT, b.DANGER_ACT,b.DANGER_LEVEL,b.DRIVING_CNT,b.DRIVING_DISTANCE,b.DRIVING_TIME FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym between '2023-01' and '2023-06' AND   b.emp_nm = '강근원' ORDER BY b.base_ym desc
2023-06-26 22:39:09.105 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. SELECT 	b.base_ym, b.emp_nm,b.danger_km100,b.DANGER_ACT_CNT, b.DANGER_ACT,b.DANGER_LEVEL,b.DRIVING_CNT,b.DRIVING_DISTANCE,b.DRIVING_TIME FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym between '2023-01' and '2023-06' AND   b.emp_nm = '강근원' ORDER BY b.base_ym desc
 {executed in 1 msec}
2023-06-26 22:39:09.106 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. SELECT 	b.base_ym, b.emp_nm,b.danger_km100,b.DANGER_ACT_CNT, b.DANGER_ACT,b.DANGER_LEVEL,b.DRIVING_CNT,b.DRIVING_DISTANCE,b.DRIVING_TIME FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym between '2023-01' and '2023-06' AND   b.emp_nm = '강근원' ORDER BY b.base_ym desc
 {executed in 1 msec}
2023-06-26 22:39:16.299 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@d598495f
2023-06-26 22:39:16.299 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - filterType={danagerAnal_Employee} 
2023-06-26 22:39:16.299 INFO  [http-nio-10010-exec-3] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT 	b.base_ym, b.emp_nm,b.danger_km100,b.DANGER_ACT_CNT, b.DANGER_ACT,b.DANGER_LEVEL,b.DRIVING_CNT,b.DRIVING_DISTANCE,b.DRIVING_TIME FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym between '2023-01' and '2023-06' AND   b.emp_nm = '국수현' ORDER BY b.base_ym desc
2023-06-26 22:39:16.300 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 22:39:16.302 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. SELECT 	b.base_ym, b.emp_nm,b.danger_km100,b.DANGER_ACT_CNT, b.DANGER_ACT,b.DANGER_LEVEL,b.DRIVING_CNT,b.DRIVING_DISTANCE,b.DRIVING_TIME FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym between '2023-01' and '2023-06' AND   b.emp_nm = '국수현' ORDER BY b.base_ym desc
 {executed in 1 msec}
2023-06-26 22:39:16.303 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. SELECT 	b.base_ym, b.emp_nm,b.danger_km100,b.DANGER_ACT_CNT, b.DANGER_ACT,b.DANGER_LEVEL,b.DRIVING_CNT,b.DRIVING_DISTANCE,b.DRIVING_TIME FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym between '2023-01' and '2023-06' AND   b.emp_nm = '국수현' ORDER BY b.base_ym desc
 {executed in 1 msec}
2023-06-26 22:39:16.981 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@2bb99e65
2023-06-26 22:39:16.981 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - filterType={danagerAnal_Employee} 
2023-06-26 22:39:16.981 INFO  [http-nio-10010-exec-6] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT 	b.base_ym, b.emp_nm,b.danger_km100,b.DANGER_ACT_CNT, b.DANGER_ACT,b.DANGER_LEVEL,b.DRIVING_CNT,b.DRIVING_DISTANCE,b.DRIVING_TIME FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym between '2023-01' and '2023-06' AND   b.emp_nm = '권용수' ORDER BY b.base_ym desc
2023-06-26 22:39:16.982 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 22:39:16.984 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. SELECT 	b.base_ym, b.emp_nm,b.danger_km100,b.DANGER_ACT_CNT, b.DANGER_ACT,b.DANGER_LEVEL,b.DRIVING_CNT,b.DRIVING_DISTANCE,b.DRIVING_TIME FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym between '2023-01' and '2023-06' AND   b.emp_nm = '권용수' ORDER BY b.base_ym desc
 {executed in 0 msec}
2023-06-26 22:39:16.986 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. SELECT 	b.base_ym, b.emp_nm,b.danger_km100,b.DANGER_ACT_CNT, b.DANGER_ACT,b.DANGER_LEVEL,b.DRIVING_CNT,b.DRIVING_DISTANCE,b.DRIVING_TIME FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym between '2023-01' and '2023-06' AND   b.emp_nm = '권용수' ORDER BY b.base_ym desc
 {executed in 1 msec}
2023-06-26 22:39:17.598 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@d11f3533
2023-06-26 22:39:17.598 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - filterType={danagerAnal_Employee} 
2023-06-26 22:39:17.598 INFO  [http-nio-10010-exec-9] [c.p.dashboard.service.DynamicSqlService] - properties mtr.query.sql : SELECT 	b.base_ym, b.emp_nm,b.danger_km100,b.DANGER_ACT_CNT, b.DANGER_ACT,b.DANGER_LEVEL,b.DRIVING_CNT,b.DRIVING_DISTANCE,b.DRIVING_TIME FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym between '2023-01' and '2023-06' AND   b.emp_nm = '권태종' ORDER BY b.base_ym desc
2023-06-26 22:39:17.599 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 22:39:17.601 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. SELECT 	b.base_ym, b.emp_nm,b.danger_km100,b.DANGER_ACT_CNT, b.DANGER_ACT,b.DANGER_LEVEL,b.DRIVING_CNT,b.DRIVING_DISTANCE,b.DRIVING_TIME FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym between '2023-01' and '2023-06' AND   b.emp_nm = '권태종' ORDER BY b.base_ym desc
 {executed in 1 msec}
2023-06-26 22:39:17.603 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyStatement.executeQuery(ProxyStatement.java:111)
1. SELECT 	b.base_ym, b.emp_nm,b.danger_km100,b.DANGER_ACT_CNT, b.DANGER_ACT,b.DANGER_LEVEL,b.DRIVING_CNT,b.DRIVING_DISTANCE,b.DRIVING_TIME FROM TBL_DANGER_DRIVING_INFO b where b.company_no = '100' AND   b.base_ym between '2023-01' and '2023-06' AND   b.emp_nm = '권태종' ORDER BY b.base_ym desc
 {executed in 1 msec}
2023-06-26 22:39:21.677 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@514eef86
2023-06-26 22:39:21.678 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 22:39:21.680 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('-전체-','-전체-',a.ROUTE_NM,'-전체-')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 22:39:25.609 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@514eef86
2023-06-26 22:39:25.611 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 22:39:25.612 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('-전체-','-전체-',a.ROUTE_NM,'-전체-')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 22:39:29.662 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@a717f504
2023-06-26 22:39:29.663 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 22:39:29.664 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('20번','-전체-',a.ROUTE_NM,'20번')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 22:39:32.697 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@514eef86
2023-06-26 22:39:32.699 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 22:39:32.700 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('-전체-','-전체-',a.ROUTE_NM,'-전체-')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 22:39:35.574 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@63366e8b
2023-06-26 22:39:35.575 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 22:39:35.577 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('5-1번','-전체-',a.ROUTE_NM,'5-1번')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 22:39:39.129 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@a717f504
2023-06-26 22:39:39.131 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
1. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 22:39:39.132 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
1. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('20번','-전체-',a.ROUTE_NM,'20번')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 23:23:31.817 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f00dbd2
2023-06-26 23:23:31.818 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
21. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 23:23:31.821 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-전체-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 23:23:34.048 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@514eef86
2023-06-26 23:23:34.049 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
21. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 23:23:34.051 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('-전체-','-전체-',a.ROUTE_NM,'-전체-')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 23:24:26.911 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@e7c48559
2023-06-26 23:24:26.912 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
21. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 23:24:26.914 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-전체-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 23:24:28.621 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@aa12990d
2023-06-26 23:24:28.623 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
21. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 23:24:28.624 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('-전체-','-전체-',a.ROUTE_NM,'-전체-')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 23:24:59.745 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f00dbd2
2023-06-26 23:24:59.746 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
21. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 23:24:59.748 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-전체-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 23:25:01.363 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@514eef86
2023-06-26 23:25:01.364 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
21. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 23:25:01.366 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('-전체-','-전체-',a.ROUTE_NM,'-전체-')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 2 msec}
2023-06-26 23:25:50.395 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@514eef86
2023-06-26 23:25:50.396 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
21. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 23:25:50.397 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('-전체-','-전체-',a.ROUTE_NM,'-전체-')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 23:25:53.527 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@a717f504
2023-06-26 23:25:53.528 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
21. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 23:25:53.529 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('20번','-전체-',a.ROUTE_NM,'20번')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 23:25:55.411 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@2a106e49
2023-06-26 23:25:55.413 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
21. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 23:25:55.414 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('21번','-전체-',a.ROUTE_NM,'21번')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 23:25:56.870 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@63366e8b
2023-06-26 23:25:56.871 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
21. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 23:25:56.872 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('5-1번','-전체-',a.ROUTE_NM,'5-1번')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 23:26:11.178 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@63366e8b
2023-06-26 23:26:11.179 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
21. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 23:26:11.180 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('5-1번','-전체-',a.ROUTE_NM,'5-1번')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 23:26:32.976 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f00dbd2
2023-06-26 23:26:32.977 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
21. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 23:26:32.979 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-전체-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 23:26:36.834 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@514eef86
2023-06-26 23:26:36.835 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
21. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 23:26:36.836 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('-전체-','-전체-',a.ROUTE_NM,'-전체-')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 23:27:14.487 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@a717f504
2023-06-26 23:27:14.488 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
21. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 23:27:14.489 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('20번','-전체-',a.ROUTE_NM,'20번')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 23:27:44.399 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@a717f504
2023-06-26 23:27:44.401 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
21. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 23:27:44.402 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('20번','-전체-',a.ROUTE_NM,'20번')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 23:27:47.578 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@a717f504
2023-06-26 23:27:47.579 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
21. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 23:27:47.580 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('20번','-전체-',a.ROUTE_NM,'20번')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 23:28:20.420 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@a717f504
2023-06-26 23:28:20.421 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
21. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 23:28:20.422 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('20번','-전체-',a.ROUTE_NM,'20번')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 23:30:28.864 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f00dbd2
2023-06-26 23:30:28.866 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
21. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 23:30:28.867 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-전체-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 23:30:42.809 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@63366e8b
2023-06-26 23:30:42.810 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
21. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 23:30:42.811 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('5-1번','-전체-',a.ROUTE_NM,'5-1번')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 23:31:27.993 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f00dbd2
2023-06-26 23:31:27.994 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
21. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 23:31:27.995 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-전체-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 23:31:29.404 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@514eef86
2023-06-26 23:31:29.405 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
21. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 23:31:29.406 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('-전체-','-전체-',a.ROUTE_NM,'-전체-')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 23:32:10.117 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f00dbd2
2023-06-26 23:32:10.118 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
21. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 23:32:10.119 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-전체-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 23:32:11.434 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@514eef86
2023-06-26 23:32:11.436 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
21. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 23:32:11.437 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('-전체-','-전체-',a.ROUTE_NM,'-전체-')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 23:32:35.611 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@e7c48559
2023-06-26 23:32:35.612 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
21. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 23:32:35.613 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-전체-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 23:32:36.905 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@aa12990d
2023-06-26 23:32:36.906 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
21. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 23:32:36.907 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('-전체-','-전체-',a.ROUTE_NM,'-전체-')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 23:32:43.870 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@ffdb9e8b
2023-06-26 23:32:43.871 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
21. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 23:32:43.872 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('20번','-전체-',a.ROUTE_NM,'20번')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 23:32:59.453 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f00dbd2
2023-06-26 23:32:59.454 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
21. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 23:32:59.456 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-전체-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 23:33:00.765 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@514eef86
2023-06-26 23:33:00.765 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
21. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 23:33:00.766 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('-전체-','-전체-',a.ROUTE_NM,'-전체-')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 23:33:08.277 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@2a106e49
2023-06-26 23:33:08.279 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
21. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 23:33:08.279 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('21번','-전체-',a.ROUTE_NM,'21번')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 23:33:11.673 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@2a106e49
2023-06-26 23:33:11.674 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
21. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 23:33:11.675 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('21번','-전체-',a.ROUTE_NM,'21번')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 23:33:41.633 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f00dbd2
2023-06-26 23:33:41.634 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
21. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 23:33:41.636 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-전체-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 23:33:42.810 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@514eef86
2023-06-26 23:33:42.811 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
21. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 23:33:42.812 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('-전체-','-전체-',a.ROUTE_NM,'-전체-')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 23:34:19.829 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@e7c48559
2023-06-26 23:34:19.830 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
21. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 23:34:19.832 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-전체-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 23:34:21.508 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@aa12990d
2023-06-26 23:34:21.510 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
21. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 23:34:21.510 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('-전체-','-전체-',a.ROUTE_NM,'-전체-')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 23:34:24.832 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@ffdb9e8b
2023-06-26 23:34:24.833 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
21. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 23:34:24.834 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('20번','-전체-',a.ROUTE_NM,'20번')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 23:34:26.890 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@82d417d0
2023-06-26 23:34:26.891 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
21. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 23:34:26.892 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('21번','-전체-',a.ROUTE_NM,'21번')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 23:34:29.248 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@82d417d0
2023-06-26 23:34:29.249 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
21. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 23:34:29.250 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('21번','-전체-',a.ROUTE_NM,'21번')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 23:35:08.204 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f00dbd2
2023-06-26 23:35:08.205 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
21. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 23:35:08.206 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-전체-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 23:35:09.062 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@514eef86
2023-06-26 23:35:09.063 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
21. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 23:35:09.065 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('-전체-','-전체-',a.ROUTE_NM,'-전체-')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 23:35:19.687 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f00dbd2
2023-06-26 23:35:19.688 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
21. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 23:35:19.690 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-전체-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 23:35:21.050 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@514eef86
2023-06-26 23:35:21.051 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
21. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 23:35:21.052 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('-전체-','-전체-',a.ROUTE_NM,'-전체-')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 23:35:48.107 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f00dbd2
2023-06-26 23:35:48.108 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
21. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 23:35:48.110 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-전체-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 23:35:49.437 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@514eef86
2023-06-26 23:35:49.438 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
21. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 23:35:49.439 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('-전체-','-전체-',a.ROUTE_NM,'-전체-')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 23:36:05.787 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@e7c48559
2023-06-26 23:36:05.788 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
21. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 23:36:05.789 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-전체-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 23:36:06.907 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@aa12990d
2023-06-26 23:36:06.908 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
21. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 23:36:06.908 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('-전체-','-전체-',a.ROUTE_NM,'-전체-')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 23:36:45.601 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f00dbd2
2023-06-26 23:36:45.602 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
21. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 23:36:45.604 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-전체-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 23:36:46.672 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@514eef86
2023-06-26 23:36:46.673 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
21. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 23:36:46.674 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
21. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('-전체-','-전체-',a.ROUTE_NM,'-전체-')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 23:37:20.525 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f00dbd2
2023-06-26 23:37:20.527 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
22. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 23:37:20.528 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-전체-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 23:37:21.662 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@514eef86
2023-06-26 23:37:21.663 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
22. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 23:37:21.665 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
22. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('-전체-','-전체-',a.ROUTE_NM,'-전체-')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 23:42:21.468 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f00dbd2
2023-06-26 23:42:21.469 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 23:42:21.471 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-전체-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 23:42:22.649 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@514eef86
2023-06-26 23:42:22.650 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 23:42:22.652 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('-전체-','-전체-',a.ROUTE_NM,'-전체-')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 23:42:56.002 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@21a73921
2023-06-26 23:42:56.003 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 23:42:56.005 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-전체-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-09' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-09' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 23:42:57.293 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@e3f54cd5
2023-06-26 23:42:57.294 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 23:42:57.296 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-09' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('-전체-','-전체-',a.ROUTE_NM,'-전체-')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 23:43:12.875 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@e7c48559
2023-06-26 23:43:12.876 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 23:43:12.878 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-전체-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 23:43:14.416 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@aa12990d
2023-06-26 23:43:14.417 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 23:43:14.418 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('-전체-','-전체-',a.ROUTE_NM,'-전체-')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 23:45:08.897 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@e7c48559
2023-06-26 23:45:08.898 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 23:45:08.899 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-전체-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 23:45:10.292 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@aa12990d
2023-06-26 23:45:10.293 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 23:45:10.294 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('-전체-','-전체-',a.ROUTE_NM,'-전체-')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 23:45:23.695 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@dd7988c4
2023-06-26 23:45:23.696 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 23:45:23.697 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-전체-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-04' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-04' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 23:45:25.129 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@9fc79c78
2023-06-26 23:45:25.130 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 23:45:25.131 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-04' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('-전체-','-전체-',a.ROUTE_NM,'-전체-')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 23:45:44.031 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@e7c48559
2023-06-26 23:45:44.032 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 23:45:44.034 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-전체-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 23:45:45.146 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@aa12990d
2023-06-26 23:45:45.146 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 23:45:45.147 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('-전체-','-전체-',a.ROUTE_NM,'-전체-')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 23:45:59.623 INFO  [http-nio-10010-exec-4] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f00dbd2
2023-06-26 23:45:59.623 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 23:45:59.625 DEBUG [http-nio-10010-exec-4] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-전체-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 23:46:00.709 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@514eef86
2023-06-26 23:46:00.711 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 23:46:00.712 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('-전체-','-전체-',a.ROUTE_NM,'-전체-')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 23:46:56.836 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f00dbd2
2023-06-26 23:46:56.837 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 23:46:56.839 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-전체-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 23:46:57.981 INFO  [http-nio-10010-exec-10] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@514eef86
2023-06-26 23:46:57.982 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 23:46:57.983 DEBUG [http-nio-10010-exec-10] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('-전체-','-전체-',a.ROUTE_NM,'-전체-')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 23:55:46.023 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@e7c48559
2023-06-26 23:55:46.024 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 23:55:46.027 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-전체-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 23:55:47.827 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@aa12990d
2023-06-26 23:55:47.828 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 23:55:47.829 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('-전체-','-전체-',a.ROUTE_NM,'-전체-')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 23:55:48.780 INFO  [http-nio-10010-exec-9] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@f5c7fc81
2023-06-26 23:55:48.782 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
31. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 23:55:48.783 DEBUG [http-nio-10010-exec-9] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
31. select  /* select_PunctualityAnalize_day : 배차정시성분석 일별 */
			a.BASE_YMD
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	AND 	a.BASE_YMD like  '' || '%' 
	AND 	a.ROUTE_NM = decode('-전체-','-전체-',a.ROUTE_NM,'-전체-')
	GROUP BY  a.BASE_YMD
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 23:58:29.233 INFO  [http-nio-10010-exec-7] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f00dbd2
2023-06-26 23:58:29.235 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
41. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 23:58:29.236 DEBUG [http-nio-10010-exec-7] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-전체-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 23:58:30.652 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@514eef86
2023-06-26 23:58:30.653 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
41. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 0 msec}
2023-06-26 23:58:30.655 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('-전체-','-전체-',a.ROUTE_NM,'-전체-')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 23:58:32.486 INFO  [http-nio-10010-exec-3] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@9d0452fa
2023-06-26 23:58:32.487 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
41. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 23:58:32.489 DEBUG [http-nio-10010-exec-3] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. select  /* select_PunctualityAnalize_day : 배차정시성분석 일별 */
			a.BASE_YMD
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.BASE_YMD like  '' || '%' 
	AND 	a.ROUTE_NM = decode('-전체-','-전체-',a.ROUTE_NM,'-전체-')
	GROUP BY  a.BASE_YMD
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 23:59:03.823 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@8f00dbd2
2023-06-26 23:59:03.824 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
41. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 23:59:03.825 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-전체-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 23:59:05.222 INFO  [http-nio-10010-exec-8] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@514eef86
2023-06-26 23:59:05.223 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
41. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 23:59:05.224 DEBUG [http-nio-10010-exec-8] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('-전체-','-전체-',a.ROUTE_NM,'-전체-')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 23:59:06.094 INFO  [http-nio-10010-exec-6] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@9d0452fa
2023-06-26 23:59:06.118 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
41. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 23 msec}
2023-06-26 23:59:06.120 DEBUG [http-nio-10010-exec-6] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. select  /* select_PunctualityAnalize_day : 배차정시성분석 일별 */
			a.BASE_YMD
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-02' AND '2023-06-26' 
	AND 	a.BASE_YMD like  '' || '%' 
	AND 	a.ROUTE_NM = decode('-전체-','-전체-',a.ROUTE_NM,'-전체-')
	GROUP BY  a.BASE_YMD
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 23:59:46.670 INFO  [http-nio-10010-exec-2] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@e7c48559
2023-06-26 23:59:46.671 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
41. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 23:59:46.672 DEBUG [http-nio-10010-exec-2] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. SELECT	/* select_PunctualityAnalize_route : 배차정시성분석 노선별 */
			'-전체-'  AS ROUTE_NM
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	UNION 	
	select  a.ROUTE_NM 
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100'
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	GROUP BY a.ROUTE_NM
	ORDER BY 1
 {executed in 1 msec}
2023-06-26 23:59:48.141 INFO  [http-nio-10010-exec-1] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@aa12990d
2023-06-26 23:59:48.142 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
41. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 23:59:48.143 DEBUG [http-nio-10010-exec-1] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. select  /* select_PunctualityAnalize_month : 배차정시성분석 월별 */
			SUBSTRING(a.BASE_YMD ,1,7) AS base_ym
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	AND 	a.ROUTE_NM = decode('-전체-','-전체-',a.ROUTE_NM,'-전체-')
	GROUP BY  SUBSTRING(a.BASE_YMD ,1,7)
	ORDER BY 1
 {executed in 0 msec}
2023-06-26 23:59:48.946 INFO  [http-nio-10010-exec-5] [c.p.dashboard.controller.TestController] - com.pjy.dashboard.domain.CommonCodeVo@f5c7fc81
2023-06-26 23:59:48.947 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.PoolBase.isConnectionAlive(PoolBase.java:161)
41. SELECT SYSTIMESTAMP FROM DUAL
 {executed in 1 msec}
2023-06-26 23:59:48.948 DEBUG [http-nio-10010-exec-5] [jdbc.sqltiming] -  com.zaxxer.hikari.pool.ProxyPreparedStatement.execute(ProxyPreparedStatement.java:44)
41. select  /* select_PunctualityAnalize_day : 배차정시성분석 일별 */
			a.BASE_YMD
		,	sum(a.TERM_PAST_CNT) AS sum_past
		,	sum(a.TERM_LATE_CNT) AS sum_late
		,	sum(a.TERM_WIBAN_CNT) AS sum_wiban
		,	avg(a.TERM_WIBAN_CNT) AS avg_wiban
		,	sum(a.TOTAL_STATION_CNT) AS sum_station
		,	round(sum(a.TERM_WIBAN_CNT*1.0) / sum(a.TOTAL_STATION_CNT) * 100.0,2) AS rate_wiban
	from    TBL_ARRANGE_PUNCTUALITY_ANALIZE a 
	where   a.company_no = '100' 
	AND 	a.BASE_YMD BETWEEN  '2023-05-01' AND '2023-06-26' 
	AND 	a.BASE_YMD like  '' || '%' 
	AND 	a.ROUTE_NM = decode('-전체-','-전체-',a.ROUTE_NM,'-전체-')
	GROUP BY  a.BASE_YMD
	ORDER BY 1
 {executed in 0 msec}
